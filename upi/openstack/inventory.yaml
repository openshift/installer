all:
  hosts:
    localhost:
      ansible_connection: local
      ansible_python_interpreter: "{{ansible_playbook_python}}"

      # User-provided values
      os_subnet_range: '10.0.0.0/16'
      os_flavor_master: 'm1.xlarge'
      os_flavor_worker: 'm1.large'
      os_image_rhcos: 'rhcos'

      # Number of provisioned Control Plane nodes
      # 3 is the minimum number for a fully-functional cluster.
      os_cp_nodes_number: 3

      # Number of provisioned Compute nodes.
      os_compute_nodes_number: 3

      # The IP addresses of DNS servers to be used for the DNS resolution of
      # all instances in the cluster. The total number of dns servers supported
      # by an instance is three. That total includes any dns server provided by
      # the underlying OpenStack infrastructure.
      #
      # Note that the values below are example IPs and do not point to actual
      # resolvers. To use the OpenStack defaults, remove the values below.
      os_external_dns:
      - 192.0.2.53
      - 192.0.2.153

      # The public network providing connectivity to the cluster. If not
      # provided, the cluster external connectivity must be provided in another
      # way.
      #
      # Required for os_api_fip, os_ingress_fip, os_bootstrap_fip.
      os_external_network: 'external'

      # OpenShift API floating IP address. If this value is non-empty, the
      # corresponding floating IP will be attached to the Control Plane to
      # serve the OpenShift API.
      os_api_fip: '203.0.113.23'

      # OpenShift Ingress floating IP address. If this value is non-empty, the
      # corresponding floating IP will be attached to the worker nodes to serve
      # the applications.
      os_ingress_fip: '203.0.113.19'

      # If this value is non-empty, the corresponding floating IP will be
      # attached to the bootstrap machine. This is needed for collecting logs
      # in case of install failure.
      os_bootstrap_fip: '203.0.113.20'

      # An IPv4 address that will be assigned to the API VIP.
      # Be aware that the 10 and 11 of the machineNetwork will
      # be taken by neutron dhcp by default, and wont be available.
      # This value will be overwritten by the network.yaml playbook.
      os_apiVIP: "{{ os_subnet_range | ansible.utils.next_nth_usable(5) }}"

      # An IPv4 address that will be assigned to the ingress VIP.
      # Be aware that the 10 and 11 of the machineNetwork will
      # be taken by neutron dhcp by default, and wont be available.
      # This value will be overwritten by the network.yaml playbook.
      os_ingressVIP: "{{ os_subnet_range | ansible.utils.next_nth_usable(7) }}"

      # Set control-plane nodes to schedule workloads when number of compute
      # nodes is zero
      os_master_schedulable: "{{ os_compute_nodes_number | int == 0 }}"

      # IPv6 subnet CIDR. Uncomment to enable dual-stack support.
      #os_subnet6_range: 'fd2e:6f44:5dd8:c956::/64'

      # Modes are one of: slaac, dhcpv6-stateful or dhcpv6-stateless
      os_subnet6_address_mode: slaac
      os_subnet6_router_advertisements_mode: slaac

      # IPv6 service subnet cidr
      service_subnet6_range: 'fd02::/112'

      # IPv6 cluster network details
      cluster_network6_cidr: 'fd01::/48'
      cluster_network6_prefix: 64

      # An IPv6 address that will be assigned to the API VIP.
      # This value will be overwritten by the network.yaml playbook.
      os_apiVIP6: ""

      # An IPv6 address that will be assigned to the ingress VIP.
      # This value will be overwritten by the network.yaml playbook.
      os_ingressVIP6: ""
