# Required Python packages:
#
# ansible
# openstacksdk
# netaddr

- import_playbook: common.yaml

- hosts: all
  gather_facts: no

  tasks:
  - name: 'Create the Control Plane ports'
    os_port:
      name: "{{ item.1 }}-{{ item.0 }}"
      network: "{{ os_network }}"
      security_groups:
      - "{{ os_sg_master }}"
      allowed_address_pairs:
      - ip_address: "{{ os_subnet_range | next_nth_usable(5) }}"
      - ip_address: "{{ os_subnet_range | next_nth_usable(6) }}"
      - ip_address: "{{ os_subnet_range | next_nth_usable(7) }}"
    with_indexed_items: "{{ [os_port_master] * os_cp_nodes_number }}"
    register: ports

  - name: 'Set Control Plane ports tag'
    os_tag:
      resource: "port"
      name: "{{ item.1 }}-{{ item.0 }}"
      tags: "{{ [cluster_id_tag] }}"
    with_indexed_items: "{{ [os_port_master] * os_cp_nodes_number }}"

  - name: 'Create the Control Plane trunks'
    os_trunk:
      name: "{{ os_cp_trunk_name }}-{{ item.0 }}"
      port_id: "{{ item.1.id }}"
    with_indexed_items: "{{ ports.results }}"
    when: os_networking_type == "Kuryr"

  - name: 'Create the Control Plane server group'
    os_server_group:
      name: "{{ os_cp_server_group_name }}"
      policies:
      - "anti-affinity"
    register: "cp_group"

  - name: 'Create the Control Plane servers'
    os_server:
      name: "{{ item.1 }}-{{ item.0 }}"
      image: "{{ os_image_rhcos }}"
      flavor: "{{ os_flavor_master }}"
      auto_ip: no
      # The ignition filename will be concatenated with the Control Plane node
      # name and its 0-indexed serial number.
      # In this case, the first node will look for this filename:
      #    "{{ infraID }}-master-0-ignition.json"
      userdata: "{{ lookup('file', [item.1, item.0, 'ignition.json'] | join('-')) | string }}"
      nics:
      - port-name: "{{ os_port_master }}-{{ item.0 }}"
      scheduler_hints:
        group: "{{ cp_group.id }}"
    with_indexed_items: "{{ [os_cp_server_name] * os_cp_nodes_number }}"
