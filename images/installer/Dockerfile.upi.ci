# This Dockerfile is used by CI to test UPI platforms for OpenShift Installer
# It builds an image containing binaries like jq, terraform, awscli, oc, etc. to allow bringing up UPI infrastructure.
# It also contains the `upi` directory that contains various terraform and cloud formation templates that are used to create infrastructure resources.


FROM registry.svc.ci.openshift.org/ocp/builder:golang-1.13 AS builder
RUN yum install -y libvirt-devel && \
    yum clean all && rm -rf /var/cache/yum/*
WORKDIR /go/src/github.com/openshift/installer
COPY . .
RUN hack/build.sh

FROM registry.svc.ci.openshift.org/ocp/4.1:cli as cli

FROM registry.svc.ci.openshift.org/ocp/4.1:base
COPY --from=cli /usr/bin/oc /bin/oc
COPY --from=builder /go/src/github.com/openshift/installer/bin/openshift-install /bin/openshift-install
COPY --from=builder /go/src/github.com/openshift/installer/upi /var/lib/openshift-install/upi
COPY --from=builder /go/src/github.com/openshift/installer/data/data/rhcos.json /var/lib/openshift-install/rhcos.json

RUN rpm --import https://packages.microsoft.com/keys/microsoft.asc
RUN sh -c 'echo -e "[azure-cli]\nname=Azure CLI\nbaseurl=https://packages.microsoft.com/yumrepos/azure-cli\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" >/etc/yum.repos.d/azure-cli.repo'

RUN yum install --setopt=tsflags=nodocs -y \
    gettext \
    openssh-clients \
    azure-cli \
    openssl && \
    yum update -y && \
    yum install --setopt=tsflags=nodocs -y \
    unzip gzip jq util-linux && \
    yum clean all && rm -rf /var/cache/yum/* && \
    chmod g+w /etc/passwd

ENV TERRAFORM_VERSION=0.11.11
RUN curl -O https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \
    unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /bin/
ENV MATCHBOX_VERSION=v0.3.0
RUN curl -L -O https://github.com/poseidon/terraform-provider-matchbox/releases/download/${MATCHBOX_VERSION}/terraform-provider-matchbox-${MATCHBOX_VERSION}-linux-amd64.tar.gz && \
    tar xzf terraform-provider-matchbox-${MATCHBOX_VERSION}-linux-amd64.tar.gz && \
    mv terraform-provider-matchbox-${MATCHBOX_VERSION}-linux-amd64/terraform-provider-matchbox /bin/terraform-provider-matchbox
RUN curl -L -O https://github.com/LorbusChris/terraform-provider-ignition/raw/v2-bin-1/terraform-provider-ignition && \
    chmod +x terraform-provider-ignition && \
    mv terraform-provider-ignition /bin/terraform-provider-ignition_v2.0.0
RUN curl -L -O https://github.com/vmware/govmomi/releases/download/v0.21.0/govc_linux_amd64.gz && \
    gzip -d govc_linux_amd64.gz && \
    chmod +x govc_linux_amd64 && mv govc_linux_amd64 /bin/govc
RUN curl -L -O -k https://vcsa-ci.vmware.devcluster.openshift.com/certs/download.zip && \
    unzip download.zip && \
    cp certs/lin/* /etc/pki/ca-trust/source/anchors && \
    update-ca-trust extract

RUN mkdir /output && chown 1000:1000 /output
USER 1000:1000
ENV PATH /bin
ENV HOME /output
WORKDIR /output
