# This Dockerfile is used by CI to publish the installer image.
# It builds an image containing only the openshift-install.

FROM registry.ci.openshift.org/ocp/4.19:installer-terraform-providers AS providers
# We copy from the -artifacts images because they are statically linked
FROM registry.ci.openshift.org/ocp/4.19:installer-kube-apiserver-artifacts AS kas-artifacts
FROM registry.ci.openshift.org/ocp/4.19:installer-etcd-artifacts AS etcd-artifacts

FROM registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.23-openshift-4.19 AS builder
# FIPS support is offered via the baremetal-installer image
ENV GO_COMPLIANCE_EXCLUDE=".*"
ARG TAGS=""
ARG SKIP_ENVTEST="y"
WORKDIR /go/src/github.com/openshift/installer
COPY . .
COPY --from=providers /go/src/github.com/openshift/installer/terraform/bin/ terraform/bin/
COPY --from=kas-artifacts /usr/share/openshift/ cluster-api/bin/
COPY --from=etcd-artifacts /usr/share/openshift/ cluster-api/bin/
RUN mkdir -p cluster-api/bin/$(go env GOOS)_$(go env GOHOSTARCH) && \
	mv cluster-api/bin/$(go env GOOS)/$(go env GOHOSTARCH)/* -t cluster-api/bin/$(go env GOOS)_$(go env GOHOSTARCH)/
RUN DEFAULT_ARCH="$(go env GOHOSTARCH)" hack/build.sh
RUN go run -mod=vendor hack/build-coreos-manifest.go

FROM registry.ci.openshift.org/ocp/4.19:base-rhel9

COPY --from=builder /go/src/github.com/openshift/installer/bin/openshift-install /bin/openshift-install
COPY --from=builder /go/src/github.com/openshift/installer/bin/manifests/ /manifests/

RUN mkdir /output && chown 1000:1000 /output
USER 1000:1000
ENV HOME /output
WORKDIR /output
# We're not really an operator, we're just getting some data into the release image.
LABEL io.openshift.release.operator=true
ENTRYPOINT ["/bin/openshift-install"]
