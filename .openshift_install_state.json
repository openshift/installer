{
    "*bootstrap.Bootstrap": {
        "Config": {
            "ignition": {
                "config": {},
                "security": {
                    "tls": {}
                },
                "timeouts": {},
                "version": "2.2.0"
            },
            "networkd": {},
            "passwd": {
                "users": [
                    {
                        "name": "core",
                        "sshAuthorizedKeys": [
                            "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDUq7W38xCZ9WGSWCvustaMGMT04tRohw6AKGzI7P7xql5lhCAReyt72n9qWQRZsE1YiCSQuTfXI1oc8NpSM7+lMLwj12G8z3I1YT31JHr9LLYg/XIcExkzfBI920CaS82VqmKOpI9+ARHSJBdIbKRI0f5Y+u4xbc5UzKCJX8jcKGG7nEiw8zm+cvAlfOgssMK+qJppIbVcb2iZNTsw5i2aX6FDMyC+b17DQHzBGpNbhZYxuoERZVRcnYctgIzuo6fD60gniX0fVvrchlOnubB1sRYbloP2r6UE22w/dpLKOFE5i7CA0ZzNBERZ94cIKumIH9MiJs1a6bMe89VOjjNV"
                        ]
                    }
                ]
            },
            "storage": {
                "files": [
                    {
                        "filesystem": "root",
                        "path": "/etc/kubernetes/kubeconfig",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Y2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRFZFTkRRV1pIWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRnRUVkpKZDBWQldVUldVVkZNUlhkc2RtTkhWblVLWXpKb2NGcHVVWGhGUkVGUFFtZE9Wa0pCVFZSQ00wcDJZak5SZEZreVJYZElhR05PVFZSbmVFMUVSVFZOVkUxNFRucEpNbGRvWTA1TmFtZDRUVVJGTWdwTlZFMTRUbnBKTWxkcVFXMU5Va2wzUlVGWlJGWlJVVXhGZDJ4MlkwZFdkV015YUhCYWJsRjRSVVJCVDBKblRsWkNRVTFVUWpOS2RtSXpVWFJaTWtWM0NtZG5SV2xOUVRCSFExTnhSMU5KWWpORVVVVkNRVkZWUVVFMFNVSkVkMEYzWjJkRlMwRnZTVUpCVVVOM1JGTlBjbHBWZERRemNXTm1LekZvU2xSSGN6UUtRUzlKY0ZZMkx6UjJkR1pET0VVelpuUTVWV2N2UWpOcWR6RlZNalpvWVROMU56ZHRkMGxSUkZwTlEyVjFVbVZ6VEd0TGMyOWphV052YUM5bEwyUkxTUXBUUVd0T01VSmtWSFZNUnpsVU1WVllhVGhhZDFOTldqZFVURWhDWTFKS1FVMHhkemRUY2tVeVVrSmxLMUJzYWtOSFNscGhkVVJDWlVwQmRsaHVkMXBYQ214a1FXRkhiMUZaYjBaNkx6RlNRbFZUZUdnMFEyNUVRMVZXZFdaRGRHUk9XWGRoWTFGM1dqQm1USEJpVmxwb1VIRlpUM3BtTkdsV2RIRmlLM2hyUjFjS2RrZ3lWR05KVjNkRGMzSlllVWt6TmxFd1JpODJValkzTVZKNVJXTlZWRk5NV0M4NGFGRTFZbXhSVDB0TE1DczNNRFJ5YldoSE9IQTBlVmxXUVRoUFZRcEpRemRuU1hJNU5rZDZObGxEVDBKeU1tVXpWV1Z6TVZwUVJHWm1Namg2YkVWUFdYVkVNMngwUnpoTVMyY3JlVFF4VjBOVGJEVmhUVzl6TldwVFExQkVDa0ZuVFVKQlFVZHFVV3BDUVUxQk5FZEJNVlZrUkhkRlFpOTNVVVZCZDBsRGNFUkJVRUpuVGxaSVVrMUNRV1k0UlVKVVFVUkJVVWd2VFVJd1IwRXhWV1FLUkdkUlYwSkNVa2xyT1d3M01EUmhXbFpQYkVSQlRsQnNhR3BuWmxNM1UwWlFha0ZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJWWE55UlFvMUsxWlZSMVpKY1dVMVVtZHNhVVV2UW5KblZ6TmllVTVVU1U1YU9DOVJWMFJUWTBWemVVMXZWamtySzJaWGJrbGpLeXRFTlhCc05HOUVaVFo0YldkS0NuVlFaelZVY0ZSTFpWUkZWVk5aYkhoeGNHWnRaa05IVkRGNVNUQktRWFpSVW13NWNFb3lUbk40VUhwb1JTOUZRbm8zUlZZelYwRXJZVGxCV0hveFNDOEtPR2R2ZURsQ2VqRTJWSGxSYlhaVVUySnJPRUZKVTFObVVtdFRTV0ZDY3l0cGVUSlVaV3d6VWt4MlVrd3dMMjV1ZUZGelRFeEZhVGhwV2taYVlYVkNkd3BVZFdaV2VsbE1SV2xCWkNzdk1WUkhUbVJGWkZocldUSmlPVFowYjFGSksxRTJTRTVoTW1jNVRrTXdabVJIVmxCaWRGUnVOVTg0VGtacGEyMXJWSGRZQ210MWEwODROaTlNWVdrMkswTkRNbVZGYW1kcWVITjJURVpuVjFZeVJUbFlWVkEzT0ZOTGR5c3ZSRTF2ZEZVNE1IWTNPRnBDUTNscVJuQlRZMk52TlRjS1ZGY3dWM2xDYjJ4NFdsZFRiblUzVUcxblBUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly9zb21hbGxleS1hcGkuZGV2Y2x1c3Rlci5vcGVuc2hpZnQuY29tOjY0NDMKICBuYW1lOiBzb21hbGxleQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3Rlcjogc29tYWxsZXkKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0CmN1cnJlbnQtY29udGV4dDoga3ViZWxldApwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZToga3ViZWxldAogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUnNSRU5EUVc1NVowRjNTVUpCWjBsSlFXTjVXbWtyTUdwWE1UaDNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRLVkVWU1RVRTRSMEV4VlVVS1EzaE5TVmx0T1haa1IzUXhXVzFWZUVWRVFVOUNaMDVXUWtGTlZFSXlkREZaYlZWMFdUSkZkMGhvWTA1TlZHZDRUVVJGTlUxVVRYaE9la2t5VjJoalRncE5WR2Q0VFVSRk5VMVVUVEJPZWtrMFYycENORTFWU1hkTFVWbEVWbEZSUzBWNVNucGxXRTR3V2xjd05tTXlWbmxrYld4cVdsZEdhbGt5T1RGaWJsSjZDazl0ZERGWmJWVjBZek5zZW1SSFZuUk5RbFZIUVRGVlJVTm9UVTlqTTJ4NlpFZFdkRTl0TVdoak0xSnNZMjVOZUUxcVFYZENaMDVXUWtGTlZFdFlUalVLWXpOU2JHSlVjSHBhV0VveVlWZE9iRmxYVG1waU0xWjFaRVJ3Y21SWFNteE1XRTQxWXpOU2JHSlVjR3RhVjFwb1pGZDRNRTFKU1VKSmFrRk9RbWRyY1Fwb2EybEhPWGN3UWtGUlJVWkJRVTlEUVZFNFFVMUpTVUpEWjB0RFFWRkZRWG80TXpWa2MzcHhRMmhvU0V4SVRqTkpLM1JtUW5sV1JrOVdOMW80ZGpsWUNrRllWR2xqUlZCbmJVMUVkbUpuZFhWYVZHVlVkVGt2V0U0eU1VOU5TbFZDVkdacGFFZFpkMjl3Vm1GV1FWb3diVmRUV1d0eVZuUk1URnAzVFRRM1ZXNEtPWEF3VWtsWFIxWm1ObEpHTm1zNVpIQnlja3g0TVRCWUwzcGFZV1oyWkcweE1HWnlNWGxYU1RKNE9XSXlSRko1YTBjcmREQTRZbk0xZEhKeFVWWm5NUXBSYVV4UmJFYzBaVWxOVWtoNVowcG1VMmR4V0ZRME9VOVBkR3c1YmpWb00wSkZaVTV0YzJ0MGVETkxlR0pJVWpseVJuTk1hbXRSY0VWNVdFOVZZazVrQ2xVM1RHVkZWSHBITDNOdGQxWXZMMUJyZDBSNGMwRkVPWFZyUm5ock5YcFpZemQwVUZKa1VGRkdLMVZKWmtOMVEzWklhbmRyU1Vsb2F6aFhiaXRWVldNS2VtUktZVXh2WVhZMGNrSmljMnMwWVRsS09Tc3dhV2RuWmpjNVEyaG9RVGxMUkhCVWMwSnhhMEUyUmxSWFZHdHZPVWN3YVdwM1NVUkJVVUZDYnpOVmR3cGpla0ZQUW1kT1ZraFJPRUpCWmpoRlFrRk5RMEpoUVhkRmQxbEVWbEl3YkVKQmQzZERaMWxKUzNkWlFrSlJWVWhCZDBsM1JFRlpSRlpTTUZSQlVVZ3ZDa0pCU1hkQlJFRmtRbWRPVmtoUk5FVkdaMUZWYjFsdFlVbHRRWFUwT0VOMU1rVndVRnBYTVRSS0x6bDFUMWxGZDBoM1dVUldVakJxUWtKbmQwWnZRVlVLVTBwUVdtVTVUMGR0VmxSd1VYZEVWRFZaV1RSSU1IVXdhRlEwZDBSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGRVoyZEZRa0ZIZWtoNmRsaHVhbWg2V1FvMWRERkpaRkEyVTNac05ubFFhVTlSWTJrdk1XaHhhbkpzZWl0NWVpczJWVGd5ZWxsUVpsYzNiRVUzWlZkdVV6bElOWGRKVTBwRFdHTTVOMjR4VFcwdkNuRXplVmRTYkhkQ1VsaDNkbTFHWXl0M1RteENWVWM0VFZkQ01sUkxhVzVaV2pCeVJsRjBkVnBEYWtsdlFVZFFVRzQzZFZwNFMxcHlUVUpCV0VWVldIRUtRVzFxY0c1Q1UwTnZVbE1yVjNwYVVGWlBSak5tY25kVVpHc3hVR1JXVms5VUswcHJia3A0ZDJadUwyaHVlakZpTmxoMFFURm5hR2x5VEZwSlRWZEtUQXBLZGtGaGMxZzVkM296VWxaSlZVNDBjR04xTkhOS1VWUk5MMUpCTVVobFJUaFZOR01yTTNadVYwUlROVlZKYVU1cVNFTjZRemd6U1dJelVHZENRVmhQQ21rNFUxQlpjWGM0UVdWV2VXZEJTbmhKZDJselQxUlRkM1pVVGtVNFFXNXNiRE5yU1hFeFVEaE1jVE0xUVV4U05tbHdVRzFxVTB3d2RteG5VMmRFZERRS1RtaENORTAzY2xscVNXTTlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGYjNkSlFrRkJTME5CVVVWQmVqZ3pOV1J6ZW5GRGFHaElURWhPTTBrcmRHWkNlVlpHVDFZM1dqaDJPVmhCV0ZScFkwVlFaMjFOUkhaaVozVjFDbHBVWlZSMU9TOVlUakl4VDAxS1ZVSlVabWxvUjFsM2IzQldZVlpCV2pCdFYxTlphM0pXZEV4TVduZE5ORGRWYmpsd01GSkpWMGRXWmpaU1JqWnJPV1FLY0hKeVRIZ3hNRmd2ZWxwaFpuWmtiVEV3Wm5JeGVWZEpNbmc1WWpKRVVubHJSeXQwTURoaWN6VjBjbkZSVm1jeFVXbE1VV3hITkdWSlRWSkllV2RLWmdwVFozRllWRFE1VDA5MGJEbHVOV2d6UWtWbFRtMXphM1I0TTB0NFlraFNPWEpHYzB4cWExRndSWGxZVDFWaVRtUlZOMHhsUlZSNlJ5OXpiWGRXTHk5UUNtdDNSSGh6UVVRNWRXdEdlR3MxZWxsak4zUlFVbVJRVVVZclZVbG1RM1ZEZGtocWQydEpTV2hyT0ZkdUsxVlZZM3BrU21GTWIyRjJOSEpDWW5Ock5HRUtPVW81S3pCcFoyZG1OemxEYUdoQk9VdEVjRlJ6UW5GclFUWkdWRmRVYTI4NVJ6QnBhbmRKUkVGUlFVSkJiMGxDUVVKMU5YUTFZMHROUVNzMGRsbGFTUXAzV2xOb1UzTlRRbFJKVFdwRVMwWklVVU41U21zNGVUSjNZbWxtZUZaS1FtSk1kRVZrZDIxVFF5OTZlRTFKVmpZeUwyMTZUMjkwVjBRdldTOVllRWxuQ2tSWldFaGxVVEZKUzFCbGF6UnVUbVpOUkROUVNuZElNVXQ1Vld0dVl6bDBWakpzZG1OMFJHVnpkSHA1VHpWRVJrbFpkVWh3VVdaSWEydE1jVXBETjNNS2EwaDVSVFpuVW1abWFYZDFLMU5LVDNsdmVGRmhUbEJyTDFaQlVtOXZRa0lyWlZWeFoxbE9hbkpzVUhGcGJuTkRkV3hrZWxwQldGRkNjMkpKZWl0NlJnbzRkRU4yT1RsWU1qQTVZVmxXYUN0cFlXdG9iSFJIVEVaRE5DOTJTMFk1VURsWmJGVlNkSG94T0ROM0swRTFjazV6TURBd2JGcDFZbTVCYUhVMldXOURDazFVZUU5UVYxRkhTMUVyYUhocFNsSXJhR05LYWxONE1UWjJSWHBVZWk5b0swY3Zhamt6T0RSMVNGVjJaWGREWlc1UE5VMW9WRTkxVDJkNGJ6ZFBkRklLTDNsT1IxUlJSVU5uV1VWQk1uTkRhazFWUVVSMlIxVkZZbEZ3ZDBOVU4yeGpWMVIyVHpsV2JIRmtiV3B1VDNvMGVpOUtOMDUwUWxJclRrMW1NamxYVUFwV04wTXdOWFZvYVZoRFl6TXdNeTlNZDFoWkwzZE5OamhpYTI1blNuVnFNR3hZVm1KQmFYbHhUbXREV2pWNWRVNXpLemRuYkZKYWNFdExjR3BKVEhsTkNrazFWRkpwT0ZSemFIcDBLMk51ZUdWdkt6WnFlRlp6SzFSNlVFOXBiMmRLUlV0QlZTOWpkM1ZYWW5vMk56WnRlRzlUUm10NUx6aERaMWxGUVRoNlFXVUtPRTgzTW1ZMlNVVlpNakJOYUVkQ1VVSnVOMkUyVlZwVEwwWnZTR3RJYUVreldYWnBNMFYzYm5oWlYzbHhWMnB5VTFGS1VuSlBXVkJMYTJ4U05sbHNMd3BIVG1zdlRXTm1WVEF3ZUVWUlRUUTBXRWhCTVd3eFlqRXlWelJNU1ZsWGMzTXJiRGRtTjJKcU5DdFhUamRKYVdKSFZXWnBOeTloSzNSMGJHVmFha05FQ2xCNmJXUXdha3N2TlhWbWRWaDJlVlJVZEVad01qbDBhME55YmsxVGVsQnJObFpoT0RaWVJVTm5XVUprVFZaU1ZURjNSRUZqWjJwQmNUUkhkbUp4ZDNjS09IUTROR3B0UlZKVGVtSTBNRGQyYzFjeFJrTjFUakI2VGtRMlQxZFNNRWxNY1M5cE56TXhNelZRTVZScVZUUjNlbFFyTnpGR1pGTmFVV0Z3YWxCVmJBbzVlV3RsWkVGcVVIUkNXR001YVVWWlZuUjNNbkEyVjBaUVdrZGthMHhZYWsxeVRsTTJSVWxqUjNGNGVpdGhaMWxFYzB0WFoxcHBOa0pWWjI5dVIzWkJDazlZU3pNM1VsTlRRbTlEYUU5YWIwUkhNR0pzTkZGTFFtZFJSR05JTURKVFpHbHhia2x6WW05SVJtWTVTbkJUY0VoSlFWbE5VRU5EZGxKamJIWk5jbllLZUcxUlJsWmxWMWRGT0haQ1RHeG1lV3RQWmxCSlluSlBXWFZ0UkVFeFRVazRabEZUYjJwbVVsQnlTakZIYmxSSWNqQllSRUpDUzNGNVkwaElhVkpFYmdwR1RYTldjMm93WWtaeWFtUlNiRlpzYWpjd2NIbGxWMk0yY1hCWmR6QmhOVzUyVW5ONFJWVlNlRUpRZFRWS05rNDVSak50YUZCS1RVSjRkVlpaY0dGekNsbDZaa0k0VVV0Q1owTndNRE50ZURVeU1rWldNMWgwT0hwSlNrVk1XbkpoUW5ONlZtaGlNREV6U2psNVZGZHVWVlUxYms1NlRrUXdVRVI1TUZKbmFua0tNVXhRY21walRtcFFMMHBCY1VrNWNYRkVXVWxwU2pRcksxQklVMWszVVN0RGFGUXhPRXRJTUZsTllreHdlbWRSYmtGT09GUmlaaXQ0VlhCbk1WWklTQXAyYjBwd01ESTJkRmxoUjJaMFdpODVZMVJSU1ZsWldGZzFPQ3N4WVVjMkswRk1kVU5EVjJ0aVFreFJZbkpuUm5STGEwTkRDaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2c9PQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/var/lib/kubelet/kubeconfig",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Y2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRFZFTkRRV1pIWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRnRUVkpKZDBWQldVUldVVkZNUlhkc2RtTkhWblVLWXpKb2NGcHVVWGhGUkVGUFFtZE9Wa0pCVFZSQ00wcDJZak5SZEZreVJYZElhR05PVFZSbmVFMUVSVFZOVkUxNFRucEpNbGRvWTA1TmFtZDRUVVJGTWdwTlZFMTRUbnBKTWxkcVFXMU5Va2wzUlVGWlJGWlJVVXhGZDJ4MlkwZFdkV015YUhCYWJsRjRSVVJCVDBKblRsWkNRVTFVUWpOS2RtSXpVWFJaTWtWM0NtZG5SV2xOUVRCSFExTnhSMU5KWWpORVVVVkNRVkZWUVVFMFNVSkVkMEYzWjJkRlMwRnZTVUpCVVVOM1JGTlBjbHBWZERRemNXTm1LekZvU2xSSGN6UUtRUzlKY0ZZMkx6UjJkR1pET0VVelpuUTVWV2N2UWpOcWR6RlZNalpvWVROMU56ZHRkMGxSUkZwTlEyVjFVbVZ6VEd0TGMyOWphV052YUM5bEwyUkxTUXBUUVd0T01VSmtWSFZNUnpsVU1WVllhVGhhZDFOTldqZFVURWhDWTFKS1FVMHhkemRUY2tVeVVrSmxLMUJzYWtOSFNscGhkVVJDWlVwQmRsaHVkMXBYQ214a1FXRkhiMUZaYjBaNkx6RlNRbFZUZUdnMFEyNUVRMVZXZFdaRGRHUk9XWGRoWTFGM1dqQm1USEJpVmxwb1VIRlpUM3BtTkdsV2RIRmlLM2hyUjFjS2RrZ3lWR05KVjNkRGMzSlllVWt6TmxFd1JpODJValkzTVZKNVJXTlZWRk5NV0M4NGFGRTFZbXhSVDB0TE1DczNNRFJ5YldoSE9IQTBlVmxXUVRoUFZRcEpRemRuU1hJNU5rZDZObGxEVDBKeU1tVXpWV1Z6TVZwUVJHWm1Namg2YkVWUFdYVkVNMngwUnpoTVMyY3JlVFF4VjBOVGJEVmhUVzl6TldwVFExQkVDa0ZuVFVKQlFVZHFVV3BDUVUxQk5FZEJNVlZrUkhkRlFpOTNVVVZCZDBsRGNFUkJVRUpuVGxaSVVrMUNRV1k0UlVKVVFVUkJVVWd2VFVJd1IwRXhWV1FLUkdkUlYwSkNVa2xyT1d3M01EUmhXbFpQYkVSQlRsQnNhR3BuWmxNM1UwWlFha0ZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJWWE55UlFvMUsxWlZSMVpKY1dVMVVtZHNhVVV2UW5KblZ6TmllVTVVU1U1YU9DOVJWMFJUWTBWemVVMXZWamtySzJaWGJrbGpLeXRFTlhCc05HOUVaVFo0YldkS0NuVlFaelZVY0ZSTFpWUkZWVk5aYkhoeGNHWnRaa05IVkRGNVNUQktRWFpSVW13NWNFb3lUbk40VUhwb1JTOUZRbm8zUlZZelYwRXJZVGxCV0hveFNDOEtPR2R2ZURsQ2VqRTJWSGxSYlhaVVUySnJPRUZKVTFObVVtdFRTV0ZDY3l0cGVUSlVaV3d6VWt4MlVrd3dMMjV1ZUZGelRFeEZhVGhwV2taYVlYVkNkd3BVZFdaV2VsbE1SV2xCWkNzdk1WUkhUbVJGWkZocldUSmlPVFowYjFGSksxRTJTRTVoTW1jNVRrTXdabVJIVmxCaWRGUnVOVTg0VGtacGEyMXJWSGRZQ210MWEwODROaTlNWVdrMkswTkRNbVZGYW1kcWVITjJURVpuVjFZeVJUbFlWVkEzT0ZOTGR5c3ZSRTF2ZEZVNE1IWTNPRnBDUTNscVJuQlRZMk52TlRjS1ZGY3dWM2xDYjJ4NFdsZFRiblUzVUcxblBUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly9zb21hbGxleS1hcGkuZGV2Y2x1c3Rlci5vcGVuc2hpZnQuY29tOjY0NDMKICBuYW1lOiBzb21hbGxleQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3Rlcjogc29tYWxsZXkKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0CmN1cnJlbnQtY29udGV4dDoga3ViZWxldApwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZToga3ViZWxldAogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUnNSRU5EUVc1NVowRjNTVUpCWjBsSlFXTjVXbWtyTUdwWE1UaDNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRLVkVWU1RVRTRSMEV4VlVVS1EzaE5TVmx0T1haa1IzUXhXVzFWZUVWRVFVOUNaMDVXUWtGTlZFSXlkREZaYlZWMFdUSkZkMGhvWTA1TlZHZDRUVVJGTlUxVVRYaE9la2t5VjJoalRncE5WR2Q0VFVSRk5VMVVUVEJPZWtrMFYycENORTFWU1hkTFVWbEVWbEZSUzBWNVNucGxXRTR3V2xjd05tTXlWbmxrYld4cVdsZEdhbGt5T1RGaWJsSjZDazl0ZERGWmJWVjBZek5zZW1SSFZuUk5RbFZIUVRGVlJVTm9UVTlqTTJ4NlpFZFdkRTl0TVdoak0xSnNZMjVOZUUxcVFYZENaMDVXUWtGTlZFdFlUalVLWXpOU2JHSlVjSHBhV0VveVlWZE9iRmxYVG1waU0xWjFaRVJ3Y21SWFNteE1XRTQxWXpOU2JHSlVjR3RhVjFwb1pGZDRNRTFKU1VKSmFrRk9RbWRyY1Fwb2EybEhPWGN3UWtGUlJVWkJRVTlEUVZFNFFVMUpTVUpEWjB0RFFWRkZRWG80TXpWa2MzcHhRMmhvU0V4SVRqTkpLM1JtUW5sV1JrOVdOMW80ZGpsWUNrRllWR2xqUlZCbmJVMUVkbUpuZFhWYVZHVlVkVGt2V0U0eU1VOU5TbFZDVkdacGFFZFpkMjl3Vm1GV1FWb3diVmRUV1d0eVZuUk1URnAzVFRRM1ZXNEtPWEF3VWtsWFIxWm1ObEpHTm1zNVpIQnlja3g0TVRCWUwzcGFZV1oyWkcweE1HWnlNWGxYU1RKNE9XSXlSRko1YTBjcmREQTRZbk0xZEhKeFVWWm5NUXBSYVV4UmJFYzBaVWxOVWtoNVowcG1VMmR4V0ZRME9VOVBkR3c1YmpWb00wSkZaVTV0YzJ0MGVETkxlR0pJVWpseVJuTk1hbXRSY0VWNVdFOVZZazVrQ2xVM1RHVkZWSHBITDNOdGQxWXZMMUJyZDBSNGMwRkVPWFZyUm5ock5YcFpZemQwVUZKa1VGRkdLMVZKWmtOMVEzWklhbmRyU1Vsb2F6aFhiaXRWVldNS2VtUktZVXh2WVhZMGNrSmljMnMwWVRsS09Tc3dhV2RuWmpjNVEyaG9RVGxMUkhCVWMwSnhhMEUyUmxSWFZHdHZPVWN3YVdwM1NVUkJVVUZDYnpOVmR3cGpla0ZQUW1kT1ZraFJPRUpCWmpoRlFrRk5RMEpoUVhkRmQxbEVWbEl3YkVKQmQzZERaMWxKUzNkWlFrSlJWVWhCZDBsM1JFRlpSRlpTTUZSQlVVZ3ZDa0pCU1hkQlJFRmtRbWRPVmtoUk5FVkdaMUZWYjFsdFlVbHRRWFUwT0VOMU1rVndVRnBYTVRSS0x6bDFUMWxGZDBoM1dVUldVakJxUWtKbmQwWnZRVlVLVTBwUVdtVTVUMGR0VmxSd1VYZEVWRFZaV1RSSU1IVXdhRlEwZDBSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGRVoyZEZRa0ZIZWtoNmRsaHVhbWg2V1FvMWRERkpaRkEyVTNac05ubFFhVTlSWTJrdk1XaHhhbkpzZWl0NWVpczJWVGd5ZWxsUVpsYzNiRVUzWlZkdVV6bElOWGRKVTBwRFdHTTVOMjR4VFcwdkNuRXplVmRTYkhkQ1VsaDNkbTFHWXl0M1RteENWVWM0VFZkQ01sUkxhVzVaV2pCeVJsRjBkVnBEYWtsdlFVZFFVRzQzZFZwNFMxcHlUVUpCV0VWVldIRUtRVzFxY0c1Q1UwTnZVbE1yVjNwYVVGWlBSak5tY25kVVpHc3hVR1JXVms5VUswcHJia3A0ZDJadUwyaHVlakZpTmxoMFFURm5hR2x5VEZwSlRWZEtUQXBLZGtGaGMxZzVkM296VWxaSlZVNDBjR04xTkhOS1VWUk5MMUpCTVVobFJUaFZOR01yTTNadVYwUlROVlZKYVU1cVNFTjZRemd6U1dJelVHZENRVmhQQ21rNFUxQlpjWGM0UVdWV2VXZEJTbmhKZDJselQxUlRkM1pVVGtVNFFXNXNiRE5yU1hFeFVEaE1jVE0xUVV4U05tbHdVRzFxVTB3d2RteG5VMmRFZERRS1RtaENORTAzY2xscVNXTTlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGYjNkSlFrRkJTME5CVVVWQmVqZ3pOV1J6ZW5GRGFHaElURWhPTTBrcmRHWkNlVlpHVDFZM1dqaDJPVmhCV0ZScFkwVlFaMjFOUkhaaVozVjFDbHBVWlZSMU9TOVlUakl4VDAxS1ZVSlVabWxvUjFsM2IzQldZVlpCV2pCdFYxTlphM0pXZEV4TVduZE5ORGRWYmpsd01GSkpWMGRXWmpaU1JqWnJPV1FLY0hKeVRIZ3hNRmd2ZWxwaFpuWmtiVEV3Wm5JeGVWZEpNbmc1WWpKRVVubHJSeXQwTURoaWN6VjBjbkZSVm1jeFVXbE1VV3hITkdWSlRWSkllV2RLWmdwVFozRllWRFE1VDA5MGJEbHVOV2d6UWtWbFRtMXphM1I0TTB0NFlraFNPWEpHYzB4cWExRndSWGxZVDFWaVRtUlZOMHhsUlZSNlJ5OXpiWGRXTHk5UUNtdDNSSGh6UVVRNWRXdEdlR3MxZWxsak4zUlFVbVJRVVVZclZVbG1RM1ZEZGtocWQydEpTV2hyT0ZkdUsxVlZZM3BrU21GTWIyRjJOSEpDWW5Ock5HRUtPVW81S3pCcFoyZG1OemxEYUdoQk9VdEVjRlJ6UW5GclFUWkdWRmRVYTI4NVJ6QnBhbmRKUkVGUlFVSkJiMGxDUVVKMU5YUTFZMHROUVNzMGRsbGFTUXAzV2xOb1UzTlRRbFJKVFdwRVMwWklVVU41U21zNGVUSjNZbWxtZUZaS1FtSk1kRVZrZDIxVFF5OTZlRTFKVmpZeUwyMTZUMjkwVjBRdldTOVllRWxuQ2tSWldFaGxVVEZKUzFCbGF6UnVUbVpOUkROUVNuZElNVXQ1Vld0dVl6bDBWakpzZG1OMFJHVnpkSHA1VHpWRVJrbFpkVWh3VVdaSWEydE1jVXBETjNNS2EwaDVSVFpuVW1abWFYZDFLMU5LVDNsdmVGRmhUbEJyTDFaQlVtOXZRa0lyWlZWeFoxbE9hbkpzVUhGcGJuTkRkV3hrZWxwQldGRkNjMkpKZWl0NlJnbzRkRU4yT1RsWU1qQTVZVmxXYUN0cFlXdG9iSFJIVEVaRE5DOTJTMFk1VURsWmJGVlNkSG94T0ROM0swRTFjazV6TURBd2JGcDFZbTVCYUhVMldXOURDazFVZUU5UVYxRkhTMUVyYUhocFNsSXJhR05LYWxONE1UWjJSWHBVZWk5b0swY3Zhamt6T0RSMVNGVjJaWGREWlc1UE5VMW9WRTkxVDJkNGJ6ZFBkRklLTDNsT1IxUlJSVU5uV1VWQk1uTkRhazFWUVVSMlIxVkZZbEZ3ZDBOVU4yeGpWMVIyVHpsV2JIRmtiV3B1VDNvMGVpOUtOMDUwUWxJclRrMW1NamxYVUFwV04wTXdOWFZvYVZoRFl6TXdNeTlNZDFoWkwzZE5OamhpYTI1blNuVnFNR3hZVm1KQmFYbHhUbXREV2pWNWRVNXpLemRuYkZKYWNFdExjR3BKVEhsTkNrazFWRkpwT0ZSemFIcDBLMk51ZUdWdkt6WnFlRlp6SzFSNlVFOXBiMmRLUlV0QlZTOWpkM1ZYWW5vMk56WnRlRzlUUm10NUx6aERaMWxGUVRoNlFXVUtPRTgzTW1ZMlNVVlpNakJOYUVkQ1VVSnVOMkUyVlZwVEwwWnZTR3RJYUVreldYWnBNMFYzYm5oWlYzbHhWMnB5VTFGS1VuSlBXVkJMYTJ4U05sbHNMd3BIVG1zdlRXTm1WVEF3ZUVWUlRUUTBXRWhCTVd3eFlqRXlWelJNU1ZsWGMzTXJiRGRtTjJKcU5DdFhUamRKYVdKSFZXWnBOeTloSzNSMGJHVmFha05FQ2xCNmJXUXdha3N2TlhWbWRWaDJlVlJVZEVad01qbDBhME55YmsxVGVsQnJObFpoT0RaWVJVTm5XVUprVFZaU1ZURjNSRUZqWjJwQmNUUkhkbUp4ZDNjS09IUTROR3B0UlZKVGVtSTBNRGQyYzFjeFJrTjFUakI2VGtRMlQxZFNNRWxNY1M5cE56TXhNelZRTVZScVZUUjNlbFFyTnpGR1pGTmFVV0Z3YWxCVmJBbzVlV3RsWkVGcVVIUkNXR001YVVWWlZuUjNNbkEyVjBaUVdrZGthMHhZYWsxeVRsTTJSVWxqUjNGNGVpdGhaMWxFYzB0WFoxcHBOa0pWWjI5dVIzWkJDazlZU3pNM1VsTlRRbTlEYUU5YWIwUkhNR0pzTkZGTFFtZFJSR05JTURKVFpHbHhia2x6WW05SVJtWTVTbkJUY0VoSlFWbE5VRU5EZGxKamJIWk5jbllLZUcxUlJsWmxWMWRGT0haQ1RHeG1lV3RQWmxCSlluSlBXWFZ0UkVFeFRVazRabEZUYjJwbVVsQnlTakZIYmxSSWNqQllSRUpDUzNGNVkwaElhVkpFYmdwR1RYTldjMm93WWtaeWFtUlNiRlpzYWpjd2NIbGxWMk0yY1hCWmR6QmhOVzUyVW5ONFJWVlNlRUpRZFRWS05rNDVSak50YUZCS1RVSjRkVlpaY0dGekNsbDZaa0k0VVV0Q1owTndNRE50ZURVeU1rWldNMWgwT0hwSlNrVk1XbkpoUW5ONlZtaGlNREV6U2psNVZGZHVWVlUxYms1NlRrUXdVRVI1TUZKbmFua0tNVXhRY21walRtcFFMMHBCY1VrNWNYRkVXVWxwU2pRcksxQklVMWszVVN0RGFGUXhPRXRJTUZsTllreHdlbWRSYmtGT09GUmlaaXQ0VlhCbk1WWklTQXAyYjBwd01ESTJkRmxoUjJaMFdpODVZMVJSU1ZsWldGZzFPQ3N4WVVjMkswRk1kVU5EVjJ0aVFreFJZbkpuUm5STGEwTkRDaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2c9PQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/report-progress.sh",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApzZXQgLWUKCktVQkVDT05GSUc9IiR7MX0iCk5BTUU9IiR7Mn0iCk1FU1NBR0U9IiR7M30iClRJTUVTVEFNUD0iJChkYXRlIC11ICsnJVktJW0tJWRUJUg6JU06JVNaJykiCgplY2hvICJSZXBvcnRpbmcgaW5zdGFsbCBwcm9ncmVzcy4uLiIKCm9jIC0tY29uZmlnPSIkS1VCRUNPTkZJRyIgY3JlYXRlIC1mIC0gPDxFT0YKYXBpVmVyc2lvbjogdjEKa2luZDogRXZlbnQKbWV0YWRhdGE6CiAgbmFtZTogIiR7TkFNRX0iCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQppbnZvbHZlZE9iamVjdDoKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCm1lc3NhZ2U6ICIke01FU1NBR0V9IgpmaXJzdFRpbWVzdGFtcDogIiR7VElNRVNUQU1QfSIKbGFzdFRpbWVzdGFtcDogIiR7VElNRVNUQU1QfSIKY291bnQ6IDEKc291cmNlOgogIGNvbXBvbmVudDogY2x1c3RlcgogIGhvc3Q6ICQoaG9zdG5hbWUpCkVPRgo=",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/bootkube.sh",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/bootkube-config-overrides/kube-apiserver-config-overrides.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IGt1YmVjb250cm9scGxhbmUuY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBLdWJlQVBJU2VydmVyQ29uZmlnCmt1YmVsZXRDbGllbnRJbmZvOgogIGNhOiAiIiAjIGt1YmVsZXQgdXNlcyBzZWxmLXNpZ25lZCBzZXJ2aW5nIGNlcnRzLiBUT0RPOiBmaXgga3ViZWxldCBwa2kK",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/bootkube-config-overrides/kube-controller-manager-config-overrides.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IGt1YmVjb250cm9scGxhbmUuY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBLdWJlQ29udHJvbGxlck1hbmFnZXJDb25maWcK",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/auth/kubeconfig",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Y2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRFZFTkRRV1pIWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRnRUVkpKZDBWQldVUldVVkZNUlhkc2RtTkhWblVLWXpKb2NGcHVVWGhGUkVGUFFtZE9Wa0pCVFZSQ00wcDJZak5SZEZreVJYZElhR05PVFZSbmVFMUVSVFZOVkUxNFRucEpNbGRvWTA1TmFtZDRUVVJGTWdwTlZFMTRUbnBKTWxkcVFXMU5Va2wzUlVGWlJGWlJVVXhGZDJ4MlkwZFdkV015YUhCYWJsRjRSVVJCVDBKblRsWkNRVTFVUWpOS2RtSXpVWFJaTWtWM0NtZG5SV2xOUVRCSFExTnhSMU5KWWpORVVVVkNRVkZWUVVFMFNVSkVkMEYzWjJkRlMwRnZTVUpCVVVOM1JGTlBjbHBWZERRemNXTm1LekZvU2xSSGN6UUtRUzlKY0ZZMkx6UjJkR1pET0VVelpuUTVWV2N2UWpOcWR6RlZNalpvWVROMU56ZHRkMGxSUkZwTlEyVjFVbVZ6VEd0TGMyOWphV052YUM5bEwyUkxTUXBUUVd0T01VSmtWSFZNUnpsVU1WVllhVGhhZDFOTldqZFVURWhDWTFKS1FVMHhkemRUY2tVeVVrSmxLMUJzYWtOSFNscGhkVVJDWlVwQmRsaHVkMXBYQ214a1FXRkhiMUZaYjBaNkx6RlNRbFZUZUdnMFEyNUVRMVZXZFdaRGRHUk9XWGRoWTFGM1dqQm1USEJpVmxwb1VIRlpUM3BtTkdsV2RIRmlLM2hyUjFjS2RrZ3lWR05KVjNkRGMzSlllVWt6TmxFd1JpODJValkzTVZKNVJXTlZWRk5NV0M4NGFGRTFZbXhSVDB0TE1DczNNRFJ5YldoSE9IQTBlVmxXUVRoUFZRcEpRemRuU1hJNU5rZDZObGxEVDBKeU1tVXpWV1Z6TVZwUVJHWm1Namg2YkVWUFdYVkVNMngwUnpoTVMyY3JlVFF4VjBOVGJEVmhUVzl6TldwVFExQkVDa0ZuVFVKQlFVZHFVV3BDUVUxQk5FZEJNVlZrUkhkRlFpOTNVVVZCZDBsRGNFUkJVRUpuVGxaSVVrMUNRV1k0UlVKVVFVUkJVVWd2VFVJd1IwRXhWV1FLUkdkUlYwSkNVa2xyT1d3M01EUmhXbFpQYkVSQlRsQnNhR3BuWmxNM1UwWlFha0ZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJWWE55UlFvMUsxWlZSMVpKY1dVMVVtZHNhVVV2UW5KblZ6TmllVTVVU1U1YU9DOVJWMFJUWTBWemVVMXZWamtySzJaWGJrbGpLeXRFTlhCc05HOUVaVFo0YldkS0NuVlFaelZVY0ZSTFpWUkZWVk5aYkhoeGNHWnRaa05IVkRGNVNUQktRWFpSVW13NWNFb3lUbk40VUhwb1JTOUZRbm8zUlZZelYwRXJZVGxCV0hveFNDOEtPR2R2ZURsQ2VqRTJWSGxSYlhaVVUySnJPRUZKVTFObVVtdFRTV0ZDY3l0cGVUSlVaV3d6VWt4MlVrd3dMMjV1ZUZGelRFeEZhVGhwV2taYVlYVkNkd3BVZFdaV2VsbE1SV2xCWkNzdk1WUkhUbVJGWkZocldUSmlPVFowYjFGSksxRTJTRTVoTW1jNVRrTXdabVJIVmxCaWRGUnVOVTg0VGtacGEyMXJWSGRZQ210MWEwODROaTlNWVdrMkswTkRNbVZGYW1kcWVITjJURVpuVjFZeVJUbFlWVkEzT0ZOTGR5c3ZSRTF2ZEZVNE1IWTNPRnBDUTNscVJuQlRZMk52TlRjS1ZGY3dWM2xDYjJ4NFdsZFRiblUzVUcxblBUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly9zb21hbGxleS1hcGkuZGV2Y2x1c3Rlci5vcGVuc2hpZnQuY29tOjY0NDMKICBuYW1lOiBzb21hbGxleQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3Rlcjogc29tYWxsZXkKICAgIHVzZXI6IGFkbWluCiAgbmFtZTogYWRtaW4KY3VycmVudC1jb250ZXh0OiBhZG1pbgpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogYWRtaW4KICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlLWRhdGE6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJXYWtORFFXbzJaMEYzU1VKQlowbEpSRnBuVTB4R1JVazVURVYzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkS1ZFVlNUVUU0UjBFeFZVVUtRM2hOU1ZsdE9YWmtSM1F4V1cxVmVFVkVRVTlDWjA1V1FrRk5WRUl5ZERGWmJWVjBXVEpGZDBob1kwNU5WR2Q0VFVSRk5VMVVUWGhPZWtreVYyaGpUZ3BOYW1kNFRVUkZNazFVVFhoT2VrazBWMnBCZDAxU1kzZEdVVmxFVmxGUlMwVjNOWHBsV0U0d1dsY3dObUpYUm5wa1IxWjVZM3BGVmsxQ1RVZEJNVlZGQ2tGNFRVMWpNMng2WkVkV2RFOXRSbXRpVjJ4MVRVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFS2RtYzNORWMxTUVWaVdsTkJUR1ZCV2tWR2RXUnNNM3BWTVVObWFFbE9jVWgyZEhscE5uSlZkV05qZFhwbEsyZG1ibVpDVDFCaWVIVlVZeTgyTjFOVmJncFhUMWRKWlhSdE5GRmxWbFpFTW5ZclNYUTRVVlJ4ZW14QmFVRmhLekZFVFVFNU1ucG9Za3R2WTFaUk5ETXhRa1JGVW5JMFFURXJOelJTVDBkVVIydG9DbkpOUTNodlUzcGxNR3hWYUhSSWJsaFBkMGRoZW1aYVRraFVlRk13VEVnclRrbzJVVE5vT1RRd1NWWkxOR1pzV1UxM1JsQjBaVWRhWm5kTk5sbHpRbFVLTVROS0x6QXZiMk5KUzBWbE4yRnRkR1ZUUWtzNGNEZE1NWEZETUZkSEszbHBPRWxKUlcxc1Rtd3hjMGRIYkRFMFNrZENVVGxvZUdkTE5IQkZSbmxNZWdwR1NIcEhiRk5RUlZGbFNtVjBhRE5sWjFwVGRtNTJXSFk1ZDA1blpWa3ZXWEZxYVROeVpuVnVlRWRtVFM5Q1IyMW5Za2hNUmpnemRESjVaakpUYlhVdkNqTk5WMGhaUzBGSlZITkVPV1Y1V21WSFZITTVTVkZKUkVGUlFVSnZNemgzWmxSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQ1lVRjNTRkZaUkZaU01Hd0tRa0paZDBaQldVbExkMWxDUWxGVlNFRjNSVWREUTNOSFFWRlZSa0ozVFVOTlFYZEhRVEZWWkVWM1JVSXZkMUZEVFVGQmQwaFJXVVJXVWpCUFFrSlpSUXBHUzBkS2JXbEtaMHgxVUVGeWRHaExWREpXZEdWRFppOWlhbTFDVFVJNFIwRXhWV1JKZDFGWlRVSmhRVVpGYVZReVdIWlVhSEJzVlRaVlRVRXdLMWRIQ2s5Q09VeDBTVlVyVFVFd1IwTlRjVWRUU1dJelJGRkZRa04zVlVGQk5FbENRVkZDTlZseWVWRjRkSE5JWTNWcVpXTlhRM0ZJUW5OTE1FbDFTRGhSV0ZBS1lXUmxVVUVyYW10VlNXZHJTbXhtWXpGak9IbFpNRTAwWlZrclZrTnVaVEpzTjJzcllucFJZMGt2VjJJd1kzSnJUVE13ZFhSV1prTjFSa1pVUlhkVE9RcDVjMU4xZGpGSmJGSjZUMFIyTTNOd0syTlZNa2hMY0ZOQlJIbGpNbTFoZDNCQmVtOXZOa3MyTlcxMmRrZFphVVZhTUVwTmNGbEZWV3QxYURsRU0ybFJDalZaWjFOa1pXeHJaVVUwTkRsSE4waENUSGg2YUZwVFdrVnZPRU00T1hWcVR6WktUWGxYYTNNek56aFZialZwT0ZCeVVtNXlibEZ6YzNkSlExWTFMemdLTlc0NVl6VkJURTV6ZGs5cGNtdE1WVzlvU0ZSb2VUbE1OUzgyS3pkUFMxSmxUbE0yZUdaQ2VWaHlLMnBuWjAxdWIzbHNhbEZDY0c1U1dUZHhXRUo0YUFvNFRGVlVkVUZKWkVsVWFESkpRbWxvVjJrelJGWTFValkwU0ZKclVGZ3pORkZHWnpoMFVsVnRRVUpyYWxGemRrRXhhMjQ1TTFFMFV3b3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0KICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGY0ZGSlFrRkJTME5CVVVWQmRtYzNORWMxTUVWaVdsTkJUR1ZCV2tWR2RXUnNNM3BWTVVObWFFbE9jVWgyZEhscE5uSlZkV05qZFhwbEsyZG1DbTVtUWs5UVluaDFWR012TmpkVFZXNVhUMWRKWlhSdE5GRmxWbFpFTW5ZclNYUTRVVlJ4ZW14QmFVRmhLekZFVFVFNU1ucG9Za3R2WTFaUk5ETXhRa1FLUlZKeU5FRXhLemMwVWs5SFZFZHJhSEpOUTNodlUzcGxNR3hWYUhSSWJsaFBkMGRoZW1aYVRraFVlRk13VEVnclRrbzJVVE5vT1RRd1NWWkxOR1pzV1FwTmQwWlFkR1ZIV21aM1RUWlpjMEpWTVROS0x6QXZiMk5KUzBWbE4yRnRkR1ZUUWtzNGNEZE1NWEZETUZkSEszbHBPRWxKUlcxc1Rtd3hjMGRIYkRFMENrcEhRbEU1YUhoblN6UndSVVo1VEhwR1NIcEhiRk5RUlZGbFNtVjBhRE5sWjFwVGRtNTJXSFk1ZDA1blpWa3ZXWEZxYVROeVpuVnVlRWRtVFM5Q1IyMEtaMkpJVEVZNE0zUXllV1l5VTIxMUx6Tk5WMGhaUzBGSlZITkVPV1Y1V21WSFZITTVTVkZKUkVGUlFVSkJiMGxDUVZGRFNXaE1TV1JETlRGYWNGQnBjQXBsZWxsc2RFNXJka3h0UTJ3dkwzUk1TVkV5ZFhkRlpGbzVhMnBzVUhBcmRrZG9OVlF3V1VGNVFXbzNkRXczTm1KU2VuWk1Ua0o2YW5WaE5FeDZNVXBhQ2tsSldrMTNRazk2Ympaa2FqZHVTRlJKWTJSYU5EUTRTRTE2ZVdoSmVFVjVMM3BGWkdkV1Uza3ZOMjk0ZHpGbFRsaFdjblF2ZGk5WmRWTldXWGxuVUVzS05HeFpRM05ZVm10RGF6VTNLMGtyTkVSd1NqbGpORk14ZFV3clRXSXlWbXBrVVdkNk56QnNOMVZFWTJwMFpERkxXRFpyY0hoeGNUSTJNVWxCUWtjck9BcGFia3h1WldGRGVDOUlVSHBCY0RoYVJIaDBOelowU2pCcVNVWnVUMHRRTHpSQ1oyMXBRbE5TZWxwSU1tTTFjVFJFV1VRNE1sWm1SVkl4U0dnd1ZXUkhDaTk0ZFZaSFlsbHZRWEF5WjJ3NVZrbHZlbmswWm5OdFQzSkhjM3BzVm1jdlRqZEdhMFJYZUhWNlVFdFlkakZaVDFCUGVESkRLek5YYlRONmVUbGxORWdLZHpoeGFsWjBOamxCYjBkQ1FVNXhjRmh0Tm5KWlZtWlJWWEZqY0dKaVJYcEZSRFkyU1M5MFVIbEdOR1ZMTlVWTGFEaG1iMHBtZW1aVWFGazRaRGx0VGdwSFkwWkJjMWxUT1hWQ1NYb3lWMDEyZUVrNVJqWXZOMGRMYUhsME0wSlVUWFpWWkV3MlpUTXhUVkl4VGtOV2FEQkdaVkpFUjA1TFYyMTNVMlpIZVRWRkNuZEhhbWRuVmxWSFkzWnVNR1JzVkVWT2NIWjNTakpzTjBsWmVIVndSa1J2UVVkd2RWZzVTMVpLYUU0dmVuaEtaMjlaTW5Ob09FTnlRVzlIUWtGT05rUUtVRVp0TVV4WGR6Umpja1p6TWxSS01VdHRhV3hwUjFndk9XVldhVzlXU2xsc1dYSmFReXRHVGpGMlNFOUpiR0pXYkRCWU1pc3JSSHB2U21wV1dscDZUZ3BHZFdzeWNtMHhTM0JFUTA5S1RuZDRVVmRaUTNCeGRWZHRRVTlVT0RCVGVXTnFVSEprVms1TlJUbExObk5aT1ZVMk1ua3JaVzVxTjBjelRVbEZWRlZpQ25wUVlrOTRPRlZOUTBsb2VITnViVkJzVlU1eFRsUk1aaTlwUTBWbk5VeEZja2RpVFd0VVJtcEJiMGRCVUhwdVYwTnNORmg1V2tvNVRUaFRkelpTYjBFS2VXOUtPRkZSUTNsNVZGRnJSMDAxV1hOS09GcDZUMHR6TmpWVlZXVndNVzlKZHpoWWVGaEJkVTR5VlhseFNrWTFXRzkzZWxSMmJuZ3hNVlZYV0VKV1VBcGlZbmQyY1doVVNqTk9WVmh5VEVnd1YyOXdhMDVTUWtSU2NsUlRORlJCVlVOeU9WQTFhM1l4Um5ZeGRUaGtaa05wY0dsSllrOUhhbk0zTWxOWFlYRmlDalZEY1VOSWNIWjBOVXB0UTFGTFoyTlVjVVJwY0M4d1EyZFpSVUZ0T1RSeFdrWjVOVEpPYTJnemJ6a3hRbWhrTVVGaFJWUkVkMEpvTmpkR1VHVkVUamtLWW1GdWF6TkpjQ3RUZUhkMWFXTXhUa1JyUjFrMU1XUkNOVVV4TTNoSlRWWjZXQzh3V2pkTGJHMVRNalZRUmxZd2FteFVSa1VyVjBaNmRIWlJlVkZ4U0FwWVZEbFFSRWMxTmxwR09VeERha0psVTJWeFZVOUVUVTlaTWtndlV6aHBVbkF3U0hGU2JXNU1aMGRxUlhOTmNWaHpTVmQ0YUd4WVNqSnNWalZLVmt0SUNuZGxjME4xYVd0RFoxbEZRWFpDWmt4dlluUlVOMGRXWjIxWWEwUlVOa2hQWlVwRGNtVlhTblJrUkdZNWVERjZkVFozWXpOSVZGRkpWMng1TkV4WFV6RUtSVXBJYTNwcFZuQkxOMHhMZWpKMmNqTkdjM0o1VGsxNVVESm5iakVyVGxGeWMwUlBWbTV2TkVoSlVHbzFTME5SWjNkV1oycEZSMnRRYUZOaFNrcDZRUW93ZGpoTVZtSk9VVFpoVEc4eFNtVk1abFozT0ZGQ2VXVXdSRlZHYjNFMWFqbG5LMHRIUkhCWFdEQlZNRWRDV2pCUGJEaHdWbVl3UFFvdExTMHRMVVZPUkNCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/cluster-config.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKZGF0YToKICBpbnN0YWxsLWNvbmZpZzogfAogICAgYWRtaW46CiAgICAgIGVtYWlsOiBzb21hbGxleUByZWRoYXQuY29tCiAgICAgIHBhc3N3b3JkOiBwYXNzd29yZAogICAgICBzc2hLZXk6IHNzaC1yc2EgQUFBQUIzTnphQzF5YzJFQUFBQURBUUFCQUFBQkFRRFVxN1czOHhDWjlXR1NXQ3Z1c3RhTUdNVDA0dFJvaHc2QUtHekk3UDd4cWw1bGhDQVJleXQ3Mm45cVdRUlpzRTFZaUNTUXVUZlhJMW9jOE5wU003K2xNTHdqMTJHOHozSTFZVDMxSkhyOUxMWWcvWEljRXhremZCSTkyMENhUzgyVnFtS09wSTkrQVJIU0pCZEliS1JJMGY1WSt1NHhiYzVVektDSlg4amNLR0c3bkVpdzh6bStjdkFsZk9nc3NNSytxSnBwSWJWY2IyaVpOVHN3NWkyYVg2RkRNeUMrYjE3RFFIekJHcE5iaFpZeHVvRVJaVlJjblljdGdJenVvNmZENjBnbmlYMGZWdnJjaGxPbnViQjFzUllibG9QMnI2VUUyMncvZHBMS09GRTVpN0NBMFp6TkJFUlo5NGNJS3VtSUg5TWlKczFhNmJNZTg5Vk9qak5WCiAgICBiYXNlRG9tYWluOiBkZXZjbHVzdGVyLm9wZW5zaGlmdC5jb20KICAgIGNsdXN0ZXJJRDogZDMyZTFhYWUtMjM0MC00MTZkLTliYTItNDE0OWI4ZTFkYzg1CiAgICBtYWNoaW5lczoKICAgIC0gbmFtZTogbWFzdGVyCiAgICAgIHBsYXRmb3JtOiB7fQogICAgICByZXBsaWNhczogMwogICAgLSBuYW1lOiB3b3JrZXIKICAgICAgcGxhdGZvcm06IHt9CiAgICAgIHJlcGxpY2FzOiAzCiAgICBtZXRhZGF0YToKICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgbmFtZTogc29tYWxsZXkKICAgIG5ldHdvcmtpbmc6CiAgICAgIHBvZENJRFI6IDEwLjIuMC4wLzE2CiAgICAgIHNlcnZpY2VDSURSOiAxMC4zLjAuMC8xNgogICAgICB0eXBlOiBmbGFubmVsCiAgICBwbGF0Zm9ybToKICAgICAgYXdzOgogICAgICAgIHJlZ2lvbjogdXMtZWFzdC0yCiAgICAgICAgdnBjQ0lEUkJsb2NrOiAxMC4wLjAuMC8xNgogICAgICAgIHZwY0lEOiAiIgogICAgcHVsbFNlY3JldDogJ3siYXV0aHMiOiB7InF1YXkuaW8iOiB7ImF1dGgiOiAiWTI5eVpXOXpLM1JsWXpKZmFXWmlkV2RzYW5GcGNUUjBiWEZ5ZUdkMU1uTXliV3RuYVRvd1VsZFRPVmhMVlRaR05FOHhVVTlRTVVsWlRVUkZURnBSVVVzMk5WTlZTMGt3VVRNd1RVTldXRlU1UjBsT1dVZERUVlF3TkRSWk1USk5Wekl4UlZKUiIsImVtYWlsIjoKICAgICAgIiJ9fX0nCiAgbWFvLWNvbmZpZzogfAogICAgYXBpU2VydmljZUNBOiB8CiAgICAgIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogICAgICBNSUlETXpDQ0FodWdBd0lCQWdJSWRyRTFRRXRybkEwd0RRWUpLb1pJaHZjTkFRRUxCUUF3SmpFU01CQUdBMVVFCiAgICAgIEN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNE1UQXhPVEV6TVRjeU5sb1gKICAgICAgRFRJNE1UQXhOakV6TVRjeU4xb3dLREVSTUE4R0ExVUVDeE1JWW05dmRHdDFZbVV4RXpBUkJnTlZCQU1UQ21GbgogICAgICBaM0psWjJGMGIzSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQ1ZSd3dDL0Y4CiAgICAgIEJmNVVnWUxnOENTcDlHc3RhekV0TXFDM09IWjcyTzg5MkJHT1BWNDJpVFEwMG5FMUFNdmRPM1llQk1wb0FaR0QKICAgICAgYm9jaVFqdmFBN3hXYlpCUTRNN2NrWjBNMzJQMDYxSHlyakltMW04TGIyWVRkWU1vejVVZnRZSi9SSWlSYjcrQwogICAgICAxdVRoWVNrK2F0aktWNmtMY3NxN2lqdEpHZWN4WkNXZ2tsdDlRZGduanJYZms4MGd6NXhhK1VDUWEvQTJxeVhiCiAgICAgIHFqK25oR2w4TWFqUTQ3OWk1N09yMDhFUGNma09reFkrRGZsZHg3R3UxRWZNZUFCN2NYZzNWTHN2dGI2NDNRbjAKICAgICAgNEZ0bnpONG5ldU9lK2tQWUg5KytLV2VjRUhyWWdHa1piREVNVTliSmJlSDM2SDFQZ21RYlQ4bkUyRFdIUWdsQwogICAgICBOa0FZWjZoRGdWVXZBZ01CQUFHall6QmhNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFECiAgICAgIEFRSC9NQjBHQTFVZERnUVdCQlJJazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBZkJnTlZIU01FR0RBV2dCUkkKICAgICAgazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVJJZk5QaGl0Zk54MQogICAgICAxdzFsK2hmKzBwNW5PTGRZQlkybmF3ZXBUYTlUTmZrYUxyVk5LMFliVENiOWFxeXR5NjhtaVd5U2pYdzByeVI3CiAgICAgIEk5c3ZhZFZneEVHNitoTWhsZUNvRnBzQnlTaGZIR2l2NXY5NE9ERG9lQTdaR09jWWNxUnYrUnQ3V1V5bG53MXIKICAgICAgMFhCOFpWWlJ6Tm1UVUc2ckRSaHJYcnVEQlJ4ZzVFNm80U2NhR3BlcDIySjdlMVhTc01IL0doMmIzTGJ4Nld3dAogICAgICBPdGw1bzg1c1BwSnpETHVvQ2JpQ24vT01oMTJCeHMvKzA2WVA5RDFQMisvelpxTVBVR0tiMGZ0VTZXTUlsczRYCiAgICAgIDZDNzdpaXQ5V2JuVTlNT20wTk1uRHFxK2NUbVNMOEFXRTF1djBLdGx4S3kvYUxsQkZDbWNnTXRtOEloNEdZbUcKICAgICAgbjJZQWJRaFZzZz09CiAgICAgIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KICAgIGFwaVZlcnNpb246IHYxCiAgICBhd3M6CiAgICAgIGF2YWlsYWJpbGl0eVpvbmU6ICIiCiAgICAgIGNsdXN0ZXJJRDogZDMyZTFhYWUtMjM0MC00MTZkLTliYTItNDE0OWI4ZTFkYzg1CiAgICAgIGNsdXN0ZXJOYW1lOiBzb21hbGxleQogICAgICBpbWFnZTogYW1pLTAwMmNlMjhlNDNjMTE5MDU0CiAgICAgIHJlZ2lvbjogdXMtZWFzdC0yCiAgICAgIHJlcGxpY2FzOiAwCiAgICBraW5kOiBtYWNoaW5lQVBJT3BlcmF0b3JDb25maWcKICAgIGxpYnZpcnQ6IG51bGwKICAgIG9wZW5zdGFjazogbnVsbAogICAgcHJvdmlkZXI6IGF3cwogICAgdGFyZ2V0TmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci1hcGkKICBuZXR3b3JrLWNvbmZpZzogfAogICAgYXBpVmVyc2lvbjogdjEKICAgIGNhbGljb0NvbmZpZzoKICAgICAgbXR1OiAiMTQ1MCIKICAgIGtpbmQ6IFRlY3RvbmljTmV0d29ya09wZXJhdG9yQ29uZmlnCiAgICBuZXR3b3JrUHJvZmlsZTogZmxhbm5lbAogICAgcG9kQ0lEUjogMTAuMi4wLjAvMTYKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGNsdXN0ZXItY29uZmlnLXYxCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/machine-config-server-tls-secret.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiBtYWNoaW5lLWNvbmZpZy1zZXJ2ZXItdGxzCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1jb25maWctb3BlcmF0b3IKdHlwZTogT3BhcXVlCmRhdGE6CiAgdGxzLmNydDogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUmpWRU5EUVd4dFowRjNTVUpCWjBsSldrbHNiekpIUkhGWGFHZDNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRLYWtWVFRVSkJSMEV4VlVVS1EzaE5TbUl6UW14aWJrNXZZVmRhTUUxU1FYZEVaMWxFVmxGUlJFVjNaSGxpTWprd1RGZE9hRTFDTkZoRVZFVTBUVlJCZUU5VVJYcE5WR041VG14dldBcEVWRWswVFZSQmVFNXFSWHBOVkdONVQxWnZkMDFFUlhWTlEzZEhRVEZWUlVGNFRXeGpNamwwV1ZkNGMxcFlhM1JaV0VKd1RHMVNiR1J0VG5Oa1dFNHdDbHBZU1hWaU0wSnNZbTVPYjJGWFdqQk1iVTUyWWxSRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUlLUVV0R05VVnBVR2d6Y25WR1VHZGxkM1J4U21jMWRFdHpVa0ozUTNkd2IzbFRNSEYyU0ZneVozSklkRTVaTUZOR2JYZGtWMjUwTUhaeFIweGFabWd4YVFwV2VIbDZRVkV5UmpCVFJYaFZla3MwWVU5UWJHNUNORnB6TUhnelFVRjRNMnRPWmtRNWJUYzFNM1pLU1VVME1qRnRSV2RNWnpKR2FXaEVkMjkwV0doNENpOW9TMlpQUnpGalR5OXNNRTVPTURRemVFaEtMemRCWkRWVFowdDVhWFkxV1VzMVdEaHFhaXN2Y25oUFpqVXhlWE5MVDBadU5GaEZOSE5ETkZKeFUxUUtVVVZ4V2pCelZtUTRjbTlFZEZRd1QzZ3dla2xXU0d4cVJsTXdPR1pEWTFKRVVHZHVVMGx2UlZkdVNUVkdiM2MzT1hwQmFFcG9TVmhWTXlzM1JHTm1XQXBxWW5FclNEaDNWbFoxWVZsdGRrdGFSazluTDFGMlUxWlJaVGhFY1hWWFJGTk1ia2xGZVhJeFNGRldVVFJTV0VaMlUyTkhVSE13SzFoWWR6bFZjblJ5Q2tzME5tdE9Za2xFWmtGc2FHbG1XbTFhYzFKNGQxQlZRMEYzUlVGQllVOUNiVVJEUW14VVFWUkNaMDVXU0ZOVlJVUkVRVXRDWjJkeVFtZEZSa0pSWTBRS1FWUkJUVUpuVGxaSVVrMUNRV1k0UlVGcVFVRk5RakJIUVRGVlpFUm5VVmRDUWxKSmF6bHNOekEwWVZwV1QyeEVRVTVRYkdocVoyWlROMU5HVUdwQlpncENaMDVXU0ZOTlJVZEVRVmRuUWxKSmF6bHNOekEwWVZwV1QyeEVRVTVRYkdocVoyWlROMU5HVUdwQmQwSm5UbFpJVWtWRlMxUkJibWRwVm5waU1qRm9DbUpIZUd4bFV6Rm9ZMGRyZFZwSFZqSlpNbmd4WXpOU2JHTnBOWFpqUjFaMVl6Sm9jRnB1VVhWWk1qbDBUVUV3UjBOVGNVZFRTV0l6UkZGRlFrTjNWVUVLUVRSSlFrRlJRMlZUVTFGd1ZtTmpiRkY0YkdsWFNEQndaazB2ZG1SSGVqRXJTV0phU1hBMUwwTnNhR2huUVZSa2MyUTVPRXh4UTBZMFUyUm5TMmRGUWdwc2JrdFFkblozUTJ4Rk5GQXZaVWRMWVhNclNGTkdaR2xsWkRJNVUwUXhSM04xUW5OMFYxZ3hjemhKYzFsNVl6TmxNbHBPZFdkcmRWWlBTMW93WlV0d0NtSTJSekUwVUhBemJFcDRSbEJ0Wlcxdk1VdDZXa2RTV1dkMkwyTjFkMUV4ZFVsRVExQTFlRVpFT0V4WGRGRTJaemx0WmpWNlFXMUtURTFOT0RsWGEyc0tRMDFWVEhWQ2IxTlBSWE5IVTFsUkwwNXRSMkZaUzNCc2QyMWxVRmxpVm1OT1dqaHRMMHhRYWxoeFMwTkZSSEkyTVhkTFFuQjNhVXROTXpBeGJXTldVQXBZV2xOQ2VUTXJOakJKYlVKMlRrZDVOWFpKV2s5MFpIRlpTblYxVkM5S2QyeEVRMlJQTURCc2FEVkVURzUzZEhjNFExaHNPWGg1TkRSNVF6VkNlRzFpQ20xVldFazJTa3BXTlhKUlMzSjFSMVZXTTBSdWRDdElRakY1THpFS0xTMHRMUzFGVGtRZ1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFvPQogIHRscy5rZXk6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIyZEpRa0ZCUzBOQlVVVkJiMWhyVTBrclNHVjFORlVyUWpkRE1tOXRSRzB3Y1hoRlNFRk1RMjFxU2t4VGNUaGtabUZEYzJVd01XcFNTVmRpQ2tJeFlXVXpVeXR2V1hSc0swaFhTbGhJVEUxQ1JGbFlVa2xVUmxSTmNtaHZOQ3RYWTBob2JYcFVTR05CUkVobFVURTRVREppZG01bE9HdG5WR3BpVjFrS1UwRjFSRmxYUzBWUVEya3haVWhJSzBWd09EUmlWbmMzSzFoUk1ETlVhbVpGWTI0dmMwSXpiRXRCY2t0TEwyeG5jbXhtZVU5UU55dDJSVFV2YmxoTGR3cHZORmRtYUdOVWFYZE1hRWR3U2s1QlUzQnVVM2hXTTNsMVowOHhVRkUzU0ZSTmFGVmxWMDFXVEZSNE9FcDRSVTByUTJSSmFXZFNZV05xYTFkcVJIWXpDazFEUlcxRmFHUlVaamR6VG5nNVpVNTFjalJtZWtKV1Z6VndhV0U0Y0d0Vk5rUTVRemxLVmtJM2QwOXhOVmxPU1hWaloxUkxkbFZrUWxaRWFFWmpWemtLU25kWkszcFVOV1JtUkRGVGRUSnpjbXB4VVRGelowNDRRMWRIU2psdFdtMTRTRWhCT1ZGSlJFRlJRVUpCYjBsQ1FVaFpTRXRXZEZKSWNESjZTakJSTXdwNE1HVndlbEUzZUVoR1ptUk1TMGhLV1ZnclZuZE9hWHBQVjBKdWEwMW1iRmxSZUdOS1NVNUpPSEY0VDJwblEzTm5WVUphUmpoMmNYQktTeXR0ZWtoWUNqSmtUemRaWjBsbGFIaERPV0Y1ZFhoMVp6TTVSRFJVVHpSRlpqUndNVXBQUTNGSFpYbE5ia2RYVTBsblNEUlhTM3BWZVZCV1dTdGhaVGQzTjFaUGFtWUtVMU0yV0cxSE5FUmlRakUwZUZrMlprZHBlRll6U21kTmVTdGhXREJOVTBGRFVEQlBZMnBYTmt0NVJTOURUMVZwYTNkdFMzbERRVlY1YldJMU56UmxVd296V1RSQ2JWRkZSekZ5WlRCS1RqWTVNelU1Tnk5MVMwaDRWV0pTWnpScGFWTmpZbkpYUkVaVWQwTXdNMDgwV2xKRVYybHZUbXd4ZUhvMVdYQllZbE5YQ2tkUk1YcG5SbG81Y0RJMmQzYzJSRTB6Wm5SbFlXSlRlRUpzYTFsT1FVY3dlVmRrZWtZeFUyTmFkRGxRUzFKRmJXRlFNMk5tWVVWcFZsZDFjamhSVDFZS1RqbFNRbXRaUlVObldVVkJNWEpNUW1kbmVsaGFlRUZZZG5FM1dWUktUa1ZoVVhSS2FtUktUWFZRWWxkRFNrNTFkRGxLVUhwUlNsQlVkVE5EVFd4aFZBcHdNRGhTZVZCTGNFOXRNRlpNVEdnNFJXa3pSMUpFT1dkdWEyeEJUazhyTjJ4RGQyUmxNWFJTVEZKTWVIUkJlbFZOTWpkb1drUlFObmRtVmtGQlZ6RTBDbEZ4UzI1V1pUYzNhVU56ZERSeVRtaDJkVkk0YVdoNFNHMDRPWFoxYUhKQlowcG1aVVpYY1hKbFJIbE9RMnhLYVVock5raEJhWE5EWjFsRlFYZEphMmNLYlRSc2FsQk1Xbk5LZVhkdU5uUk9XR0owTkVaallrbGFkVVpVWVhsVVlVZERhWGR1VVhwbU5UQXdRMlEwUmpsRlpHSXZXaTkzUVcxRmFHTnNUMlZRTWdvelIycFpOalZoWjA1c1J6TldiVU4wYTFvMFV6UmhSMmhxVFhoWFJrZFhWRFZxTlU1T1Yxb3JTRFpIT0dwWlFYQjZPVmx3T0d4RVpIVTRiVFpTUkVFNENqaGhRVnBOUlc5V1JFcHRTVk4yZW5SMlFYSkJjbGwwYm5wR1IwZHBWVFJxUm5SR1JsZFdPRU5uV1VGWlZHWlpaaTlqYjI5eVlXRjVaa2RMWVVWS1dFOEtLMjF6YVU1bGRHWnBVRzVxTUV0VVdrSkhUSEZTTVdWd1JFeDBUMHhaVkdKcVRsUnliR0ZVV1hFeE5scFRSekJ5VG1Gc1lrMXVNa05xWWtwTFF6bFhSZ3BUV2xWM01FdzJXWGh4Y3poQllsQklLM05hYWt4SmN6Tm9PR0oxU1c1R1duZGpXVVp6VmpocFNrSnJNbkkyTTJsRFZWZGlPRTlYWlZkMFdrRkZRMVUwQ25GWWFVaHVhVXMxU1hOdGIyOUlhbWhETW5relRIZExRbWREVFhJMllUQkJSMEZVVEZCck5scHViVVZxV1cxR05scFlkM3ByVFdNdmJWRm5VVEJqVDJnS09WUnZkVk0xUkhaNVQyUnVMemxYVTNsdWRuVjRkMWRsTDAxdWNXWjJiMk51VTFCTlZFWkJaamxYU0hWSU1HSjFibGg0YVZSdFUzVkllblI1YjNWWU5BcHJOVzlvYzNkRFRWSjViVU5PUTBWdVpXeHZkSE0xVUU5amFIaHhkek5rVVZNNGJYRm1kRmhwV21sa2MzUlFSVms1WTBjclMyRlJSbU5LU1Roc0sxSm1Da3hyTHpWQmIwZEJSa1JoZFdoV1dXaGpNbFZDWm5rMmJGQjNjVkpSUTJ0eWVrSjJaVVJvT1UxV1oxZ3ZhazVUVUdKSmRGaDVOMEZWY0habWRHTjZOWFVLVDNsaWNqQkxUU3R1VTNwU2FHUk5aSGhzWmxJMlIxWkdUblpKTVd4VFVrOXliRUphUjNkVFluTkRlRlEwWWxKV2IwaEdVaTl2VERKUVVGRTFPVUV3V1FvMU5qVlRVR2xsVTNOTWJEbDFaV0pKUkRKMlYzUmFWRVkyVlVGUFVsbzBNRlpxZEhGclJqVldTMWhxTVZscU1pOHhOV005Q2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/02-ingress-namespace.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQphcGlWZXJzaW9uOiB2MQpraW5kOiBOYW1lc3BhY2UKbWV0YWRhdGE6CiAgIyBUaGlzIGlzIHRoZSBuYW1lc3BhY2UgdXNlZCB0byBob2xkIHRoZSB0ZWN0b25pYyBpbmdyZXNzIGNvbnRyb2xsZXJzCiAgbmFtZTogb3BlbnNoaWZ0LWluZ3Jlc3MKICAjIEdpdmUgdGhlIG5hbWVzcGFjZSBhIGxhYmVsLCBzbyB3ZSBjYW4gc2VsZWN0IGZvciBpdCBpbiBuZXR3b3JrcG9saWN5CiAgbGFiZWxzOgogICAga3ViZXJuZXRlcy5pby9pbmdyZXNzLmNsYXNzOiB0ZWN0b25pYwogICAgbmFtZTogb3BlbnNoaWZ0LWluZ3Jlc3MKICAgIG9wZW5zaGlmdC5pby9ydW4tbGV2ZWw6ICIxIgo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/kube-apiserver-secret.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/openshift-service-signer-secret.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiBzZXJ2aWNlLXNlcnZpbmctY2VydC1zaWduZXItc2lnbmluZy1rZXkKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1zZXJ2aWNlLWNlcnQtc2lnbmVyCnR5cGU6IGt1YmVybmV0ZXMuaW8vdGxzCmRhdGE6CiAgdGxzLmNydDogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUlBSRU5EUVdsRFowRjNTVUpCWjBsSlZuSlNTbmhIZWsxbE5YZDNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRLYWtWVFRVSkJSMEV4VlVVS1EzaE5TbUl6UW14aWJrNXZZVmRhTUUxU1FYZEVaMWxFVmxGUlJFVjNaSGxpTWprd1RGZE9hRTFDTkZoRVZFVTBUVlJCZUU5VVJYcE5WR041VG14dldBcEVWRWswVFZSQmVFNXFSWHBOVkdONVRqRnZkMHhVUlZKTlFUaEhRVEZWUlVONFRVbFpiVGwyWkVkME1WbHRWWGhIUkVGWFFtZE9Wa0pCVFZSRU0wNXNDbU51V25CWk1sVjBZekpXZVdSdGJIVmFla05EUVZOSmQwUlJXVXBMYjFwSmFIWmpUa0ZSUlVKQ1VVRkVaMmRGVUVGRVEwTkJVVzlEWjJkRlFrRk9TbXdLUlVGdFFreHRSVFoyZUVNM1ptTjFMM1Z5VUVSNlZXWlNPRXgzTWtvelNWZHpNa2RGV1dveFNteERaeko1V2xjMFVXcDBjRXQwTVVWMlVrcG1VRzlPUkFvMll6ZGhjV1JPYm00ck0wTkNXV3Q0YTI5WVJuVjJaa1pHUWpsT2NqTXliSEUxY1daUFdsVXhhbkJ4TldOSGVYZEdRa3g2TDFCVVpTdGlhRGcwTDNaNENuQnhiR0l5WVM5WVMyZzRZVFpqVHpGSkx5dFhSekF2VG5aMWNsUllabWxMYm1SckwySlVjWEZ5TlRWUFFtcE9hV1pwUVhCb05VNXlVSEpMTkU5WFRGTUtRbkI0YlZKVU4wSnNiRzV5WW5wTVRYZExXRkpYUkVkWk1EQjFORE50ZVRsSlNVSndOM1pQYmxaRVdUVXlkVmRKVjNKSFdEVXlSRmszYkdWWlRFcHdPUW94YUVSdWQyOW9WM1IxYUZGTk0ya3ZTWGN4WTNrMFdYbExVVmx6VlhoR2RqTjBVM0IwVm1GU1NEaDNiMHBXY3pobVVtSmhjRTlETDI0ME4yTmhNSGM0Q25CdVN6aEVWbVJMWjJWUldrSjVaekpTVEhORFFYZEZRVUZoVG1wTlIwVjNSR2RaUkZaU01GQkJVVWd2UWtGUlJFRm5TMnROUVRoSFFURlZaRVYzUlVJS0wzZFJSazFCVFVKQlpqaDNTRkZaUkZaU01FOUNRbGxGUmtWcFZESllkbFJvY0d4Vk5sVk5RVEFyVjBkUFFqbE1kRWxWSzAxQ09FZEJNVlZrU1hkUldRcE5RbUZCUmtWcFZESllkbFJvY0d4Vk5sVk5RVEFyVjBkUFFqbE1kRWxWSzAxQk1FZERVM0ZIVTBsaU0wUlJSVUpEZDFWQlFUUkpRa0ZSUW5KdE0yTk9Da3AzYTBkTk0zWjFTVWRTU21wRVRVVlhka1ZuVWxjM2N6TlhWMjV1WkZZMFIwWmFPSFIyWTNvNU5rMU1jSE42TkZFMFdYVjZhMU5ZS3pWNE5rdHJjV3dLYURZd1RYb3pibWxwYjNOak4yeGtja3RwVUZaTllsaFlVMDFLYVZsVVFteExRMDlrTVRCdFpFaFJVRUptTUZoUllqY3JhR3N3U2tkWVVsVXpSbmRpVWdwMlZXcG9WbTlDZW1oRkwzTndWa1J6VFd0RlVuVlZZMmg0ZG5kMWMxSmpUbGRuY1VaVlEzZ3hSazR6T0dGVVpHcDZUazlSVFRKa1oydGtiRWRrYUdwWENuTXdXV2xYYTBKdU9UZFNlRGhoWkRGWU1uaHpiM0pvYUVjdmJrVnVjbEpRYm5SbmEyVkRjamhyY0djeVpURXJLMjhyYjFWRlFYSldPSEp4ZEdOcWVDOEthblJ4TXpONUsxcDNiVmNyTUhsSVdtRjJaMk55ZGt4d1ZrTkVkVEZoYTNWSVIyVnlNV0V5U1RkeFkwRlFOV0Y2UjJsSFVVNXBURFJYUW0xTGVHazJZd3BKTXpOelFUUm9TSEoxVUV0MFZYcHlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICB0bHMua2V5OiBMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFwTlNVbEZjRUZKUWtGQlMwTkJVVVZCTUcxVlVVTlpSWFZaVkhFdlJVeDBPWGszS3paek9GQk9VamxJZDNaRVdXNWphR0Y2V1ZsU2FWQlZiVlZMUkdKS0NteGlhRU5QTW10eE0xVlRPVVZzT0N0bk1GQndlblJ4Y0RBeVpXWTNZMGxHYVZSSFUyaGpWelk1T0ZWVlNEQXlkbVpoVjNKdGNEZzFiRlJYVDIxeWJIY0tZa3hCVlVWMlVEZzVUamMxZFVoNmFpc3ZSMjF4Vm5aYWNqbGpjVWg0Y25CM04xVnFMelZaWWxRNE1pczJkRTVrSzBseFpESlVPWFJQY1hGMmJtczBSd3BOTWtvclNVTnRTR3N5Y3l0emNtYzFXWFJKUjI1SFdrWlFjMGRYVjJWMGRrMXpla0Z3WkVaWlRWcHFWRk0zYW1WaVREQm5aMGR1ZFRnMlpGVk9hbTVoQ2pWWmFHRnpXbVp1V1U1cWRWWTFaM050YmpOWFJVOW1RMmxHWVRJMlJrRjZaVXc0YWtSV2VreG9ha2x3UW1sNFZFVlhMMlV4UzIweFZuQkZabnBEWjJ3S1YzcDRPVVowY1dzMFRDdG1hblI0Y2xSRWVXMWpjbmRPVmpCeFFqVkNhMGhMUkZwRmRYZEpSRUZSUVVKQmIwbENRVWhDVVRreFF6ZHVOMFJWUm1FcmRncENObUV2WjJOSU5XOTRjbGRJYm1VM1UxTXJSVzkwY0V0UE9DdFFLMmRJUm5waVQxcHRMMGgyV1V0NWFYZ3pVMHBXSzNadVZUSm1WVWcxYWpFeGRFTnpDa3BTZUhGV1JtZEthVXBvUVc4d09XRjJNMkZLTDB0UlkyOUVZbWhWYmtkVE1GVjFWV0pCVERaTlZ6Tm1iM1IzZWk4NWF6a3hZMVJRWm1SU04xQnpaRUVLVEUwNFNGbHRTazVHWlU1NVlVcHpabTU1YWxKb2VHRXdNek5FVkU5bGFWZE1WVXB6ZEc1T1ptdERURXBPZG1Sek9VOUtSMjQwVkRWMFVtMUNRVE16VndwdWJGTlJWaXQwWmtaNmVGcEJTMjl2ZDB4M1JYWTBOVXN3V2tkUFlYZHhZbFk1ZGl0UWMxTXdLelUwYmt4bFFrbFNWelF3Y0M4NGMzbENjR2hTWkM5NkNuTktTM1JFZEdwQlJ6bHFRVWRSYlRSNmEwdEpWa1o1YW5wMVRVOVNRekJPYlhjMmFtRTRMMFZ4TVhBMGJIQlRVVlpwUVVaalJsbExXa2huT1hGWGFHOEtibWRIY0ZOd1JVTm5XVVZCTkZCRmJGVlZhWEF4YkRadGNESndURFJSZEROYVp6SlhTRlIzWVRaMlkyVm9iMng2VERsa2ExcFFhall2YVdkYWVHdFhhd3BaZERsaWR6bGtSU3RyUldad1JVMVVWMEZ3WlhSemN6VXZkMDU2VDFWalZDdEZhMDg1UzNGdGRsSkdXWE00YzJwcVpGSlNaMjkwTjFWbk1GZGhVRnBVQ2todFFtWm5abVpzWnpKeVdVZGphekZSVmxGTWJEZGlibUZWUkhad1QyWTBTRkpTV2pWSE1qaHFTRTlSZGpCaFNqWXZUelZ4YkdORFoxbEZRVGN6UnpZS1dGVkRWVFpYUWtRM09FbHNSWHBtVFZOb1JsSjFObXhCY1RCSlJVOXBSaTgzWldodWVVdHFiMkUzWnpOQ2QyVmxPRzB2VEVaWmRHZEVVR3RuWVVkVlJRcHZVVzFEVmxoMFRtNW1LeXMyZVZOR1VteG5aVEZEVWxJclUyNVZWMHBzYzJkblJUWlZibkJrZUcxTGJFaEZiMVZsWWt0cU0zZGtTemc0WWxZMWVDdE1DbmxzWmtobWRETlpkVTFVTDNWVWNFVjBhM1V3VGpoSVpGWTROV0ozUmtVNWFFTjZPRUZxTUVObldVVkJlVTQ0VUZWQ1RIWmtNM1F5Ym5wSlVrdEtiM2NLZFZoWFVXY3ZURlZ3ZEdGbE56Z3hNbWt4V25oV1MyNTViVloySzBORmVsRnBNbkZwWVRkVGF6WkZWMWhzTDNjclNHWlVSWFEzSzNKMmMzRTFOMjlDUndwdFVWaEZNRlZDUkZCaWRISXhjMHRyYzFaaVZXOTRjMnAxVWxoMU1sUlNLemRVVm5Gc1NXeHROelJDVDBWc2FsaHpZM0l6ZG5wbFlWWjVaV2d5VlZVNUNrUTVja2x0TTBKVVZ6WnJibkpYWlRCaGJuaDJXa2RyUTJkWlJVRjZORVV3Y1RkdVlrVjNRM012TW5VeGNUVnFkMlp6VUZKdVFuTkxaM2d2Tnk4NVEyMEtVME4yWmxCVFRUaEJTbGwwWjJaalZuaFROR2w0YWtnMU9VZFJNWFJMVEU5NGVYZDRaV2hyV1ZrM1QwNDFZMUJLYUM5UE5FTTRja3RETWpnemNXVjVWQW92TTNCSE5qbEdSakJVV1U1MGNERjNZbmxNYTBwMFZIZElTMFZXU1VjelZGQklRMm96TkhOelZreDJUV3BrTkRCVEwwMUNXa1Y1Y1c5SWVXbFJUMFp0Q25WV1VYVjBWbFZEWjFsQmRUQkhPRU5wWkU5c1ZrcEdiV0ZZTW5VclJUZE9TVkJPVnk5Rk1YVnRiVWt2VFhsV1FXUllVemRNVERCVGEycGtlRlIxUWxNS1lYTmxVMlJuVXl0T2VUUm5lbVZpWmtoRFJGVnROVXRhY0V4MU4zUkNNVXRyTkZObk0xSnNRVmhXU0ZOMlRHVnZSblJFVTBGWVNVWndNRzVhVVVkeFZBcFFlalpYVVRONlNHMXdTMlZtTVZjMmF6UnRkM1JEWlc4NFdpdFpTVEF4VkZsMU5WZDNPVTlwV0N0NU5IQmhUMEZVUkZCbFpHYzlQUW90TFMwdExVVk9SQ0JTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFvPQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/tectonic-network-operator.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQphcGlWZXJzaW9uOiBhcHBzL3YxYmV0YTIKa2luZDogRGFlbW9uU2V0Cm1ldGFkYXRhOgogIG5hbWU6IHRlY3RvbmljLW5ldHdvcmstb3BlcmF0b3IKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCiAgbGFiZWxzOgogICAgazhzLWFwcDogdGVjdG9uaWMtbmV0d29yay1vcGVyYXRvcgogICAgbWFuYWdlZC1ieS1jaGFubmVsLW9wZXJhdG9yOiAidHJ1ZSIKc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBrOHMtYXBwOiB0ZWN0b25pYy1uZXR3b3JrLW9wZXJhdG9yCiAgdXBkYXRlU3RyYXRlZ3k6CiAgICByb2xsaW5nVXBkYXRlOgogICAgICBtYXhVbmF2YWlsYWJsZTogMQogICAgdHlwZTogUm9sbGluZ1VwZGF0ZQogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBrOHMtYXBwOiB0ZWN0b25pYy1uZXR3b3JrLW9wZXJhdG9yCiAgICAgICAgdGVjdG9uaWMtYXBwLXZlcnNpb24tbmFtZTogdGVjdG9uaWMtbmV0d29yawogICAgc3BlYzoKICAgICAgY29udGFpbmVyczoKICAgICAgICAtIG5hbWU6IHRlY3RvbmljLW5ldHdvcmstb3BlcmF0b3IKICAgICAgICAgIGltYWdlOiBxdWF5LmlvL2NvcmVvcy90ZWN0b25pYy1uZXR3b3JrLW9wZXJhdG9yLWRldjozNzU0MjNhMzMyZjJjMTJiNzk0MzhmYzZhNmRhNmU0NDhlMjhlYzBmCiAgICAgICAgICByZXNvdXJjZXM6CiAgICAgICAgICAgIGxpbWl0czoKICAgICAgICAgICAgICBjcHU6IDIwbQogICAgICAgICAgICAgIG1lbW9yeTogNTBNaQogICAgICAgICAgICByZXF1ZXN0czoKICAgICAgICAgICAgICBjcHU6IDIwbQogICAgICAgICAgICAgIG1lbW9yeTogNTBNaQogICAgICAgICAgdm9sdW1lTW91bnRzOgogICAgICAgICAgICAtIG5hbWU6IGNsdXN0ZXItY29uZmlnCiAgICAgICAgICAgICAgbW91bnRQYXRoOiAvZXRjL2NsdXN0ZXItY29uZmlnCiAgICAgIGhvc3ROZXR3b3JrOiB0cnVlCiAgICAgIHJlc3RhcnRQb2xpY3k6IEFsd2F5cwogICAgICBpbWFnZVB1bGxTZWNyZXRzOgogICAgICAgIC0gbmFtZTogY29yZW9zLXB1bGwtc2VjcmV0CiAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICBydW5Bc05vblJvb3Q6IHRydWUKICAgICAgICBydW5Bc1VzZXI6IDY1NTM0CiAgICAgIHZvbHVtZXM6CiAgICAgICAgLSBuYW1lOiBjbHVzdGVyLWNvbmZpZwogICAgICAgICAgY29uZmlnTWFwOgogICAgICAgICAgICBuYW1lOiBjbHVzdGVyLWNvbmZpZy12MQogICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAtIGtleTogbmV0d29yay1jb25maWcKICAgICAgICAgICAgICAgIHBhdGg6IG5ldHdvcmstY29uZmlnCiAgICAgIG5vZGVTZWxlY3RvcjoKICAgICAgICBub2RlLXJvbGUua3ViZXJuZXRlcy5pby9tYXN0ZXI6ICIiCiAgICAgIHRvbGVyYXRpb25zOgogICAgICAgIC0ga2V5OiAibm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyIgogICAgICAgICAgb3BlcmF0b3I6ICJFeGlzdHMiCiAgICAgICAgICBlZmZlY3Q6ICJOb1NjaGVkdWxlIgogICAgdXBkYXRlU3RyYXRlZ3k6CiAgICAgIHJvbGxpbmdVcGRhdGU6CiAgICAgICAgbWF4VW5hdmFpbGFibGU6IDEKICAgICAgdHlwZTogUm9sbGluZ1VwZGF0ZQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/etcd-service-endpoints.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHYxCmtpbmQ6IEVuZHBvaW50cwptZXRhZGF0YToKICBuYW1lOiBldGNkCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogIGFubm90YXRpb25zOgogICAgYWxwaGEuaW5zdGFsbGVyLm9wZW5zaGlmdC5pby9kbnMtc3VmZml4OiBkZXZjbHVzdGVyLm9wZW5zaGlmdC5jb20Kc3Vic2V0czoKLSBhZGRyZXNzZXM6CiAgLSBpcDogMTkyLjAuMi4xCiAgICBob3N0bmFtZTogc29tYWxsZXktZXRjZC0wCiAgLSBpcDogMTkyLjAuMi4yCiAgICBob3N0bmFtZTogc29tYWxsZXktZXRjZC0xCiAgLSBpcDogMTkyLjAuMi4zCiAgICBob3N0bmFtZTogc29tYWxsZXktZXRjZC0yCiAgcG9ydHM6CiAgLSBuYW1lOiBldGNkCiAgICBwb3J0OiAyMzc5CiAgICBwcm90b2NvbDogVENQCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/01-tectonic-namespace.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQphcGlWZXJzaW9uOiB2MQpraW5kOiBOYW1lc3BhY2UKbWV0YWRhdGE6CiAgbmFtZTogdGVjdG9uaWMtc3lzdGVtICAjIENyZWF0ZSB0aGUgbmFtZXNwYWNlIGZpcnN0LgogIGxhYmVsczogICMgbmV0d29yayBwb2xpY3kgY2FuIG9ubHkgc2VsZWN0IGJ5IGxhYmVscwogICAgbmFtZTogdGVjdG9uaWMtc3lzdGVtCiAgICBvcGVuc2hpZnQuaW8vcnVuLWxldmVsOiAiMSIK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/04-openshift-machine-config-operator.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHYxCmtpbmQ6IE5hbWVzcGFjZQptZXRhZGF0YToKICBuYW1lOiBvcGVuc2hpZnQtbWFjaGluZS1jb25maWctb3BlcmF0b3IKICBsYWJlbHM6CiAgICBuYW1lOiBvcGVuc2hpZnQtbWFjaGluZS1jb25maWctb3BlcmF0b3IKICAgIG9wZW5zaGlmdC5pby9ydW4tbGV2ZWw6ICIxIgo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/ign-config.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiBpZ25pdGlvbi13b3JrZXIKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQp0eXBlOiBPcGFxdWUKZGF0YToKICB1c2VyRGF0YTogZXlKcFoyNXBkR2x2YmlJNmV5SmpiMjVtYVdjaU9uc2lZWEJ3Wlc1a0lqcGJleUp6YjNWeVkyVWlPaUpvZEhSd2N6b3ZMM052YldGc2JHVjVMV0Z3YVM1a1pYWmpiSFZ6ZEdWeUxtOXdaVzV6YUdsbWRDNWpiMjA2TkRrMU1EQXZZMjl1Wm1sbkwzZHZjbXRsY2lJc0luWmxjbWxtYVdOaGRHbHZiaUk2ZTMxOVhYMHNJbk5sWTNWeWFYUjVJanA3SW5Sc2N5STZleUpqWlhKMGFXWnBZMkYwWlVGMWRHaHZjbWwwYVdWeklqcGJleUp6YjNWeVkyVWlPaUprWVhSaE9uUmxlSFF2Y0d4aGFXNDdZMmhoY25ObGREMTFkR1l0T0R0aVlYTmxOalFzVEZNd2RFeFRNVU5TVldSS1ZHbENSRkpXU2xWVFZWcEtVVEJHVlZKVE1IUk1VekIwUTJzeFNsTlZVa1JXUlU1RVVWZGFTRm93UmpOVFZVcENXakJzUTFGVlVrSlVhMHB1WVROR2IyRXliRWhQV0dOM1VXdEdVbU13V2tKU1JVWjBWRlpLU21Rd1ZrSlhWVkpYVlZaR1RWSllaSE5rYlU1SVZtNVZTMWw2U205alJuQjFWVmhvUmxKRlJsQlJiV1JQVm10S1FsUldVa05OTUhBeVdXcE9VbVJHYTNsU1dHUkpZVWRPVDFSV1VtNWxSVEZGVWxSV1RsWkZNVFJVYm5CS1RXeGtiMWt3TlU1aGJXUTBWRlZTUmsxbmNFNVdSVEUwVkc1d1NrMXNaSEZSVnpGT1ZXdHNNMUpWUmxwU1JscFNWVlY0Um1ReWVESlpNR1JYWkZkTmVXRklRbUZpYkVZMFVsVlNRbFF3U201VWJGcERVVlV4VlZGcVRrdGtiVWw2VlZoU1drMXJWak5EYldSdVVsZHNUbEZVUWtoUk1VNTRVakZPU2xscVRrVlZWVlpEVVZaR1ZsRlZSVEJUVlVwRlpEQkdNMW95WkVaVE1FWjJVMVZLUWxWVlRqTlNSazVRWTJ4d1ZtUkVVWHBqVjA1dFMzcEdiMU5zVWtoamVsRkxVVk01U21OR1dUSk1lbEl5WkVkYVJFOUZWWHBhYmxFMVZsZGpkbEZxVG5Ga2VrWldUV3BhYjFsVVRqRk9lbVIwWkRCc1VsSkdjRTVSTWxZeFZXMVdlbFJIZEV4ak1qbHFZVmRPZG1GRE9XeE1NbEpNVTFGd1ZGRlhkRTlOVlVwclZraFdUVko2YkZWTlZsWlpZVlJvWVdReFRrNVhhbVJWVkVWb1Exa3hTa3RSVlRCNFpIcGtWR05yVlhsVmEwcHNTekZDYzJGclRraFRiSEJvWkZWU1ExcFZjRUprYkdoMVpERndXRU50ZUd0UlYwWklZakZHV21Jd1dqWk1la1pUVVd4V1ZHVkhaekJSTWpWRlVURldWMlJYV2tSa1IxSlBWMWhrYUZreFJqTlhha0p0VkVoQ2FWWnNjRzlWU0VaYVZETndiVTVIYkZka1NFWnBTek5vY2xJeFkwdGthMmQ1VmtkT1NsWXpaRVJqTTBwWlpWVnJlazVzUlhkU2FUZ3lWV3BaTTAxV1NqVlNWMDVXVmtaT1RWZERPRFJoUmtVeFdXMTRVbFF3ZEV4TlEzTXpUVVJTZVdKWGFFaFBTRUV3WlZac1YxRlVhRkJXVVhCS1VYcGtibE5ZU1RWT2EyUTJUbXhzUkZRd1NubE5iVlY2VmxkV2VrMVdjRkZTUjFwdFRXcG9ObUpGVmxCWFdGWkZUVEo0TUZKNmFFMVRNbU55WlZSUmVGWXdUbFJpUkZab1ZGYzVlazVYY0ZSUk1VSkZRMnRHYmxSVlNrSlJWV1J4VlZkd1ExRlZNVUpPUldSQ1RWWldhMUpJWkVaUmFUa3pWVlZXUW1Rd2JFUmpSVkpDVlVWS2JsUnNXa2xWYXpGRFVWZFpORkpWU2xWUlZWSkNWVlZuZGxSVlNYZFNNRVY0VmxkUlMxSkhaRkpXTUVwRFZXdHNjazlYZHpOTlJGSm9WMnhhVUdKRlVrSlViRUp6WVVkd2JscHNUVE5WTUZwUllXdEdUMUZ0WkhKalYyaHlZVlZqTldSNlFrTlJWa1o2VW10R1FsUXdUa0pWVlZaQ1ZsaE9lVkpSYnpGTE1WcFdVakZhU21OWFZURlZiV1J6WVZWVmRsRnVTbTVXZWs1cFpWVTFWVk5WTldGUFF6bFNWakJTVkZrd1ZucGxWVEYyVm1wcmNrc3lXbGhpYTJ4cVMzbDBSVTVZUW5OT1J6bEZXbFJhTkdKWFpFdERibFpSV25wV1ZXTkdVa3hhVmxKR1ZsWk9XbUpJYUhoalIxcDBXbXRPU0ZaRVJqVlRWRUpMVVZoYVVsVnRkelZqUlc5NVZHNU9ORlZJY0c5U1V6bEdVVzV2TTFKV1dYcFdNRVZ5V1ZSc1FsZEliM2hUUXpoTFQwZGtkbVZFYkVObGFrVXlWa2hzVW1KWVdsVlZNa3B5VDBWR1NsVXhUbTFWYlhSVVUxZEdRMk41ZEhCbFZFcFZXbGQzZWxWcmVESlZhM2QzVERJMWRXVkdSbnBVUlhoR1lWUm9jRmRyV21GWldGWkRaSGR3VldSWFdsZGxiR3hOVWxkc1FscERjM1pOVmxKSVZHMVNSbHBHYUhKWFZFcHBUMVJhTUdJeFJrcExNVVV5VTBVMWFFMXRZelZVYTAxM1dtMVNTRlpzUW1sa1JsSjFUbFU0TkZSclduQmhNakZ5Vmtoa1dVTnRkREZoTURnMFRtazVUVmxYYXpKTE1FNUVUVzFXUm1GdFpIRmxTRTR5VkVWYWJsWXhXWGxTVkd4WlZsWkJNMDlHVGt4a2VYTjJVa1V4ZG1SR1ZUUk5TRmt6VDBad1ExRXpiSEZTYmtKVVdUSk9kazVVWTB0V1JtTjNWak5zUTJJeWVEUlhiR1JVWW01Vk0xVkhNVzVRVkRCTFRGTXdkRXhUTVVaVWExRm5VVEJXVTFaRmJFZFRWVTVDVmtWVmRFeFRNSFJNVVc4OUlpd2lkbVZ5YVdacFkyRjBhVzl1SWpwN2ZYMWRmWDBzSW5ScGJXVnZkWFJ6SWpwN2ZTd2lkbVZ5YzJsdmJpSTZJakl1TWk0d0luMHNJbTVsZEhkdmNtdGtJanA3ZlN3aWNHRnpjM2RrSWpwN0luVnpaWEp6SWpwYmV5SnVZVzFsSWpvaVkyOXlaU0lzSW5OemFFRjFkR2h2Y21sNlpXUkxaWGx6SWpwYkluTnphQzF5YzJFZ1FVRkJRVUl6VG5waFF6RjVZekpGUVVGQlFVUkJVVUZDUVVGQlFrRlJSRlZ4TjFjek9IaERXamxYUjFOWFEzWjFjM1JoVFVkTlZEQTBkRkp2YUhjMlFVdEhla2szVURkNGNXdzFiR2hEUVZKbGVYUTNNbTQ1Y1ZkUlVscHpSVEZaYVVOVFVYVlVabGhKTVc5ak9FNXdVMDAzSzJ4TlRIZHFNVEpIT0hvelNURlpWRE14U2toeU9VeE1XV2N2V0VsalJYaHJlbVpDU1RreU1FTmhVemd5Vm5GdFMwOXdTVGtyUVZKSVUwcENaRWxpUzFKSk1HWTFXU3QxTkhoaVl6VlZla3REU2xnNGFtTkxSMGMzYmtWcGR6aDZiU3RqZGtGc1prOW5jM05OU3l0eFNuQndTV0pXWTJJeWFWcE9WSE4zTldreVlWZzJSa1JOZVVNcllqRTNSRkZJZWtKSGNFNWlhRnBaZUhWdlJWSmFWbEpqYmxsamRHZEplblZ2Tm1aRU5qQm5ibWxZTUdaV2RuSmphR3hQYm5WaVFqRnpVbGxpYkc5UU1uSTJWVVV5TW5jdlpIQk1TMDlHUlRWcE4wTkJNRnA2VGtKRlVsbzVOR05KUzNWdFNVZzVUV2xLY3pGaE5tSk5aVGc1Vms5cWFrNVdJbDE5WFgwc0luTjBiM0poWjJVaU9udDlMQ0p6ZVhOMFpXMWtJanA3ZlgwPQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/kube-cloud-config.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiBrdWJlLWNsb3VkLWNmZwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KdHlwZTogT3BhcXVlCmRhdGE6CiAgY29uZmlnOiAiIgo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/kube-controller-manager-secret.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiBrdWJlLWNvbnRyb2xsZXItbWFuYWdlcgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KdHlwZTogT3BhcXVlCmRhdGE6CiAgc2VydmljZS1hY2NvdW50LmtleTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGYjNkSlFrRkJTME5CVVVWQmIwMW5ZM0ZuV0ZkR2VVbHdVbFkyWkVKb1VXTnJhVTUxTUhJMk5tUTFOVFpLTjFNd1lXaFNOR0owTW5Ga1ZYUjBDbWxMZVdKRGF6Sm9ha3R5UzFreFVIaDNWRmRZV2tJelFWRk5WVVl6WkdkalpISlJXbUpFUlhkcFJqZExSMU5sWkZOVFpIVmpibG9yUldsMWREQndVSFVLUVhSQmNrSkRMek42VmswemNHWk5kbWQ2ZEZsc2JIUndWWEU0YnpkQmNFOHpZVEZRTUU5a2JuRlBTRFZLWld0RmIxZHhNRko1VDNocVkwbGxaV0Z5VEFwUU1HNHdMMkZyYmt0NVQySjRUa0p6U2xsWFRqTkVWVFZNVkVoTlpWUmtNRXcxTjFwcWFFSlJORTByUjIxT04zWlVXR1YxYURRM1JFZzBkMnhTSzNoSkNtUjBVRWRqYTBONE5tZFNlRkZoVURJM1l6TlZVRXBDUVVKc1NqZDVTVWRwY2t0eUwzcFFWMUJyTW1GMlR6TjNXRmh0VFc1WlQwdDZiWHBJZFVKNk9YSUthR1J5YkZabE9ISnRVbEozV1hVMmRsRnlOMEZzZFdOTE1saDZhREV2TWxWWmVpdE9jVkZKUkVGUlFVSkJiMGxDUVVaVWIyMVZjVzh2YlVWR1NqSndPUXBDYzNaWkwzbFhiVVpNWVhwQ2RVbzFSRTlYTDBweVFVY3dNM053UlZGWlZYRlhiazlVWVhCd1UxQkdlVzFMVGxGQ05VbFVZbFJ1ZDBKRlIzZFRkVXhZQ21GSFF5OTRPVlU1VUZCWmJuRlBPRlF6Y0hCMFpXOVNNRlY1ZG1oaFZrTldNSFJKYkdkVVNXRTJka1JEUXpsa1ZqQkVaWEowWVV4b056Uk5PVUZaTVRFS0wwTlNVbXBLT0RCT1lXZFpabTB3YnpJNGMzSkJUREkwSzJWR01GWnFhV1pwV0ZFeU9YRklORmRTYWxkTVpGSlRlRW80TVZCalN6a3hjVGhMUkdGcWJRcDNPRGMxUmpOdFFrSjBVRVpvVkVsSGNUTXliMjB5VkhKUVpGVm5USEY2WlhOMU0wRlJPSGh1VTJRM1QyZG9laXN2Vms0dmRrSkJWMnRtZVhSbksyaEVDamhxZVZoNlNFdFpSelZyZWpKNk1rZHhPQ3R3VlhweFlXNVlabVIwYjNWbFQxSndVMmQ0YzJzMGNtTk9WVXR4YkhoeE5XeG5hbkpXVUdGc1dqbGlUVEFLUmxoSE1GVk5hME5uV1VWQmVtZEpaaXRYTjBaUFFrVnRRWFJhWVdWbWJsaHpTVmhGUkhsQlRqUkVaVTFpWldOdU9YSnhaVkZ5U1ZGeU5tNUVhSGhMV1FwaWFFTldjbkZyVVRWTVRrNVpaalpUTmpCM1UyUjRabWhtU3pabVJXbHRjV3BMTld3MmRXcFBUMHRyTjNOMGRFUnJRMWczUzFVNU1sb3hSWEJuUjBGdkNsVjNiVkZZZDBOU2Ntc3pNVWhPWnpjNFMwaEVZVzFvT1V0WlIzb3JWRVZEYTB0RWRtdzFSRWhxYldaalozcFVUa3MzUjBwWk5uTkRaMWxGUVhnNGVHVUtiR3BNY2pBM1lYWjRRV2MwV25wTmIxQm5jaXRwYkVZdlFraDFVWFJ0S3pGQmFVSldUeXRCWmxOUlRFUnlhMmhQYVc4MGEySmpNWFZJTkV4YVkySnFMd28xVWxodVFXTldOMjgwZFRSeWJVRk9OMnd3ZUVwclRUSXhhMVZXVUdaWFJGZExSRTFDYzBsaGRsQmxZMDlxYWk4NFFVOUxUM0U1Tmt0VFF6TktPVlp1Q21WdGJtWkZOemMyY3pCdFMyZHlVbVZFU0dKdlN6bHFVV293UnpKdlJVTm1VaXRLVEdZdmMwTm5XVUpsYUM5clYwa3lPV0ZhTDNkVFVucDRhbEp1VG1zS1RFTXliMXA1VVZjMVJXRk1Wa0YzZUcxeVluVnJabXMwVFcxV2JuZFBLM3BoWldKV2NTOTZNV2hTVjFsU2VFbDROazFzT0ZoeVpqUXhPRkpyZFVSMmNncHlSV1JYVVZKblNWSm9aaTh6WWl0dFJVNWxjM2REY25OQ1FVWlJVMFVyV1hOM1dFNXZiSGN6UzAxNU1sQk1PV05xTURReGMwNWliVk5tT1VVNVQyeG9DbHB2WjNFck5rOXRlRU5CWWtWUmNXODFlVWhPVjNkTFFtZFJRMmxvUkRRM09XeGxWVGh1YVhRdkwwaENTQzhyVURFcmJVMUpVbGx6VlRCWk1qTXdOV2NLTWtkUU9GQkRWekpuWVZWb01HNWlkMmhSV210MWEwUnNTMDAwZFdwemFUTlZjMWRCZWpFemRXWmxlRkJEY0hKTFZrMTBlREJEU2l0Nk9YRnFaREY2VEFwaWNVRkhjakJUU1dsUVFuVXJORnBVWlUweWNsSnhhMkpaZURCWlRHRkljVVpOZGpkb09VUnpiazVyY0RCQlZHZEtjV2hpV1doVWFrMW9VMWMzV0cxcENsRjRVV1Z0VVV0Q1owWjNVRXQzVkhSMGVFOUJkblZLZGpseWMzZFJTMEpaVEZoak1IZFdRbGQ1WTJWMFIwWTBSMUpzVEM4NVptOVlZMU5KVVZreFRGQUtVVkE0ZUZBelRXVldibUU1WTBwNVZWUjRXWGhXTTAxeFExcFFRVUpJUTA5V2R6ZzJaMWxEVmsxbVZsbFNaMGhPWkdVeVNFZDVZV2h6V21GTldFWjJVQXB6ZUhaaEwxTkhTRXRvZVVjeWFVOTZaa3B6V2tSc2FWb3lRM0ZuVml0TVUyRkJOM042Y2tFemJVUlNkblJ5Unl0dVRtMXpDaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2c9PQogIHJvb3QtY2EuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRFZFTkRRV1pIWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRnRUVkpKZDBWQldVUldVVkZNUlhkc2RtTkhWblVLWXpKb2NGcHVVWGhGUkVGUFFtZE9Wa0pCVFZSQ00wcDJZak5SZEZreVJYZElhR05PVFZSbmVFMUVSVFZOVkUxNFRucEpNbGRvWTA1TmFtZDRUVVJGTWdwTlZFMTRUbnBKTWxkcVFXMU5Va2wzUlVGWlJGWlJVVXhGZDJ4MlkwZFdkV015YUhCYWJsRjRSVVJCVDBKblRsWkNRVTFVUWpOS2RtSXpVWFJaTWtWM0NtZG5SV2xOUVRCSFExTnhSMU5KWWpORVVVVkNRVkZWUVVFMFNVSkVkMEYzWjJkRlMwRnZTVUpCVVVOM1JGTlBjbHBWZERRemNXTm1LekZvU2xSSGN6UUtRUzlKY0ZZMkx6UjJkR1pET0VVelpuUTVWV2N2UWpOcWR6RlZNalpvWVROMU56ZHRkMGxSUkZwTlEyVjFVbVZ6VEd0TGMyOWphV052YUM5bEwyUkxTUXBUUVd0T01VSmtWSFZNUnpsVU1WVllhVGhhZDFOTldqZFVURWhDWTFKS1FVMHhkemRUY2tVeVVrSmxLMUJzYWtOSFNscGhkVVJDWlVwQmRsaHVkMXBYQ214a1FXRkhiMUZaYjBaNkx6RlNRbFZUZUdnMFEyNUVRMVZXZFdaRGRHUk9XWGRoWTFGM1dqQm1USEJpVmxwb1VIRlpUM3BtTkdsV2RIRmlLM2hyUjFjS2RrZ3lWR05KVjNkRGMzSlllVWt6TmxFd1JpODJValkzTVZKNVJXTlZWRk5NV0M4NGFGRTFZbXhSVDB0TE1DczNNRFJ5YldoSE9IQTBlVmxXUVRoUFZRcEpRemRuU1hJNU5rZDZObGxEVDBKeU1tVXpWV1Z6TVZwUVJHWm1Namg2YkVWUFdYVkVNMngwUnpoTVMyY3JlVFF4VjBOVGJEVmhUVzl6TldwVFExQkVDa0ZuVFVKQlFVZHFVV3BDUVUxQk5FZEJNVlZrUkhkRlFpOTNVVVZCZDBsRGNFUkJVRUpuVGxaSVVrMUNRV1k0UlVKVVFVUkJVVWd2VFVJd1IwRXhWV1FLUkdkUlYwSkNVa2xyT1d3M01EUmhXbFpQYkVSQlRsQnNhR3BuWmxNM1UwWlFha0ZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJWWE55UlFvMUsxWlZSMVpKY1dVMVVtZHNhVVV2UW5KblZ6TmllVTVVU1U1YU9DOVJWMFJUWTBWemVVMXZWamtySzJaWGJrbGpLeXRFTlhCc05HOUVaVFo0YldkS0NuVlFaelZVY0ZSTFpWUkZWVk5aYkhoeGNHWnRaa05IVkRGNVNUQktRWFpSVW13NWNFb3lUbk40VUhwb1JTOUZRbm8zUlZZelYwRXJZVGxCV0hveFNDOEtPR2R2ZURsQ2VqRTJWSGxSYlhaVVUySnJPRUZKVTFObVVtdFRTV0ZDY3l0cGVUSlVaV3d6VWt4MlVrd3dMMjV1ZUZGelRFeEZhVGhwV2taYVlYVkNkd3BVZFdaV2VsbE1SV2xCWkNzdk1WUkhUbVJGWkZocldUSmlPVFowYjFGSksxRTJTRTVoTW1jNVRrTXdabVJIVmxCaWRGUnVOVTg0VGtacGEyMXJWSGRZQ210MWEwODROaTlNWVdrMkswTkRNbVZGYW1kcWVITjJURVpuVjFZeVJUbFlWVkEzT0ZOTGR5c3ZSRTF2ZEZVNE1IWTNPRnBDUTNscVJuQlRZMk52TlRjS1ZGY3dWM2xDYjJ4NFdsZFRiblUzVUcxblBUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICBrdWJlLWNhLmNydDogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUk5SRU5EUVdocFowRjNTVUpCWjBsSlIxWXZjbWgxWmpWeFExbDNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRLYWtWVFRVSkJSMEV4VlVVS1EzaE5TbUl6UW14aWJrNXZZVmRhTUUxU1FYZEVaMWxFVmxGUlJFVjNaSGxpTWprd1RGZE9hRTFDTkZoRVZFVTBUVlJCZUU5VVJYcE5WR041VG14dldBcEVWRWswVFZSQmVFNXFSWHBOVkdONVRteHZkMHBVUlZKTlFUaEhRVEZWUlVONFRVbFpiVGwyWkVkME1WbHRWWGhGUkVGUFFtZE9Wa0pCVFZSQ01uUXhDbGx0VlhSWk1rVjNaMmRGYVUxQk1FZERVM0ZIVTBsaU0wUlJSVUpCVVZWQlFUUkpRa1IzUVhkblowVkxRVzlKUWtGUlEzTTBXa1l4VTAxcFdHNVhPRmdLY25rME1tdFZiRGxtTUdsNFNGRk1TRFJtZFUxbU1GcE5UVkpRZWtaYVpHdFBObGw2WmpadU4ycFRXbE12TDJWWVZqaDFhekJwTlhodVZ6RnhiMVpLV1FvNFNtcEJRa2hCV1VFeVowcHdTMHBSUmpSNFUyUm9kWE42U0ZsUmFGSTFORlZaVGtwT09FMTRhVFpGWWsweVVFTmlXWFV3ZEU1YVlXdENZMFZFV2xKNENtbzJZVGxLYVRCbFNtbEdjVFpFVWtGTVdURjBkM1JRYUhkc1ZEZFlNbU5tYTJOakswdFZiWGMyZVRaSmNraG9ZbEpuYVVSTUwzTjZZbkkzTW14SVMxUUtVa3MzTUhoV2JXTjVaR3BLYWpoRllYazRlVFpVZFU1d2QxVjFiVkY2VWtWU2NHSkdaVzEwWjI5UE0yaDRVMjFsZDI1MGVGVmFUMEZ0UmtOdU5GUkRaUW92VTI5VGMyY3hNMVpJUzNaNmRVUkhla04xZEd0RlJsQjRTMlZIU1hwcGRTdEhPRUUxV2pkRFJqSnVMM1Z1ZWtnellrVk5MeXQ1VUhkblVVNVpMMW8wQ21nMmMyaElWMUpLUVdkTlFrRkJSMnBaZWtKb1RVRTBSMEV4VldSRWQwVkNMM2RSUlVGM1NVTndSRUZRUW1kT1ZraFNUVUpCWmpoRlFsUkJSRUZSU0M4S1RVSXdSMEV4VldSRVoxRlhRa0pTU1dzNWJEY3dOR0ZhVms5c1JFRk9VR3hvYW1kbVV6ZFRSbEJxUVdaQ1owNVdTRk5OUlVkRVFWZG5RbEpKYXpsc053b3dOR0ZhVms5c1JFRk9VR3hvYW1kbVV6ZFRSbEJxUVU1Q1oydHhhR3RwUnpsM01FSkJVWE5HUVVGUFEwRlJSVUZDYWtwb01Xa3hURzlvT0d4RlMwUkhDa1ptYVVFNFJHZG9Xblo2V1ZwdVR6TTJTMnBoYURkS05reHBlbHBMTVZoMFdUbE1kMFpaWWpJeWVFdHhhWE51U0daWVJXMUxRVUo1UXpVMEwxZzJSa0lLY0ZSMFQxbFlObmREVkN0a2FqWnRRbHBaUjA5TlNTOXZhVVZKUTBob05WcGxVVTFRWTBka1YyRkxXV3RHTmpOellWTnZOVmhhWkRSblRrWmpTMDk0VEFwV1RXeHZRa2xHY1RodWFqTXdLMHczTm1jNWIxWkpkREZ5VG5wMmNtdEtSMnhqYTJWWGMybGhZMEpwWkUxWWNtRkRSRGxrYkU5TGFuZzNXV28yYlZGT0NsVTVNU3N2VEdoTlRTOWhZMEpsUTJWT2FuQk1UMEpVZFcxUWJtWjRjWE5SZURaTGJ6QXpNREZRWVhWSlRUUnZaSE5NUTFCeFFXMUZjbFppTlVkVVlVOEtRaXN4WkNzMFIwZHlkVFJ2WWxsdlRqWnllR0UyZEdVeVpVVTBUMk16V0dSa2RFMXBaSGN3ZFc4dlRqbE1hRk13ZVhkTFMyRmtORk56YUdKeFJHNUVWd3B5VEM5dGNVRTlQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAga3ViZS1jYS5rZXk6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmNGRkpRa0ZCUzBOQlVVVkJjazlIVW1SVmFrbHNOVEYyUmpZNGRVNXdSa3BtV0RsSmMxSXdRM2dyU0RkcVNEbEhWRVJGVkRoNFYxaGFSSFZ0Q2swekszQXJOREJ0VlhZdk0yd3haa3h3VGtsMVkxb3hkR0Z4UmxOWFVFTlpkMEZTZDBkQlRtOURZVk5wVlVKbFRWVnVXV0p5VFhneVJVbFZaV1ZHUjBRS1UxUm1SRTFaZFdoSGVrNXFkMjB5VEhSTVZGZFhjRUZZUWtFeVZXTlpLMjEyVTFsMFNHbFphR0YxWnpCUlF6Sk9ZbU5NVkRSalNsVXJNVGx1U0RWSVNBcFFhV3hLYzA5emRXbExlRFJYTUZsSloza3ZOMDB5TmlzNWNGSjVhekJUZFRsTlZscHVUVzVaZVZrdlFrZHpkazExYXpkcVlXTkdUSEJyVFRCU1JXRlhDbmhZY0hKWlMwUjBOR05WY0c1elNqZGpWa2RVWjBwb1VYQXJSWGR1ZGpCeFJYSkpUbVF4VW5seU9EZG5lSE4zY25KYVFrSlVPRk51YUdsTk5ISjJhSFlLUVU5WFpYZG9aSEF2TjNBNGVEa3llRVJRTDNOcU9FbEZSRmRRTW1WSlpYSkpVakZyVTFGSlJFRlJRVUpCYjBsQ1FWRkRTRFEzTlhOVVJYVjNUVlZYZWdwbWFsWTNSM1pUUkU5MGRYVnlSR3RXVjB0S1luRXlaR05YUnpsMk9GcGlVV0ZNY1ZwWVJUUkhkSE53WWtReWVGVm1LMUpKY1VKV2RIQlBjblZzSzA5akNtMVlTRmczVTFWWVIzZGFZVWhvYVdaclFVeDVhRzVtTW1WaWFVd3ZOMk5XY1VONmEwUnVjbFp3VVZZM01XZGphVTkxTVVodE5sZHhRbVo1ZUdGUFRUTUtOa1Y1VGk5VldWWnVjVGxDTURCbVR6aHVPWEYxVjNaSE1YWlFjSEZoWVRCRVdtZE9kV0U1VDBaS2FtWnZLMkZzTjBVMmVDOUZXR3hVTmxWMVVtaE9jd294YlVKcmVVdHpkRTlpVDJGMU1uQkNRVTF1ZEN0UGN5dGpUa1pOU3paVFowdG9ZMk5RWlZWb1lrUnhORnBVUmpFd1NFTlVNMHBhVkU1UFpYVlNWRGRHQ2k5b05HbFBUekZLT0VSNE1XcE1ORWRwTXl0MkwxQlhNek5ZUVU5TGMycHBXRVFyTjNCSlJXcDNMemxvYzFWRU0xWnRWWGRhVFdKd2FuSmlURlZYWmtjS01qTnZibFZXVlVKQmIwZENRVTFqTjBKQlpYbEhOa0pWTkZKaldIWjFVWEJLUTNWM1JtRkJVM0ZXU3pCNVRuY3llRVpOZURWRVpWUnpWbWh6WlhaQk5ncGpWRmhpZFRWTFIyNUJVVGM1T1dONFZFTnZiRWQ2ZG1rd2RWRlZPVzFYYUd0TEsySlRhM05sY0ZwTVpUVmpiRlZ2ZHpscVprdDZkMkZTTTJweGRrVXdDamx4VnpaWVRrMUZXRmx2YnpSV2F6Qk9jQ3RqUm00NWNGUXhXR3R5WVZkRlRHRnFXVlUxT0V0WE1FRnliRzR3YVc5UlltRnJhVTlhUVc5SFFrRk9OR3NLWlhWNFZHSkJZMVl2VmtOMGVsRlNhbVp4YTFCb1NVWnpNakZ6WXpCT1dYWmpkREY2VDFBMlRFMVpXVmx3Vm5KRmVFcERWRUZVU1hSNGVFWnlORlZWZFFwbWRrZzJSekJHV1dGRmNXcHdiMmd4YUhWM1YwNVpTV2hLYTB4T2NtSnRRMnRDUzFodk1GQTRNamQzYVdaeGJHRnNaRlZ4Y2k5bWVVODVOMDE1WjA1SENrNXlSbVZWT1M5WlUzcHdPVFZ3WlZocFZqTlhUSE5oZG5SRVFrYzRVREpqTjJSbGRFcGlVWGhCYjBkQlRHa3JkbEZ1TVRKNlFtVkNVM2hKTVV4aU1tWUtOV2RVWmt4dmJrVXJVMmg0TDBOTmVVcHFkRVowWlVOdFZqSktiWEZpVWxOMFNFdHdURVpJUzJJeWVtSnBkV0ZvZVc4NWNHNWtkRFp0YldWR2NUUXZiQW80T1M5cVVFVkVlR296Wm1Vck1uRkZiSEpsZDIxdlRIUlRORWRTUTI1UlJucGxka1JSZVZGaE56QkhSVFZIU1c1WE5UaGhNVUpUT0RCTFR5ODBZMUZtQ25SaGJsa3dUMFJqZDB0aFlVdzBOVTF0UlUxd1dqbHJRMmRaUlVGeGNVcDNMMkpyZVhkT2NXMVJNbEJPYlV4S2IxbzJjSGQ1VVRNMlJGTnRPRlJPYjFRS2NrbEdSMXBXWnpoVFZtOUVTV2M0UmxGc2VEVlVZbU5YVFRRMlptTnZiVGx1TVdaVWRXTlZWVVF3YkZoeldHYzViRWh0VjNwdlpIbEpWbmh0VG5Cd1VRb3ljMk0xT1ZFMU1VcDZWMFF2T0dsRFZWVlVRaXRJTlUxbFRqZHllV052VlZaMlozcERlak5WZHpOQ1ZWRldkRFJsSzJvMk9EQnRhRFp1WlVSM0wzWlpDbEZ3VWxFMGRrVkRaMWxGUVdvMFZXWk5TbVYyZGxKcVRrWk5PVGRaYURob1ZVZFVSVlF5WldwRlZrdHFjRmxXUVdvM00yTm1TV3BWUTJocFR6TlliQ3NLTkU5RWJURm1WMk5QVW5jeEsxTllZbXgwV21acldWVkdPRkYxTmsxMmFIUTJjalpGWm5aNWNGZGFlR0ZZTTFSNWVYRnhjWGwwVG14UmNIQkJhVkJNTUFvMlJrbElkRTVQZUVsbVJVSldkVUZzTVdWc1JXTnBRWEV6UnpKRFJtbHBaVmhtVlZkeGFVWmhVVnBMV21wTlVVZGFLMFZzVm1wblBRb3RMUzB0TFVWT1JDQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUW89Cg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/openshift-apiserver-secret.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/pull.json",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CnsKICAiYXBpVmVyc2lvbiI6ICJ2MSIsCiAgImtpbmQiOiAiU2VjcmV0IiwKICAidHlwZSI6ICJrdWJlcm5ldGVzLmlvL2RvY2tlcmNvbmZpZ2pzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lc3BhY2UiOiAia3ViZS1zeXN0ZW0iLAogICAgIm5hbWUiOiAiY29yZW9zLXB1bGwtc2VjcmV0IgogIH0sCiAgImRhdGEiOiB7CiAgICAiLmRvY2tlcmNvbmZpZ2pzb24iOiAiZXlKaGRYUm9jeUk2SUhzaWNYVmhlUzVwYnlJNklIc2lZWFYwYUNJNklDSlpNamw1V2xjNWVrc3pVbXhaZWtwbVlWZGFhV1JYWkhOaGJrWndZMVJTTUdKWVJubGxSMlF4VFc1TmVXSlhkRzVoVkc5M1ZXeGtWRTlXYUV4V1ZGcEhUa1U0ZUZWVk9WRk5WV3hhVkZWU1JsUkdjRkpWVlhNeVRsWk9WbE13YTNkVlZFMTNWRlZPVjFkR1ZUVlNNR3hQVjFWa1JGUldVWGRPUkZKYVRWUktUbFo2U1hoU1ZrcFNJaXdpWlcxaGFXd2lPaUFpSW4xOWZRPT0iCiAgfQp9Cg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/cvo-overrides.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IGNsdXN0ZXJ2ZXJzaW9uLm9wZW5zaGlmdC5pby92MQpraW5kOiBDVk9Db25maWcKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci12ZXJzaW9uCiAgbmFtZTogY2x1c3Rlci12ZXJzaW9uLW9wZXJhdG9yCnVwc3RyZWFtOiBodHRwOi8vbG9jYWxob3N0OjgwODAvZ3JhcGgKY2hhbm5lbDogZmFzdApjbHVzdGVySUQ6IGQzMmUxYWFlLTIzNDAtNDE2ZC05YmEyLTQxNDliOGUxZGM4NQpvdmVycmlkZXM6Ci0ga2luZDogRGVwbG95bWVudCAgICAgICAgICAgICAgICAgICAgIyB0aGlzIGNvbmZsaWN0cyB3aXRoIGt1YmUtY29yZS1vcGVyYXRvcgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNsdXN0ZXItbmV0d29yay1vcGVyYXRvcgogIG5hbWU6IGNsdXN0ZXItbmV0d29yay1vcGVyYXRvcgogIHVubWFuYWdlZDogdHJ1ZQotIGtpbmQ6IERlcGxveW1lbnQgICAgICAgICAgICAgICAgICAgICMgdGhpcyBjb25mbGljdHMgd2l0aCB0ZWN0b25pYy1pbmdyZXNzLWNvbnRyb2xsZXItb3BlcmF0b3IKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLWluZ3Jlc3Mtb3BlcmF0b3IKICBuYW1lOiBjbHVzdGVyLWluZ3Jlc3Mtb3BlcmF0b3IKICB1bm1hbmFnZWQ6IHRydWUKLSBraW5kOiBTZXJ2aWNlQWNjb3VudCAgICAgICAgICAgICAgICAjIG1pc3NpbmcgcnVuIGxldmVsIDAgb24gdGhlIG5hbWVzcGFjZSBhbmQgaGFzIDAwMDBfMDgKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLWRucy1vcGVyYXRvcgogIG5hbWU6IGNsdXN0ZXItZG5zLW9wZXJhdG9yCiAgdW5tYW5hZ2VkOiB0cnVlCi0ga2luZDogRGVwbG95bWVudCAgICAgICAgICAgICAgICAgICAgIyB0aGlzIGNvbmZsaWN0cyB3aXRoIGt1YmUtY29yZS1vcGVyYXRvcgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNsdXN0ZXItZG5zLW9wZXJhdG9yCiAgbmFtZTogY2x1c3Rlci1kbnMtb3BlcmF0b3IKICB1bm1hbmFnZWQ6IHRydWUKLSBraW5kOiBBUElTZXJ2aWNlICAgICAgICAgICAgICAgICAgICAjIHBhY2thZ2VzLmFwcHMucmVkaGF0LmNvbSBmYWlscyB0byBzdGFydCBwcm9wZXJseQogIG5hbWU6IHYxYWxwaGExLnBhY2thZ2VzLmFwcHMucmVkaGF0LmNvbQogIHVubWFuYWdlZDogdHJ1ZQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/05-openshift-cluster-api-namespace.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQphcGlWZXJzaW9uOiB2MQpraW5kOiBOYW1lc3BhY2UKbWV0YWRhdGE6CiAgIyBUaGlzIGlzIHRoZSBuYW1lc3BhY2UgdXNlZCB0byBob2xkIGNsdXN0ZXItYXBpIGNvbXBvbmVudHMuCiAgbmFtZTogb3BlbnNoaWZ0LWNsdXN0ZXItYXBpCiAgbGFiZWxzOgogICAgbmFtZTogb3BlbnNoaWZ0LWNsdXN0ZXItYXBpCiAgICBvcGVuc2hpZnQuaW8vcnVuLWxldmVsOiAiMSIK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/09-openshift-service-signer-namespace.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQphcGlWZXJzaW9uOiB2MQpraW5kOiBOYW1lc3BhY2UKbWV0YWRhdGE6CiAgIyBUaGlzIGlzIHRoZSBuYW1lc3BhY2UgdXNlZCB0byBob2xkIHRoZSBzZXJ2aWNlLXNlcnZpbmctY2VydC1zaWduZXIuCiAgbmFtZTogb3BlbnNoaWZ0LXNlcnZpY2UtY2VydC1zaWduZXIKICBsYWJlbHM6CiAgICBvcGVuc2hpZnQuaW8vcnVuLWxldmVsOiAiMSIK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/cluster-apiserver-certs.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAp0eXBlOiBrdWJlcm5ldGVzLmlvL3RscwptZXRhZGF0YToKICBuYW1lOiBjbHVzdGVyLWFwaXNlcnZlci1jZXJ0cwogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNsdXN0ZXItYXBpCiAgbGFiZWxzOgogICAgYXBpOiBjbHVzdGVyYXBpCiAgICBhcGlzZXJ2ZXI6ICJ0cnVlIgpkYXRhOgogIHRscy5jcnQ6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJVZWtORFFXcGxaMEYzU1VKQlowbEpZVnBhYW05alZqRkdja2wzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkTFJFVlNUVUU0UjBFeFZVVUtRM2hOU1ZsdE9YWmtSM1F4V1cxVmVFVjZRVkpDWjA1V1FrRk5WRU50Um01YU0wcHNXakpHTUdJelNYZElhR05PVFZSbmVFMUVSVFZOVkUxNFRucEpNZ3BYYUdOT1RXcG5lRTFFUlRKTlZFMTRUbnBKTTFkcVFrTk5Va1YzUkhkWlJGWlJVVXhGZDJocFlqSTVNR0V6Vm1sYVZFVjBUVU56UjBFeFZVVkJlRTFyQ2xreWVERmpNMUpzWTIxR2QyRlROWFpqUjFaMVl6Sm9jRnB1VVhSWk1uZ3hZek5TYkdOcE1XaGpSMnQxWXpOYWFrMUpTVUpKYWtGT1FtZHJjV2hyYVVjS09YY3dRa0ZSUlVaQlFVOURRVkU0UVUxSlNVSkRaMHREUVZGRlFUVkhXV2hxTTBWSVQyOTFTa3RCVGxoV1owWnNjWEF6U3pOWmMwZzJVVkI1WjNBdk9BbzFXREpVTmpsRU4xVndlblJEVkVWS01YSTNVVmxIUVV0TFMzRmtiVXRPYm1ZMVUzVjZRWGgwUVdaNlltTjZVekpQYUhkU2QxRnliVVZ6WldoVVNVMVFDa3BhV2t4MU5DOUJTMGcyVjJOWUwxSnBVRE56VkhCUWFGRmhhMHN5SzBoaWVGRktabU5UT0VOVWRXSnJORzlRTmxwV2JIbDVORzVWWkdaTVl5OUhTVzBLVEVac1p6bGhPVWxDY0hwNFNIWm5kWEl4ZG5rM1lXbzVaVEpHYUZaaFV6WjVkV1kyUkhSeVoyVkpSSHAzZVZwdWNUZHdTVkIzWkZsVVZ6Tk5OMHh1YkFwU2JsWlJhMmhVYjJ0M2MzSXpSbkpYZUVKQ2IxQjBSV05TWVhRMVRUQkljV2xXT1haR2VrNUxZbmRRYUV4R2RsRm1PSEJxUkhwU1RqVmtSM1JGZEVwQ0NsaE5ZM2d2VDNscmVVWmxiWEkwVGtreWJUY3pUREI2UlRjMFFXeFBXRlZPYzJwa1VUUnhiMlZtWW5SeE1UUmpWemxSU1VSQlVVRkNiekpOZDFsVVFVOEtRbWRPVmtoUk9FSkJaamhGUWtGTlEwRnhVWGRFZDFsRVZsSXdWRUZSU0M5Q1FWVjNRWGRGUWk5NlFXUkNaMDVXU0ZFMFJVWm5VVlYzY2tRd01URkxUd3BuWW1sWVRWRlZUM3BRVEZnemNVa3ljMUJuZDBoM1dVUldVakJxUWtKbmQwWnZRVlZUU2xCYVpUbFBSMjFXVkhCUmQwUlVOVmxaTkVnd2RUQm9WRFIzQ2tSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGRVoyZEZRa0ZJV0djd2JFSTFSVmhLWXpkbFRXbEZRMlF2Vms1b1ZXRndOMm95VFcweFFWRnJOMUkyU21nS1RWUkhlRkZuUkU4MlJqUkJMemhQUlZJMk5rczFNV1V3V0ZOemJuZERXRzA1U1VKMFZtcDFiak5QUlV4bE1UaFVSazlpY0VsMVMydEhPRVJoZDBRNFl3cHBaMVZZWlROU1IwZHNabnBxY0RoSVZtNTJhbGcyYkcweWRFaDVOVTVTVFd0SGVXUTBlRWhZT1dwbldrMW9VbmgyZVhSdGJsVkdTVUkzVVhSRGRUQXJDbkpNWjBGM1NrczBka3BvVmxkWWNURmpUVm81ZEhGQllrcHNlR1pVY0RCaVFVdG9URE5UU1dsalptSTNaRXMyWmtSbU1rb3ZNVmhHTm1sQlVuWnBTakVLUTFkVVZVNVBWVzgxZUdSVGNVUnliQzgzY1hscEwxcHVhVzUzVFVKMGRFZEllVmR2Y1dkQk9GUkROUzlxTW1oSFVXSmhkRTl3ZWtSSVQyTjBPVFp5V2dwalNIbDRVVlY2Ylc4elprVkxkbmhPUzFNMFRVdHFhVzVRVkdkWlpFTTBTbUk1VDFRMFRUWTRiVlZUTVhRclp6MEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRb0tMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSTmVrTkRRV2gxWjBGM1NVSkJaMGxKWkhKRk1WRkZkSEp1UVRCM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVVMFRWUkJlRTlVUlhwTlZHTjVUbXh2V0FwRVZFazBUVlJCZUU1cVJYcE5WR041VGpGdmQwdEVSVkpOUVRoSFFURlZSVU40VFVsWmJUbDJaRWQwTVZsdFZYaEZla0ZTUW1kT1ZrSkJUVlJEYlVadUNsb3pTbXhhTWtZd1lqTkpkMmRuUldsTlFUQkhRMU54UjFOSllqTkVVVVZDUVZGVlFVRTBTVUpFZDBGM1oyZEZTMEZ2U1VKQlVVUkRWbEozZDBNdlJqZ0tRbVkxVldkWlRHYzRRMU53T1VkemRHRjZSWFJOY1VNelQwaGFOekpQT0RreVFrZFBVRlkwTW1sVVVUQXdia1V4UVUxMlpFOHpXV1ZDVFhCdlFWcEhSQXBpYjJOcFVXcDJZVUUzZUZkaVdrSlJORTAzWTJ0YU1FMHpNbEF3TmpGSWVYSnFTVzB4YlRoTVlqSlpWR1JaVFc5Nk5WVm1kRmxLTDFKSmFWSmlOeXREQ2pGMVZHaFpVMnNyWVhScVMxWTJhMHhqYzNFM2FXcDBTa2RsWTNoYVExZG5hMngwT1ZGa1oyNXFjbGhtYXpnd1ozbzFlR0VyVlVOUllTOUJNbkY1V0dJS2NXb3JibWhIYkRoTllXcFJORGM1YVRVM1QzSXdPRVZRWTJaclQydDRXU3RFWm14a2VEZEhkVEZGWmsxbFFVSTNZMWhuTTFaTWMzWjBZalkwTTFGdU1BbzBSblJ1ZWs0MGJtVjFUMlVyYTFCWlNEa3JLMHRYWldORlNISlpaMGRyV21KRVJVMVZPV0pLWW1WSU16WklNVkJuYlZGaVZEaHVSVEpFVjBoUloyeERDazVyUVZsYU5taEVaMVpWZGtGblRVSkJRVWRxV1hwQ2FFMUJORWRCTVZWa1JIZEZRaTkzVVVWQmQwbERjRVJCVUVKblRsWklVazFDUVdZNFJVSlVRVVFLUVZGSUwwMUNNRWRCTVZWa1JHZFJWMEpDVWtsck9XdzNNRFJoV2xaUGJFUkJUbEJzYUdwblpsTTNVMFpRYWtGbVFtZE9Wa2hUVFVWSFJFRlhaMEpTU1Fwck9XdzNNRFJoV2xaUGJFUkJUbEJzYUdwblpsTTNVMFpRYWtGT1FtZHJjV2hyYVVjNWR6QkNRVkZ6UmtGQlQwTkJVVVZCVWtsbVRsQm9hWFJtVG5neENqRjNNV3dyYUdZck1IQTFiazlNWkZsQ1dUSnVZWGRsY0ZSaE9WUk9abXRoVEhKV1Rrc3dXV0pVUTJJNVlYRjVkSGsyT0cxcFYzbFRhbGgzTUhKNVVqY0tTVGx6ZG1Ga1ZtZDRSVWMySzJoTmFHeGxRMjlHY0hOQ2VWTm9aa2hIYVhZMWRqazBUMFJFYjJWQk4xcEhUMk5aWTNGU2RpdFNkRGRYVlhsc2JuY3hjZ293V0VJNFdsWmFVbnBPYlZSVlJ6WnlSRkpvY2xoeWRVUkNVbmhuTlVVMmJ6UlRZMkZIY0dWd01qSktOMlV4V0ZOelRVZ3ZSMmd5WWpOTVluZzJWM2QwQ2s5MGJEVnZPRFZ6VUhCS2VrUk1kVzlEWW1sRGJpOVBUV2d4TWtKNGN5OHJNRFpaVURsRU1WQXlLeTk2V25GTlVGVkhTMkl3Wm5SVk5sZE5TV3h6TkZnS05rTTNOMmxwZERsWFltNVZPVTFQYlRCT1RXNUVjWEVyWTFSdFUwdzRRVmRGTVhWMk1FdDBiSGhMZVM5aFRHeENSa050WTJkTmRHMDRTV2cwUjFsdFJ3cHVNbGxCWWxGb1ZuTm5QVDBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89CiAgdGxzLmtleTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGY0VGSlFrRkJTME5CVVVWQk5VZFphR296UlVoUGIzVktTMEZPV0ZablJteHhjRE5MTTFselNEWlJVSGxuY0M4NE5WZ3lWRFk1UkRkVmNIcDBDa05VUlVveGNqZFJXVWRCUzB0TGNXUnRTMDV1WmpWVGRYcEJlSFJCWm5waVkzcFRNazlvZDFKM1VYSnRSWE5sYUZSSlRWQktXbHBNZFRRdlFVdElObGNLWTFndlVtbFFNM05VY0ZCb1VXRnJTeklyU0dKNFVVcG1ZMU00UTFSMVltczBiMUEyV2xac2VYazBibFZrWmt4akwwZEpiVXhHYkdjNVlUbEpRbkI2ZUFwSWRtZDFjakYyZVRkaGFqbGxNa1pvVm1GVE5ubDFaalpFZEhKblpVbEVlbmQ1V201eE4zQkpVSGRrV1ZSWE0wMDNURzVzVW01V1VXdG9WRzlyZDNOeUNqTkdjbGQ0UWtKdlVIUkZZMUpoZERWTk1FaHhhVlk1ZGtaNlRrdGlkMUJvVEVaMlVXWTRjR3BFZWxKT05XUkhkRVYwU2tKWVRXTjRMMDk1YTNsR1pXMEtjalJPU1RKdE56Tk1NSHBGTnpSQmJFOVlWVTV6YW1SUk5IRnZaV1ppZEhFeE5HTlhPVkZKUkVGUlFVSkJiMGxDUVVGSGJUUXpUa0ZLUVdNcldIZ3lWUW9yU25FNGJ6bHRZVVJ2SzFCdk9UQkNiRVV4ZUdwemFYbEpaRWhCZW5wRFNIaG5ZMk12WVRnMU4yaFFhMWhsTlhoWVdGcDJTMEkxTmtkMFIwc3ZXR0paQ2s0eFdXSXJXREYxUjI5eVJUUXlhMkpZU1ZaTVNsWTNiVTlYU0M4MWFXNXJNRWd5T1hGUGVFOTFaR3BRY0ZBNWRXczBLMGhyUzJ4aFNGRnhZV2h0S3k4S2NEaFJhbkJFYmpkaVlVMW1UMmhSYjFRMFZHSjVUamRzVUhCb1NWTnpUalJXTW5Gb09YTXlOa3RaVFdaWU56RnBka2xDTmpKMGQxQmxaR0pGYmxOVFVBbzVhbEV4TjNoV2VYbGxWRmhrTW5wUFdsWlFSRWRXUVdKaE5rVlRVRWsxWnpZM01WcHZkMFJxZEZRM1RtbDBSMG80Y2xBMGNsTXZialY0WnpKbVMxQlhDbGhsT0RCRlNqUTFiR3h6TWtVd1R6ZE5SbWR6YUhNeFpqQXZia3hhWnpoYVdrZDBTV0puWTBkRFEzVk9ibXBsWm1aT1oyUk9OMFI2TDI1SlZtZzNUR0VLTlhGck1UTjZhME5uV1VWQk9XMHhTazF5TjJKYWVWUkJXSFpYZUdsaWJIUXZOVFZqUTFOUmFYSk5iVU5PVTBGMmRVOXdaRWR3YVdoS05VMDBaUzltZWdwSFFqTmpMMkV4VlhKS1pIQlFWV2xYYlVneVVVSmphMHRvUkZKaVJGRk1RV2N4WlVwblExVk9Nak5zUWxSTFIyUm9NVkJyTmtkMU1YWllXVE01TVhWb0Nrc3lkRlpSZUVkWlQybEtZa3Q2VFZSaFNVaDVjRVZNYW1KcGRXSnRTMFZaTUUxbWVsaDBOVEJ1WWpkWGIyNHdjalp1V1cxdWVrMURaMWxGUVRkVlYwOEtja3BGVGpscFprdGlOa1ZVUldsSVZVaG9ZWFp4Y1RCVFJFWlJOVnBJSzNZemRrSTFkaXRtTVRGc1lsSTVVV1pPZW5GWFYwaFFVMHgxUkhscFNtaHJUUW93VFhOc1dFRnVRekpRWVZoMk9VMHZSbFJ2U0hWUE16a3pVVWRNTDNKVldHNTZWbUl2Tml0RWJIZ3ZSMFZ3WmpodWFGVjROM3B0VUdSRlluTlRZMnh3Q2s5d1MydGtWbmRoYWxrNGJEbEpkMmc0YkhwNlRrc3dURnBXVG1RelVVcHNiM1ZMTVd0VVkwTm5XVUppVWpsbldtRkJSVEZxTjA5RFpWWm5kVkF2VjNrS0wybEllR05QVlROUk9URnlaVWRUTVVKdWN5dFpkRTEyUzJGV0szQnFXSGc1VUROeVMyTXhNM05STlZkdFVrUlFielZOTlRCWFMwZ3phWHB6UVU1Nk1ncDVaa2wzSzFscVRXZ3pibU4yVUVSNFRTczFVeXRpVERCWU1XOVVNRzFyT1VGRFJYaEhjemxqYlZkV1ZEbDZUakZRY3pFeVkzbENlbkZ6ZFZWSFptaHlDbEJsVnpCbGIzRlFPVU5VYkZFMlEwVXhVV040WVZGTFFtZFJSR2hKWldKSGFISjNaMjVLUkZGaGNESldlblJPWkRKV2FrWk5XVXN5WjBKUlZUYzNUVWtLWW14VFdHRndhM2Q2ZVVKWmVIaGlXWGhRVlhsa1JHTXJhMUZ0Y0RkSmNtdGpiSG8wWmpaeFMwRjZSSEJ4Y0RsdmJrczVTRWxWY1VoelZHZE5ZbVpuUkFvNFRGWnBXR280VmpObFozSk1SblJsUVNzMWJHUjBRbEJJUW5sSWVISjNOUzh6Y0dOblVrRlJNRmx5UzBJd01FOXJiazlTZGpjdldWaE5ibkpOY1UxT0NtTjBLMnM0VVV0Q1oxRkVXWEZJVHpCeVpHOXNOa3hMY0ZkcWNGQkpibnAzVW0wMGJHVklPSEJYWWpaNWRuQkJXakI2ZGxkMGQyTjVibWhzYVc0MFJEY0tXU3RyVjNOMVozTkJlVGRFYm05aWJHODNLM0ZuV0RsTGEwVkVVMkZhZDBzM01FeGphM05WTDJJeVVUZHRiV2xDU2xadFJVVkNhMWRYZDJKclRubDBjUXBYZEdvNGJuSlFlVUp3Umt0M2NFcHpNMDVUWVU5TU5UTjJiMjFVY21OVFJEbE9XRXAzTlVSek5taG1UVE53VmxaWWVrMDVVMUU5UFFvdExTMHRMVVZPUkNCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/app-version-tectonic-network.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQphcGlWZXJzaW9uOiB0Y28uY29yZW9zLmNvbS92MQpraW5kOiBBcHBWZXJzaW9uCm1ldGFkYXRhOgogIG5hbWU6IHRlY3RvbmljLW5ldHdvcmsKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCiAgbGFiZWxzOgogICAgbWFuYWdlZC1ieS1jaGFubmVsLW9wZXJhdG9yOiAidHJ1ZSIKc3BlYzoKICBkZXNpcmVkVmVyc2lvbjoKICBwYXVzZWQ6IGZhbHNlCnN0YXR1czoKICBjdXJyZW50VmVyc2lvbjoKICBwYXVzZWQ6IGZhbHNlCnVwZ3JhZGVyZXE6IDEKdXBncmFkZWNvbXA6IDAK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/app-version-kind.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQphcGlWZXJzaW9uOiAiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMSIKa2luZDogIkN1c3RvbVJlc291cmNlRGVmaW5pdGlvbiIKbWV0YWRhdGE6CiAgbmFtZTogImFwcHZlcnNpb25zLnRjby5jb3Jlb3MuY29tIgpzcGVjOgogIGdyb3VwOiAidGNvLmNvcmVvcy5jb20iCiAgdmVyc2lvbjogInYxIgogIG5hbWVzOgogICAgcGx1cmFsOiAiYXBwdmVyc2lvbnMiCiAgICBraW5kOiAiQXBwVmVyc2lvbiIK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/etcd-service.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQphcGlWZXJzaW9uOiB2MQpraW5kOiBTZXJ2aWNlCm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCiAgbGFiZWxzOgogICAgIyB0aGlzIGxhYmVsIGlzIHVzZWQgdG8gaW5kaWNhdGUgdGhhdCBpdCBzaG91bGQgYmUgc2NhcGVkIGJ5IHByb21ldGhldXMKICAgIGs4cy1hcHA6IGV0Y2QKc3BlYzoKICBjbHVzdGVySVA6IE5vbmUKICBwb3J0czoKICAtIG5hbWU6IGV0Y2QKICAgIHBvcnQ6IDIzNzkKICAgIHByb3RvY29sOiBUQ1AK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/manifests/03-openshift-web-console-namespace.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQphcGlWZXJzaW9uOiB2MQpraW5kOiBOYW1lc3BhY2UKbWV0YWRhdGE6CiAgIyBUaGlzIGlzIHRoZSBuYW1lc3BhY2UgdXNlZCB0byBob2xkIHRoZSBvcGVuc2hpZnQgY29uc29sZS4KICAjIFRoZXkgcmVxdWlyZSBvcGVuc2hpZnQgY29uc29sZSBydW4gaW4gdGhpcyBuYW1lc3BhY2UuCiAgbmFtZTogb3BlbnNoaWZ0LXdlYi1jb25zb2xlCiAgbGFiZWxzOgogICAgbmFtZTogb3BlbnNoaWZ0LXdlYi1jb25zb2xlCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/pod-checkpointer-operator-bootstrap/checkpointer-role-binding.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEKa2luZDogUm9sZUJpbmRpbmcKbWV0YWRhdGE6CiAgbmFtZTogcG9kLWNoZWNrcG9pbnRlcgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kcm9sZVJlZjoKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIGtpbmQ6IFJvbGUKICBuYW1lOiBwb2QtY2hlY2twb2ludGVyCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZTogcG9kLWNoZWNrcG9pbnRlcgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/pod-checkpointer-operator-bootstrap/checkpointer-sa.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2VBY2NvdW50Cm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBwb2QtY2hlY2twb2ludGVyCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/pod-checkpointer-operator-bootstrap/checkpointer-daemonset.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IGFwcHMvdjEKa2luZDogRGFlbW9uU2V0Cm1ldGFkYXRhOgogIGxhYmVsczoKICAgIGs4cy1hcHA6IHBvZC1jaGVja3BvaW50ZXIKICAgIHRpZXI6IGNvbnRyb2wtcGxhbmUKICBuYW1lOiBwb2QtY2hlY2twb2ludGVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIHRpZXI6IGNvbnRyb2wtcGxhbmUKICAgICAgazhzLWFwcDogcG9kLWNoZWNrcG9pbnRlcgogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGFubm90YXRpb25zOgogICAgICAgIHNjaGVkdWxlci5hbHBoYS5rdWJlcm5ldGVzLmlvL2NyaXRpY2FsLXBvZDogIiIKICAgICAgICBjaGVja3BvaW50ZXIuYWxwaGEuY29yZW9zLmNvbS9jaGVja3BvaW50OiAidHJ1ZSIKICAgICAgbGFiZWxzOgogICAgICAgIGs4cy1hcHA6IHBvZC1jaGVja3BvaW50ZXIKICAgICAgICB0aWVyOiBjb250cm9sLXBsYW5lCiAgICBzcGVjOgogICAgICBjb250YWluZXJzOgogICAgICAtIGNvbW1hbmQ6CiAgICAgICAgLSAvY2hlY2twb2ludAogICAgICAgIC0gLS1sb2NrLWZpbGU9L3Zhci9ydW4vbG9jay9wb2QtY2hlY2twb2ludGVyLmxvY2sKICAgICAgICAtIC0ta3ViZWNvbmZpZz0vZXRjL2NoZWNrcG9pbnRlci9rdWJlY29uZmlnCiAgICAgICAgLSAtLWNoZWNrcG9pbnQtZ3JhY2UtcGVyaW9kPTVtCiAgICAgICAgLSAtLWNvbnRhaW5lci1ydW50aW1lLWVuZHBvaW50PXVuaXg6Ly8vdmFyL3J1bi9jcmlvL2NyaW8uc29jawogICAgICAgIGVudjoKICAgICAgICAtIG5hbWU6IE5PREVfTkFNRQogICAgICAgICAgdmFsdWVGcm9tOgogICAgICAgICAgICBmaWVsZFJlZjoKICAgICAgICAgICAgICBmaWVsZFBhdGg6IHNwZWMubm9kZU5hbWUKICAgICAgICAtIG5hbWU6IFBPRF9OQU1FCiAgICAgICAgICB2YWx1ZUZyb206CiAgICAgICAgICAgIGZpZWxkUmVmOgogICAgICAgICAgICAgIGZpZWxkUGF0aDogbWV0YWRhdGEubmFtZQogICAgICAgIC0gbmFtZTogUE9EX05BTUVTUEFDRQogICAgICAgICAgdmFsdWVGcm9tOgogICAgICAgICAgICBmaWVsZFJlZjoKICAgICAgICAgICAgICBmaWVsZFBhdGg6IG1ldGFkYXRhLm5hbWVzcGFjZQogICAgICAgIGltYWdlOiBxdWF5LmlvL2NvcmVvcy9wb2QtY2hlY2twb2ludGVyOjlkYzgzZTFhYjNiYzM2Y2EyNWM5ZjdjMThkZGVmMWI5MWQ0YTA1NTgKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IHBvZC1jaGVja3BvaW50ZXIKICAgICAgICBzZWN1cml0eUNvbnRleHQ6CiAgICAgICAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICAgICAgdm9sdW1lTW91bnRzOgogICAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2NoZWNrcG9pbnRlcgogICAgICAgICAgbmFtZToga3ViZWNvbmZpZwogICAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMKICAgICAgICAgIG5hbWU6IGV0Yy1rdWJlcm5ldGVzCiAgICAgICAgLSBtb3VudFBhdGg6IC92YXIvcnVuCiAgICAgICAgICBuYW1lOiB2YXItcnVuCiAgICAgIHNlcnZpY2VBY2NvdW50TmFtZTogcG9kLWNoZWNrcG9pbnRlcgogICAgICBob3N0TmV0d29yazogdHJ1ZQogICAgICBub2RlU2VsZWN0b3I6CiAgICAgICAgbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyOiAiIgogICAgICByZXN0YXJ0UG9saWN5OiBBbHdheXMKICAgICAgdG9sZXJhdGlvbnM6CiAgICAgIC0gZWZmZWN0OiBOb1NjaGVkdWxlCiAgICAgICAga2V5OiBub2RlLXJvbGUua3ViZXJuZXRlcy5pby9tYXN0ZXIKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIHZvbHVtZXM6CiAgICAgIC0gbmFtZToga3ViZWNvbmZpZwogICAgICAgIHNlY3JldDoKICAgICAgICAgIHNlY3JldE5hbWU6IGNvbnRyb2xsZXItbWFuYWdlci1rdWJlY29uZmlnCiAgICAgIC0gaG9zdFBhdGg6CiAgICAgICAgICBwYXRoOiAvZXRjL2t1YmVybmV0ZXMKICAgICAgICBuYW1lOiBldGMta3ViZXJuZXRlcwogICAgICAtIGhvc3RQYXRoOgogICAgICAgICAgcGF0aDogL3Zhci9ydW4KICAgICAgICBuYW1lOiB2YXItcnVuCiAgdXBkYXRlU3RyYXRlZ3k6CiAgICByb2xsaW5nVXBkYXRlOgogICAgICBtYXhVbmF2YWlsYWJsZTogMQogICAgdHlwZTogUm9sbGluZ1VwZGF0ZQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/pod-checkpointer-operator-bootstrap/checkpointer-role.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEKa2luZDogUm9sZQptZXRhZGF0YToKICBuYW1lOiBwb2QtY2hlY2twb2ludGVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpydWxlczoKLSBhcGlHcm91cHM6IFsiIl0gIyAiIiBpbmRpY2F0ZXMgdGhlIGNvcmUgQVBJIGdyb3VwCiAgcmVzb3VyY2VzOiBbInBvZHMiXQogIHZlcmJzOiBbImdldCIsICJ3YXRjaCIsICJsaXN0Il0KLSBhcGlHcm91cHM6IFsiIl0gIyAiIiBpbmRpY2F0ZXMgdGhlIGNvcmUgQVBJIGdyb3VwCiAgcmVzb3VyY2VzOiBbInNlY3JldHMiLCAiY29uZmlnbWFwcyJdCiAgdmVyYnM6IFsiZ2V0Il0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/kube-proxy-operator-bootstrap/kube-proxy-kube-system-rbac-role-binding.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEKa2luZDogQ2x1c3RlclJvbGVCaW5kaW5nCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTpkZWZhdWx0LXNhCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IGNsdXN0ZXItYWRtaW4Kc3ViamVjdHM6Ci0ga2luZDogU2VydmljZUFjY291bnQKICBuYW1lOiBkZWZhdWx0CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/kube-proxy-operator-bootstrap/kube-proxy-role-binding.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEKa2luZDogQ2x1c3RlclJvbGVCaW5kaW5nCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtcHJveHkKcm9sZVJlZjoKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIGtpbmQ6IENsdXN0ZXJSb2xlCiAgbmFtZTogc3lzdGVtOm5vZGUtcHJveGllciAjIEF1dG9tYXRpY2FsbHkgY3JlYXRlZCBzeXN0ZW0gcm9sZS4Kc3ViamVjdHM6Ci0ga2luZDogU2VydmljZUFjY291bnQKICBuYW1lOiBrdWJlLXByb3h5CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/kube-proxy-operator-bootstrap/kube-proxy-service-account.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2VBY2NvdW50Cm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBrdWJlLXByb3h5Cg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/kube-proxy-operator-bootstrap/kube-proxy-daemonset.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IGFwcHMvdjEKa2luZDogRGFlbW9uU2V0Cm1ldGFkYXRhOgogIGxhYmVsczoKICAgIGs4cy1hcHA6IGt1YmUtcHJveHkKICAgIHRpZXI6IG5vZGUKICBuYW1lOiBrdWJlLXByb3h5CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIGs4cy1hcHA6IGt1YmUtcHJveHkKICAgICAgdGllcjogbm9kZQogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBrOHMtYXBwOiBrdWJlLXByb3h5CiAgICAgICAgdGllcjogbm9kZQogICAgc3BlYzoKICAgICAgY29udGFpbmVyczoKICAgICAgLSBjb21tYW5kOgogICAgICAgIC0gLi9oeXBlcmt1YmUKICAgICAgICAtIHByb3h5CiAgICAgICAgLSAtLWNsdXN0ZXItY2lkcj0xMC4zLjAuMC8xNgogICAgICAgIC0gLS1ob3N0bmFtZS1vdmVycmlkZT0kKE5PREVfTkFNRSkKICAgICAgICAtIC0ta3ViZWNvbmZpZz0vZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZwogICAgICAgIC0gLS1wcm94eS1tb2RlPWlwdGFibGVzCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogTk9ERV9OQU1FCiAgICAgICAgICB2YWx1ZUZyb206CiAgICAgICAgICAgIGZpZWxkUmVmOgogICAgICAgICAgICAgIGZpZWxkUGF0aDogc3BlYy5ub2RlTmFtZQogICAgICAgIGltYWdlOiBxdWF5LmlvL2NvcmVvcy9oeXBlcmt1YmU6djEuOS4zX2NvcmVvcy4wCiAgICAgICAgbmFtZToga3ViZS1wcm94eQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIHByaXZpbGVnZWQ6IHRydWUKICAgICAgICB2b2x1bWVNb3VudHM6CiAgICAgICAgLSBtb3VudFBhdGg6IC9ldGMvc3NsL2NlcnRzCiAgICAgICAgICBuYW1lOiBzc2wtY2VydHMtaG9zdAogICAgICAgICAgcmVhZE9ubHk6IHRydWUKICAgICAgICAtIG1vdW50UGF0aDogL2V0Yy9rdWJlcm5ldGVzCiAgICAgICAgICBuYW1lOiBrdWJlY29uZmlnCiAgICAgICAgICByZWFkT25seTogdHJ1ZQogICAgICBob3N0TmV0d29yazogdHJ1ZQogICAgICBzZXJ2aWNlQWNjb3VudE5hbWU6IGt1YmUtcHJveHkKICAgICAgdG9sZXJhdGlvbnM6CiAgICAgIC0gb3BlcmF0b3I6IEV4aXN0cwogICAgICB2b2x1bWVzOgogICAgICAtIGhvc3RQYXRoOgogICAgICAgICAgcGF0aDogL2V0Yy9zc2wvY2VydHMKICAgICAgICBuYW1lOiBzc2wtY2VydHMtaG9zdAogICAgICAtIG5hbWU6IGt1YmVjb25maWcKICAgICAgICBzZWNyZXQ6CiAgICAgICAgICBkZWZhdWx0TW9kZTogNDIwCiAgICAgICAgICBzZWNyZXROYW1lOiBjb250cm9sbGVyLW1hbmFnZXIta3ViZWNvbmZpZwogIHVwZGF0ZVN0cmF0ZWd5OgogICAgcm9sbGluZ1VwZGF0ZToKICAgICAgbWF4VW5hdmFpbGFibGU6IDEKICAgIHR5cGU6IFJvbGxpbmdVcGRhdGUK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/kube-dns-operator-bootstrap/kube-dns-deployment.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IGFwcHMvdjEKa2luZDogRGVwbG95bWVudAptZXRhZGF0YToKICBuYW1lOiBrdWJlLWRucwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBsYWJlbHM6CiAgICBrOHMtYXBwOiBrdWJlLWRucwogICAga3ViZXJuZXRlcy5pby9jbHVzdGVyLXNlcnZpY2U6ICJ0cnVlIgpzcGVjOgogICMgcmVwbGljYXM6IG5vdCBzcGVjaWZpZWQgaGVyZToKICAjIDEuIEluIG9yZGVyIHRvIG1ha2UgQWRkb24gTWFuYWdlciBkbyBub3QgcmVjb25jaWxlIHRoaXMgcmVwbGljYXMgcGFyYW1ldGVyLgogICMgMi4gRGVmYXVsdCBpcyAxLgogICMgMy4gV2lsbCBiZSB0dW5lZCBpbiByZWFsIHRpbWUgaWYgRE5TIGhvcml6b250YWwgYXV0by1zY2FsaW5nIGlzIHR1cm5lZCBvbi4KICBzdHJhdGVneToKICAgIHJvbGxpbmdVcGRhdGU6CiAgICAgIG1heFN1cmdlOiAxMCUKICAgICAgbWF4VW5hdmFpbGFibGU6IDAKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBrOHMtYXBwOiBrdWJlLWRucwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBrOHMtYXBwOiBrdWJlLWRucwogICAgICBhbm5vdGF0aW9uczoKICAgICAgICBzY2hlZHVsZXIuYWxwaGEua3ViZXJuZXRlcy5pby9jcml0aWNhbC1wb2Q6ICcnCiAgICBzcGVjOgogICAgICBjb250YWluZXJzOgogICAgICAtIG5hbWU6IGt1YmVkbnMKICAgICAgICBpbWFnZTogImdjci5pby9nb29nbGVfY29udGFpbmVycy9rOHMtZG5zLWt1YmUtZG5zLWFtZDY0OjEuMTQuOCIKICAgICAgICByZXNvdXJjZXM6CiAgICAgICAgICAjIFRPRE86IFNldCBtZW1vcnkgbGltaXRzIHdoZW4gd2UndmUgcHJvZmlsZWQgdGhlIGNvbnRhaW5lciBmb3IgbGFyZ2UKICAgICAgICAgICMgY2x1c3RlcnMsIHRoZW4gc2V0IHJlcXVlc3QgPSBsaW1pdCB0byBrZWVwIHRoaXMgY29udGFpbmVyIGluCiAgICAgICAgICAjIGd1YXJhbnRlZWQgY2xhc3MuIEN1cnJlbnRseSwgdGhpcyBjb250YWluZXIgZmFsbHMgaW50byB0aGUKICAgICAgICAgICMgImJ1cnN0YWJsZSIgY2F0ZWdvcnkgc28gdGhlIGt1YmVsZXQgZG9lc24ndCBiYWNrb2ZmIGZyb20gcmVzdGFydGluZyBpdC4KICAgICAgICAgIGxpbWl0czoKICAgICAgICAgICAgbWVtb3J5OiAxNzBNaQogICAgICAgICAgcmVxdWVzdHM6CiAgICAgICAgICAgIGNwdTogMTAwbQogICAgICAgICAgICBtZW1vcnk6IDcwTWkKICAgICAgICBsaXZlbmVzc1Byb2JlOgogICAgICAgICAgaHR0cEdldDoKICAgICAgICAgICAgcGF0aDogL2hlYWx0aGNoZWNrL2t1YmVkbnMKICAgICAgICAgICAgcG9ydDogMTAwNTQKICAgICAgICAgICAgc2NoZW1lOiBIVFRQCiAgICAgICAgICBpbml0aWFsRGVsYXlTZWNvbmRzOiA2MAogICAgICAgICAgdGltZW91dFNlY29uZHM6IDUKICAgICAgICAgIHN1Y2Nlc3NUaHJlc2hvbGQ6IDEKICAgICAgICAgIGZhaWx1cmVUaHJlc2hvbGQ6IDUKICAgICAgICByZWFkaW5lc3NQcm9iZToKICAgICAgICAgIGh0dHBHZXQ6CiAgICAgICAgICAgIHBhdGg6IC9yZWFkaW5lc3MKICAgICAgICAgICAgcG9ydDogODA4MQogICAgICAgICAgICBzY2hlbWU6IEhUVFAKICAgICAgICAgICMgd2UgcG9sbCBvbiBwb2Qgc3RhcnR1cCBmb3IgdGhlIEt1YmVybmV0ZXMgbWFzdGVyIHNlcnZpY2UgYW5kCiAgICAgICAgICAjIG9ubHkgc2V0dXAgdGhlIC9yZWFkaW5lc3MgSFRUUCBzZXJ2ZXIgb25jZSB0aGF0J3MgYXZhaWxhYmxlLgogICAgICAgICAgaW5pdGlhbERlbGF5U2Vjb25kczogMwogICAgICAgICAgdGltZW91dFNlY29uZHM6IDUKICAgICAgICBhcmdzOgogICAgICAgIC0gLS1kb21haW49Y2x1c3Rlci5sb2NhbC4KICAgICAgICAtIC0tZG5zLXBvcnQ9MTAwNTMKICAgICAgICAtIC0tY29uZmlnLWRpcj0va3ViZS1kbnMtY29uZmlnCiAgICAgICAgLSAtLXY9MgogICAgICAgIGVudjoKICAgICAgICAtIG5hbWU6IFBST01FVEhFVVNfUE9SVAogICAgICAgICAgdmFsdWU6ICIxMDA1NSIKICAgICAgICBwb3J0czoKICAgICAgICAtIGNvbnRhaW5lclBvcnQ6IDEwMDUzCiAgICAgICAgICBuYW1lOiBkbnMtbG9jYWwKICAgICAgICAgIHByb3RvY29sOiBVRFAKICAgICAgICAtIGNvbnRhaW5lclBvcnQ6IDEwMDUzCiAgICAgICAgICBuYW1lOiBkbnMtdGNwLWxvY2FsCiAgICAgICAgICBwcm90b2NvbDogVENQCiAgICAgICAgLSBjb250YWluZXJQb3J0OiAxMDA1NQogICAgICAgICAgbmFtZTogbWV0cmljcwogICAgICAgICAgcHJvdG9jb2w6IFRDUAogICAgICAgIHZvbHVtZU1vdW50czoKICAgICAgICAtIG5hbWU6IGt1YmUtZG5zLWNvbmZpZwogICAgICAgICAgbW91bnRQYXRoOiAva3ViZS1kbnMtY29uZmlnCiAgICAgIC0gbmFtZTogZG5zbWFzcQogICAgICAgIGltYWdlOiAiZ2NyLmlvL2dvb2dsZV9jb250YWluZXJzL2s4cy1kbnMtZG5zbWFzcS1uYW5ueS1hbWQ2NDoxLjE0LjgiCiAgICAgICAgbGl2ZW5lc3NQcm9iZToKICAgICAgICAgIGh0dHBHZXQ6CiAgICAgICAgICAgIHBhdGg6IC9oZWFsdGhjaGVjay9kbnNtYXNxCiAgICAgICAgICAgIHBvcnQ6IDEwMDU0CiAgICAgICAgICAgIHNjaGVtZTogSFRUUAogICAgICAgICAgaW5pdGlhbERlbGF5U2Vjb25kczogNjAKICAgICAgICAgIHRpbWVvdXRTZWNvbmRzOiA1CiAgICAgICAgICBzdWNjZXNzVGhyZXNob2xkOiAxCiAgICAgICAgICBmYWlsdXJlVGhyZXNob2xkOiA1CiAgICAgICAgYXJnczoKICAgICAgICAtIC12PTIKICAgICAgICAtIC1sb2d0b3N0ZGVycgogICAgICAgIC0gLWNvbmZpZ0Rpcj0vZXRjL2s4cy9kbnMvZG5zbWFzcS1uYW5ueQogICAgICAgIC0gLXJlc3RhcnREbnNtYXNxPXRydWUKICAgICAgICAtIC0tCiAgICAgICAgLSAtawogICAgICAgIC0gLS1jYWNoZS1zaXplPTEwMDAKICAgICAgICAtIC0tbG9nLWZhY2lsaXR5PS0KICAgICAgICAtIC0tc2VydmVyPS9jbHVzdGVyLmxvY2FsLzEyNy4wLjAuMSMxMDA1MwogICAgICAgIC0gLS1zZXJ2ZXI9L2luLWFkZHIuYXJwYS8xMjcuMC4wLjEjMTAwNTMKICAgICAgICAtIC0tc2VydmVyPS9pcDYuYXJwYS8xMjcuMC4wLjEjMTAwNTMKICAgICAgICBwb3J0czoKICAgICAgICAtIGNvbnRhaW5lclBvcnQ6IDUzCiAgICAgICAgICBuYW1lOiBkbnMKICAgICAgICAgIHByb3RvY29sOiBVRFAKICAgICAgICAtIGNvbnRhaW5lclBvcnQ6IDUzCiAgICAgICAgICBuYW1lOiBkbnMtdGNwCiAgICAgICAgICBwcm90b2NvbDogVENQCiAgICAgICAgIyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9rdWJlcm5ldGVzL2t1YmVybmV0ZXMvaXNzdWVzLzI5MDU1IGZvciBkZXRhaWxzCiAgICAgICAgcmVzb3VyY2VzOgogICAgICAgICAgcmVxdWVzdHM6CiAgICAgICAgICAgIGNwdTogMTUwbQogICAgICAgICAgICBtZW1vcnk6IDIwTWkKICAgICAgICB2b2x1bWVNb3VudHM6CiAgICAgICAgLSBuYW1lOiBrdWJlLWRucy1jb25maWcKICAgICAgICAgIG1vdW50UGF0aDogL2V0Yy9rOHMvZG5zL2Ruc21hc3EtbmFubnkKICAgICAgLSBuYW1lOiBzaWRlY2FyCiAgICAgICAgaW1hZ2U6ICJnY3IuaW8vZ29vZ2xlX2NvbnRhaW5lcnMvazhzLWRucy1zaWRlY2FyLWFtZDY0OjEuMTQuOCIKICAgICAgICBsaXZlbmVzc1Byb2JlOgogICAgICAgICAgaHR0cEdldDoKICAgICAgICAgICAgcGF0aDogL21ldHJpY3MKICAgICAgICAgICAgcG9ydDogMTAwNTQKICAgICAgICAgICAgc2NoZW1lOiBIVFRQCiAgICAgICAgICBpbml0aWFsRGVsYXlTZWNvbmRzOiA2MAogICAgICAgICAgdGltZW91dFNlY29uZHM6IDUKICAgICAgICAgIHN1Y2Nlc3NUaHJlc2hvbGQ6IDEKICAgICAgICAgIGZhaWx1cmVUaHJlc2hvbGQ6IDUKICAgICAgICBhcmdzOgogICAgICAgIC0gLS12PTIKICAgICAgICAtIC0tbG9ndG9zdGRlcnIKICAgICAgICAtIC0tcHJvYmU9a3ViZWRucywxMjcuMC4wLjE6MTAwNTMsa3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsLDUsU1JWCiAgICAgICAgLSAtLXByb2JlPWRuc21hc3EsMTI3LjAuMC4xOjUzLGt1YmVybmV0ZXMuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbCw1LFNSVgogICAgICAgIHBvcnRzOgogICAgICAgIC0gY29udGFpbmVyUG9ydDogMTAwNTQKICAgICAgICAgIG5hbWU6IG1ldHJpY3MKICAgICAgICAgIHByb3RvY29sOiBUQ1AKICAgICAgICByZXNvdXJjZXM6CiAgICAgICAgICByZXF1ZXN0czoKICAgICAgICAgICAgbWVtb3J5OiAyME1pCiAgICAgICAgICAgIGNwdTogMTBtCiAgICAgIGRuc1BvbGljeTogRGVmYXVsdCAgIyBEb24ndCB1c2UgY2x1c3RlciBETlMuCiAgICAgIHRvbGVyYXRpb25zOgogICAgICAtIGtleTogIkNyaXRpY2FsQWRkb25zT25seSIKICAgICAgICBvcGVyYXRvcjogIkV4aXN0cyIKICAgICAgLSBrZXk6ICJub2RlLXJvbGUua3ViZXJuZXRlcy5pby9tYXN0ZXIiCiAgICAgICAgb3BlcmF0b3I6ICJFeGlzdHMiCiAgICAgICAgZWZmZWN0OiAiTm9TY2hlZHVsZSIKICAgICAgbm9kZVNlbGVjdG9yOgogICAgICAgIG5vZGUtcm9sZS5rdWJlcm5ldGVzLmlvL21hc3RlcjogIiIKICAgICAgdm9sdW1lczoKICAgICAgLSBuYW1lOiBrdWJlLWRucy1jb25maWcKICAgICAgICBjb25maWdNYXA6CiAgICAgICAgICBuYW1lOiBrdWJlLWRucwogICAgICAgICAgb3B0aW9uYWw6IHRydWUK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/kube-dns-operator-bootstrap/kube-dns-svc.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2UKbWV0YWRhdGE6CiAgbmFtZToga3ViZS1kbnMKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCiAgbGFiZWxzOgogICAgazhzLWFwcDoga3ViZS1kbnMKICAgIGt1YmVybmV0ZXMuaW8vY2x1c3Rlci1zZXJ2aWNlOiAidHJ1ZSIKICAgIGt1YmVybmV0ZXMuaW8vbmFtZTogS3ViZUROUwpzcGVjOgogIHNlbGVjdG9yOgogICAgazhzLWFwcDoga3ViZS1kbnMKICBjbHVzdGVySVA6IDEwLjMuMC4xMAogIHBvcnRzOgogIC0gbmFtZTogZG5zCiAgICBwb3J0OiA1MwogICAgcHJvdG9jb2w6IFVEUAogICAgdGFyZ2V0UG9ydDogNTMKICAtIG5hbWU6IGRucy10Y3AKICAgIHBvcnQ6IDUzCiAgICBwcm90b2NvbDogVENQCiAgICB0YXJnZXRQb3J0OiA1Mwo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic.sh",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApzZXQgLWUKCktVQkVDT05GSUc9IiQxIgoKa3ViZWN0bCgpIHsKCWVjaG8gIkV4ZWN1dGluZyBrdWJlY3RsICQqIiA+JjIKCXdoaWxlIHRydWUKCWRvCgkJc2V0ICtlCgkJb3V0PSQob2MgLS1jb25maWc9IiRLVUJFQ09ORklHIiAiJEAiIDI+JjEpCgkJc3RhdHVzPSQ/CgkJc2V0IC1lCgoJCWlmIGdyZXAgLS1xdWlldCAiQWxyZWFkeUV4aXN0cyIgPDw8ICIkb3V0IgoJCXRoZW4KCQkJZWNobyAiJG91dCwgc2tpcHBpbmciID4mMgoJCQlyZXR1cm4KCQlmaQoKCQllY2hvICIkb3V0IgoJCWlmIFsgIiRzdGF0dXMiIC1lcSAwIF0KCQl0aGVuCgkJCXJldHVybgoJCWZpCgoJCWVjaG8gImt1YmVjdGwgJCogZmFpbGVkLiBSZXRyeWluZyBpbiA1IHNlY29uZHMuLi4iID4mMgoJCXNsZWVwIDUKCWRvbmUKfQoKd2FpdF9mb3JfcG9kcygpIHsKCWVjaG8gIldhaXRpbmcgZm9yIHBvZHMgaW4gbmFtZXNwYWNlICQxLi4uIgoJd2hpbGUgdHJ1ZQoJZG8KCQlvdXQ9JChrdWJlY3RsIC0tbmFtZXNwYWNlICIkMSIgZ2V0IHBvZHMgLS1vdXRwdXQgY3VzdG9tLWNvbHVtbnM9U1RBVFVTOi5zdGF0dXMucGhhc2UsTkFNRToubWV0YWRhdGEubmFtZSAtLW5vLWhlYWRlcnM9dHJ1ZSkKCQllY2hvICIkb3V0IgoKCQkjIG1ha2Ugc3VyZSBrdWJlY3RsIHJldHVybnMgYXQgbGVhc3Qgb25lIHN0YXR1cwoJCWlmIFsgIiQod2MgLS1saW5lcyA8PDwgIiRvdXQiKSIgLWVxIDAgXQoJCXRoZW4KCQkJZWNobyAiTm8gcG9kcyB3ZXJlIGZvdW5kLiBXYWl0aW5nIGZvciA1IHNlY29uZHMuLi4iCgkJCXNsZWVwIDUKCQkJY29udGludWUKCQlmaQoKCQlpZiAhIGdyZXAgLS1pbnZlcnQtbWF0Y2ggJ15SdW5uaW5nJyA8PDwgIiRvdXQiCgkJdGhlbgoJCQlyZXR1cm4KCQlmaQoKCQllY2hvICJOb3QgYWxsIHBvZHMgYXZhaWxhYmxlIHlldC4gV2FpdGluZyBmb3IgNSBzZWNvbmRzLi4uIgoJCXNsZWVwIDUKCWRvbmUKCXNldCAtZQp9CgojIFdhaXQgZm9yIEt1YmVybmV0ZXMgcG9kcwp3YWl0X2Zvcl9wb2RzIGt1YmUtc3lzdGVtCgpmb3IgZmlsZSBpbiAkKGZpbmQgLiAtbWF4ZGVwdGggMSAtdHlwZSBmIHwgc29ydCkKZG8KCWVjaG8gIkNyZWF0aW5nIG9iamVjdCBmcm9tIGZpbGU6ICRmaWxlIC4uLiIKCWt1YmVjdGwgY3JlYXRlIC0tZmlsZW5hbWUgIiRmaWxlIgoJZWNobyAiRG9uZSBjcmVhdGluZyBvYmplY3QgZnJvbSBmaWxlOiAkZmlsZSAuLi4iCmRvbmUKCiMgV2FpdCBmb3IgVGVjdG9uaWMgcG9kcwp3YWl0X2Zvcl9wb2RzIHRlY3RvbmljLXN5c3RlbQoKZWNobyAiVGVjdG9uaWMgaW5zdGFsbGF0aW9uIGlzIGRvbmUiCg==",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/00_cluster-config.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKZGF0YToKICBhZGRvbi1jb25maWc6IHwKICAgIGFwaVZlcnNpb246IHYxCiAgICBjbG91ZFByb3ZpZGVyOiBhd3MKICAgIGNsdXN0ZXJDb25maWc6CiAgICAgIGFwaXNlcnZlcl91cmw6IGh0dHBzOi8vc29tYWxsZXktYXBpLmRldmNsdXN0ZXIub3BlbnNoaWZ0LmNvbTo2NDQzCiAgICBraW5kOiBLdWJlQWRkb25PcGVyYXRvckNvbmZpZwogICAgcmVnaXN0cnlIVFRQU2VjcmV0OiB3aGJtMmprcTZyanRiYjhkCmtpbmQ6IENvbmZpZ01hcAptZXRhZGF0YToKICBuYW1lOiBjbHVzdGVyLWNvbmZpZy12MQogIG5hbWVzcGFjZTogdGVjdG9uaWMtc3lzdGVtCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_tectonic-ingress-04-svc-account.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2VBY2NvdW50Cm1ldGFkYXRhOgogIG5hbWU6IHRlY3RvbmljLWluZ3Jlc3MtY29udHJvbGxlci1vcGVyYXRvcgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWluZ3Jlc3MK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_tectonic-system-00-binding-admin.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQpraW5kOiBDbHVzdGVyUm9sZUJpbmRpbmcKYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MWJldGExCm1ldGFkYXRhOgogIG5hbWU6IGFkbWluLXVzZXIKc3ViamVjdHM6CiAgLSBraW5kOiBTZXJ2aWNlQWNjb3VudAogICAgbmFtZXNwYWNlOiB0ZWN0b25pYy1zeXN0ZW0KICAgIG5hbWU6IGRlZmF1bHQKICAtIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1pbmdyZXNzCiAgICBuYW1lOiB0ZWN0b25pYy1pbmdyZXNzLWNvbnRyb2xsZXItb3BlcmF0b3IKcm9sZVJlZjoKICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IGNsdXN0ZXItYWRtaW4KICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_binding-discovery.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQpraW5kOiBDbHVzdGVyUm9sZUJpbmRpbmcKYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MWJldGExCm1ldGFkYXRhOgogIG5hbWU6IGRpc2NvdmVyeQpyb2xlUmVmOgogIGFwaUdyb3VwOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvCiAga2luZDogQ2x1c3RlclJvbGUKICBuYW1lOiBzeXN0ZW06ZGlzY292ZXJ5CnN1YmplY3RzOgogIC0ga2luZDogR3JvdXAKICAgIG5hbWU6ICdzeXN0ZW06dW5hdXRoZW50aWNhdGVkJwogIC0ga2luZDogR3JvdXAKICAgIG5hbWU6ICdzeXN0ZW06YXV0aGVudGljYXRlZCcK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_kube-addon-01-operator.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQphcGlWZXJzaW9uOiBhcHBzL3YxYmV0YTIKa2luZDogRGVwbG95bWVudAptZXRhZGF0YToKICBuYW1lOiBrdWJlLWFkZG9uLW9wZXJhdG9yCiAgbmFtZXNwYWNlOiB0ZWN0b25pYy1zeXN0ZW0KICBsYWJlbHM6CiAgICBrOHMtYXBwOiBrdWJlLWFkZG9uLW9wZXJhdG9yCiAgICBtYW5hZ2VkLWJ5LWNoYW5uZWwtb3BlcmF0b3I6ICJ0cnVlIgpzcGVjOgogIHJlcGxpY2FzOiAxCiAgc2VsZWN0b3I6CiAgICBtYXRjaExhYmVsczoKICAgICAgazhzLWFwcDoga3ViZS1hZGRvbi1vcGVyYXRvcgogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBrOHMtYXBwOiBrdWJlLWFkZG9uLW9wZXJhdG9yCiAgICAgICAgdGVjdG9uaWMtYXBwLXZlcnNpb24tbmFtZToga3ViZS1hZGRvbgogICAgc3BlYzoKICAgICAgY29udGFpbmVyczoKICAgICAgICAtIG5hbWU6IGt1YmUtYWRkb24tb3BlcmF0b3IKICAgICAgICAgIGltYWdlOiBxdWF5LmlvL2NvcmVvcy9rdWJlLWFkZG9uLW9wZXJhdG9yLWRldjozNzU0MjNhMzMyZjJjMTJiNzk0MzhmYzZhNmRhNmU0NDhlMjhlYzBmCiAgICAgICAgICByZXNvdXJjZXM6CiAgICAgICAgICAgIGxpbWl0czoKICAgICAgICAgICAgICBjcHU6IDIwbQogICAgICAgICAgICAgIG1lbW9yeTogNTBNaQogICAgICAgICAgICByZXF1ZXN0czoKICAgICAgICAgICAgICBjcHU6IDIwbQogICAgICAgICAgICAgIG1lbW9yeTogNTBNaQogICAgICAgICAgdm9sdW1lTW91bnRzOgogICAgICAgICAgICAtIG5hbWU6IGNsdXN0ZXItY29uZmlnCiAgICAgICAgICAgICAgbW91bnRQYXRoOiAvZXRjL2NsdXN0ZXItY29uZmlnCiAgICAgIGltYWdlUHVsbFNlY3JldHM6CiAgICAgICAgLSBuYW1lOiBjb3Jlb3MtcHVsbC1zZWNyZXQKICAgICAgbm9kZVNlbGVjdG9yOgogICAgICAgIG5vZGUtcm9sZS5rdWJlcm5ldGVzLmlvL21hc3RlcjogIiIKICAgICAgcmVzdGFydFBvbGljeTogQWx3YXlzCiAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICBydW5Bc05vblJvb3Q6IHRydWUKICAgICAgICBydW5Bc1VzZXI6IDY1NTM0CiAgICAgIHRvbGVyYXRpb25zOgogICAgICAgIC0ga2V5OiAibm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyIgogICAgICAgICAgb3BlcmF0b3I6ICJFeGlzdHMiCiAgICAgICAgICBlZmZlY3Q6ICJOb1NjaGVkdWxlIgogICAgICB2b2x1bWVzOgogICAgICAgIC0gbmFtZTogY2x1c3Rlci1jb25maWcKICAgICAgICAgIGNvbmZpZ01hcDoKICAgICAgICAgICAgbmFtZTogY2x1c3Rlci1jb25maWctdjEKICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgLSBrZXk6IGFkZG9uLWNvbmZpZwogICAgICAgICAgICAgICAgcGF0aDogYWRkb24tY29uZmlnCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_openshift-cluster-api_worker-user-data-secret.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci1hcGkKdHlwZTogT3BhcXVlCmRhdGE6CiAgdXNlckRhdGE6IGV5SnBaMjVwZEdsdmJpSTZleUpqYjI1bWFXY2lPbnNpWVhCd1pXNWtJanBiZXlKemIzVnlZMlVpT2lKb2RIUndjem92TDNOdmJXRnNiR1Y1TFdGd2FTNWtaWFpqYkhWemRHVnlMbTl3Wlc1emFHbG1kQzVqYjIwNk5EazFNREF2WTI5dVptbG5MM2R2Y210bGNpSXNJblpsY21sbWFXTmhkR2x2YmlJNmUzMTlYWDBzSW5ObFkzVnlhWFI1SWpwN0luUnNjeUk2ZXlKalpYSjBhV1pwWTJGMFpVRjFkR2h2Y21sMGFXVnpJanBiZXlKemIzVnlZMlVpT2lKa1lYUmhPblJsZUhRdmNHeGhhVzQ3WTJoaGNuTmxkRDExZEdZdE9EdGlZWE5sTmpRc1RGTXdkRXhUTVVOU1ZXUktWR2xDUkZKV1NsVlRWVnBLVVRCR1ZWSlRNSFJNVXpCMFEyc3hTbE5WVWtSV1JVNUVVVmRhU0Zvd1JqTlRWVXBDV2pCc1ExRlZVa0pVYTBwdVlUTkdiMkV5YkVoUFdHTjNVV3RHVW1Nd1drSlNSVVowVkZaS1NtUXdWa0pYVlZKWFZWWkdUVkpZWkhOa2JVNUlWbTVWUzFsNlNtOWpSbkIxVlZob1JsSkZSbEJSYldSUFZtdEtRbFJXVWtOTk1IQXlXV3BPVW1SR2EzbFNXR1JKWVVkT1QxUldVbTVsUlRGRlVsUldUbFpGTVRSVWJuQktUV3hrYjFrd05VNWhiV1EwVkZWU1JrMW5jRTVXUlRFMFZHNXdTazFzWkhGUlZ6Rk9WV3RzTTFKVlJscFNSbHBTVlZWNFJtUXllREpaTUdSWFpGZE5lV0ZJUW1GaWJFWTBVbFZTUWxRd1NtNVViRnBEVVZVeFZWRnFUa3RrYlVsNlZWaFNXazFyVmpORGJXUnVVbGRzVGxGVVFraFJNVTU0VWpGT1NsbHFUa1ZWVlZaRFVWWkdWbEZWUlRCVFZVcEZaREJHTTFveVpFWlRNRVoyVTFWS1FsVlZUak5TUms1UVkyeHdWbVJFVVhwalYwNXRTM3BHYjFOc1VraGplbEZMVVZNNVNtTkdXVEpNZWxJeVpFZGFSRTlGVlhwYWJsRTFWbGRqZGxGcVRuRmtla1pXVFdwYWIxbFVUakZPZW1SMFpEQnNVbEpHY0U1Uk1sWXhWVzFXZWxSSGRFeGpNamxxWVZkT2RtRkRPV3hNTWxKTVUxRndWRkZYZEU5TlZVcHJWa2hXVFZKNmJGVk5WbFpaWVZSb1lXUXhUazVYYW1SVlZFVm9RMWt4U2t0UlZUQjRaSHBrVkdOclZYbFZhMHBzU3pGQ2MyRnJUa2hUYkhCb1pGVlNRMXBWY0VKa2JHaDFaREZ3V0VOdGVHdFJWMFpJWWpGR1dtSXdXalpNZWtaVFVXeFdWR1ZIWnpCUk1qVkZVVEZXVjJSWFdrUmtSMUpQVjFoa2FGa3hSak5YYWtKdFZFaENhVlpzY0c5VlNFWmFWRE53YlU1SGJGZGtTRVpwU3pOb2NsSXhZMHRrYTJkNVZrZE9TbFl6WkVSak0wcFpaVlZyZWs1c1JYZFNhVGd5VldwWk0wMVdTalZTVjA1V1ZrWk9UVmRET0RSaFJrVXhXVzE0VWxRd2RFeE5RM016VFVSU2VXSlhhRWhQU0VFd1pWWnNWMUZVYUZCV1VYQktVWHBrYmxOWVNUVk9hMlEyVG14c1JGUXdTbmxOYlZWNlZsZFdlazFXY0ZGU1IxcHRUV3BvTm1KRlZsQlhXRlpGVFRKNE1GSjZhRTFUTW1OeVpWUlJlRll3VGxSaVJGWm9WRmM1ZWs1WGNGUlJNVUpGUTJ0R2JsUlZTa0pSVldSeFZWZHdRMUZWTVVKT1JXUkNUVlpXYTFKSVpFWlJhVGt6VlZWV1FtUXdiRVJqUlZKQ1ZVVktibFJzV2tsVmF6RkRVVmRaTkZKVlNsVlJWVkpDVlZWbmRsUlZTWGRTTUVWNFZsZFJTMUpIWkZKV01FcERWV3RzY2s5WGR6Tk5SRkpvVjJ4YVVHSkZVa0pVYkVKellVZHdibHBzVFROVk1GcFJZV3RHVDFGdFpISmpWMmh5WVZWak5XUjZRa05SVmtaNlVtdEdRbFF3VGtKVlZWWkNWbGhPZVZKUmJ6RkxNVnBXVWpGYVNtTlhWVEZWYldSellWVlZkbEZ1U201V2VrNXBaVlUxVlZOVk5XRlBRemxTVmpCU1ZGa3dWbnBsVlRGMlZtcHJja3N5V2xoaWEyeHFTM2wwUlU1WVFuTk9SemxGV2xSYU5HSlhaRXREYmxaUlducFdWV05HVWt4YVZsSkdWbFpPV21KSWFIaGpSMXAwV210T1NGWkVSalZUVkVKTFVWaGFVbFZ0ZHpWalJXOTVWRzVPTkZWSWNHOVNVemxHVVc1dk0xSldXWHBXTUVWeVdWUnNRbGRJYjNoVFF6aExUMGRrZG1WRWJFTmxha1V5Vmtoc1VtSllXbFZWTWtweVQwVkdTbFV4VG0xVmJYUlVVMWRHUTJONWRIQmxWRXBWV2xkM2VsVnJlREpWYTNkM1RESTFkV1ZHUm5wVVJYaEdZVlJvY0ZkcldtRlpXRlpEWkhkd1ZXUlhXbGRsYkd4TlVsZHNRbHBEYzNaTlZsSklWRzFTUmxwR2FISlhWRXBwVDFSYU1HSXhSa3BMTVVVeVUwVTFhRTF0WXpWVWEwMTNXbTFTU0Zac1FtbGtSbEoxVGxVNE5GUnJXbkJoTWpGeVZraGtXVU50ZERGaE1EZzBUbWs1VFZsWGF6SkxNRTVFVFcxV1JtRnRaSEZsU0U0eVZFVmFibFl4V1hsU1ZHeFpWbFpCTTA5R1RreGtlWE4yVWtVeGRtUkdWVFJOU0ZrelQwWndRMUV6YkhGU2JrSlVXVEpPZGs1VVkwdFdSbU4zVmpOc1EySXllRFJYYkdSVVltNVZNMVZITVc1UVZEQkxURk13ZEV4VE1VWlVhMUZuVVRCV1UxWkZiRWRUVlU1Q1ZrVlZkRXhUTUhSTVVXODlJaXdpZG1WeWFXWnBZMkYwYVc5dUlqcDdmWDFkZlgwc0luUnBiV1Z2ZFhSeklqcDdmU3dpZG1WeWMybHZiaUk2SWpJdU1pNHdJbjBzSW01bGRIZHZjbXRrSWpwN2ZTd2ljR0Z6YzNka0lqcDdJblZ6WlhKeklqcGJleUp1WVcxbElqb2lZMjl5WlNJc0luTnphRUYxZEdodmNtbDZaV1JMWlhseklqcGJJbk56YUMxeWMyRWdRVUZCUVVJelRucGhRekY1WXpKRlFVRkJRVVJCVVVGQ1FVRkJRa0ZSUkZWeE4xY3pPSGhEV2psWFIxTlhRM1oxYzNSaFRVZE5WREEwZEZKdmFIYzJRVXRIZWtrM1VEZDRjV3cxYkdoRFFWSmxlWFEzTW00NWNWZFJVbHB6UlRGWmFVTlRVWFZVWmxoSk1XOWpPRTV3VTAwM0syeE5USGRxTVRKSE9Ib3pTVEZaVkRNeFNraHlPVXhNV1djdldFbGpSWGhyZW1aQ1NUa3lNRU5oVXpneVZuRnRTMDl3U1RrclFWSklVMHBDWkVsaVMxSkpNR1kxV1N0MU5IaGlZelZWZWt0RFNsZzRhbU5MUjBjM2JrVnBkemg2YlN0amRrRnNaazluYzNOTlN5dHhTbkJ3U1dKV1kySXlhVnBPVkhOM05Xa3lZVmcyUmtSTmVVTXJZakUzUkZGSWVrSkhjRTVpYUZwWmVIVnZSVkphVmxKamJsbGpkR2RKZW5Wdk5tWkVOakJuYm1sWU1HWldkbkpqYUd4UGJuVmlRakZ6VWxsaWJHOVFNbkkyVlVVeU1uY3ZaSEJNUzA5R1JUVnBOME5CTUZwNlRrSkZVbG81TkdOSlMzVnRTVWc1VFdsS2N6RmhObUpOWlRnNVZrOXFhazVXSWwxOVhYMHNJbk4wYjNKaFoyVWlPbnQ5TENKemVYTjBaVzFrSWpwN2ZYMD0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_tectonic-ingress-00-appversion.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQphcGlWZXJzaW9uOiB0Y28uY29yZW9zLmNvbS92MQpraW5kOiBBcHBWZXJzaW9uCm1ldGFkYXRhOgogIG5hbWU6IHRlY3RvbmljLWluZ3Jlc3MKICBuYW1lc3BhY2U6IHRlY3RvbmljLXN5c3RlbQogIGxhYmVsczoKICAgIG1hbmFnZWQtYnktY2hhbm5lbC1vcGVyYXRvcjogInRydWUiCnNwZWM6CiAgZGVzaXJlZFZlcnNpb246CiAgcGF1c2VkOiBmYWxzZQpzdGF0dXM6CiAgcGF1c2VkOiBmYWxzZQp1cGdyYWRlcmVxOiAxCnVwZ3JhZGVjb21wOiAwCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_role-user.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQpraW5kOiBDbHVzdGVyUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxYmV0YTEKbWV0YWRhdGE6CiAgbmFtZTogdXNlcgpydWxlczoKICAtIGFwaUdyb3VwczogWyIiXQogICAgcmVzb3VyY2VzOiBbCiAgICAgICJiaW5kaW5ncyIsICJjb25maWdtYXBzIiwgImV2ZW50cyIsICJwb2RzIiwgInJlcGxpY2F0aW9uY29udHJvbGxlcnMiLAogICAgICAic2VjcmV0cyIsICJzZXJ2aWNlcyIsICJzZXJ2aWNlYWNjb3VudHMiLAogICAgICAicG9kcy9hdHRhY2giLAogICAgICAicG9kcy9iaW5kaW5nIiwKICAgICAgInBvZHMvZXhlYyIsCiAgICAgICJwb2RzL2xvZyIsCiAgICAgICJwb2RzL3BvcnRmb3J3YXJkIiwKICAgICAgInBvZHMvcHJveHkiLAogICAgICAicG9kcy9zdGF0dXMiLAogICAgICAicmVwbGljYXRpb25jb250cm9sbGVycy9zY2FsZSIsCiAgICAgICJyZXBsaWNhdGlvbmNvbnRyb2xsZXJzL3N0YXR1cyIsCiAgICAgICJzZXJ2aWNlcy9wcm94eSIsCiAgICAgICJzZXJ2aWNlcy9zdGF0dXMiCiAgICBdCiAgICB2ZXJiczogWyIqIl0KICAgIG5vblJlc291cmNlVVJMczogW10KCiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWwogICAgICAiY29tcG9uZW50c3RhdHVzZXMiLCAiZW5kcG9pbnRzIiwgImxpbWl0cmFuZ2VzIiwgIm5vZGVzIiwgIm5vZGVzL3Byb3h5IiwgIm5vZGVzL3N0YXR1cyIsCiAgICAgICJuYW1lc3BhY2VzIiwgIm5hbWVzcGFjZXMvc3RhdHVzIiwgIm5hbWVzcGFjZXMvZmluYWxpemUiLAogICAgICAicGVyc2lzdGVudHZvbHVtZWNsYWltcyIsICJwZXJzaXN0ZW50dm9sdW1lY2xhaW1zL3N0YXR1cyIsICJwZXJzaXN0ZW50dm9sdW1lcyIsICJyZXNvdXJjZXF1b3RhcyIsCiAgICAgICJyZXNvdXJjZXF1b3Rhcy9zdGF0dXMiCiAgICBdCiAgICB2ZXJiczogWyJnZXQiLCAibGlzdCIsICJ3YXRjaCIsICJwcm94eSIsICJyZWRpcmVjdCJdCiAgICBub25SZXNvdXJjZVVSTHM6IFtdCgogIC0gYXBpR3JvdXBzOiBbImFwcHMiLCAiYmF0Y2giLCAiYXV0b3NjYWxpbmciLCAicG9saWN5Il0KICAgIHJlc291cmNlczogWyIqIl0KICAgIHZlcmJzOiBbIioiXQogICAgbm9uUmVzb3VyY2VVUkxzOiBbXQoKICAtIGFwaUdyb3VwczogWyJleHRlbnNpb25zIl0KICAgIHJlc291cmNlczogWwogICAgICAiZGFlbW9uc2V0cyIsICJkZXBsb3ltZW50cyIsICJob3Jpem9udGFscG9kYXV0b3NjYWxlcnMiLCAiaW5ncmVzc2VzIiwKICAgICAgImpvYnMiLCAicmVwbGljYXNldHMiLCAicmVwbGljYXRpb25jb250cm9sbGVycyIsCgogICAgICAiZGFlbW9uc2V0cy9zdGF0dXMiLAogICAgICAiZGVwbG95bWVudHMvcm9sbGJhY2siLAogICAgICAiZGVwbG95bWVudHMvc2NhbGUiLAogICAgICAiZGVwbG95bWVudHMvc3RhdHVzIiwKICAgICAgImhvcml6b250YWxwb2RhdXRvc2NhbGVycy9zdGF0dXMiLAogICAgICAiaW5ncmVzc2VzL3N0YXR1cyIsCiAgICAgICJqb2JzL3N0YXR1cyIsCiAgICAgICJyZXBsaWNhc2V0cy9zY2FsZSIsCiAgICAgICJyZXBsaWNhc2V0cy9zdGF0dXMiLAogICAgICAicmVwbGljYXRpb25jb250cm9sbGVycy9zY2FsZSIKICAgIF0KICAgIHZlcmJzOiBbIioiXQogICAgbm9uUmVzb3VyY2VVUkxzOiBbXQoKICAtIGFwaUdyb3VwczogWyJleHRlbnNpb25zIl0KICAgIHJlc291cmNlczogWyJuZXR3b3JrcG9saWNpZXMiLCAidGhpcmRwYXJ0eXJlc291cmNlcyJdCiAgICB2ZXJiczogWyJnZXQiLCAibGlzdCIsICJ3YXRjaCIsICJwcm94eSIsICJyZWRpcmVjdCJdCiAgICBub25SZXNvdXJjZVVSTHM6IFtdCgogIC0gYXBpR3JvdXBzOiBbInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbIioiXQogICAgdmVyYnM6IFsiZ2V0IiwgImxpc3QiLCAid2F0Y2giLCAicHJveHkiLCAicmVkaXJlY3QiXQogICAgbm9uUmVzb3VyY2VVUkxzOiBbXQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_tectonic-ingress-01-cluster-config.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHYxCmtpbmQ6IENvbmZpZ01hcAptZXRhZGF0YToKICBuYW1lOiBjbHVzdGVyLWNvbmZpZy12MQogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWluZ3Jlc3MKZGF0YToKICBpbmdyZXNzLWNvbmZpZzogfAogICAgYXBpVmVyc2lvbjogdjEKICAgIGtpbmQ6IFRlY3RvbmljSW5ncmVzc09wZXJhdG9yQ29uZmlnCiAgICB0eXBlOiBoYXByb3h5LXJvdXRlcgogICAgc3RhdHNQYXNzd29yZDogcGFzc3dvcmQKICAgIHN0YXRzVXNlcm5hbWU6IGFkbWluCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_tectonic-ingress-02-tls.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiB0ZWN0b25pYy1pbmdyZXNzLXRscwogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWluZ3Jlc3MKdHlwZTogT3BhcXVlCmRhdGE6CiAgdGxzLmNydDogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUjFWRU5EUVhGSFowRjNTVUpCWjBsSldteExObloxU25oVFUzZDNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRLVkVWU1RVRTRSMEV4VlVVS1EzaE5TVmx0T1haa1IzUXhXVzFWZUVWRVFVOUNaMDVXUWtGTlZFSXlkREZaYlZWMFdUSkZkMGhvWTA1TlZHZDRUVVJGTlUxVVRYaE9la2t5VjJoalRncE5hbWQ0VFVSRk1rMVVUWGhPZWtreVYycEJLMDFTUVhkRVoxbEVWbEZSUzBWM1pIQmliV1I1V2xoT2VrMVRiM2RMUVZsRVZsRlJSRVY1Um5waU1qRm9DbUpIZUd4bFV6VnJXbGhhYW1KSVZucGtSMVo1VEcwNWQxcFhOWHBoUjJ4dFpFTTFhbUl5TUhkblowVnBUVUV3UjBOVGNVZFRTV0l6UkZGRlFrRlJWVUVLUVRSSlFrUjNRWGRuWjBWTFFXOUpRa0ZSUkZCNlYzRXhRbEZsVUVGSmJtTkpWbWgxU2tkNE1YUkhSMWh0VkVjMlFYcEtVMGd3Y21aTFUyd3lTMGRVUlFvck5sWk9aRGR5TmpaYVYyOUNkV1ZyTmxOWU4wMU1aWGRCWkhBMU5FUjBPRGhKWlZsTVZTOXhSV05rVWxZM1JEWjBWa3gxVDAxNVRGSndPVlJNUnpsMENsbEdNV0ozT0ZKVFMyOUlXRkJYYm5kTU5EbFFNRlZPSzNsSmFXSjZhVEEwWW1oa0x6WmFPRGczVEhCWlpVdDFWVGhYUjFGSUwyZzNRMFphTmtOYWVVd0tjV1kzUlU5WFZWQkZPRkF3VHk5bVFXaGpjM3BTWjFZMGNtVnlSV0p2Y1c1UlFXSmlUVzVZYVd0elZtVlNLMFkyY0U5UVZYbFJWR0pqVjJ4b01qUkZaUXBSYTJwaWVGUnhiM1IwVDBNeWJYaERORTl4UVVOSmVtMUtkbk5TYkRWR2VtOW1jVU5XWlZOd2FTOURNRXBPVms5cU1HcEJZVWt6V1VWeFduaDFWM2h2Q2tGV1RreGhTbkpFTlhsbmVrZEdRazgwZW5oaVEydHJVa3huV1dkaGRIQm1PWG9yZUhjMlJHNUJaMDFDUVVGSGFtZGtUWGRuWkVGM1JHZFpSRlpTTUZBS1FWRklMMEpCVVVSQloxZG5UVUl3UjBFeFZXUktVVkZYVFVKUlIwTkRjMGRCVVZWR1FuZE5Ra0puWjNKQ1owVkdRbEZqUkVGcVFVMUNaMDVXU0ZKTlFncEJaamhGUVdwQlFVMUNNRWRCTVZWa1JHZFJWMEpDVTJocFdtOXBXVU0zYW5kTE4xbFRhemxzWWxobmJpOHlORFZuVkVGbVFtZE9Wa2hUVFVWSFJFRlhDbWRDVWtsck9XdzNNRFJoV2xaUGJFUkJUbEJzYUdwblpsTTNVMFpRYWtKU1FtZE9Wa2hTUlVWVGFrSkpaMmxHZW1JeU1XaGlSM2hzWlZNMWExcFlXbW9LWWtoV2VtUkhWbmxNYlRsM1dsYzFlbUZIYkcxa1F6VnFZakl5UTBsNWIzVmpNamwwV1ZkNGMxcFlhM1ZhUjFZeVdUSjRNV016VW14amFUVjJZMGRXZFFwak1taHdXbTVSZFZreU9YUk5RVEJIUTFOeFIxTkpZak5FVVVWQ1EzZFZRVUUwU1VKQlVVSlNTbEptV2xNdmFVRnROamREWlZwakt6SjNaamREZFdacUNtMHhSbE5ZTDBaeU5tUm1Wak50V0VKMVkwOTBWRlZXWXpnck9IcEtVVmRyTW5GR01HZEViM2RZYUVzMFVGRktWRE5hTXk5VVRqaGFja0ZuV0ZaQmJtb0tLMnR4VDBKM016RXhRVVYwWjBOTU4zQnlZamx3WW5KUllXRTBiemxRY0ZSdmFVcGtNRmd2VXpSVEwwVmFVRXh0VGpsdlpEVnNhalk1YW05SlZqSmtXZ3BhZHpCUGNWTkNhbUl4T0hoMkwzZEhPRzU2TVhsNVRIcEtRaloyWjNCUWFFZExZWEJVZG1rMlVITTBUSFZ5WVd3M1FqWTNOREIxVWtadlptRnBZVTVyQ2t4WFpGazRNMFYyTVhRMmNHdEllVFJCUzJwVk9ETjZhazl2UXl0T2FXeHplR1ZJVVdJM00zRnJMM05tVTBVd1NsRkJVMFp2WW5ocWNtdDBhVGhJYms0S1lqQjNORk5CV0VsRk5WWnNibEF5YjFoNFFsQnpTbkp4TW01eFdqYzROVzVDUWtSWmNFVktSRTA0YWtoaGREaFhTWFpZTkRoQmFYaE9hakpOQ2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLQ2kwdExTMHRRa1ZIU1U0Z1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFwTlNVbEVUVVJEUTBGb2FXZEJkMGxDUVdkSlNVZFdMM0pvZFdZMWNVTlpkMFJSV1VwTGIxcEphSFpqVGtGUlJVeENVVUYzU21wRlUwMUNRVWRCTVZWRkNrTjRUVXBpTTBKc1ltNU9iMkZYV2pCTlVrRjNSR2RaUkZaUlVVUkZkMlI1WWpJNU1FeFhUbWhOUWpSWVJGUkZORTFVUVhoUFZFVjZUVlJqZVU1c2IxZ0tSRlJKTkUxVVFYaE9ha1Y2VFZSamVVNXNiM2RLVkVWU1RVRTRSMEV4VlVWRGVFMUpXVzA1ZG1SSGRERlpiVlY0UlVSQlQwSm5UbFpDUVUxVVFqSjBNUXBaYlZWMFdUSkZkMmRuUldsTlFUQkhRMU54UjFOSllqTkVVVVZDUVZGVlFVRTBTVUpFZDBGM1oyZEZTMEZ2U1VKQlVVTnpORnBHTVZOTmFWaHVWemhZQ25KNU5ESnJWV3c1WmpCcGVFaFJURWcwWm5WTlpqQmFUVTFTVUhwR1dtUnJUelpaZW1ZMmJqZHFVMXBUTHk5bFdGWTRkV3N3YVRWNGJsY3hjVzlXU2xrS09FcHFRVUpJUVZsQk1tZEtjRXRLVVVZMGVGTmthSFZ6ZWtoWlVXaFNOVFJWV1U1S1RqaE5lR2syUldKTk1sQkRZbGwxTUhST1dtRnJRbU5GUkZwU2VBcHFObUU1U21rd1pVcHBSbkUyUkZKQlRGa3hkSGQwVUdoM2JGUTNXREpqWm10all5dExWVzEzTm5rMlNYSklhR0pTWjJsRVRDOXplbUp5TnpKc1NFdFVDbEpMTnpCNFZtMWplV1JxU21vNFJXRjVPSGsyVkhWT2NIZFZkVzFSZWxKRlVuQmlSbVZ0ZEdkdlR6Tm9lRk50WlhkdWRIaFZXazlCYlVaRGJqUlVRMlVLTDFOdlUzTm5NVE5XU0V0MmVuVkVSM3BEZFhSclJVWlFlRXRsUjBsNmFYVXJSemhCTlZvM1EwWXliaTkxYm5wSU0ySkZUUzhyZVZCM1oxRk9XUzlhTkFwb05uTm9TRmRTU2tGblRVSkJRVWRxV1hwQ2FFMUJORWRCTVZWa1JIZEZRaTkzVVVWQmQwbERjRVJCVUVKblRsWklVazFDUVdZNFJVSlVRVVJCVVVndkNrMUNNRWRCTVZWa1JHZFJWMEpDVWtsck9XdzNNRFJoV2xaUGJFUkJUbEJzYUdwblpsTTNVMFpRYWtGbVFtZE9Wa2hUVFVWSFJFRlhaMEpTU1dzNWJEY0tNRFJoV2xaUGJFUkJUbEJzYUdwblpsTTNVMFpRYWtGT1FtZHJjV2hyYVVjNWR6QkNRVkZ6UmtGQlQwTkJVVVZCUW1wS2FERnBNVXh2YURoc1JVdEVSd3BHWm1sQk9FUm5hRnAyZWxsYWJrOHpOa3RxWVdnM1NqWk1hWHBhU3pGWWRGazVUSGRHV1dJeU1uaExjV2x6YmtobVdFVnRTMEZDZVVNMU5DOVlOa1pDQ25CVWRFOVpXRFozUTFRclpHbzJiVUphV1VkUFRVa3ZiMmxGU1VOSWFEVmFaVkZOVUdOSFpGZGhTMWxyUmpZemMyRlRielZZV21RMFowNUdZMHRQZUV3S1ZrMXNiMEpKUm5FNGJtb3pNQ3RNTnpabk9XOVdTWFF4Y2s1NmRuSnJTa2RzWTJ0bFYzTnBZV05DYVdSTldISmhRMFE1Wkd4UFMycDROMWxxTm0xUlRncFZPVEVyTDB4b1RVMHZZV05DWlVObFRtcHdURTlDVkhWdFVHNW1lSEZ6VVhnMlMyOHdNekF4VUdGMVNVMDBiMlJ6VEVOUWNVRnRSWEpXWWpWSFZHRlBDa0lyTVdRck5FZEhjblUwYjJKWmIwNDJjbmhoTm5SbE1tVkZORTlqTTFoa1pIUk5hV1IzTUhWdkwwNDVUR2hUTUhsM1MwdGhaRFJUYzJoaWNVUnVSRmNLY2t3dmJYRkJQVDBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89CiAgdGxzLmtleTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGYjNkSlFrRkJTME5CVVVWQmVqZ3hjWFJSVlVocWQwTktNME5HV1dKcFVuTmtZbEpvYkRWcmVIVm5UWGxWYURsTE0zbHJjR1JwYUd0NFVIVnNDbFJZWlRZcmRXMVdjVUZpYm5CUGEyd3Jla016YzBGSVlXVmxRVGRtVUVOSWJVTXhVRFpvU0VoVlZtVjNLM0pXVXpkcWFrMXBNR0ZtVlhsNGRtSlhRbVFLVnpoUVJWVnBjVUl4ZWpGd09FTXJVRlE1UmtSbWMybEpiVGcwZEU5SE5GaG1LMjFtVUU5NU5sZElhWEpzVUVab2EwSXZOR1YzYUZkbFoyMWphVFp1S3dwNFJHeHNSSGhRUkRsRWRqTjNTVmhNVFRCWlJtVkxNM0Y0UnpaTGNEQkJSeko2U2pFMGNFeEdXR3RtYUdWeFZHb3hUV3RGTWpOR2NGbGtkVUpJYTBwSkNqSTRWVFp4VEdKVVozUndjMUYxUkhGblFXbE5OV2xpTjBWYVpWSmpOa2cyWjJ4WWEzRlpkbmQwUTFSV1ZHODVTWGRIYVU0eVFrdHRZMkpzYzJGQlJsUUtVekpwWVhjclkyOU5lR2hSVkhWTk9GZDNjRXBGVXpSSFNVZHlZVmd2WXk5elkwOW5OWGRKUkVGUlFVSkJiMGxDUVVSMGJYSjJRV05DWmsxak5XdDFhd3A0U2tOSWJsQkdkM0JOTUdaSU5WaGhkMEpITVc1RlRqWnJjakpUUVcxNFJYVjRXVkFyWTFWeU4waHVhSEl5YmpKek9FeEJVa2RJZEhoaVVUbEpkMUYxQ2tKaVV6aHFla2RNTnpOM1ZFbDVXVzV0ZUUwMU4xVTJTekkxVWpsRFZWVnpNMDFOVldwU1VXNTZiMGh0Y214bVdWbEtSV2xqY21KV1VVTmxOVzlxWlZZS1ZVOWFhSFJCUmtsamJWSkVObXhvYWxBNE5XaE9WR2xIVVRaSlUyaFhkVmsyV0M5S2NuSldPSElyUkU5SmNGQTRSV0pCVVdsM2VrazFVV3cyYkdONVVBcENWRU5PV0cxNFNTOUhOR1ptWm1ob1VEQmlTbVI0VWs1V016RllWR3hFVEVwMmVFNXRhMWd6ZEN0RlkyMXZPQzlGUkZOalNsRmxSVlI1YldFNGMyMTZDalozYlVaeVFVdHBlVzU1VEZka056VnBRbmMwVGtkdWVWWXhiMWxKTkZZMmJrcE1RMm8wTUVkcGQxVlpaREF3U1Roc1NFbHdSblJGZW5SQmVqQTBhVmNLUzBWSlRGWkRSVU5uV1VWQk5EaEdOVEJYTWprMloyUmtSVVY2UmsxQk1tWTRRa00ySzJoMVlVazVSekl4VERoQ1RVOHdSWEJCU2xwRFJVeHVaMlpDVUFwRFExZzNZMnRQT0ROaUsxQkVkR2xhYzBOdVIxbFBUbGt2V0hKV09XdE5jblZHWjNoRFIwUlhhMHd3Y2l0M2IydE5PRGt6T0VGM2MyWjNibWRJVFdWb0NrNHZPREJsTjB4V01VOVpNM1JPTms1a2NUWTJSVUZwY2tOV1FsTm9VRGxCV1dSdWNHRnhXbGd5VUd4VVZsbzNjRmxGVW5CVE5HdERaMWxGUVRaYVNqZ0tUV0pPTkZjM1IyODJTMlJ2ZG1GeVJtOHlPVUpYVUZwMFRrRjBXVEkyYkdkRmIySmtUSFIwZW1KRGNuUndRVVF4Vkd4VWJtdE1XRVJOYm14dE4zYzROUXBsWTNKcGJGZFhkazE0VVdWT1pGTkNSbU54YTFSdFNqWlBTa0ZwWjBoVlN6QlBNa0kyYURKdFIzRkVVV2RuTTFCNFRucGlXakYxTlVwMmFqUlpOVmRqQ2pGRFdEUTBRU3QxTlNzMFprbFhhRWw2TVRoQ05YVnpUbXR5YkRKaFdFbG9TVkF3ZVZCUE9FTm5XVUY0UlRjelYxQlNiVkpXYldwa1dFVXlXbGg2V1RVS2JYTkdVSEEyWWpsV1VFWmhkM0JZVmtoNE0wTTBZV0ZvZFhocU4zcFFZV0YzVDFJdk5rMTZTREE0UmxZMU5rdHRZbFJ2VFVseVJrbFlZa2hDVlZKUldRcHplR2hPZGl0Qk9HSkRZMUF2TURGNGVFdEZTbTUyV0hadloyTnBOMGhzTTBGWk1HcHZjRTlzVUhJMUsxRlFObTEwYkhaMGJrcERUMlo2Y0c4MGFpOVVDbFpuZFZGTFlYZEJWM2xzZWpVM2VFOVFReXRqVlZGTFFtZFJSRXgzTVhkUVN6aGtSRVIyUlZGNlowMUZLemRpYUZKcmVWYzFTbmRPTDBKM2RuWlZiM1lLZGpOSGVqQkJVMWxvTjJFM1JGazNla2xCVkVnM1Ntd3lUR2Q2VEZoMFprRldWM1J1T0RoYWN6VkJPR0V6VDBWcU9YQXhlVTlHZW5obVYxSnlPV2s1VXdwYWRrTm5TV1U1Ym1GWlYyTXZOVzFUTTNreVZYUkxUVWw1WTJjdlkwTlVXblZ4Y1hOS1YwcHlkVkZPTVdKSWJXZFdkbnBqZVRWQlUzZFVURFFyU0ZSSkNsSTNjVTVDZDB0Q1owSnpaMVJhVlRSd1UwNVpaMnhuZDFSa2RXOTVVMHhGWjBWdmIybDNUVTFtTVVkMWFYYzRLMjQyZW5sRlMwNTFRV3d3VXpGd0wySUtMMDAxTTNZNFpXeG9WM1JpVUhKaWRqWk5kMHBGVEZsRFZYQlZlRU5UTnpGbWRWVXJaRmR0U3pGbVpFZFJSMkZQVDNvclNHZDBPVmMzYUZCSWNHZEVPUW8zVVhFM1JHNHpiV1U0YWpneVRtbFVVM3BKVUVSV2MxQnBXa1l3YVUwekt6ZG9OVXBpYjBRM01rNWtWVEZsWW1nNVl6aFFDaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2c9PQogIGJ1bmRsZS5jcnQ6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVIxVkVORFFYRkhaMEYzU1VKQlowbEpXbXhMTm5aMVNuaFRVM2QzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkS1ZFVlNUVUU0UjBFeFZVVUtRM2hOU1ZsdE9YWmtSM1F4V1cxVmVFVkVRVTlDWjA1V1FrRk5WRUl5ZERGWmJWVjBXVEpGZDBob1kwNU5WR2Q0VFVSRk5VMVVUWGhPZWtreVYyaGpUZ3BOYW1kNFRVUkZNazFVVFhoT2Vra3lWMnBCSzAxU1FYZEVaMWxFVmxGUlMwVjNaSEJpYldSNVdsaE9lazFUYjNkTFFWbEVWbEZSUkVWNVJucGlNakZvQ21KSGVHeGxVelZyV2xoYWFtSklWbnBrUjFaNVRHMDVkMXBYTlhwaFIyeHRaRU0xYW1JeU1IZG5aMFZwVFVFd1IwTlRjVWRUU1dJelJGRkZRa0ZSVlVFS1FUUkpRa1IzUVhkblowVkxRVzlKUWtGUlJGQjZWM0V4UWxGbFVFRkpibU5KVm1oMVNrZDRNWFJIUjFodFZFYzJRWHBLVTBnd2NtWkxVMnd5UzBkVVJRb3JObFpPWkRkeU5qWmFWMjlDZFdWck5sTllOMDFNWlhkQlpIQTFORVIwT0RoSlpWbE1WUzl4UldOa1VsWTNSRFowVmt4MVQwMTVURkp3T1ZSTVJ6bDBDbGxHTVdKM09GSlRTMjlJV0ZCWGJuZE1ORGxRTUZWT0szbEphV0o2YVRBMFltaGtMelphT0RnM1RIQlpaVXQxVlRoWFIxRklMMmczUTBaYU5rTmFlVXdLY1dZM1JVOVhWVkJGT0ZBd1R5OW1RV2hqYzNwU1oxWTBjbVZ5UldKdmNXNVJRV0ppVFc1WWFXdHpWbVZTSzBZMmNFOVFWWGxSVkdKalYyeG9NalJGWlFwUmEycGllRlJ4YjNSMFQwTXliWGhETkU5eFFVTkplbTFLZG5OU2JEVkdlbTltY1VOV1pWTndhUzlETUVwT1ZrOXFNR3BCWVVreldVVnhXbmgxVjNodkNrRldUa3hoU25KRU5YbG5la2RHUWs4MGVuaGlRMnRyVWt4bldXZGhkSEJtT1hvcmVIYzJSRzVCWjAxQ1FVRkhhbWRrVFhkblpFRjNSR2RaUkZaU01GQUtRVkZJTDBKQlVVUkJaMWRuVFVJd1IwRXhWV1JLVVZGWFRVSlJSME5EYzBkQlVWVkdRbmROUWtKblozSkNaMFZHUWxGalJFRnFRVTFDWjA1V1NGSk5RZ3BCWmpoRlFXcEJRVTFDTUVkQk1WVmtSR2RSVjBKQ1UyaHBXbTlwV1VNM2FuZExOMWxUYXpsc1lsaG5iaTh5TkRWblZFRm1RbWRPVmtoVFRVVkhSRUZYQ21kQ1VrbHJPV3czTURSaFdsWlBiRVJCVGxCc2FHcG5abE0zVTBaUWFrSlNRbWRPVmtoU1JVVlRha0pKWjJsR2VtSXlNV2hpUjNoc1pWTTFhMXBZV21vS1lraFdlbVJIVm5sTWJUbDNXbGMxZW1GSGJHMWtRelZxWWpJeVEwbDViM1ZqTWpsMFdWZDRjMXBZYTNWYVIxWXlXVEo0TVdNelVteGphVFYyWTBkV2RRcGpNbWh3V201UmRWa3lPWFJOUVRCSFExTnhSMU5KWWpORVVVVkNRM2RWUVVFMFNVSkJVVUpTU2xKbVdsTXZhVUZ0TmpkRFpWcGpLekozWmpkRGRXWnFDbTB4UmxOWUwwWnlObVJtVmpOdFdFSjFZMDkwVkZWV1l6Z3JPSHBLVVZkck1uRkdNR2RFYjNkWWFFczBVRkZLVkROYU15OVVUamhhY2tGbldGWkJibW9LSzJ0eFQwSjNNekV4UVVWMFowTk1OM0J5WWpsd1luSlJZV0UwYnpsUWNGUnZhVXBrTUZndlV6UlRMMFZhVUV4dFRqbHZaRFZzYWpZNWFtOUpWakprV2dwYWR6QlBjVk5DYW1JeE9IaDJMM2RIT0c1Nk1YbDVUSHBLUWpaMlozQlFhRWRMWVhCVWRtazJVSE0wVEhWeVlXdzNRalkzTkRCMVVrWnZabUZwWVU1ckNreFhaRms0TTBWMk1YUTJjR3RJZVRSQlMycFZPRE42YWs5dlF5dE9hV3h6ZUdWSVVXSTNNM0ZyTDNObVUwVXdTbEZCVTBadlluaHFjbXQwYVRoSWJrNEtZakIzTkZOQldFbEZOVlpzYmxBeWIxaDRRbEJ6U25KeE1tNXhXamM0Tlc1Q1FrUlpjRVZLUkUwNGFraGhkRGhYU1haWU5EaEJhWGhPYWpKTkNpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwS0NpMHRMUzB0UWtWSFNVNGdRMFZTVkVsR1NVTkJWRVV0TFMwdExRcE5TVWxFVFVSRFEwRm9hV2RCZDBsQ1FXZEpTVWRXTDNKb2RXWTFjVU5aZDBSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGM1NtcEZVMDFDUVVkQk1WVkZDa040VFVwaU0wSnNZbTVPYjJGWFdqQk5Va0YzUkdkWlJGWlJVVVJGZDJSNVlqSTVNRXhYVG1oTlFqUllSRlJGTkUxVVFYaFBWRVY2VFZSamVVNXNiMWdLUkZSSk5FMVVRWGhPYWtWNlRWUmplVTVzYjNkS1ZFVlNUVUU0UjBFeFZVVkRlRTFKV1cwNWRtUkhkREZaYlZWNFJVUkJUMEpuVGxaQ1FVMVVRakowTVFwWmJWVjBXVEpGZDJkblJXbE5RVEJIUTFOeFIxTkpZak5FVVVWQ1FWRlZRVUUwU1VKRWQwRjNaMmRGUzBGdlNVSkJVVU56TkZwR01WTk5hVmh1VnpoWUNuSjVOREpyVld3NVpqQnBlRWhSVEVnMFpuVk5aakJhVFUxU1VIcEdXbVJyVHpaWmVtWTJiamRxVTFwVEx5OWxXRlk0ZFdzd2FUVjRibGN4Y1c5V1Nsa0tPRXBxUVVKSVFWbEJNbWRLY0V0S1VVWTBlRk5rYUhWemVraFpVV2hTTlRSVldVNUtUamhOZUdrMlJXSk5NbEJEWWxsMU1IUk9XbUZyUW1ORlJGcFNlQXBxTm1FNVNta3daVXBwUm5FMlJGSkJURmt4ZEhkMFVHaDNiRlEzV0RKalptdGpZeXRMVlcxM05uazJTWEpJYUdKU1oybEVUQzl6ZW1KeU56SnNTRXRVQ2xKTE56QjRWbTFqZVdScVNtbzRSV0Y1T0hrMlZIVk9jSGRWZFcxUmVsSkZVbkJpUm1WdGRHZHZUek5vZUZOdFpYZHVkSGhWV2s5QmJVWkRialJVUTJVS0wxTnZVM05uTVROV1NFdDJlblZFUjNwRGRYUnJSVVpRZUV0bFIwbDZhWFVyUnpoQk5WbzNRMFl5Ymk5MWJucElNMkpGVFM4cmVWQjNaMUZPV1M5YU5BcG9Obk5vU0ZkU1NrRm5UVUpCUVVkcVdYcENhRTFCTkVkQk1WVmtSSGRGUWk5M1VVVkJkMGxEY0VSQlVFSm5UbFpJVWsxQ1FXWTRSVUpVUVVSQlVVZ3ZDazFDTUVkQk1WVmtSR2RSVjBKQ1VrbHJPV3czTURSaFdsWlBiRVJCVGxCc2FHcG5abE0zVTBaUWFrRm1RbWRPVmtoVFRVVkhSRUZYWjBKU1NXczViRGNLTURSaFdsWlBiRVJCVGxCc2FHcG5abE0zVTBaUWFrRk9RbWRyY1docmFVYzVkekJDUVZGelJrRkJUME5CVVVWQlFtcEthREZwTVV4dmFEaHNSVXRFUndwR1ptbEJPRVJuYUZwMmVsbGFiazh6Tmt0cVlXZzNTalpNYVhwYVN6RllkRms1VEhkR1dXSXlNbmhMY1dsemJraG1XRVZ0UzBGQ2VVTTFOQzlZTmtaQ0NuQlVkRTlaV0RaM1ExUXJaR28yYlVKYVdVZFBUVWt2YjJsRlNVTklhRFZhWlZGTlVHTkhaRmRoUzFsclJqWXpjMkZUYnpWWVdtUTBaMDVHWTB0UGVFd0tWazFzYjBKSlJuRTRibW96TUN0TU56Wm5PVzlXU1hReGNrNTZkbkpyU2tkc1kydGxWM05wWVdOQ2FXUk5XSEpoUTBRNVpHeFBTMnA0TjFscU5tMVJUZ3BWT1RFckwweG9UVTB2WVdOQ1pVTmxUbXB3VEU5Q1ZIVnRVRzVtZUhGelVYZzJTMjh3TXpBeFVHRjFTVTAwYjJSelRFTlFjVUZ0UlhKV1lqVkhWR0ZQQ2tJck1XUXJORWRIY25VMGIySlpiMDQyY25oaE5uUmxNbVZGTkU5ak0xaGtaSFJOYVdSM01IVnZMMDQ1VEdoVE1IbDNTMHRoWkRSVGMyaGljVVJ1UkZjS2Nrd3ZiWEZCUFQwS0xTMHRMUzFGVGtRZ1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFvdExTMHRMVUpGUjBsT0lGSlRRU0JRVWtsV1FWUkZJRXRGV1MwdExTMHRDazFKU1VWdmQwbENRVUZMUTBGUlJVRjZPREZ4ZEZGVlNHcDNRMG96UTBaWlltbFNjMlJpVW1oc05XdDRkV2ROZVZWb09Vc3plV3R3Wkdsb2EzaFFkV3dLVkZobE5pdDFiVlp4UVdKdWNFOXJiQ3Q2UXpOelFVaGhaV1ZCTjJaUVEwaHRRekZRTm1oSVNGVldaWGNyY2xaVE4ycHFUV2t3WVdaVmVYaDJZbGRDWkFwWE9GQkZWV2x4UWpGNk1YQTRReXRRVkRsR1JHWnphVWx0T0RSMFQwYzBXR1lyYldaUVQzazJWMGhwY214UVJtaHJRaTgwWlhkb1YyVm5iV05wTm00ckNuaEViR3hFZUZCRU9VUjJNM2RKV0V4Tk1GbEdaVXN6Y1hoSE5rdHdNRUZITW5wS01UUndURVpZYTJab1pYRlVhakZOYTBVeU0wWndXV1IxUWtoclNra0tNamhWTm5GTVlsUm5kSEJ6VVhWRWNXZEJhVTAxYVdJM1JWcGxVbU0yU0RabmJGaHJjVmwyZDNSRFZGWlViemxKZDBkcFRqSkNTMjFqWW14ellVRkdWQXBUTW1saGR5dGpiMDE0YUZGVWRVMDRWM2R3U2tWVE5FZEpSM0poV0M5akwzTmpUMmMxZDBsRVFWRkJRa0Z2U1VKQlJIUnRjblpCWTBKbVRXTTFhM1ZyQ25oS1EwaHVVRVozY0Uwd1prZzFXR0YzUWtjeGJrVk9ObXR5TWxOQmJYaEZkWGhaVUN0alZYSTNTRzVvY2pKdU1uTTRURUZTUjBoMGVHSlJPVWwzVVhVS1FtSlRPR3A2UjB3M00zZFVTWGxaYm0xNFRUVTNWVFpMTWpWU09VTlZWWE16VFUxVmFsSlJibnB2U0cxeWJHWlpXVXBGYVdOeVlsWlJRMlUxYjJwbFZncFZUMXBvZEVGR1NXTnRVa1EyYkdocVVEZzFhRTVVYVVkUk5rbFRhRmQxV1RaWUwwcHljbFk0Y2l0RVQwbHdVRGhGWWtGUmFYZDZTVFZSYkRac1kzbFFDa0pVUTA1WWJYaEpMMGMwWm1abWFHaFFNR0pLWkhoU1RsWXpNVmhVYkVSTVNuWjRUbTFyV0ROMEswVmpiVzg0TDBWRVUyTktVV1ZGVkhsdFlUaHpiWG9LTm5kdFJuSkJTMmw1Ym5sTVYyUTNOV2xDZHpST1IyNTVWakZ2V1VrMFZqWnVTa3hEYWpRd1IybDNWVmxrTURCSk9HeElTWEJHZEVWNmRFRjZNRFJwVndwTFJVbE1Wa05GUTJkWlJVRTBPRVkxTUZjeU9UWm5aR1JGUlhwR1RVRXlaamhDUXpZcmFIVmhTVGxITWpGTU9FSk5UekJGY0VGS1drTkZURzVuWmtKUUNrTkRXRGRqYTA4NE0ySXJVRVIwYVZwelEyNUhXVTlPV1M5WWNsWTVhMDF5ZFVabmVFTkhSRmRyVERCeUszZHZhMDA0T1RNNFFYZHpabmR1WjBoTlpXZ0tUaTg0TUdVM1RGWXhUMWt6ZEU0MlRtUnhOalpGUVdseVExWkNVMmhRT1VGWlpHNXdZWEZhV0RKUWJGUldXamR3V1VWU2NGTTBhME5uV1VWQk5scEtPQXBOWWs0MFZ6ZEhielpMWkc5MllYSkdiekk1UWxkUVduUk9RWFJaTWpac1owVnZZbVJNZEhSNllrTnlkSEJCUkRGVWJGUnVhMHhZUkUxdWJHMDNkemcxQ21WamNtbHNWMWQyVFhoUlpVNWtVMEpHWTNGclZHMUtOazlLUVdsblNGVkxNRTh5UWpab01tMUhjVVJSWjJjelVIaE9lbUphTVhVMVNuWnFORmsxVjJNS01VTllORFJCSzNVMUt6Um1TVmRvU1hveE9FSTFkWE5PYTNKc01tRllTV2hKVURCNVVFODRRMmRaUVhoRk56TlhVRkp0VWxadGFtUllSVEphV0hwWk5RcHRjMFpRY0RaaU9WWlFSbUYzY0ZoV1NIZ3pRelJoWVdoMWVHbzNlbEJoWVhkUFVpODJUWHBJTURoR1ZqVTJTMjFpVkc5TlNYSkdTVmhpU0VKVlVsRlpDbk40YUU1MkswRTRZa05qVUM4d01YaDRTMFZLYm5aWWRtOW5ZMmszU0d3elFWa3dhbTl3VDJ4UWNqVXJVVkEyYlhSc2RuUnVTa05QWm5wd2J6UnFMMVFLVm1kMVVVdGhkMEZYZVd4Nk5UZDRUMUJESzJOVlVVdENaMUZFVEhjeGQxQkxPR1JFUkhaRlVYcG5UVVVyTjJKb1VtdDVWelZLZDA0dlFuZDJkbFZ2ZGdwMk0wZDZNRUZUV1dnM1lUZEVXVGQ2U1VGVVNEZEtiREpNWjNwTVdIUm1RVlpYZEc0NE9GcHpOVUU0WVROUFJXbzVjREY1VDBaNmVHWlhVbkk1YVRsVENscDJRMmRKWlRsdVlWbFhZeTgxYlZNemVUSlZkRXROU1hsalp5OWpRMVJhZFhGeGMwcFhTbkoxVVU0eFlraHRaMVoyZW1ONU5VRlRkMVJNTkN0SVZFa0tVamR4VGtKM1MwSm5Rbk5uVkZwVk5IQlRUbGxuYkdkM1ZHUjFiM2xUVEVWblJXOXZhWGROVFdZeFIzVnBkemdyYmpaNmVVVkxUblZCYkRCVE1YQXZZZ292VFRVemRqaGxiR2hYZEdKUWNtSjJOazEzU2tWTVdVTlZjRlY0UTFNM01XWjFWU3RrVjIxTE1XWmtSMUZIWVU5UGVpdElaM1E1Vnpkb1VFaHdaMFE1Q2pkUmNUZEViak50WlRocU9ESk9hVlJUZWtsUVJGWnpVR2xhUmpCcFRUTXJOMmcxU21KdlJEY3lUbVJWTVdWaWFEbGpPRkFLTFMwdExTMUZUa1FnVWxOQklGQlNTVlpCVkVVZ1MwVlpMUzB0TFMwSwo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_tectonic-system-01-ca-cert.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiB0ZWN0b25pYy1jYS1jZXJ0LXNlY3JldAogIG5hbWVzcGFjZTogdGVjdG9uaWMtc3lzdGVtCnR5cGU6IE9wYXF1ZQpkYXRhOgogIGNhLWNlcnQ6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJOUkVORFFXaHBaMEYzU1VKQlowbEpSMVl2Y21oMVpqVnhRMWwzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkS2FrVlRUVUpCUjBFeFZVVUtRM2hOU21JelFteGliazV2WVZkYU1FMVNRWGRFWjFsRVZsRlJSRVYzWkhsaU1qa3dURmRPYUUxQ05GaEVWRVUwVFZSQmVFOVVSWHBOVkdONVRteHZXQXBFVkVrMFRWUkJlRTVxUlhwTlZHTjVUbXh2ZDBwVVJWSk5RVGhIUVRGVlJVTjRUVWxaYlRsMlpFZDBNVmx0VlhoRlJFRlBRbWRPVmtKQlRWUkNNblF4Q2xsdFZYUlpNa1YzWjJkRmFVMUJNRWREVTNGSFUwbGlNMFJSUlVKQlVWVkJRVFJKUWtSM1FYZG5aMFZMUVc5SlFrRlJRM00wV2tZeFUwMXBXRzVYT0ZnS2NuazBNbXRWYkRsbU1HbDRTRkZNU0RSbWRVMW1NRnBOVFZKUWVrWmFaR3RQTmxsNlpqWnVOMnBUV2xNdkwyVllWamgxYXpCcE5YaHVWekZ4YjFaS1dRbzRTbXBCUWtoQldVRXlaMHB3UzBwUlJqUjRVMlJvZFhONlNGbFJhRkkxTkZWWlRrcE9PRTE0YVRaRllrMHlVRU5pV1hVd2RFNWFZV3RDWTBWRVdsSjRDbW8yWVRsS2FUQmxTbWxHY1RaRVVrRk1XVEYwZDNSUWFIZHNWRGRZTW1ObWEyTmpLMHRWYlhjMmVUWkpja2hvWWxKbmFVUk1MM042WW5JM01teElTMVFLVWtzM01IaFdiV041WkdwS2FqaEZZWGs0ZVRaVWRVNXdkMVYxYlZGNlVrVlNjR0pHWlcxMFoyOVBNMmg0VTIxbGQyNTBlRlZhVDBGdFJrTnVORlJEWlFvdlUyOVRjMmN4TTFaSVMzWjZkVVJIZWtOMWRHdEZSbEI0UzJWSFNYcHBkU3RIT0VFMVdqZERSakp1TDNWdWVrZ3pZa1ZOTHl0NVVIZG5VVTVaTDFvMENtZzJjMmhJVjFKS1FXZE5Ra0ZCUjJwWmVrSm9UVUUwUjBFeFZXUkVkMFZDTDNkUlJVRjNTVU53UkVGUVFtZE9Wa2hTVFVKQlpqaEZRbFJCUkVGUlNDOEtUVUl3UjBFeFZXUkVaMUZYUWtKU1NXczViRGN3TkdGYVZrOXNSRUZPVUd4b2FtZG1VemRUUmxCcVFXWkNaMDVXU0ZOTlJVZEVRVmRuUWxKSmF6bHNOd293TkdGYVZrOXNSRUZPVUd4b2FtZG1VemRUUmxCcVFVNUNaMnR4YUd0cFJ6bDNNRUpCVVhOR1FVRlBRMEZSUlVGQ2FrcG9NV2t4VEc5b09HeEZTMFJIQ2tabWFVRTRSR2RvV25aNldWcHVUek0yUzJwaGFEZEtOa3hwZWxwTE1WaDBXVGxNZDBaWllqSXllRXR4YVhOdVNHWllSVzFMUVVKNVF6VTBMMWcyUmtJS2NGUjBUMWxZTm5kRFZDdGthalp0UWxwWlIwOU5TUzl2YVVWSlEwaG9OVnBsVVUxUVkwZGtWMkZMV1d0R05qTnpZVk52TlZoYVpEUm5Ua1pqUzA5NFRBcFdUV3h2UWtsR2NUaHVhak13SzB3M05tYzViMVpKZERGeVRucDJjbXRLUjJ4amEyVlhjMmxoWTBKcFpFMVljbUZEUkRsa2JFOUxhbmczV1dvMmJWRk9DbFU1TVNzdlRHaE5UUzloWTBKbFEyVk9hbkJNVDBKVWRXMVFibVo0Y1hOUmVEWkxiekF6TURGUVlYVkpUVFJ2WkhOTVExQnhRVzFGY2xaaU5VZFVZVThLUWlzeFpDczBSMGR5ZFRSdllsbHZUalp5ZUdFMmRHVXlaVVUwVDJNeldHUmtkRTFwWkhjd2RXOHZUamxNYUZNd2VYZExTMkZrTkZOemFHSnhSRzVFVndweVRDOXRjVUU5UFFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2c9PQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_kube-addon-00-appversion.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQphcGlWZXJzaW9uOiB0Y28uY29yZW9zLmNvbS92MQpraW5kOiBBcHBWZXJzaW9uCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtYWRkb24KICBuYW1lc3BhY2U6IHRlY3RvbmljLXN5c3RlbQogIGxhYmVsczoKICAgIG1hbmFnZWQtYnktY2hhbm5lbC1vcGVyYXRvcjogInRydWUiCnNwZWM6CiAgZGVzaXJlZFZlcnNpb246CiAgcGF1c2VkOiBmYWxzZQpzdGF0dXM6CiAgY3VycmVudFZlcnNpb246CiAgcGF1c2VkOiBmYWxzZQp1cGdyYWRlcmVxOiAxCnVwZ3JhZGVjb21wOiAwCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_role-admin.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQpraW5kOiBDbHVzdGVyUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxYmV0YTEKbWV0YWRhdGE6CiAgbmFtZTogYWRtaW4KcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiKiJdCiAgICByZXNvdXJjZXM6IFsiKiJdCiAgICB2ZXJiczogWyIqIl0KICAtIG5vblJlc291cmNlVVJMczogWyIqIl0KICAgIHZlcmJzOiBbIioiXQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_tectonic-system-02-pull.json",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CnsKICAiYXBpVmVyc2lvbiI6ICJ2MSIsCiAgImtpbmQiOiAiU2VjcmV0IiwKICAidHlwZSI6ICJrdWJlcm5ldGVzLmlvL2RvY2tlcmNvbmZpZ2pzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lc3BhY2UiOiAidGVjdG9uaWMtc3lzdGVtIiwKICAgICJuYW1lIjogImNvcmVvcy1wdWxsLXNlY3JldCIKICB9LAogICJkYXRhIjogewogICAgIi5kb2NrZXJjb25maWdqc29uIjogImV5SmhkWFJvY3lJNklIc2ljWFZoZVM1cGJ5STZJSHNpWVhWMGFDSTZJQ0paTWpsNVdsYzVla3N6VW14WmVrcG1ZVmRhYVdSWFpITmhia1p3WTFSU01HSllSbmxsUjJReFRXNU5lV0pYZEc1aFZHOTNWV3hrVkU5V2FFeFdWRnBIVGtVNGVGVlZPVkZOVld4YVZGVlNSbFJHY0ZKVlZYTXlUbFpPVmxNd2EzZFZWRTEzVkZWT1YxZEdWVFZTTUd4UFYxVmtSRlJXVVhkT1JGSmFUVlJLVGxaNlNYaFNWa3BTSWl3aVpXMWhhV3dpT2lBaUluMTlmUT09IgogIH0KfQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_openshift-cluster-api_cluster.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246ICJjbHVzdGVyLms4cy5pby92MWFscGhhMSIKa2luZDogQ2x1c3RlcgptZXRhZGF0YToKICBuYW1lOiBzb21hbGxleQogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNsdXN0ZXItYXBpCnNwZWM6CiAgY2x1c3Rlck5ldHdvcms6CiAgICBzZXJ2aWNlczoKICAgICAgY2lkckJsb2NrczoKICAgICAgLSAxMC4zLjAuMC8xNgogICAgcG9kczoKICAgICAgY2lkckJsb2NrczoKICAgICAgLSAxMC4yLjAuMC8xNgogICAgc2VydmljZURvbWFpbjogdW51c2VkCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_openshift-cluster-api_worker-machineset.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IGNsdXN0ZXIuazhzLmlvL3YxYWxwaGExCmtpbmQ6IE1hY2hpbmVTZXQKbWV0YWRhdGE6CiAgbmFtZTogc29tYWxsZXktd29ya2VyLTAKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQogIGxhYmVsczoKICAgIHNpZ3MuazhzLmlvL2NsdXN0ZXItYXBpLWNsdXN0ZXI6IHNvbWFsbGV5CiAgICBzaWdzLms4cy5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IHdvcmtlcgogICAgc2lncy5rOHMuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKc3BlYzoKICByZXBsaWNhczogMwogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIHNpZ3MuazhzLmlvL2NsdXN0ZXItYXBpLW1hY2hpbmVzZXQ6IHdvcmtlcgogICAgICBzaWdzLms4cy5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBzb21hbGxleQogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBzaWdzLms4cy5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiB3b3JrZXIKICAgICAgICBzaWdzLms4cy5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBzb21hbGxleQogICAgICAgIHNpZ3MuazhzLmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgc2lncy5rOHMuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgIHNwZWM6CiAgICAgIHByb3ZpZGVyQ29uZmlnOgogICAgICAgIHZhbHVlOgogICAgICAgICAgYXBpVmVyc2lvbjogYXdzLmNsdXN0ZXIuazhzLmlvL3YxYWxwaGExCiAgICAgICAgICBraW5kOiBBV1NNYWNoaW5lUHJvdmlkZXJDb25maWcKICAgICAgICAgIGFtaToKICAgICAgICAgICAgaWQ6IGFtaS0wMDJjZTI4ZTQzYzExOTA1NAogICAgICAgICAgaW5zdGFuY2VUeXBlOiB0Mi5tZWRpdW0KICAgICAgICAgIHBsYWNlbWVudDoKICAgICAgICAgICAgcmVnaW9uOiB1cy1lYXN0LTIKICAgICAgICAgIHN1Ym5ldDoKICAgICAgICAgICAgZmlsdGVyczoKICAgICAgICAgICAgLSBuYW1lOiAidGFnOk5hbWUiCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gInNvbWFsbGV5LXdvcmtlci0qIgogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogInNvbWFsbGV5LXdvcmtlci1wcm9maWxlIgogICAgICAgICAgdGFnczoKICAgICAgICAgICAgLSBuYW1lOiAidGVjdG9uaWNDbHVzdGVySUQiCiAgICAgICAgICAgICAgdmFsdWU6ICJkMzJlMWFhZS0yMzQwLTQxNmQtOWJhMi00MTQ5YjhlMWRjODUiCiAgICAgICAgICBzZWN1cml0eUdyb3VwczoKICAgICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAgIC0gbmFtZTogInRhZzpOYW1lIgogICAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgICAgLSAic29tYWxsZXlfd29ya2VyX3NnIgogICAgICAgICAgdXNlckRhdGFTZWNyZXQ6CiAgICAgICAgICAgIG5hbWU6IHdvcmtlci11c2VyLWRhdGEKICAgICAgdmVyc2lvbnM6CiAgICAgICAga3ViZWxldDogIiIKICAgICAgICBjb250cm9sUGxhbmU6ICIiCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_tectonic-ingress-03-pull.json",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CnsKICAiYXBpVmVyc2lvbiI6ICJ2MSIsCiAgImtpbmQiOiAiU2VjcmV0IiwKICAidHlwZSI6ICJrdWJlcm5ldGVzLmlvL2RvY2tlcmNvbmZpZ2pzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lc3BhY2UiOiAib3BlbnNoaWZ0LWluZ3Jlc3MiLAogICAgIm5hbWUiOiAiY29yZW9zLXB1bGwtc2VjcmV0IgogIH0sCiAgImRhdGEiOiB7CiAgICAiLmRvY2tlcmNvbmZpZ2pzb24iOiAiZXlKaGRYUm9jeUk2SUhzaWNYVmhlUzVwYnlJNklIc2lZWFYwYUNJNklDSlpNamw1V2xjNWVrc3pVbXhaZWtwbVlWZGFhV1JYWkhOaGJrWndZMVJTTUdKWVJubGxSMlF4VFc1TmVXSlhkRzVoVkc5M1ZXeGtWRTlXYUV4V1ZGcEhUa1U0ZUZWVk9WRk5WV3hhVkZWU1JsUkdjRkpWVlhNeVRsWk9WbE13YTNkVlZFMTNWRlZPVjFkR1ZUVlNNR3hQVjFWa1JGUldVWGRPUkZKYVRWUktUbFo2U1hoU1ZrcFNJaXdpWlcxaGFXd2lPaUFpSW4xOWZRPT0iCiAgfQp9Cg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tectonic/99_tectonic-ingress-05-operator.yaml",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmFwaVZlcnNpb246IGFwcHMvdjFiZXRhMgpraW5kOiBEZXBsb3ltZW50Cm1ldGFkYXRhOgogIG5hbWU6IHRlY3RvbmljLWluZ3Jlc3MtY29udHJvbGxlci1vcGVyYXRvcgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWluZ3Jlc3MKICBsYWJlbHM6CiAgICBrOHMtYXBwOiB0ZWN0b25pYy1pbmdyZXNzLWNvbnRyb2xsZXItb3BlcmF0b3IKICAgIG1hbmFnZWQtYnktY2hhbm5lbC1vcGVyYXRvcjogInRydWUiCnNwZWM6CiAgcmVwbGljYXM6IDEKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBrOHMtYXBwOiB0ZWN0b25pYy1pbmdyZXNzLWNvbnRyb2xsZXItb3BlcmF0b3IKICB0ZW1wbGF0ZToKICAgIG1ldGFkYXRhOgogICAgICBsYWJlbHM6CiAgICAgICAgazhzLWFwcDogdGVjdG9uaWMtaW5ncmVzcy1jb250cm9sbGVyLW9wZXJhdG9yCiAgICAgICAgdGVjdG9uaWMtYXBwLXZlcnNpb24tbmFtZTogdGVjdG9uaWMtaW5ncmVzcwogICAgc3BlYzoKICAgICAgY29udGFpbmVyczoKICAgICAgICAtIG5hbWU6IHRlY3RvbmljLWluZ3Jlc3MtY29udHJvbGxlci1vcGVyYXRvcgogICAgICAgICAgaW1hZ2U6IHF1YXkuaW8vY29yZW9zL3RlY3RvbmljLWluZ3Jlc3MtY29udHJvbGxlci1vcGVyYXRvci1kZXY6Mzc1NDIzYTMzMmYyYzEyYjc5NDM4ZmM2YTZkYTZlNDQ4ZTI4ZWMwZgogICAgICAgICAgcmVzb3VyY2VzOgogICAgICAgICAgICBsaW1pdHM6CiAgICAgICAgICAgICAgY3B1OiAyMG0KICAgICAgICAgICAgICBtZW1vcnk6IDUwTWkKICAgICAgICAgICAgcmVxdWVzdHM6CiAgICAgICAgICAgICAgY3B1OiAyMG0KICAgICAgICAgICAgICBtZW1vcnk6IDUwTWkKICAgICAgICAgIHZvbHVtZU1vdW50czoKICAgICAgICAgICAgLSBuYW1lOiBjbHVzdGVyLWNvbmZpZwogICAgICAgICAgICAgIG1vdW50UGF0aDogL2V0Yy9jbHVzdGVyLWNvbmZpZwogICAgICBpbWFnZVB1bGxTZWNyZXRzOgogICAgICAgIC0gbmFtZTogY29yZW9zLXB1bGwtc2VjcmV0CiAgICAgIG5vZGVTZWxlY3RvcjoKICAgICAgICBub2RlLXJvbGUua3ViZXJuZXRlcy5pby9tYXN0ZXI6ICIiCiAgICAgIHJlc3RhcnRQb2xpY3k6IEFsd2F5cwogICAgICBzZWN1cml0eUNvbnRleHQ6CiAgICAgICAgcnVuQXNOb25Sb290OiB0cnVlCiAgICAgICAgcnVuQXNVc2VyOiA2NTUzNAogICAgICBzZXJ2aWNlQWNjb3VudDogdGVjdG9uaWMtaW5ncmVzcy1jb250cm9sbGVyLW9wZXJhdG9yCiAgICAgIHRvbGVyYXRpb25zOgogICAgICAgIC0ga2V5OiAibm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyIgogICAgICAgICAgb3BlcmF0b3I6ICJFeGlzdHMiCiAgICAgICAgICBlZmZlY3Q6ICJOb1NjaGVkdWxlIgogICAgICB2b2x1bWVzOgogICAgICAgIC0gbmFtZTogY2x1c3Rlci1jb25maWcKICAgICAgICAgIGNvbmZpZ01hcDoKICAgICAgICAgICAgbmFtZTogY2x1c3Rlci1jb25maWctdjEKICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgLSBrZXk6IGluZ3Jlc3MtY29uZmlnCiAgICAgICAgICAgICAgICBwYXRoOiBpbmdyZXNzLWNvbmZpZwo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/root-ca.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc0EwanEyVkxlTjZuSC90WVNVeHJPQVB5S1ZlditMN1h3dkJOMzdmVklQd2Q0OE5WCk51b1d0N3UrNXNDRUEyVEFucmtYckM1Q3JLSEluS0lmM3YzU2lFZ0pEZFFYVTdpeHZVOVZGNHZHY0VqR2UweXgKd1hFU1FETmNPMHF4TmtRWHZqNVl3aGlXV3Jnd1hpUUwxNThHVnBYUUdocUVHS0JjLzlVUVZFc1llQXB3d2xGYgpud3JYVFdNR25FTUdkSHk2VzFXWVQ2bURzMytJbGJhbS9zWkJscng5azNDRnNBcksxOGlOK2tOQmYra2V1OVVjCmhIRkUwaTEvL0lVT1c1VURpaXRQdTlPSzVvUnZLZU1tRlFQRGxDQXU0Q0svZWhzK21BamdhOW50MUhyTldUdzMKMzl2TTVSRG1MZzk1YlJ2Q3lvUHN1TlZna3BlV2pLTE9ZMGdqd3dJREFRQUJBb0lCQUZudjNIRUs1bXR4RTErNwpQM2J5bXpPYWtIT2VZRDlxL3o2UEZMbGRhSHZaVUV1eTFpMmZtTXQwRmlvNzN6VDhtNHA2ZENWNTNJWGtnRi9FClV4UFFCMlducHpoeFNSbDBHUmpsRmt0WkZKNzREcTJlbUpDQit4amhKQlVHSzFIVnAydUEza2NKMklXdjRzVzEKRkhlcXZjb3Q3b25uVWVSaXlCL0o4UFdmQjNrS3duc2RUWHNmb0lOSVJDNDVxVVI3M3RoT3c2dnlVdVBuR2N3UApRbG9XMmJ0UjNyTCtwQklvY01leWRIa1ZpU3I4dW90S21uWXJEcThvYXRwQ0VQN2tEQi95VDNZaThKQ0QwNHBxClpjeWZ5U2ZXUU04akhDVmJGTDJtNCtKQ1hQZ0htL1EyWnFtU0ZJMjBFVkR4NXdnbTEvRE5OUWo2bDA4MFJQTHEKZDhmZzU0RUNnWUVBNllkaU5ZTE0wMXBUd0czd0U4U3FoRWhqNVYrdDlQaXI2N0VjYWtrckI1V28zL0JIeVlWVgpRN2RaT2Z5dUlnMXhDM0xDSlBmZnZ2THczd2FKZFd4ME5wdi9FUFBsSGdqTGNDWHFMSnlRbnFBaTVidk1CdFFoCjZWbDhvNjFpcW5ocVJ0QnZJS0RMV1NXRG5xTkNGa3lGY3NSMDB6MHZ2WVZQclk1NWhrZm40THNDZ1lFQXdQM2oKSjZMbXdndlQ4VW1Qd1hWZEd0SXV0NURRN2l0ODg0eERnaysvYVJiVGJwNzFhM256dDFRSjBGTG1oaVlrMXpjcwpQMnMvMHAvZTVrN2pPZjFYcGMvSWF6K3ZmWW9SaW1CTGpiSG9YVnNCY0wxTURXMTFQOFNMblNQMk10TkFaRStHCjk0OWdPN2VuOVJ0VEM3TE5Qa2x1RGFFMWNvZVlZUlBSK0dJbFBKa0NnWUFjaEdiT3lBbEJLZitlT1E2ZksxM3oKUjIvRGU5cWZWcHFQN3BIY3ZOQ2ZYWHhBMUhPL3ZTTjdZSEZwN2x4SlZrRGV1QVhUUTkyejBMRHZXem4vOTkxOQpLYkdOSFd0MkxuYkJYQy9yZ0xiOFYrdkxDQkxUSnFaNWUyOElBYzFScWVDNGd3MSsrNE81Z0NaQmdnZzQ5dUU0CjhacWVqUk0rWG9BclhvR2lqemRXcndLQmdCa2p1V2hiWHdYZDlwRFN6VWdkR3JDNHVsOHRIUm81VGdDSHYrK0UKcGVGeG1MOHJNN3I1V3RjQnVubUpvdi9NampYK3VPUFYrNjFiSi9VR1I3RXhJQzY0UDFwQkpJSU03ellBVHpjNAorcFRXbXZ4dG5DK1BsNXRqNWUvbFZGZlFqdTNDTWttalFwemswcHNxSVFwQUUxNU93R2hFSEtzN29JemN3UmhDCjZLalpBb0dCQUwzaEw2bXdkNEhVNnhaa2EvQWpkM2phRWZjM25GK081VnVRSnh5RFIvcmdTZDZJa2JJT3YrUkUKOTd1Y1ErVGNaS3RTemtLKzFhOGtFSEZrWEZWRml6VjUvY2d3SnNrS3ZmR1RSWnd0ZDMxdDJJcnF1QTBwemJ3NQpreUdzMWo3WDZJcFc0blpUcFE5NlE4SVYyQ09rb0puQjFoUXg2YS9JOUFRVjcxK2hlelZvCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/root-ca.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXdIaGNOTVRneE1ERTVNVE14TnpJMldoY05Namd4TURFMgpNVE14TnpJMldqQW1NUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN3RFNPclpVdDQzcWNmKzFoSlRHczQKQS9JcFY2LzR2dGZDOEUzZnQ5VWcvQjNqdzFVMjZoYTN1Nzdtd0lRRFpNQ2V1UmVzTGtLc29jaWNvaC9lL2RLSQpTQWtOMUJkVHVMRzlUMVVYaThad1NNWjdUTEhCY1JKQU0xdzdTckUyUkJlK1BsakNHSlphdURCZUpBdlhud1pXCmxkQWFHb1FZb0Z6LzFSQlVTeGg0Q25EQ1VWdWZDdGROWXdhY1F3WjBmTHBiVlpoUHFZT3pmNGlWdHFiK3hrR1cKdkgyVGNJV3dDc3JYeUkzNlEwRi82UjY3MVJ5RWNVVFNMWC84aFE1YmxRT0tLMCs3MDRybWhHOHA0eVlWQThPVQpJQzdnSXI5Nkd6NllDT0JyMmUzVWVzMVpQRGZmMjh6bEVPWXVEM2x0RzhMS2creTQxV0NTbDVhTW9zNWpTQ1BECkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVXNyRQo1K1ZVR1ZJcWU1UmdsaUUvQnJnVzNieU5USU5aOC9RV0RTY0VzeU1vVjkrK2ZXbkljKytENXBsNG9EZTZ4bWdKCnVQZzVUcFRLZVRFVVNZbHhxcGZtZkNHVDF5STBKQXZRUmw5cEoyTnN4UHpoRS9FQno3RVYzV0ErYTlBWHoxSC8KOGdveDlCejE2VHlRbXZUU2JrOEFJU1NmUmtTSWFCcytpeTJUZWwzUkx2UkwwL25ueFFzTExFaThpWkZaYXVCdwpUdWZWellMRWlBZCsvMVRHTmRFZFhrWTJiOTZ0b1FJK1E2SE5hMmc5TkMwZmRHVlBidFRuNU84TkZpa21rVHdYCmt1a084Ni9MYWk2K0NDMmVFamdqeHN2TEZnV1YyRTlYVVA3OFNLdysvRE1vdFU4MHY3OFpCQ3lqRnBTY2NvNTcKVFcwV3lCb2x4WldTbnU3UG1nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/kube-ca.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBck9HUmRVaklsNTF2RjY4dU5wRkpmWDlJc1IwQ3grSDdqSDlHVERFVDh4V1haRHVtCk0zK3ArNDBtVXYvM2wxZkxwTkl1Y1oxdGFxRlNXUENZd0FSd0dBTm9DYVNpVUJlTVVuWWJyTXgyRUlVZWVGR0QKU1RmRE1ZdWhHek5qd20yTHRMVFdXcEFYQkEyVWNZK212U1l0SGlZaGF1ZzBRQzJOYmNMVDRjSlUrMTluSDVISApQaWxKc09zdWlLeDRXMFlJZ3kvN00yNis5cFJ5azBTdTlNVlpuTW5ZeVkvQkdzdk11azdqYWNGTHBrTTBSRWFXCnhYcHJZS0R0NGNVcG5zSjdjVkdUZ0poUXArRXdudjBxRXJJTmQxUnlyODdneHN3cnJaQkJUOFNuaGlNNHJ2aHYKQU9XZXdoZHAvN3A4eDkyeERQL3NqOElFRFdQMmVJZXJJUjFrU1FJREFRQUJBb0lCQVFDSDQ3NXNURXV3TVVXegpmalY3R3ZTRE90dXVyRGtWV0tKYnEyZGNXRzl2OFpiUWFMcVpYRTRHdHNwYkQyeFVmK1JJcUJWdHBPcnVsK09jCm1YSFg3U1VYR3daYUhoaWZrQUx5aG5mMmViaUwvN2NWcUN6a0RuclZwUVY3MWdjaU91MUhtNldxQmZ5eGFPTTMKNkV5Ti9VWVZucTlCMDBmTzhuOXF1V3ZHMXZQcHFhYTBEWmdOdWE5T0ZKamZvK2FsN0U2eC9FWGxUNlV1UmhOcwoxbUJreUtzdE9iT2F1MnBCQU1udCtPcytjTkZNSzZTZ0toY2NQZVVoYkRxNFpURjEwSENUM0paVE5PZXVSVDdGCi9oNGlPTzFKOER4MWpMNEdpMyt2L1BXMzNYQU9Lc2ppWEQrN3BJRWp3Lzloc1VEM1ZtVXdaTWJwanJiTFVXZkcKMjNvblVWVUJBb0dCQU1jN0JBZXlHNkJVNFJjWHZ1UXBKQ3V3RmFBU3FWSzB5TncyeEZNeDVEZVRzVmhzZXZBNgpjVFhidTVLR25BUTc5OWN4VENvbEd6dmkwdVFVOW1XaGtLK2JTa3NlcFpMZTVjbFVvdzlqZkt6d2FSM2pxdkUwCjlxVzZYTk1FWFlvbzRWazBOcCtjRm45cFQxWGtyYVdFTGFqWVU1OEtXMEFybG4waW9RYmFraU9aQW9HQkFONGsKZXV4VGJBY1YvVkN0elFSamZxa1BoSUZzMjFzYzBOWXZjdDF6T1A2TE1ZWVlwVnJFeEpDVEFUSXR4eEZyNFVVdQpmdkg2RzBGWWFFcWpwb2gxaHV3V05ZSWhKa0xOcmJtQ2tCS1hvMFA4Mjd3aWZxbGFsZFVxci9meU85N015Z05HCk5yRmVVOS9ZU3pwOTVwZVhpVjNXTHNhdnREQkc4UDJjN2RldEpiUXhBb0dBTGkrdlFuMTJ6QmVCU3hJMUxiMmYKNWdUZkxvbkUrU2h4L0NNeUpqdEZ0ZUNtVjJKbXFiUlN0SEtwTEZIS2IyemJpdWFoeW85cG5kdDZtbWVGcTQvbAo4OS9qUEVEeGozZmUrMnFFbHJld21vTHRTNEdSQ25RRnpldkRReVFhNzBHRTVHSW5XNThhMUJTODBLTy80Y1FmCnRhblkwT0Rjd0thYUw0NU1tRU1wWjlrQ2dZRUFxcUp3L2JreXdOcW1RMlBObUxKb1o2cHd5UTM2RFNtOFROb1QKcklGR1pWZzhTVm9ESWc4RlFseDVUYmNXTTQ2ZmNvbTluMWZUdWNVVUQwbFhzWGc5bEhtV3pvZHlJVnhtTnBwUQoyc2M1OVE1MUp6V0QvOGlDVVVUQitINU1lTjdyeWNvVVZ2Z3pDejNVdzNCVVFWdDRlK2o2ODBtaDZuZUR3L3ZZClFwUlE0dkVDZ1lFQWo0VWZNSmV2dlJqTkZNOTdZaDhoVUdURVQyZWpFVktqcFlWQWo3M2NmSWpVQ2hpTzNYbCsKNE9EbTFmV2NPUncxK1NYYmx0WmZrWVVGOFF1Nk12aHQ2cjZFZnZ5cFdaeGFYM1R5eXFxcXl0TmxRcHBBaVBMMAo2RklIdE5PeElmRUJWdUFsMWVsRWNpQXEzRzJDRmlpZVhmVVdxaUZhUVpLWmpNUUdaK0VsVmpnPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/kube-ca.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJR1Yvcmh1ZjVxQ1l3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5Tmxvd0pURVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFREFPQmdOVkJBTVRCMnQxClltVXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3M0WkYxU01pWG5XOFgKcnk0MmtVbDlmMGl4SFFMSDRmdU1mMFpNTVJQekZaZGtPNll6ZjZuN2pTWlMvL2VYVjh1azBpNXhuVzFxb1ZKWQo4SmpBQkhBWUEyZ0pwS0pRRjR4U2RodXN6SFlRaFI1NFVZTkpOOE14aTZFYk0yUENiWXUwdE5aYWtCY0VEWlJ4Cmo2YTlKaTBlSmlGcTZEUkFMWTF0d3RQaHdsVDdYMmNma2NjK0tVbXc2eTZJckhoYlJnaURML3N6YnI3MmxIS1QKUks3MHhWbWN5ZGpKajhFYXk4eTZUdU5wd1V1bVF6UkVScGJGZW10Z29PM2h4U21ld250eFVaT0FtRkNuNFRDZQovU29Tc2cxM1ZIS3Z6dURHekN1dGtFRlB4S2VHSXppdStHOEE1WjdDRjJuL3VuekgzYkVNLyt5UHdnUU5ZL1o0Cmg2c2hIV1JKQWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJSSWs5bDcwNGFaVk9sREFOUGxoamdmUzdTRlBqQWZCZ05WSFNNRUdEQVdnQlJJazlsNwowNGFaVk9sREFOUGxoamdmUzdTRlBqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFCakpoMWkxTG9oOGxFS0RHCkZmaUE4RGdoWnZ6WVpuTzM2S2phaDdKNkxpelpLMVh0WTlMd0ZZYjIyeEtxaXNuSGZYRW1LQUJ5QzU0L1g2RkIKcFR0T1lYNndDVCtkajZtQlpZR09NSS9vaUVJQ0hoNVplUU1QY0dkV2FLWWtGNjNzYVNvNVhaZDRnTkZjS094TApWTWxvQklGcThuajMwK0w3Nmc5b1ZJdDFyTnp2cmtKR2xja2VXc2lhY0JpZE1YcmFDRDlkbE9Lang3WWo2bVFOClU5MSsvTGhNTS9hY0JlQ2VOanBMT0JUdW1QbmZ4cXNReDZLbzAzMDFQYXVJTTRvZHNMQ1BxQW1FclZiNUdUYU8KQisxZCs0R0dydTRvYllvTjZyeGE2dGUyZUU0T2MzWGRkdE1pZHcwdW8vTjlMaFMweXdLS2FkNFNzaGJxRG5EVwpyTC9tcUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/aggregator-ca.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd2xVY01BdnhmQVgrVklHQzRQQWtxZlJyTFdzeExUS2d0emgyZTlqdlBkZ1JqajFlCk5vazBOTkp4TlFETDNUdDJIZ1RLYUFHUmcyNkhJa0k3MmdPOFZtMlFVT0RPM0pHZEROOWo5T3RSOHE0eUp0WnYKQzI5bUUzV0RLTStWSDdXQ2YwU0lrVysvZ3RiazRXRXBQbXJZeWxlcEMzTEt1NG83U1Jubk1XUWxvSkpiZlVIWQpKNDYxMzVQTklNK2NXdmxBa0d2d05xc2wyNm8vcDRScGZER28wT08vWXVlenE5UEJEM0g1RHBNV1BnMzVYY2V4CnJ0Ukh6SGdBZTNGNE4xUzdMN1crdU4wSjlPQmJaOHplSjNyam52cEQyQi9mdmlsbm5CQjYySUJwR1d3eERGUFcKeVczaDkraDlUNEprRzAvSnhOZzFoMElKUWpaQUdHZW9RNEZWTHdJREFRQUJBb0lCQURvaUpjV0Z2UjZoMkZ4RgpSZmF1UC9tTGdZaGJ1YUZRdE4wNmljOHdyUmp1Q3dwbTkwa1BNRXZnN0RhejMwaDJJamFHcmxvQXBod1FNMktmCk43SlhUYjc1RmFQc0xGVzFSYXIxSkx5K3JJd1JhalZPRG5mNFFpdnVDbWRwK2EwN3FpY1NSRnhsZG4vWWN5MnMKMkI2dzdkdFI3K0xaMnlYUkN6MHAvNHc1N2p1akp4L2FzV0tLYnhRcHR1L2toQmRrY1NxY2tsZTFFUDMxcnBtOQpaZTBYOTBvYVhvMkIybVdnS2VKQWxoTnM2ZWpURGpjdkJkUGxZS252Mlc4bEMvM3o3ZElLY2lLcmdlaWZHRFZwClJoOGVQNkJmMkorR0dSV2cwa0R2YVM1cjIvRmxrVFErdDVROC8vQmcrZnJ4enZHZ291eng4NklnTUplcitZb0IKd2luU3lqa0NnWUVBMVM3dGFXdkZNWm5VZGFnc0V1R3V2cmtlK0lxdkNLSTVmVUJQN3E4QUZkSXVDMWNxWEVRNApNYlErbG9zZG1QdXNmZ1A2TmtKMHBPTXN4SEJRT2taNlhVS2QvUEJ1LzR3bHpmTy9TRDdJWm5WRmpzVFRGMWJDClU0OHVQdC9xYkFNWEVqdG5UeU1ob1Ntdkd6cVdLd1JXWU9kUHk5MkRyckVuL1RYTGVWTzJJcDBDZ1lFQTZWengKcU5hTzU1OUdhVVkzWkVrK2ZKUDI2cUxxMUZXNlpnb0dIWS9QVmF5WDJDcGs3WHhqZE9WQmRQb3JHMjdYNTBJUwp4N3dXM3RmS0k2MXlQUUFyd254QmpaQWFUazczS0ExY0I4dDRCTjJQSThuWEFYaHh4amNrdVRsN3JCWDEwT2J3CnlmOVJxM3ZOeUFudVJra2I1cis1S2RKdkxLVFJaVXNCQ2xDVVZ6c0NnWUJ2UGR1WkJTbVRKbWhkTlBJNnNCVlYKWkpncXJZT0VoOUpqNzJsR2JYOG40OU12Qzc4SkFuZ29SNXZaUnFLZEw4Ymt3d0tQeWNIQVFPTWRabFlXOHF2cgplbFdpcFh2bVVhVndnTjZ4dmtFb1pjMTBJSFRlV3VGd1pPaUcycVVpMDhINE81TS9FbC84RHhwV3BRMnpTTUlpCk10SEsyYjViTEFwbjhPaEtXVXBUYVFLQmdRQ2x1c05KQSsrRFlXTXcrcFAySGVwSnNRK0hmV0pHb0FkNzFoeVgKdS8wa1BDbXVkQlV2YjhwMlJ5WmdmQlpIS2tZY3o1amt6cGh6ZEU3elhZZW0rTXNiR1FHNUZxRUlBaDZYREQzUwpyMWF5SmVNMUtIQVFkRWhnMitLeHhMZ204NFdhOFpnSjdOQkVkKzBoNXFPWXVPMGV5QVFwUm5COEJTVk15YUtZCmY3ZUo1d0tCZ0Fmdy9PTWhiTGlXTVhFNWcvckxIeXpxZDEvaUJLUlk0WUtuSDB6VHhVNSt4am1IcWZidXljUXMKWGJFYnZ2ME1FTGRpQkovNk5PK1JFdElkSFRqZXEzdCtiRitvU1dlZm53MnFCU3hLbGN2U005azVvNEI3QVR0SApRTk5ETDJKSnN3K0VxcjA0VlM2aHBUV1pxS0JrMUFuemtnQittaUw0aWZ3K3VjL1lxR1ZJCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/aggregator-ca.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNekNDQWh1Z0F3SUJBZ0lJZHJFMVFFdHJuQTB3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5TjFvd0tERVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFekFSQmdOVkJBTVRDbUZuClozSmxaMkYwYjNJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURDVlJ3d0MvRjgKQmY1VWdZTGc4Q1NwOUdzdGF6RXRNcUMzT0haNzJPODkyQkdPUFY0MmlUUTAwbkUxQU12ZE8zWWVCTXBvQVpHRApib2NpUWp2YUE3eFdiWkJRNE03Y2taME0zMlAwNjFIeXJqSW0xbThMYjJZVGRZTW96NVVmdFlKL1JJaVJiNytDCjF1VGhZU2srYXRqS1Y2a0xjc3E3aWp0SkdlY3haQ1dna2x0OVFkZ25qclhmazgwZ3o1eGErVUNRYS9BMnF5WGIKcWorbmhHbDhNYWpRNDc5aTU3T3IwOEVQY2ZrT2t4WStEZmxkeDdHdTFFZk1lQUI3Y1hnM1ZMc3Z0YjY0M1FuMAo0RnRuek40bmV1T2Ura1BZSDkrK0tXZWNFSHJZZ0drWmJERU1VOWJKYmVIMzZIMVBnbVFiVDhuRTJEV0hRZ2xDCk5rQVlaNmhEZ1ZVdkFnTUJBQUdqWXpCaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQUQKQVFIL01CMEdBMVVkRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFmQmdOVkhTTUVHREFXZ0JSSQprOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBUklmTlBoaXRmTngxCjF3MWwraGYrMHA1bk9MZFlCWTJuYXdlcFRhOVROZmthTHJWTkswWWJUQ2I5YXF5dHk2OG1pV3lTalh3MHJ5UjcKSTlzdmFkVmd4RUc2K2hNaGxlQ29GcHNCeVNoZkhHaXY1djk0T0REb2VBN1pHT2NZY3FSditSdDdXVXlsbncxcgowWEI4WlZaUnpObVRVRzZyRFJoclhydURCUnhnNUU2bzRTY2FHcGVwMjJKN2UxWFNzTUgvR2gyYjNMYng2V3d0Ck90bDVvODVzUHBKekRMdW9DYmlDbi9PTWgxMkJ4cy8rMDZZUDlEMVAyKy96WnFNUFVHS2IwZnRVNldNSWxzNFgKNkM3N2lpdDlXYm5VOU1PbTBOTW5EcXErY1RtU0w4QVdFMXV2MEt0bHhLeS9hTGxCRkNtY2dNdG04SWg0R1ltRwpuMllBYlFoVnNnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/service-serving-ca.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMG1VUUNZRXVZVHEvRUx0OXk3KzZzOFBOUjlId3ZEWW5jaGF6WVlSaVBVbVVLRGJKCmxiaENPMmtxM1VTOUVsOCtnMFBwenRxcDAyZWY3Y0lGaVRHU2hjVzY5OFVVSDAydmZhV3JtcDg1bFRXT21ybHcKYkxBVUV2UDg5Tjc1dUh6aisvR21xVnZacjljcUh4cnB3N1VqLzVZYlQ4Mis2dE5kK0lxZDJUOXRPcXF2bms0RwpNMkorSUNtSGsycytzcmc1WXRJR25HWkZQc0dXV2V0dk1zekFwZEZZTVpqVFM3amViTDBnZ0dudTg2ZFVOam5hCjVZaGFzWmZuWU5qdVY1Z3NtbjNXRU9mQ2lGYTI2RkF6ZUw4akRWekxoaklwQml4VEVXL2UxS20xVnBFZnpDZ2wKV3p4OUZ0cWs0TCtmanR4clREeW1jcndOVjBxQjVCa0hLRFpFdXdJREFRQUJBb0lCQUhCUTkxQzduN0RVRmErdgpCNmEvZ2NINW94cldIbmU3U1MrRW90cEtPOCtQK2dIRnpiT1ptL0h2WUt5aXgzU0pWK3ZuVTJmVUg1ajExdENzCkpSeHFWRmdKaUpoQW8wOWF2M2FKL0tRY29EYmhVbkdTMFV1VWJBTDZNVzNmb3R3ei85azkxY1RQZmRSN1BzZEEKTE04SFltSk5GZU55YUpzZm55alJoeGEwMzNEVE9laVdMVUpzdG5OZmtDTEpOdmRzOU9KR240VDV0Um1CQTMzVwpubFNRVit0ZkZ6eFpBS29vd0x3RXY0NUswWkdPYXdxYlY5ditQc1MwKzU0bkxlQklSVzQwcC84c3lCcGhSZC96CnNKS3REdGpBRzlqQUdRbTR6a0tJVkZ5anp1TU9SQzBObXc2amE4L0VxMXA0bHBTUVZpQUZjRllLWkhnOXFXaG8KbmdHcFNwRUNnWUVBNFBFbFVVaXAxbDZtcDJwTDRRdDNaZzJXSFR3YTZ2Y2Vob2x6TDlka1pQajYvaWdaeGtXawpZdDlidzlkRStrRWZwRU1UV0FwZXRzczUvd056T1VjVCtFa085S3FtdlJGWXM4c2pqZFJSZ290N1VnMFdhUFpUCkhtQmZnZmZsZzJyWUdjazFRVlFMbDdibmFVRHZwT2Y0SFJSWjVHMjhqSE9RdjBhSjYvTzVxbGNDZ1lFQTczRzYKWFVDVTZXQkQ3OElsRXpmTVNoRlJ1NmxBcTBJRU9pRi83ZWhueUtqb2E3ZzNCd2VlOG0vTEZZdGdEUGtnYUdVRQpvUW1DVlh0Tm5mKys2eVNGUmxnZTFDUlIrU25VV0psc2dnRTZVbnBkeG1LbEhFb1VlYktqM3dkSzg4YlY1eCtMCnlsZkhmdDNZdU1UL3VUcEV0a3UwTjhIZFY4NWJ3RkU5aEN6OEFqMENnWUVBeU44UFVCTHZkM3QybnpJUktKb3cKdVhXUWcvTFVwdGFlNzgxMmkxWnhWS255bVZ2K0NFelFpMnFpYTdTazZFV1hsL3crSGZURXQ3K3J2c3E1N29CRwptUVhFMFVCRFBidHIxc0trc1ZiVW94c2p1Ulh1MlRSKzdUVnFsSWxtNzRCT0VsalhzY3IzdnplYVZ5ZWgyVVU5CkQ5ckltM0JUVzZrbnJXZTBhbnh2WkdrQ2dZRUF6NEUwcTduYkV3Q3MvMnUxcTVqd2ZzUFJuQnNLZ3gvNy85Q20KU0N2ZlBTTThBSll0Z2ZjVnhTNGl4akg1OUdRMXRLTE94eXd4ZWhrWVk3T041Y1BKaC9PNEM4cktDMjgzcWV5VAovM3BHNjlGRjBUWU50cDF3YnlMa0p0VHdIS0VWSUczVFBIQ2ozNHNzVkx2TWpkNDBTL01CWkV5cW9IeWlRT0ZtCnVWUXV0VlVDZ1lBdTBHOENpZE9sVkpGbWFYMnUrRTdOSVBOVy9FMXVtbUkvTXlWQWRYUzdMTDBTa2pkeFR1QlMKYXNlU2RnUytOeTRnemViZkhDRFVtNUtacEx1N3RCMUtrNFNnM1JsQVhWSFN2TGVvRnREU0FYSUZwMG5aUUdxVApQejZXUTN6SG1wS2VmMVc2azRtd3RDZW84WitZSTAxVFl1NVd3OU9pWCt5NHBhT0FURFBlZGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/service-serving-ca.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPRENDQWlDZ0F3SUJBZ0lJVnJSSnhHek1lNXd3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5TjFvd0xURVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhHREFXQmdOVkJBTVREM05sCmNuWnBZMlV0YzJWeWRtbHVaekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOSmwKRUFtQkxtRTZ2eEM3ZmN1L3VyUER6VWZSOEx3MkozSVdzMkdFWWoxSmxDZzJ5Wlc0UWp0cEt0MUV2UkpmUG9ORAo2YzdhcWRObm4rM0NCWWt4a29YRnV2ZkZGQjlOcjMybHE1cWZPWlUxanBxNWNHeXdGQkx6L1BUZStiaDg0L3Z4CnBxbGIyYS9YS2g4YTZjTzFJLytXRzAvTnZ1clRYZmlLbmRrL2JUcXFyNTVPQmpOaWZpQXBoNU5yUHJLNE9XTFMKQnB4bVJUN0JsbG5yYnpMTXdLWFJXREdZMDB1NDNteTlJSUJwN3ZPblZEWTUydVdJV3JHWDUyRFk3bGVZTEpwOQoxaERud29oV3R1aFFNM2kvSXcxY3k0WXlLUVlzVXhGdjN0U3B0VmFSSDh3b0pWczhmUmJhcE9DL240N2NhMHc4CnBuSzhEVmRLZ2VRWkJ5ZzJSTHNDQXdFQUFhTmpNR0V3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkVpVDJYdlRocGxVNlVNQTArV0dPQjlMdElVK01COEdBMVVkSXdRWQpNQmFBRkVpVDJYdlRocGxVNlVNQTArV0dPQjlMdElVK01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnJtM2NOCkp3a0dNM3Z1SUdSSmpETUVXdkVnUlc3czNXV25uZFY0R0ZaOHR2Y3o5Nk1McHN6NFE0WXV6a1NYKzV4NktrcWwKaDYwTXozbmlpb3NjN2xkcktpUFZNYlhYU01KaVlUQmxLQ09kMTBtZEhRUEJmMFhRYjcraGswSkdYUlUzRndiUgp2VWpoVm9CemhFL3NwVkRzTWtFUnVVY2h4dnd1c1JjTldncUZVQ3gxRk4zOGFUZGp6Tk9RTTJkZ2tkbEdkaGpXCnMwWWlXa0JuOTdSeDhhZDFYMnhzb3JoaEcvbkVuclJQbnRna2VDcjhrcGcyZTErK28rb1VFQXJWOHJxdGNqeC8KanRxMzN5K1p3bVcrMHlIWmF2Z2NydkxwVkNEdTFha3VIR2VyMWEySTdxY0FQNWF6R2lHUU5pTDRXQm1LeGk2YwpJMzNzQTRoSHJ1UEt0VXpyCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/etcd-client-ca.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdnJvYmY2SVNWdnlBVkpnd0l1enBhWmlacGdPQnJkTHpLU21sM0Z1czQzOVBBWXJaCnlocHRnUEtzbHRKTlZ1UVpoTGk1ZTdnNnVGenJVT2RKYXEzRk1ZcllrbGtxTWFJOWhodllJZWh0U0VXbUFncnkKcFdhU0Y1STZiVGwrMEE4WHUvOUpxR0R4bERLbVJ2UmFsOFVqSTFoTVJ3RTQ1ZWd1MmpjdUVRcXIxbFAzOFdRbQpBOFNJY1dYTjF2b3M5VVYxb1dUYmp0V3hvaVU1SFBwc2JJSmk0aUcvL3pGVHdxajZwd0tWSkp5U3U5b0hWcWRPCmo4NDd4ZnAzQVZIVE9sYnR3ZGV2R1ZlNVdpVlJKclgyRDNmY2UrQzdyTG4wOFBvMmgvY3h5aitIOGhMdUFhaTgKSkhqZ1Vub1lrRmNOb2tQWG5SYjFkSFZKQWEvWmpxSkV6OTE0MHdJREFRQUJBb0lCQUd0OTZGR2V2a2RZTjl0MQppbXVrcWtoaFFQZFhzcGFNOVk2VmNtMG5IZUY1dHNWZnhDOHJoZHZPNllaM01DOXdqeEZHS3dPWGFVRE8zYkRUCktZVitPazBadThWL2kxQTk1LzdWWXBKNXRGMnZJMGl6Y3QzVldURC9zUDR1RVZLaHJ2YTlnbjNyWlR2bzc5MjkKaWZGUG9lWWh0WnV2REtwR21XRlRDQnVDc0NZeVk5QlZkVGhxQWlPUGV0aXVxTStmMnRXM2dnYUhzSTJKWGlHWgprN1pDN0VvZ3VoeWw1VDNiN1IyTC9CQWZaUVJna05nSzRYLzdHaldLamR5UkNDSWh5ZUJMZkc0UTdnQWVwRVlvClpNR3lIblJXc0YyL3lnZWF1aFF3RzYwbFIwQllWSmJGN1lKZEs1clczQjhZdE92QzhlcE8zYzhoSDVGV0t5MjAKZEdnQnVJRUNnWUVBM1lhT1oya1B0K29zcUJMbFhONXdvengrTE5UN3ZQcUc0R3NZT0tlWUkyY0VlQUdsVEFOdgo5VmhyTTYrNWJHaEluVWxlZUFKUlNISHFGeE43b2J2eVZKUHFETFV2cXc0MktBMVh2YTNFNHpDSVZnYWJmTXVHCjl0bTBUbEI3dUFDaGZQcTcvTDVSVGlOWWNqSGx0elp2NGI0Yzl3VWFMb0hmdmxtN3ViOG9MTnNDZ1lFQTNHaU4KZzRNbGhXbjl4a2pkOXhTYjNFZlVtOGJRYk5RRXUyMEZKeEtwVzJRdURXYWVsNDBYSHpETys2Nng0SDRBZnBBcgpjTHRQb29tSm5VS0RKLzJGTEc3UjRNSTJuRHY5R2xFZG1wNmt1UXFvZkZuOUphVWN2VWE1NFJ4R01ab3NDdlJ4Cmc1LzNyYjNIdUx4eW8vWUE0NGw0c0tnSHhuckliRnJHQ1ZmY0tXa0NnWUErMFNFZ2dkSkxQTVJkQkw2MWp2NHgKeTcyYnlPbDV0VEQ2QW1SajdHSmY1NTZFeVRLdVUyczBEMWFXMllXakVBOUhTcjdYR1JFamtlbm5rVWJGbmg0aApqYkFZMm1naUFXMnAvZDZia3VMNTZaRS9rN0FUdTBNU1RMbXNXM1k1dnpRTDFLM3FCYTNZa24xS0pJd1hZQUJwCjZ4Y2JsUDdQb1ZScERka0Yyd2J4Y1FLQmdRQzFnQ09JdU9hZEJydEVIWjByYW4wdTJMZnJ6N3l5NGFWRDhuTGIKeWpKTVlDTE1Sa1V5NTZ5eXNxNi84d3Zub2RzbVhmSm4wdGV4TVRGeG51UUNlbkxBTkVJQW8rMzBtakhEQ2lrbQp1cDFMQTh2Ykd2K3JrRndxUWFPd0RHaUJVRVFVZ1ZjNDNQSkkwSTgzUVhmbUxSNXVRVFp4d3Uwa05OZjI0b2xTCkNGZjBnUUtCZ1FERm5Ua25iVDJRNko4bVZMZlFMN1dJeUx5RHRGTWo4V1ZzVnp5WjZsQjNLRHJLZEtOVERqSmEKY1VCS09naUk2MjJZU3hLRWtNWTZjdVh0dm5XMTV4Vzd5QUF0czVLTzdvbDc1Zm0reXE3YjhZTTFWd2NieTY3YwpYRXR0TDFWdkdhTGdmZ0xuKzFhOHNsQmxxRnFIQUJmMW5SdXJSVnBiTk5ya1U3ZG5vaTVUMnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/etcd-client-ca.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lJRlQ2M0tmVm5tSjh3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5Tmxvd0hqRU5NQXNHQTFVRUN4TUVaWFJqWkRFTk1Bc0dBMVVFQXhNRVpYUmpaRENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDY2RzMraUVsYjhnRlNZTUNMczZXbVkKbWFZRGdhM1M4eWtwcGR4YnJPTi9Ud0dLMmNvYWJZRHlySmJTVFZia0dZUzR1WHU0T3JoYzYxRG5TV3F0eFRHSwoySkpaS2pHaVBZWWIyQ0hvYlVoRnBnSUs4cVZta2hlU09tMDVmdEFQRjd2L1NhaGc4WlF5cGtiMFdwZkZJeU5ZClRFY0JPT1hvTHRvM0xoRUtxOVpUOS9Ga0pnUEVpSEZsemRiNkxQVkZkYUZrMjQ3VnNhSWxPUno2Ykd5Q1l1SWgKdi84eFU4S28rcWNDbFNTY2tydmFCMWFuVG8vT084WDZkd0ZSMHpwVzdjSFhyeGxYdVZvbFVTYTE5ZzkzM0h2Zwp1Nnk1OVBENk5vZjNNY28vaC9JUzdnR292Q1I0NEZKNkdKQlhEYUpEMTUwVzlYUjFTUUd2Mlk2aVJNL2RlTk1DCkF3RUFBYU5qTUdFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME8KQkJZRUZFaVQyWHZUaHBsVTZVTUEwK1dHT0I5THRJVStNQjhHQTFVZEl3UVlNQmFBRkVpVDJYdlRocGxVNlVNQQowK1dHT0I5THRJVStNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNwd1pnWXcvLzEzRWdDaHpvSlhqVlBWdTJuCmJabWFUdWtobUhBUCtUR0lHMkJRb24xRk0wQ3BsSkhPbEphMmxMb0JvUTNINEk0WjhqNmR3MHhKeTZOUW9BcGMKRUQ0WTBiZU5vSUN6L2twNDg2NDFDSDQvZTJxcGNEU1B2QlNyQU9tWWpiY0tqSjJONDIxRHR6ZTM4eWVadEVkSQpWQzljNWdHQ2hYOTlkYkRjV3ZneXRsNlVjcm5DZmhjYkNjT0M5bHk1cTZZc2RoamdaNnFObXVRY2k3eVBpbytwCnhhQzBVRFlOVWJxdDJOeWtJZjNjZGtBRk5XUmlyTHdyWCt1SUtGS3hpOVZOOUhUZmZYRXBMYSsveDRzVEcrRHEKRkgxbzdUS0xFSlBHMVA3OEZpZnVmOU1aRjMreW55SDVYK3VqU1ljVmp3Wk14VndtOTJvMFc0NWZ5MGx3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/cluster-apiserver-ca.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNUdZaGozRUhPb3VKS0FOWFZnRmxxcDNLM1lzSDZRUHlncC84NVgyVDY5RDdVcHp0CkNURUoxcjdRWUdBS0tLcWRtS05uZjVTdXpBeHRBZnpiY3pTMk9od1J3UXJtRXNlaFRJTVBKWlpMdTQvQUtINlcKY1gvUmlQM3NUcFBoUWFrSzIrSGJ4UUpmY1M4Q1R1Yms0b1A2WlZseXk0blVkZkxjL0dJbUxGbGc5YTlJQnB6eApIdmd1cjF2eTdhajllMkZoVmFTNnl1ZjZEdHJnZUlEend5Wm5xN3BJUHdkWVRXM003TG5sUm5WUWtoVG9rd3NyCjNGcld4QkJvUHRFY1JhdDVNMEhxaVY5dkZ6Tktid1BoTEZ2UWY4cGpEelJONWRHdEV0SkJYTWN4L095a3lGZW0KcjROSTJtNzNMMHpFNzRBbE9YVU5zamRRNHFvZWZidHExNGNXOVFJREFRQUJBb0lCQUFHbTQzTkFKQWMrWHgyVQorSnE4bzltYURvK1BvOTBCbEUxeGpzaXlJZEhBenpDSHhnY2MvYTg1N2hQa1hlNXhYWFp2S0I1Nkd0R0svWGJZCk4xWWIrWDF1R29yRTQya2JYSVZMSlY3bU9XSC81aW5rMEgyOXFPeE91ZGpQcFA5dWs0K0hrS2xhSFFxYWhtKy8KcDhRanBEbjdiYU1mT2hRb1Q0VGJ5TjdsUHBoSVNzTjRWMnFoOXMyNktZTWZYNzFpdklCNjJ0d1BlZGJFblNTUAo5alExN3hWeXllVFhkMnpPWlZQREdWQWJhNkVTUEk1ZzY3MVpvd0RqdFQ3Tml0R0o4clA0clMvbjV4ZzJmS1BXClhlODBFSjQ1bGxzMkUwTzdNRmdzaHMxZjAvbkxaZzhaWkd0SWJnY0dDQ3VObmplZmZOZ2RON0R6L25JVmg3TGEKNXFrMTN6a0NnWUVBOW0xSk1yN2JaeVRBWHZXeGlibHQvNTVjQ1NRaXJNbUNOU0F2dU9wZEdwaWhKNU00ZS9megpHQjNjL2ExVXJKZHBQVWlXbUgyUUJja0toRFJiRFFMQWcxZUpnQ1VOMjNsQlRLR2RoMVBrNkd1MXZYWTM5MXVoCksydFZReEdZT2lKYkt6TVRhSUh5cEVMamJpdWJtS0VZME1melh0NTBuYjdXb24wcjZuWW1uek1DZ1lFQTdVV08KckpFTjlpZktiNkVURWlIVUhoYXZxcTBTREZRNVpIK3YzdkI1ditmMTFsYlI5UWZOenFXV0hQU0x1RHlpSmhrTQowTXNsWEFuQzJQYVh2OU0vRlRvSHVPMzkzUUdML3JVWG56VmIvNitEbHgvR0VwZjhuaFV4N3ptUGRFYnNTY2xwCk9wS2tkVndhalk4bDlJd2g4bHp6TkswTFpWTmQzUUpsb3VLMWtUY0NnWUJiUjlnWmFBRTFqN09DZVZndVAvV3kKL2lIeGNPVTNROTFyZUdTMUJucytZdE12S2FWK3BqWHg5UDNyS2MxM3NRNVdtUkRQbzVNNTBXS0gzaXpzQU56Mgp5Zkl3K1lqTWgzbmN2UER4TSs1UytiTDBYMW9UMG1rOUFDRXhHczljbVdWVDl6TjFQczEyY3lCenFzdVVHZmhyClBlVzBlb3FQOUNUbFE2Q0UxUWN4YVFLQmdRRGhJZWJHaHJ3Z25KRFFhcDJWenROZDJWakZNWUsyZ0JRVTc3TUkKYmxTWGFwa3d6eUJZeHhiWXhQVXlkRGMra1FtcDdJcmtjbHo0ZjZxS0F6RHBxcDlvbks5SElVcUhzVGdNYmZnRAo4TFZpWGo4VjNlZ3JMRnRlQSs1bGR0QlBIQnlIeHJ3NS8zcGNnUkFRMFlyS0IwME9rbk9SdjcvWVhNbnJNcU1OCmN0K2s4UUtCZ1FEWXFITzByZG9sNkxLcFdqcFBJbnp3Um00bGVIOHBXYjZ5dnBBWjB6dld0d2N5bmhsaW40RDcKWStrV3N1Z3NBeTdEbm9ibG83K3FnWDlLa0VEU2Fad0s3MExja3NVL2IyUTdtbWlCSlZtRUVCa1dXd2JrTnl0cQpXdGo4bnJQeUJwRkt3cEpzM05TYU9MNTN2b21UcmNTRDlOWEp3NURzNmhmTTNwVlZYek05U1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/cluster-apiserver-ca.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lJYVpaam9jVjFGckl3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRneE1ERTVNVE14TnpJMgpXaGNOTWpneE1ERTJNVE14TnpJM1dqQkNNUkV3RHdZRFZRUUxFd2hpYjI5MGEzVmlaVEV0TUNzR0ExVUVBeE1rClkyeDFjM1JsY21Gd2FTNXZjR1Z1YzJocFpuUXRZMngxYzNSbGNpMWhjR2t1YzNaak1JSUJJakFOQmdrcWhraUcKOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTVHWWhqM0VIT291SktBTlhWZ0ZscXAzSzNZc0g2UVB5Z3AvOAo1WDJUNjlEN1VwenRDVEVKMXI3UVlHQUtLS3FkbUtObmY1U3V6QXh0QWZ6YmN6UzJPaHdSd1FybUVzZWhUSU1QCkpaWkx1NC9BS0g2V2NYL1JpUDNzVHBQaFFha0syK0hieFFKZmNTOENUdWJrNG9QNlpWbHl5NG5VZGZMYy9HSW0KTEZsZzlhOUlCcHp4SHZndXIxdnk3YWo5ZTJGaFZhUzZ5dWY2RHRyZ2VJRHp3eVpucTdwSVB3ZFlUVzNNN0xubApSblZRa2hUb2t3c3IzRnJXeEJCb1B0RWNSYXQ1TTBIcWlWOXZGek5LYndQaExGdlFmOHBqRHpSTjVkR3RFdEpCClhNY3gvT3lreUZlbXI0TkkybTczTDB6RTc0QWxPWFVOc2pkUTRxb2VmYnRxMTRjVzlRSURBUUFCbzJNd1lUQU8KQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV3ckQwMTFLTwpnYmlYTVFVT3pQTFgzcUkyc1Bnd0h3WURWUjBqQkJnd0ZvQVVTSlBaZTlPR21WVHBRd0RUNVlZNEgwdTBoVDR3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFIWGcwbEI1RVhKYzdlTWlFQ2QvVk5oVWFwN2oyTW0xQVFrN1I2SmgKTVRHeFFnRE82RjRBLzhPRVI2Nks1MWUwWFNzbndDWG05SUJ0Vmp1bjNPRUxlMThURk9icEl1S2tHOERhd0Q4YwppZ1VYZTNSR0dsZnpqcDhIVm52alg2bG0ydEh5NU5STWtHeWQ0eEhYOWpnWk1oUnh2eXRtblVGSUI3UXRDdTArCnJMZ0F3Sks0dkpoVldYcTFjTVo5dHFBYkpseGZUcDBiQUtoTDNTSWljZmI3ZEs2ZkRmMkovMVhGNmlBUnZpSjEKQ1dUVU5PVW81eGRTcURybC83cXlpL1puaW53TUJ0dEdIeVdvcWdBOFRDNS9qMmhHUWJhdE9wekRIT2N0OTZyWgpjSHl4UVV6bW8zZkVLdnhOS1M0TUtqaW5QVGdZZEM0SmI5T1Q0TTY4bVVTMXQrZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNekNDQWh1Z0F3SUJBZ0lJZHJFMVFFdHJuQTB3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5TjFvd0tERVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFekFSQmdOVkJBTVRDbUZuClozSmxaMkYwYjNJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURDVlJ3d0MvRjgKQmY1VWdZTGc4Q1NwOUdzdGF6RXRNcUMzT0haNzJPODkyQkdPUFY0MmlUUTAwbkUxQU12ZE8zWWVCTXBvQVpHRApib2NpUWp2YUE3eFdiWkJRNE03Y2taME0zMlAwNjFIeXJqSW0xbThMYjJZVGRZTW96NVVmdFlKL1JJaVJiNytDCjF1VGhZU2srYXRqS1Y2a0xjc3E3aWp0SkdlY3haQ1dna2x0OVFkZ25qclhmazgwZ3o1eGErVUNRYS9BMnF5WGIKcWorbmhHbDhNYWpRNDc5aTU3T3IwOEVQY2ZrT2t4WStEZmxkeDdHdTFFZk1lQUI3Y1hnM1ZMc3Z0YjY0M1FuMAo0RnRuek40bmV1T2Ura1BZSDkrK0tXZWNFSHJZZ0drWmJERU1VOWJKYmVIMzZIMVBnbVFiVDhuRTJEV0hRZ2xDCk5rQVlaNmhEZ1ZVdkFnTUJBQUdqWXpCaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQUQKQVFIL01CMEdBMVVkRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFmQmdOVkhTTUVHREFXZ0JSSQprOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBUklmTlBoaXRmTngxCjF3MWwraGYrMHA1bk9MZFlCWTJuYXdlcFRhOVROZmthTHJWTkswWWJUQ2I5YXF5dHk2OG1pV3lTalh3MHJ5UjcKSTlzdmFkVmd4RUc2K2hNaGxlQ29GcHNCeVNoZkhHaXY1djk0T0REb2VBN1pHT2NZY3FSditSdDdXVXlsbncxcgowWEI4WlZaUnpObVRVRzZyRFJoclhydURCUnhnNUU2bzRTY2FHcGVwMjJKN2UxWFNzTUgvR2gyYjNMYng2V3d0Ck90bDVvODVzUHBKekRMdW9DYmlDbi9PTWgxMkJ4cy8rMDZZUDlEMVAyKy96WnFNUFVHS2IwZnRVNldNSWxzNFgKNkM3N2lpdDlXYm5VOU1PbTBOTW5EcXErY1RtU0w4QVdFMXV2MEt0bHhLeS9hTGxCRkNtY2dNdG04SWg0R1ltRwpuMllBYlFoVnNnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/etcd-client.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM3VkZTZXcXBnS1RpQWpRMzM3TnRkVkdzckR1VGJZZFZQVDRoSUJaNjRacGNMUzRyCmU4c0MzR090Z0l6U3hmU01aQkthMjc4MklvOElxajIwNG5YTm9WQUUyd2p4a1NDZENoQU5qSDlSODBGeUhNMUgKK0ZPa3REeTZjWnZPekdUUEh6ZWYrQUVzS3N2RWdzeUZDTXVZaDcreGFINkVOdHBYd3pGQ3BKRnN0M0FSRExUMQpxd3JKbUhMK1ZndjQrR1RMRzJhZk9NNzkxbEZJejEvSm9oRGpDU09xeUxuUmM1TExNUFpiT2dQOXFFSTk4UzBhCnhmeFVocTZuU1NqOGFWN3h0Sks3d2RNeWxQNEFSTHdWdFYydDlYWlNYQUhaSlZtbW5uY0V0b3FkMjZneU1TNEoKeFBYUmtEc2x5ZmNpbnV2alNiNGcxaDFzT2kzUHBwSHRhYnB1V1FJREFRQUJBb0lCQUZiVzFNY2k0cjVYZmlWVgpxcDdnRERpMGhRemtlTjhtNWpKaHpnM3VOQmxJUmJqa1Q5Uitscks5c281dVRuOEljdGxaMWpMZUgzei9OR1QrCmZVWHNseHZOVE5iNGVRUU5MS0VLOS94UWJlRFRFbDNlSzdlMi9tZXBjUWxwcGZ0REd0NFNrYVBROFNBTEdwZksKamRtTFYvVXEzVGJVY3pYYmdtMXM5NFdka2prMEdZc0NhQ1JoaEszbDJNaXJTNnJieWEwN2JxanhuWnhWRk52ZQpCVlRSa2lpb0tJTG9ndXlmbERicmpQUlptbTJHY1pjdkk0SFhWWTdYWTgwYUk0eDZLc3A5OGQvN3FPWFlTN0VwClJuODlOcGVFb0pWR3JESzc5OUlVdVhMKzkxTmx2ejdZcnlYSy9rbjVBeHNYMHRkK3lFc3NrZ3RJZXdmZ044dDYKKzNuS2NBRUNnWUVBOGlEM0ozRjNzYktzMEl0V2l4b2lSNS9qckczUGk4OGtIQ1VGRmZXT1RZWmhobFppQzZpMwpXeWZ1dzRpOFliQ3dQdlh1TXFHOVBGK1NKblFhQUdxNjU3OU0zUFUrNlFqcURjS1J4U0xkblpQRUF3UFl2SlVoCkpUak8wbysvMHo4c1ZKSm1HYTJ1RjREODN2RVRoNEhCUitoRkE1MzV6OGZxUEE0MzJKV2ViTmtDZ1lFQTY2eDAKTGJETGJyR21nZ2ZLUi94czVwMlhTSk82YjhNMWdUTlVVQm5aL0lXcHRLM1p4NVg0djBLK3pPbzBraVpUWmduMQpIN2dyeE42cllGZE9Hd0xMYmt4TDludVd1WmI1bFBjbGR4d0hTT3lzYWN1c3hEd1RWMWhMeTQvVHRrRG83ZEU4CldOMU9CYytrTFRmVS9OeEIvYjRTQnpQSVErMTZrTjd6bnFCNUhZRUNnWUVBd0xCQllJOXBQTzQvbjFzMERWRkgKOUk0bXh1TkE1emQ2dWpjdjIvRG1SWVhxK05pb0FEVk5iZXJTbGFPc24yWFliTktVdEpDSW81SS9JZ0VGYkUyRAozc2diNkQvM3g4YURWVjRCV2N4TVo0bmYxTEpyK25BSHg3SjB6WmIraHFQZ3FKRTFWYndsTHFsRkZEcndXc2VGClJLOXd0TmMwcGdtbnZCRm9taUUveWNrQ2dZQkRHdzdWdDhLbFdWWmxMaHl1RkxWWmtVUHplWVVicjhUN2JnY3kKNjdtRFN2Z0FwNFFjYlpxdnN5eXJJb0Vub0Z3YzhQYm9Pa1BVUWVjZ2ZwdVIyMkRibmtQL0FqL3Z4b3A0blVzQQp1RzFtbVdXYWxsRXlhenpDb1RTcjJOOWF4TzdPVU1iVE11aTFoT05sc01FbjR2dXphYnl1YWxNNjdGTDdEMURsCk9TSmpnUUtCZ1FDeG8yZ1hLbDh5ZWw1U3RsVVZoMHFjeW43OGRWeG41Vmh2N1dwaUhCREJ6K0V5VnpSWXBQS3cKY2JqWElUYVZzOTQyWlhPb3BJMDZBNm9la0Y5Ty9saWNyUFd4anlYbDVsM3ZZclNOQmpDYlJBY0FsUmF4UGxDRwpFby96TFpabFpJYlRwS210Y0h0bDgyV3JrRFI0d3dKcFM0U3hkZHU4dzgvUUdaUHZvMXBEb3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/etcd-client.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFakNDQWZxZ0F3SUJBZ0lJUnRDWEcwaGJwSlF3RFFZSktvWklodmNOQVFFTEJRQXdIakVOTUFzR0ExVUUKQ3hNRVpYUmpaREVOTUFzR0ExVUVBeE1FWlhSalpEQWVGdzB4T0RFd01Ua3hNekUzTWpaYUZ3MHlPREV3TVRZeApNekUzTWpoYU1CNHhEVEFMQmdOVkJBc1RCR1YwWTJReERUQUxCZ05WQkFNVEJHVjBZMlF3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURlNTE3cGFxbUFwT0lDTkRmZnMyMTFVYXlzTzVOdGgxVTkKUGlFZ0ZucmhtbHd0TGl0N3l3TGNZNjJBak5MRjlJeGtFcHJidnpZaWp3aXFQYlRpZGMyaFVBVGJDUEdSSUowSwpFQTJNZjFIelFYSWN6VWY0VTZTMFBMcHhtODdNWk04Zk41LzRBU3dxeThTQ3pJVUl5NWlIdjdGb2ZvUTIybGZECk1VS2trV3kzY0JFTXRQV3JDc21ZY3Y1V0MvajRaTXNiWnA4NHp2M1dVVWpQWDhtaUVPTUpJNnJJdWRGemtzc3cKOWxzNkEvMm9RajN4TFJyRi9GU0dycWRKS1B4cFh2RzBrcnZCMHpLVS9nQkV2QlcxWGEzMWRsSmNBZGtsV2FhZQpkd1MyaXAzYnFESXhMZ25FOWRHUU95WEo5eUtlNitOSnZpRFdIV3c2TGMrbWtlMXB1bTVaQWdNQkFBR2pWREJTCk1BNEdBMVVkRHdFQi93UUVBd0lGSURBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEUKQWpBQU1CMEdBMVVkRGdRV0JCVDN5Mlhwa2lLLzhQSk0zQ29nS3VESzhweXkzekFOQmdrcWhraUc5dzBCQVFzRgpBQU9DQVFFQXVBbEkrTEVKMG5kbnBjdHZQUzdxdExJTW1RVHhMUXEySzlkV21jWFhaTEM2eGRzcXl0RnZkczdQCjBEUWZlNUNWeEdLVit5b0pGcFY5djlFNElyb2dRbEg4bk1LdUNtd0ZHSngrZ296UFZvNWxZMGMrbU9aeUJqQzYKaXg5TFFHSGg2bGJvUjA2ZzZhK25zbUJ3eERvNml0em5XODEyL2QxTWFPUXJvYUp5T1F3MFRqbkFnM1Y5OFNtUQovNlg3cDUyYzVRZnU5WGpYWXhIMUhZVjVkUEVYRDdPQ201REszYUFlV0g0VFRJTzBmc3h5TUFBbzFUc0l5a3hKCjA5U0YyUnRzQXp4QWd6ZzRIMW5mUnpoRkFQNDdYSGxSOUw4RHZIdVl4ZkIvNnNRVDdraFFtcHFYbStHSjMvVVQKRkJyM0pEMXVaMDhocGV2QTE0bXVzVDVxYytTSmNRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/apiserver.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBb3U4SGRqUGVDU2pYWlNEcjN2SVBOeUFORWpVN1daNXdqa3YzOFVEdjB4SElPSW1xCnlzV3NrS01BQ2ZuaWpqek0vK0FMQ2xRYm1KTVliWWRaR0pzRjBZYXFBNnJ4NUlCK0h2R2o3TjJzclhsd1Exam4KeFFnUll6VUtCMzk1Y0Q5WVl6ZVJtcVpjWndiTkp6TldOUk5LSlBnT0FnSHVTUFFVUW10M0RaVnZPQlJydUIxRApNQUhVbThmYitXN05UdzAxYjZhNlc2VGhQTnlZeHVnSGRlSlFGYXBLL3lzcGQraWpJV1d4dVc5U3kxangwTVZUCkl2bFNhWGNxVkJ3ZHYySmpqWW1JTjRpVyt0RVNMSkd4WkRYT2ZlWEc4ZFEzY25YZGRHUjRFc0Z2MFhMU1dGWEcKZUg1WEhURFd4c3haODZ0V0VlaHZvZ2V0N0w5bWppUmdEQ0ZiendJREFRQUJBb0lCQUNwMTdsVGdpWEdMb2k1cAptTzU5MkhjK05BblZzNFRVWkhMQTIzbVV1YXNnekRQbnRJbXBZQ0pGU0VKUlM3aFRvZnpncngvZThWNGVuMVFUCjNLVXI2U1ZFV2RRZzNXNzJDV2daQXVZOGtyNldraW9LNWtPVHFheFg2eWd2RVQrdVVtTnczTklYbnFiK3Y4SUMKZituUEFCaUlTR1kvaUpDY2d4Y1lHR3VDMFB3azg4V2xyVWlDUEcyMTlENVlPaU5Da2o2UFlaYTVNN3BadnJ3Zgp0R2NmUm83WUJ5MjFYMkJidElodFJONXpTQ0VNaGhYaXJ2UmZZRWd0T1V1ZFovdXBzSGFqNFNZYXBUY3ptOUN3Cmw1bUJZUi9iT2lZYmdsTm5vd09vS3lxcy81eDlWM3M0WXhnUkJtTmMyNWRSY1ZvRXFUODdNRjNXeTFqNWxKRlIKRmpwc0JDRUNnWUVBemg3cU1BZWhSakFhY2c5RW84Q0pOUjJhOU4vdDZJMnhRVm5QSTYzUU03eDhIaW03NTQ3cwoxRnRwUS9lRXZhRkN5OS9QU1RIcVBxa0p0bm9CK2ZQY0dYT1NrK0hxUmgzcktVNzYxTTB1UC9aVW9IQ0xSU1p2CjdiVWRBNlR2Q0lsRlJvaFY0WCtyNU04Q2FiVFNoam9HbFFmb1FZTzNCRUtaMmZmWDBaQXJzbDhDZ1lFQXlseXkKVGM2NzhqdjU0NTlOUHFkMlEzd24rcExGYmVCVG9aQ0dhR0RZWEwxeStaNmtFL2pxZDRUN0lwNzViYUlNenRWRAp1dWNsWnJWYm8ybytEMVZ4MzFCTGxpQzFzYlhQR0lxcHdqajVDYTFSeHJCeUxOaVA2NmFXMXc5Zlp2bVBlSWNyClVEWncxSW5oS0ZlZGRDbU5jU0lvSGdqYytUc0lka2ptY1RQbkxKRUNnWUJ4OG5rNGtCOUI4L25Lc0ZJYnpLYU4KYkk1cmJSZlNoZkpGMUdaRXJTUDZWZXF2cWhhc3prQnlyUTRtZXNFeEsrTUhYZlR6MjlwSlJaMk8rU2Y2akN0VApEcWNyaGFyRGxHcWFiWVVRKzFUa0cwTnhab1kzZGlaT1hOOXJVbFNxZldpRXMzMzJxV1BYbS9FVGl0a1BSeWk0ClhxU3hBeVc3L3kyYVovOHhaT2dqTlFLQmdHNHU4dGJ5emRzalZQamZjRXZCR3QrNzVuakZHY0t0OWx0dU9nRHoKV2x1RXUrbTJ1MWcwbkZYZmptNVhhVENNbjdTdTRtWU9IWXREREZaNkxyaGlxZElTQWxZSUVXWmx2QkY4enRuMQo4NE9WWDRWejVYY05vNitIMFhIZjZPNUV6QjJ3VzZFZFEybzJlT1ppYmxVbG11SVMydzBmZmxJbUZvRnhTQ2d6ClBwaEJBb0dBU0hoZGhSaTlHazEwWWxPcm9YTERTUnBoeEVpdzBCQUx2RVlyVkhBYngyQ3N1Y2VDYW15dGhxQmsKSW5xeGZXcnBsbDVRUUNxSDRMLzJ3S01pNlM3WWxTNlJJWCtjbzhiMHlQZTNhRUZQWDFPK1g0Yi9EVUR4SjJKWgpiZGcxVFFVWnU5aVFGV0FOaEpyME5nTStoa0JtMHY5UmhWcE9QcnhjT3dZc25Kek9oeW89Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/apiserver.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVBekNDQXV1Z0F3SUJBZ0lJS1pYeUVZWjVsdEF3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TURFNU1UTXhOekkyV2hjTgpNamd4TURFMk1UTXhOekk0V2pBdk1SUXdFZ1lEVlFRS0V3dHJkV0psTFcxaGMzUmxjakVYTUJVR0ExVUVBeE1PCmEzVmlaUzFoY0dselpYSjJaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2kKN3dkMk05NEpLTmRsSU92ZThnODNJQTBTTlR0Wm5uQ09TL2Z4UU8vVEVjZzRpYXJLeGF5UW93QUorZUtPUE16Lwo0QXNLVkJ1WWt4aHRoMWtZbXdYUmhxb0RxdkhrZ0g0ZThhUHMzYXl0ZVhCRFdPZkZDQkZqTlFvSGYzbHdQMWhqCk41R2FwbHhuQnMwbk0xWTFFMG9rK0E0Q0FlNUk5QlJDYTNjTmxXODRGR3U0SFVNd0FkU2J4OXY1YnMxUERUVnYKcHJwYnBPRTgzSmpHNkFkMTRsQVZxa3IvS3lsMzZLTWhaYkc1YjFMTFdQSFF4Vk1pK1ZKcGR5cFVIQjIvWW1PTgppWWczaUpiNjBSSXNrYkZrTmM1OTVjYngxRGR5ZGQxMFpIZ1N3Vy9SY3RKWVZjWjRmbGNkTU5iR3pGbnpxMVlSCjZHK2lCNjNzdjJhT0pHQU1JVnZQQWdNQkFBR2pnZ0VyTUlJQkp6QU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwTwpCQllFRktHSm1pSmdMdVBBcnRoS1QyVnRlQ2YvYmptQk1COEdBMVVkSXdRWU1CYUFGRWlUMlh2VGhwbFU2VU1BCjArV0dPQjlMdElVK01JR25CZ05WSFJFRWdaOHdnWnlDSlhOdmJXRnNiR1Y1TFdGd2FTNWtaWFpqYkhWemRHVnkKTG05d1pXNXphR2xtZEM1amIyMkNDbXQxWW1WeWJtVjBaWE9DRW10MVltVnlibVYwWlhNdVpHVm1ZWFZzZElJVwphM1ZpWlhKdVpYUmxjeTVrWldaaGRXeDBMbk4yWTRJa2EzVmlaWEp1WlhSbGN5NWtaV1poZFd4MExuTjJZeTVqCmJIVnpkR1Z5TG14dlkyRnNnZ2xzYjJOaGJHaHZjM1NIQkFvREFBR0hCSDhBQUFFd0RRWUpLb1pJaHZjTkFRRUwKQlFBRGdnRUJBRlNmM201aW0vK1RsM2FZN25hRzZrRHZyZFBGSnJ3eEpwYlZ5cHB4N1ZCSXhGdzRkMlFWaUpTeApNNlVRMmRoMndKcHVpRkhlYjhZM2MrbHZwR0VGVTA5K3RCT3lDL3NubXVxUmVMaVVOc2pSQ21BQm1ZSWp2Z2oxCk5pRk5nYUlZWk51U2VMbSswRDg4VkpOVC9McWR5VUExRDMraWFKdE9sWWlTNkYzYVVQdGdwS1ZHYm5YeGdQL1gKTnVOeEgrTmpKTWtLdDVzWG5lMVY4czRzbklJaHJYSWIzVnp3cjY4bGVHaDBLQVZERFdkaEdBWE51SUJPaEZTYgpGL3V6NW1QLzg3WWEzWHZ5TFJCMmVITFNqd3dNdkxxSkVGaGhlc01FQXQrNVZxbmo4YXpWc1h1OXB5bmtpQk5XCkZCU3dnQ0F0eWZHb2I1Nm9hMUExNVNQbDlDRDMraDg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETURDQ0FoaWdBd0lCQWdJSUdWL3JodWY1cUNZd0RRWUpLb1pJaHZjTkFRRUxCUUF3SmpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNE1UQXhPVEV6TVRjeU5sb1gKRFRJNE1UQXhOakV6TVRjeU5sb3dKVEVSTUE4R0ExVUVDeE1JWW05dmRHdDFZbVV4RURBT0JnTlZCQU1UQjJ0MQpZbVV0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNzNFpGMVNNaVhuVzhYCnJ5NDJrVWw5ZjBpeEhRTEg0ZnVNZjBaTU1SUHpGWmRrTzZZemY2bjdqU1pTLy9lWFY4dWswaTV4blcxcW9WSlkKOEpqQUJIQVlBMmdKcEtKUUY0eFNkaHVzekhZUWhSNTRVWU5KTjhNeGk2RWJNMlBDYll1MHROWmFrQmNFRFpSeApqNmE5SmkwZUppRnE2RFJBTFkxdHd0UGh3bFQ3WDJjZmtjYytLVW13Nnk2SXJIaGJSZ2lETC9zemJyNzJsSEtUClJLNzB4Vm1jeWRqSmo4RWF5OHk2VHVOcHdVdW1RelJFUnBiRmVtdGdvTzNoeFNtZXdudHhVWk9BbUZDbjRUQ2UKL1NvU3NnMTNWSEt2enVER3pDdXRrRUZQeEtlR0l6aXUrRzhBNVo3Q0Yybi91bnpIM2JFTS8reVB3Z1FOWS9aNApoNnNoSFdSSkFnTUJBQUdqWXpCaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvCk1CMEdBMVVkRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFmQmdOVkhTTUVHREFXZ0JSSWs5bDcKMDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBQmpKaDFpMUxvaDhsRUtERwpGZmlBOERnaFp2ellabk8zNktqYWg3SjZMaXpaSzFYdFk5THdGWWIyMnhLcWlzbkhmWEVtS0FCeUM1NC9YNkZCCnBUdE9ZWDZ3Q1QrZGo2bUJaWUdPTUkvb2lFSUNIaDVaZVFNUGNHZFdhS1lrRjYzc2FTbzVYWmQ0Z05GY0tPeEwKVk1sb0JJRnE4bmozMCtMNzZnOW9WSXQxck56dnJrSkdsY2tlV3NpYWNCaWRNWHJhQ0Q5ZGxPS2p4N1lqNm1RTgpVOTErL0xoTU0vYWNCZUNlTmpwTE9CVHVtUG5meHFzUXg2S28wMzAxUGF1SU00b2RzTENQcUFtRXJWYjVHVGFPCkIrMWQrNEdHcnU0b2JZb042cnhhNnRlMmVFNE9jM1hkZHRNaWR3MHVvL045TGhTMHl3S0thZDRTc2hicURuRFcKckwvbXFBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/openshift-apiserver.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBOWlhN2swQWFrd0FVR2QxY2habG81SkIwZ2ZqbGp4NG5MTENIb1hYd1R0MWI5ZFNjCk1KQTk4bVpOWkRiMmRSazl4L3p5V01wd3IrR3hpWnlDRWFma1FwNDFlRHJaQVN0RG9QZXp5R1JaY0FmWW13L2QKbVBGT3FEbDZVNWtQUyszUmI5SHkrd3duMk9kNnY3bTgyVjQwWXhpMHFXWmZwS05DM0thL0ZndnYrdmdKVlhnNgp0ejVLZytSUzJ0SStyOWpjMXBHWi9oNk9pRnI1NlU3Qi9oZ1FGeldTM2NIc2ZGS1M4UG9nVVpnZStKVkxsVGxlCldsUGFSOFNVT2VLQVQzekZwREFXMHc2S0g0MkZCRHFYVFB4MG5uMk9FMUFMWDdkTExJUTFpZkxIeURUR28wMWMKWVhUQ2Zra25qdnVCOU9HVnRUM3BlQ0V6UUdIS3hDaHVIQSt4RXdJREFRQUJBb0lCQVFEUXg2dUR5dlIvU0tyRQpBV2l2Zko1bWQwd0t6YlRQL2xCVjdHa3QvdDNUMXBkZ1hIUWFFTTRxSXJGejFkYVhIZEMwSnd6YldPSFpuSUc4CmFiNDlBWDF2TDhmRWNZMk1HMGtpWjliYW1wcnRsZ29ZQTQzK1luWkg0M0NwSllLKzhUa2FNaVo0M3llUkowMksKL3h4NTloaFRFU3B6SUh6eEpQVGFPS2lOSjVUbDlRQUVuOGxwQTJNK1pBSzBzcEtvR3YzamYwUHZGTEd4UnpySQp1SGlHNVpJdE56RjZXOU1GNyt4aTdZN3BJc3QzT1ZmOFdiTjVCNmM3WVlHRHVFVW14RW1YdzA1RVJQaEF1bStpCk8yUGM0WElmZmpvUlpUdDhRb3cveTJoVGFLNHdNUE1NYVR2cWprbjNsSVliVnNiTHhTYU9DNjlURzQ4UkVkZ0IKTFVORGQvcUpBb0dCQVBsTnFuYS9xbC9mZ1BzZzF2ZUtiTEZ2QjZVNlovY3AvalhCMWRTQXFDYzJNcG02TFNpWApBbWRkKzBocnREVlZkVFVRdm83V0dySEZ5bWxOZURlNzZoZS9FNDNDTVZxYWFSc3pwaUNHYXR4c3dQaHg3QmxSCnF5bkg5ZnBQYWxvamExcmRtc2J2VXFBWDQvbGo5UVZXd0xNaCtkQ1QxaWtzRTZzdWFnZFoyMldGQW9HQkFQekQKWkR6RFRGMng4ZlpKYzd3bHpuQ0FZNDNxVHVOWk4rL0ZxRUdWTVBvRmJlcWNiTnpCdTIybkw0OVlsc1l1SVh5dQpLMUFwQWg0ellOQXJKOHFhM3RpaC9qQzZLRHpBdGJkb2NDVTQyLzZmaExiQkVKN2x5cDc0bVBoNFBzTWt0dndICnFmaGR0Unp6MEwyaG5XQ1ZCMGc5Q0pSODE3dTc3R2tRVzBTdUVGTzNBb0dBS2Vlc0o1bkFBYTJIK0s1a2MrZUkKcmFxRUZubml6K0QzSWdJYTkwVkkvbzVWb3hGd1ZjcE1WU092QVZWWlRUMjRIZHRhckpmQWxQRXlQTkVRekEyQwpJOHV5ZGJtV29pd2lUcmczekcvTHRwRnhQbEduNWZtY1U4R1F6eXBhTGh5V0J3Z0k1RGVHSS9MZ0Z5TitKQStaCkJJTkpnbzNYQ2NTbTZiYzdpMURIV0NFQ2dZQjdadmw5SU93Ym9sQzdLVWt6eGxGdlkzODNQZm1keldVZHpxWkMKdm8vV3dPZlU3dUhITlY1SVBxTmRuS2Fmd3MzZWpUbmdQT1VuMFhXbXJDc1ZJMTlBN0hXcFhIbGdqOFVuOGZrdQpjd0FVNDlSclZQN0VWUFFEZ09OT0M0YTR4eWYvQzg3VHp3d3BRbS9hNVJoc210V2ZVd3pwVWJvUmtjSHQyV3AxCnNYV1BLUUtCZ1FEUzFyei9pMklyL1I1V200WWlOMWt1YU9ZYnd2b1RpN09zakJtVUtFRWw1cDZGdzc2cS9yNE0KUUVRdk0zTm5adEFjODcvSUVybFZ2ejlwWUFOdVhPMFJpTGpGRThnYWEvMXdIcjlYOEI4czNva2RQYTJ0V0FZVwpmdkVpdFY5RkdqR3Z6WlYzdnl2Zm5rVlc0dldRUVBrRWFCTHU1R1dpa1JSMXk5SForYXFROUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/openshift-apiserver.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVRRENDQXlpZ0F3SUJBZ0lJV2dhbStzZndTcE13RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRneE1ERTVNVE14TnpJMgpXaGNOTWpneE1ERTJNVE14TnpJNFdqQTBNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFY01Cb0dBMVVFCkF4TVRiM0JsYm5Ob2FXWjBMV0Z3YVhObGNuWmxjakNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0MKQVFvQ2dnRUJBUFltdTVOQUdwTUFGQm5kWElXWmFPU1FkSUg0NVk4ZUp5eXdoNkYxOEU3ZFcvWFVuRENRUGZKbQpUV1EyOW5VWlBjZjg4bGpLY0svaHNZbWNnaEduNUVLZU5YZzYyUUVyUTZEM3M4aGtXWEFIMkpzUDNaanhUcWc1CmVsT1pEMHZ0MFcvUjh2c01KOWpuZXIrNXZObGVOR01ZdEtsbVg2U2pRdHltdnhZTDcvcjRDVlY0T3JjK1NvUGsKVXRyU1BxL1kzTmFSbWY0ZWpvaGErZWxPd2Y0WUVCYzFrdDNCN0h4U2t2RDZJRkdZSHZpVlM1VTVYbHBUMmtmRQpsRG5pZ0U5OHhhUXdGdE1PaWgrTmhRUTZsMHo4ZEo1OWpoTlFDMSszU3l5RU5Zbnl4OGcweHFOTlhHRjB3bjVKCko0NzdnZlRobGJVOTZYZ2hNMEJoeXNRb2Jod1BzUk1DQXdFQUFhT0NBV0F3Z2dGY01BNEdBMVVkRHdFQi93UUUKQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJdwpBREFkQmdOVkhRNEVGZ1FVd3JEMDExS09nYmlYTVFVT3pQTFgzcUkyc1Bnd0h3WURWUjBqQkJnd0ZvQVVTSlBaCmU5T0dtVlRwUXdEVDVZWTRIMHUwaFQ0d2dkd0dBMVVkRVFTQjFEQ0IwWUlsYzI5dFlXeHNaWGt0WVhCcExtUmwKZG1Oc2RYTjBaWEl1YjNCbGJuTm9hV1owTG1OdmJZSVRiM0JsYm5Ob2FXWjBMV0Z3YVhObGNuWmxjb0lmYjNCbApibk5vYVdaMExXRndhWE5sY25abGNpNXJkV0psTFhONWMzUmxiWUlqYjNCbGJuTm9hV1owTFdGd2FYTmxjblpsCmNpNXJkV0psTFhONWMzUmxiUzV6ZG1PQ01XOXdaVzV6YUdsbWRDMWhjR2x6WlhKMlpYSXVhM1ZpWlMxemVYTjAKWlcwdWMzWmpMbU5zZFhOMFpYSXViRzlqWVd5Q0NXeHZZMkZzYUc5emRJSUpNVEkzTGpBdU1DNHhod1FLQXdBQgpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNGUjdmWUs2TXNOT29wV3A4eGJjNDN6QUg2eXV1RzJuQWdlTFQrCm1NeUdiYXI1MXlrYjBlNXo4UTNvc21ISmJTdElJMWlBYis0cDNEeDFYN3hWQmpROE5EVFFsQ05CYXBjRzBqY1YKd1E1S1JXOGo1ZmVkaVVWdCtLVzdReFZUbnFpVHhxZC9YM1JsTGxBazBqZGwvVm5RUDg1Witwbzh6dlFaVHZncgowWUliZ0NoM3VDcmhIcXFYUndaZDhUaGRtZjF2NC9BSEdPZytkWkhnSkdmekFTRVJ0R1lsV1JpaDhzSDFJcTdaCjBCZWI5dUxYT0pSdmZnNkhHNVdKTGhTQWl5cG9ON01iT2ZwMURJcDRaMGFudEFQSnQySnZWRS9DLzVtSHoyT0YKM1RjMnZIN0Q3NXowc0Q1dWU1OGNCUU5HQmE3V2dTM2dwS2MwNldEUmtib1poaDF0Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETXpDQ0FodWdBd0lCQWdJSWRyRTFRRXRybkEwd0RRWUpLb1pJaHZjTkFRRUxCUUF3SmpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNE1UQXhPVEV6TVRjeU5sb1gKRFRJNE1UQXhOakV6TVRjeU4xb3dLREVSTUE4R0ExVUVDeE1JWW05dmRHdDFZbVV4RXpBUkJnTlZCQU1UQ21GbgpaM0psWjJGMGIzSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQ1ZSd3dDL0Y4CkJmNVVnWUxnOENTcDlHc3RhekV0TXFDM09IWjcyTzg5MkJHT1BWNDJpVFEwMG5FMUFNdmRPM1llQk1wb0FaR0QKYm9jaVFqdmFBN3hXYlpCUTRNN2NrWjBNMzJQMDYxSHlyakltMW04TGIyWVRkWU1vejVVZnRZSi9SSWlSYjcrQwoxdVRoWVNrK2F0aktWNmtMY3NxN2lqdEpHZWN4WkNXZ2tsdDlRZGduanJYZms4MGd6NXhhK1VDUWEvQTJxeVhiCnFqK25oR2w4TWFqUTQ3OWk1N09yMDhFUGNma09reFkrRGZsZHg3R3UxRWZNZUFCN2NYZzNWTHN2dGI2NDNRbjAKNEZ0bnpONG5ldU9lK2tQWUg5KytLV2VjRUhyWWdHa1piREVNVTliSmJlSDM2SDFQZ21RYlQ4bkUyRFdIUWdsQwpOa0FZWjZoRGdWVXZBZ01CQUFHall6QmhNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFECkFRSC9NQjBHQTFVZERnUVdCQlJJazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBZkJnTlZIU01FR0RBV2dCUkkKazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVJJZk5QaGl0Zk54MQoxdzFsK2hmKzBwNW5PTGRZQlkybmF3ZXBUYTlUTmZrYUxyVk5LMFliVENiOWFxeXR5NjhtaVd5U2pYdzByeVI3Ckk5c3ZhZFZneEVHNitoTWhsZUNvRnBzQnlTaGZIR2l2NXY5NE9ERG9lQTdaR09jWWNxUnYrUnQ3V1V5bG53MXIKMFhCOFpWWlJ6Tm1UVUc2ckRSaHJYcnVEQlJ4ZzVFNm80U2NhR3BlcDIySjdlMVhTc01IL0doMmIzTGJ4Nld3dApPdGw1bzg1c1BwSnpETHVvQ2JpQ24vT01oMTJCeHMvKzA2WVA5RDFQMisvelpxTVBVR0tiMGZ0VTZXTUlsczRYCjZDNzdpaXQ5V2JuVTlNT20wTk1uRHFxK2NUbVNMOEFXRTF1djBLdGx4S3kvYUxsQkZDbWNnTXRtOEloNEdZbUcKbjJZQWJRaFZzZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/apiserver-proxy.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMzJrQWJDajRBY1hnVjJIY2RZZkpCb25uYWNDLzhESU1aRFQ4V1ZFbStFOE9Oa1EzClZySDJoQmM3dm1KeHJCemxtVGtBTnIyTHZlQ1hMMTVsUkZXWjNkbDNrZ1VRNXlpUDgrMjZCZ0cwTmI1SjgzaDQKdVM5UVd1QWJFemJ5bUJKTitjbnowUDNCdnRKbVRSdktaelQzNjhNd0lwVXpzL1hGREpRb2dLSTc0RldKcXhrSgpOUDF2emVnTFdsQVd0cE9GZlJFMnkxYnkwNW53QktLNW56SDROYVpYZjZtaDFxaFBEWGFYVUJrZ2pPQkZpb3V6CjAvWThsMWhvM3FabTlvellNUVFkRkJxZklRVURnZHYvblVRTWhkL21FMU1yVUY5WUpSc080WWtGVjVWL2lkQjQKV0J1UWl4blU4eWNCWVA5YW8yaGdod044V3pLYVgzVTJOOTFjb1FJREFRQUJBb0lCQUhTL29vRGpSL2RsT0w5eApYSXZ1MFphaEtsV1JiTHhRNnpqU2w2ejFRN0F2WC9YcjRCOW1FTFVtandvRzEvQmhpWHB3MXpQRUNlcklHem1kCjByM0xIZ1ZaUjZyL0NyNUI3RGhFMnhtWWVsdzdmTm5HOHcrVE1pTExTbHJZTkI1VU1udCtsZk41S0c1WDlTNEcKZjljL1R1L2RxS0hwNW9MOHhHUzJhQlFRczhtZTd6MHppR3F4WXhGQ0hGVUVDb2JkZlI3ck1lcjVtMHVLdmlEeQpodVdFYWpWcE5WZ0JaaGtmKzhhZHRPLytDbC9ieFJudmsrY25HU2FRVlZUWkx0WWtYUUZGa2lheERmb0w5cUJ2ClBJVXN2dldQWnZjVnUrdFJjamFlYkd4L2h1dUVYN0xkU1VRVklMdFV6TVcyM1JDaFJybUppSWR1KzVsR3ZnT1oKTkZOSlpnRUNnWUVBMy9sTXZQNVl3K2dEaHJPT3VXU2NnWjNPMGQ3aXpPeGpCNC9mMmp4WXdlTzI2OHBUeDcwcAovK040cHBOYTVIYTRoVmNFT3ZzTmhPamVVdDR6eVBNalNYRDhJY1VYR2djaTdXcXI5NXdVNUQ2V05qbTYzZXVHCkk1L0tmYlU2TG9hNzk5cG5rSzBSVmJNY3JOU1Zta3N3YmJGd3lxbUE3Y2ZOeUMyaS93blJuNWtDZ1lFQS8xc1IKa0JsRXRleXJ5VzFKSEtmV0dJZVhiQno3OXZ0dzllSWcvMkRac1ZBczd2VlVibEtkcXNsbndoeDFqNlJBZUhXaAp6TUZFRnBtbjNPb25YTWNORmF5eVlqRHBMR1ZWeXVQbFhXeXhqRjFzL282U1hCaStid0Q1ZWhHYnA4cDhoTE53CldWWUVnMUVadld0RFdCUlRZcXNwdmMzSlZoK2E4YytUdWQzOTZra0NnWUF3clBxTGZHK0lMQTFRSWdmYnJNMEMKc213M1dreEtJdm1tdEJML1Yrd21Qem9LNW83c3N1VEUwd2Z1azhuR0t6TVE3NGRnMWh6ckRMejhuNFA3b1RQRApDMFlRaE1mdmhTdUhFNDdLSW1hNzhBb3ZRTDZtNmovZDBDVnV5b3NaZjNpc2RnL1o5bkwxQUJjMFRJTXk1REpqCk5KUUJ4M0xZdW5xempZK0dBL2xGeVFLQmdRRGZmTWJjUlNFN3o4MXgxekliNEZDaTIxa05pRGlGcXY3c1ZHTG8KMzh6blFQSnltVWl4M2FDY2J2VmVrQ1hiOTdkdE5oYkw2NEk1L1hWTEJhdzVxUVNzcVo3ZURVeW1USEpQeGpGaQpHTlV6c2pqSWVlTmlzMDFJUGFRYXovcFpXZ0NzNjVjeXVQUHVNamJDNzNQYlRMN0dKbU83K0xWenFPbWxKVFYzCmdQRFA4UUtCZ0NLTlNYOVZlc083YnMyeC8wU3dWRHNONElZZDZVR0RrSGZIdlZnQUFOcU02OEJtVTB6R0VqeTQKc0dBOWM1UkpMQ09vSTgxNEpHTTBOMlY1WWNzWE9tei9FMjVrV0U1aVlLTVBLQTNPUTVGZnp0Qnh6dFRNNTN0cwozVzVWU3hRTGFSaTdQR3pjak44NlFoN1lYUzVjSjNNenRuNFAwU0dPeUVwOHpDaDMraS9TCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/apiserver-proxy.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWRENDQWp5Z0F3SUJBZ0lJUk14bnpBazhIMHd3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRneE1ERTVNVE14TnpJMgpXaGNOTWpneE1ERTJNVE14TnpJNFdqQTFNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFZE1Cc0dBMVVFCkF4TVVhM1ZpWlMxaGNHbHpaWEoyWlhJdGNISnZlSGt3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUURmYVFCc0tQZ0J4ZUJYWWR4MWg4a0dpZWRwd0wvd01neGtOUHhaVVNiNFR3NDJSRGRXc2ZhRQpGenUrWW5Hc0hPV1pPUUEydll1OTRKY3ZYbVZFVlpuZDJYZVNCUkRuS0kvejdib0dBYlExdmtuemVIaTVMMUJhCjRCc1ROdktZRWszNXlmUFEvY0crMG1aTkc4cG5OUGZyd3pBaWxUT3o5Y1VNbENpQW9qdmdWWW1yR1FrMC9XL04KNkF0YVVCYTJrNFY5RVRiTFZ2TFRtZkFFb3JtZk1mZzFwbGQvcWFIV3FFOE5kcGRRR1NDTTRFV0tpN1BUOWp5WApXR2plcG1iMmpOZ3hCQjBVR3A4aEJRT0IyLytkUkF5RjMrWVRVeXRRWDFnbEd3N2hpUVZYbFgrSjBIaFlHNUNMCkdkVHpKd0ZnLzFxamFHQ0hBM3hiTXBwZmRUWTMzVnloQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUYKb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJUQwpzUFRYVW82QnVKY3hCUTdNOHRmZW9qYXcrREFmQmdOVkhTTUVHREFXZ0JSSWs5bDcwNGFaVk9sREFOUGxoamdmClM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZW5JZEZTY2tWaTNMUjBGdlF5eVVZb3MvVGFoS1pjR2QKNEpvcWY5NmhPcjFVVWtNc2t5TkRLeTFQMzAzS1pZRy8wZTlIVXVWQjhKYTdpV2swM2ZjSytzeFpab0tnZCs1bQpEdkRwS09xSitTczY4eVREaFZGTituemkvUHlVN241OHZ4U3EzZGtvNk5Ndy9kQ1llZWFUZGY2STJIcjFZbGV0Cm1BdVVQcExiVVhMQ1VrdVhWdGFKb29VK0NNckE2RnpCV04rTmpWYkppelVsMkdlWnR6a3gyTUdxK0V6VnZYbUkKVnExUzl4bFUySWRZazFIaU5vV2NUcnVzcnJid3hvZjNaMXNNM2I5em91dzF6TU5GVmtXOGJCZHpqYThUanN5YQpLOE9lc1VnMVRRWmtEVWozYzdmVFF5L1hGSnVUU3Z4T1pXclhSdDY5SVJ0UVBOMGQvQ1Vxcnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/admin.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdmc3NEc1MEViWlNBTGVBWkVGdWRsM3pVMUNmaElOcUh2dHlpNnJVdWNjdXplK2dmCm5mQk9QYnh1VGMvNjdTVW5XT1dJZXRtNFFlVlZEMnYrSXQ4UVRxemxBaUFhKzFETUE5MnpoYktvY1ZRNDMxQkQKRVJyNEExKzc0Uk9HVEdraHJNQ3hvU3plMGxVaHRIblhPd0dhemZaTkhUeFMwTEgrTko2UTNoOTQwSVZLNGZsWQpNd0ZQdGVHWmZ3TTZZc0JVMTNKLzAvb2NJS0VlN2FtdGVTQks4cDdMMXFDMFdHK3lpOElJRW1sTmwxc0dHbDE0CkpHQlE5aHhnSzRwRUZ5THpGSHpHbFNQRVFlSmV0aDNlZ1pTdm52WHY5d05nZVkvWXFqaTNyZnVueEdmTS9CR20KZ2JITEY4M3QyeWYyU211LzNNV0hZS0FJVHNEOWV5WmVHVHM5SVFJREFRQUJBb0lCQVFDSWhMSWRDNTFacFBpcAplellsdE5rdkxtQ2wvL3RMSVEydXdFZFo5a2psUHArdkdoNVQwWUF5QWo3dEw3NmJSenZMTkJ6anVhNEx6MUpaCklJWk13Qk96bjZkajduSFRJY2RaNDQ4SE16eWhJeEV5L3pFZGdWU3kvN294dzFlTlhWcnQvdi9ZdVNWWXlnUEsKNGxZQ3NYVmtDazU3K0krNERwSjljNFMxdUwrTWIyVmpkUWd6NzBsN1VEY2p0ZDFLWDZrcHhxcTI2MUlBQkcrOApabkxuZWFDeC9IUHpBcDhaRHh0NzZ0SjBqSUZuT0tQLzRCZ21pQlNSelpIMmM1cTREWUQ4MlZmRVIxSGgwVWRHCi94dVZHYllvQXAyZ2w5Vklvenk0ZnNtT3JHc3psVmcvTjdGa0RXeHV6UEtYdjFZT1BPeDJDKzNXbTN6eTllNEgKdzhxalZ0NjlBb0dCQU5xcFhtNnJZVmZRVXFjcGJiRXpFRDY2SS90UHlGNGVLNUVLaDhmb0pmemZUaFk4ZDltTgpHY0ZBc1lTOXVCSXoyV012eEk5RjYvN0dLaHl0M0JUTXZVZEw2ZTMxTVIxTkNWaDBGZVJER05LV213U2ZHeTVFCndHamdnVlVHY3ZuMGRsVEVOcHZ3SjJsN0lZeHVwRkRvQUdwdVg5S1ZKaE4venhKZ29ZMnNoOENyQW9HQkFONkQKUEZtMUxXdzRjckZzMlRKMUttaWxpR1gvOWVWaW9WSllsWXJaQytGTjF2SE9JbGJWbDBYMisrRHpvSmpWWlp6TgpGdWsycm0xS3BEQ09KTnd4UVdZQ3BxdVdtQU9UODBTeWNqUHJkVk5NRTlLNnNZOVU2MnkrZW5qN0czTUlFVFViCnpQYk94OFVNQ0loeHNubVBsVU5xTlRMZi9pQ0VnNUxFckdiTWtURmpBb0dBUHpuV0NsNFh5Wko5TThTdzZSb0EKeW9KOFFRQ3l5VFFrR001WXNKOFp6T0tzNjVVVWVwMW9JdzhYeFhBdU4yVXlxSkY1WG93elR2bngxMVVXWEJWUApiYnd2cWhUSjNOVVhyTEgwV29wa05SQkRSclRTNFRBVUNyOVA1a3YxRnYxdThkZkNpcGlJYk9HanM3MlNXYXFiCjVDcUNIcHZ0NUptQ1FLZ2NUcURpcC8wQ2dZRUFtOTRxWkZ5NTJOa2gzbzkxQmhkMUFhRVREd0JoNjdGUGVETjkKYmFuazNJcCtTeHd1aWMxTkRrR1k1MWRCNUUxM3hJTVZ6WC8wWjdLbG1TMjVQRlYwamxURkUrV0Z6dHZReVFxSApYVDlQREc1NlpGOUxDakJlU2VxVU9ETU9ZMkgvUzhpUnAwSHFSbW5MZ0dqRXNNcVhzSVd4aGxYSjJsVjVKVktICndlc0N1aWtDZ1lFQXZCZkxvYnRUN0dWZ21Ya0RUNkhPZUpDcmVXSnRkRGY5eDF6dTZ3YzNIVFFJV2x5NExXUzEKRUpIa3ppVnBLN0xLejJ2cjNGc3J5Tk15UDJnbjErTlFyc0RPVm5vNEhJUGo1S0NRZ3dWZ2pFR2tQaFNhSkp6QQowdjhMVmJOUTZhTG8xSmVMZlZ3OFFCeWUwRFVGb3E1ajlnK0tHRHBXWDBVMEdCWjBPbDhwVmYwPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/admin.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lJRFpnU0xGRUk5TEV3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TURFNU1UTXhOekkyV2hjTgpNamd4TURFMk1UTXhOekk0V2pBd01SY3dGUVlEVlFRS0V3NXplWE4wWlcwNmJXRnpkR1Z5Y3pFVk1CTUdBMVVFCkF4TU1jM2x6ZEdWdE9tRmtiV2x1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEKdmc3NEc1MEViWlNBTGVBWkVGdWRsM3pVMUNmaElOcUh2dHlpNnJVdWNjdXplK2dmbmZCT1BieHVUYy82N1NVbgpXT1dJZXRtNFFlVlZEMnYrSXQ4UVRxemxBaUFhKzFETUE5MnpoYktvY1ZRNDMxQkRFUnI0QTErNzRST0dUR2toCnJNQ3hvU3plMGxVaHRIblhPd0dhemZaTkhUeFMwTEgrTko2UTNoOTQwSVZLNGZsWU13RlB0ZUdaZndNNllzQlUKMTNKLzAvb2NJS0VlN2FtdGVTQks4cDdMMXFDMFdHK3lpOElJRW1sTmwxc0dHbDE0SkdCUTloeGdLNHBFRnlMegpGSHpHbFNQRVFlSmV0aDNlZ1pTdm52WHY5d05nZVkvWXFqaTNyZnVueEdmTS9CR21nYkhMRjgzdDJ5ZjJTbXUvCjNNV0hZS0FJVHNEOWV5WmVHVHM5SVFJREFRQUJvMzh3ZlRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRQpGS0dKbWlKZ0x1UEFydGhLVDJWdGVDZi9iam1CTUI4R0ExVWRJd1FZTUJhQUZFaVQyWHZUaHBsVTZVTUEwK1dHCk9COUx0SVUrTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCNVlyeVF4dHNIY3VqZWNXQ3FIQnNLMEl1SDhRWFAKYWRlUUEramtVSWdrSmxmYzFjOHlZME00ZVkrVkNuZTJsN2srYnpRY0kvV2IwY3JrTTMwdXRWZkN1RkZURXdTOQp5c1N1djFJbFJ6T0R2M3NwK2NVMkhLcFNBRHljMm1hd3BBem9vNks2NW12dkdZaUVaMEpNcFlFVWt1aDlEM2lRCjVZZ1NkZWxrZUU0NDlHN0hCTHh6aFpTWkVvOEM4OXVqTzZKTXlXa3MzNzhVbjVpOFByUm5yblFzc3dJQ1Y1LzgKNW45YzVBTE5zdk9pcmtMVW9oSFRoeTlMNS82KzdPS1JlTlM2eGZCeVhyK2pnZ01ub3lsalFCcG5SWTdxWEJ4aAo4TFVUdUFJZElUaDJJQmloV2kzRFY1UjY0SFJrUFgzNFFGZzh0UlVtQUJralFzdkExa245M1E0UwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/kubelet.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBejgzNWRzenFDaGhITEhOM0krdGZCeVZGT1Y3Wjh2OVhBWFRpY0VQZ21NRHZiZ3V1ClpUZVR1OS9YTjIxT01KVUJUZmloR1l3b3BWYVZBWjBtV1NZa3JWdExMWndNNDdVbjlwMFJJV0dWZjZSRjZrOWQKcHJyTHgxMFgvelphZnZkbTEwZnIxeVdJMng5YjJEUnlrRyt0MDhiczV0cnFRVmcxUWlMUWxHNGVJTVJIeWdKZgpTZ3FYVDQ5T090bDluNWgzQkVlTm1za3R4M0t4YkhSOXJGc0xqa1FwRXlYT1ViTmRVN0xlRVR6Ry9zbXdWLy9QCmt3RHhzQUQ5dWtGeGs1elljN3RQUmRQUUYrVUlmQ3VDdkhqd2tJSWhrOFduK1VVY3pkSmFMb2F2NHJCYnNrNGEKOUo5KzBpZ2dmNzlDaGhBOUtEcFRzQnFrQTZGVFdUa285RzBpandJREFRQUJBb0lCQUJ1NXQ1Y0tNQSs0dllaSQp3WlNoU3NTQlRJTWpES0ZIUUN5Sms4eTJ3YmlmeFZKQmJMdEVkd21TQy96eE1JVjYyL216T290V0QvWS9YeElnCkRZWEhlUTFJS1BlazRuTmZNRDNQSndIMUt5VWtuYzl0VjJsdmN0RGVzdHp5TzVERklZdUhwUWZIa2tMcUpDN3MKa0h5RTZnUmZmaXd1K1NKT3lveFFhTlBrL1ZBUm9vQkIrZVVxZ1lOanJsUHFpbnNDdWxkelpBWFFCc2JJeit6Rgo4dEN2OTlYMjA5YVlWaCtpYWtobHRHTEZDNC92S0Y5UDlZbFVSdHoxODN3K0E1ck5zMDAwbFp1Ym5BaHU2WW9DCk1UeE9QV1FHS1EraHhpSlIraGNKalN4MTZ2RXpUei9oK0cvajkzODR1SFV2ZXdDZW5PNU1oVE91T2d4bzdPdFIKL3lOR1RRRUNnWUVBMnNDak1VQUR2R1VFYlFwd0NUN2xjV1R2TzlWbHFkbWpuT3o0ei9KN050QlIrTk1mMjlXUApWN0MwNXVoaVhDYzMwMy9Md1hZL3dNNjhia25nSnVqMGxYVmJBaXlxTmtDWjV5dU5zKzdnbFJacEtLcGpJTHlNCkk1VFJpOFRzaHp0K2NueGVvKzZqeFZzK1R6UE9pb2dKRUtBVS9jd3VXYno2NzZteG9TRmt5LzhDZ1lFQTh6QWUKOE83MmY2SUVZMjBNaEdCUUJuN2E2VVpTL0ZvSGtIaEkzWXZpM0V3bnhZV3lxV2pyU1FKUnJPWVBLa2xSNllsLwpHTmsvTWNmVTAweEVRTTQ0WEhBMWwxYjEyVzRMSVlXc3MrbDdmN2JqNCtXTjdJaWJHVWZpNy9hK3R0bGVaakNEClB6bWQwaksvNXVmdVh2eVRUdEZwMjl0a0Nybk1TelBrNlZhODZYRUNnWUJkTVZSVTF3REFjZ2pBcTRHdmJxd3cKOHQ4NGptRVJTemI0MDd2c1cxRkN1TjB6TkQ2T1dSMElMcS9pNzMxMzVQMVRqVTR3elQrNzFGZFNaUWFwalBVbAo5eWtlZEFqUHRCWGM5aUVZVnR3MnA2V0ZQWkdka0xYak1yTlM2RUljR3F4eithZ1lEc0tXZ1ppNkJVZ29uR3ZBCk9YSzM3UlNTQm9DaE9ab0RHMGJsNFFLQmdRRGNIMDJTZGlxbklzYm9IRmY5SnBTcEhJQVlNUENDdlJjbHZNcnYKeG1RRlZlV1dFOHZCTGxmeWtPZlBJYnJPWXVtREExTUk4ZlFTb2pmUlBySjFHblRIcjBYREJCS3F5Y0hIaVJEbgpGTXNWc2owYkZyamRSbFZsajcwcHllV2M2cXBZdzBhNW52UnN4RVVSeEJQdTVKNk45RjNtaFBKTUJ4dVZZcGFzCll6ZkI4UUtCZ0NwMDNteDUyMkZWM1h0OHpJSkVMWnJhQnN6VmhiMDEzSjl5VFduVVU1bk56TkQwUER5MFJnankKMUxQcmpjTmpQL0pBcUk5cXFEWUlpSjQrK1BIU1k3UStDaFQxOEtIMFlNYkxwemdRbkFOOFRiZit4VXBnMVZISAp2b0pwMDI2dFlhR2Z0Wi85Y1RRSVlZWFg1OCsxYUc2K0FMdUNDV2tiQkxRYnJnRnRLa0NDCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/kubelet.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsRENDQW55Z0F3SUJBZ0lJQWN5WmkrMGpXMTh3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TURFNU1UTXhOekkyV2hjTgpNVGd4TURFNU1UTTBOekk0V2pCNE1VSXdLUVlEVlFRS0V5SnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblJ6Ck9tdDFZbVV0YzNsemRHVnRNQlVHQTFVRUNoTU9jM2x6ZEdWdE9tMWhjM1JsY25NeE1qQXdCZ05WQkFNVEtYTjUKYzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwcmRXSmxMWE41YzNSbGJUcGtaV1poZFd4ME1JSUJJakFOQmdrcQpoa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXo4MzVkc3pxQ2hoSExITjNJK3RmQnlWRk9WN1o4djlYCkFYVGljRVBnbU1EdmJndXVaVGVUdTkvWE4yMU9NSlVCVGZpaEdZd29wVmFWQVowbVdTWWtyVnRMTFp3TTQ3VW4KOXAwUklXR1ZmNlJGNms5ZHByckx4MTBYL3paYWZ2ZG0xMGZyMXlXSTJ4OWIyRFJ5a0crdDA4YnM1dHJxUVZnMQpRaUxRbEc0ZUlNUkh5Z0pmU2dxWFQ0OU9PdGw5bjVoM0JFZU5tc2t0eDNLeGJIUjlyRnNMamtRcEV5WE9VYk5kClU3TGVFVHpHL3Ntd1YvL1Brd0R4c0FEOXVrRnhrNXpZYzd0UFJkUFFGK1VJZkN1Q3ZIandrSUloazhXbitVVWMKemRKYUxvYXY0ckJic2s0YTlKOSswaWdnZjc5Q2hoQTlLRHBUc0Jxa0E2RlRXVGtvOUcwaWp3SURBUUFCbzNVdwpjekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVb1ltYUltQXU0OEN1MkVwUFpXMTRKLzl1T1lFd0h3WURWUjBqQkJnd0ZvQVUKU0pQWmU5T0dtVlRwUXdEVDVZWTRIMHUwaFQ0d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHekh6dlhuamh6WQo1dDFJZFA2U3ZsNnlQaU9RY2kvMWhxanJseit5eis2VTgyellQZlc3bEU3ZVduUzlINXdJU0pDWGM5N24xTW0vCnEzeVdSbHdCUlh3dm1GYyt3TmxCVUc4TVdCMlRLaW5ZWjByRlF0dVpDaklvQUdQUG43dVp4S1pyTUJBWEVVWHEKQW1qcG5CU0NvUlMrV3paUFZPRjNmcndUZGsxUGRWVk9UK0prbkp4d2ZuL2huejFiNlh0QTFnaGlyTFpJTVdKTApKdkFhc1g5d3ozUlZJVU40cGN1NHNKUVRNL1JBMUhlRThVNGMrM3ZuV0RTNVVJaU5qSEN6QzgzSWIzUGdCQVhPCmk4U1BZcXc4QWVWeWdBSnhJd2lzT1RTd3ZUTkU4QW5sbDNrSXExUDhMcTM1QUxSNmlwUG1qU0wwdmxnU2dEdDQKTmhCNE03cllqSWM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/machine-config-server.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBb1hrU0krSGV1NFUrQjdDMm9tRG0wcXhFSEFMQ21qSkxTcThkZmFDc2UwMWpSSVdiCkIxYWUzUytvWXRsK0hXSlhITE1CRFlYUklURlRNcmhvNCtXY0hobXpUSGNBREhlUTE4UDJidm5lOGtnVGpiV1kKU0F1RFlXS0VQQ2kxZUhIK0VwODRiVnc3K1hRMDNUamZFY24vc0IzbEtBcktLL2xncmxmeU9QNyt2RTUvblhLdwpvNFdmaGNUaXdMaEdwSk5BU3BuU3hWM3l1Z08xUFE3SFRNaFVlV01WTFR4OEp4RU0rQ2RJaWdSYWNqa1dqRHYzCk1DRW1FaGRUZjdzTng5ZU51cjRmekJWVzVwaWE4cGtVNkQ5QzlKVkI3d09xNVlOSXVjZ1RLdlVkQlZEaEZjVzkKSndZK3pUNWRmRDFTdTJzcmpxUTFzZ044Q1dHSjltWm14SEhBOVFJREFRQUJBb0lCQUhZSEtWdFJIcDJ6SjBRMwp4MGVwelE3eEhGZmRMS0hKWVgrVndOaXpPV0Jua01mbFlReGNKSU5JOHF4T2pnQ3NnVUJaRjh2cXBKSyttekhYCjJkTzdZZ0llaHhDOWF5dXh1ZzM5RDRUTzRFZjRwMUpPQ3FHZXlNbkdXU0lnSDRXS3pVeVBWWSthZTd3N1ZPamYKU1M2WG1HNERiQjE0eFk2ZkdpeFYzSmdNeSthWDBNU0FDUDBPY2pXNkt5RS9DT1Vpa3dtS3lDQVV5bWI1NzRlUwozWTRCbVFFRzFyZTBKTjY5MzU5Ny91S0h4VWJSZzRpaVNjYnJXREZUd0MwM080WlJEV2lvTmwxeHo1WXBYYlNXCkdRMXpnRlo5cDI2d3c2RE0zZnRlYWJTeEJsa1lOQUcweVdkekYxU2NadDlQS1JFbWFQM2NmYUVpVld1cjhRT1YKTjlSQmtZRUNnWUVBMXJMQmdnelhaeEFYdnE3WVRKTkVhUXRKamRKTXVQYldDSk51dDlKUHpRSlBUdTNDTWxhVApwMDhSeVBLcE9tMFZMTGg4RWkzR1JEOWdua2xBTk8rN2xDd2RlMXRSTFJMeHRBelVNMjdoWkRQNndmVkFBVzE0ClFxS25WZTc3aUNzdDRyTmh2dVI4aWh4SG04OXZ1aHJBZ0pmZUZXcXJlRHlOQ2xKaUhrNkhBaXNDZ1lFQXdJa2cKbTRsalBMWnNKeXduNnROWGJ0NEZjYkladUZUYXlUYUdDaXduUXpmNTAwQ2Q0RjlFZGIvWi93QW1FaGNsT2VQMgozR2pZNjVhZ05sRzNWbUN0a1o0UzRhR2hqTXhXRkdXVDVqNU5OV1orSDZHOGpZQXB6OVlwOGxEZHU4bTZSREE4CjhhQVpNRW9WREptSVN2enR2QXJBcll0bnpGR0dpVTRqRnRGRldWOENnWUFZVGZZZi9jb29yYWF5ZkdLYUVKWE8KK21zaU5ldGZpUG5qMEtUWkJHTHFSMWVwREx0T0xZVGJqTlRybGFUWXExNlpTRzByTmFsYk1uMkNqYkpLQzlXRgpTWlV3MEw2WXhxczhBYlBIK3NaakxJczNoOGJ1SW5GWndjWUZzVjhpSkJrMnI2M2lDVVdiOE9XZVd0WkFFQ1U0CnFYaUhuaUs1SXNtb29IamhDMnkzTHdLQmdDTXI2YTBBR0FUTFBrNlpubUVqWW1GNlpYd3prTWMvbVFnUTBjT2gKOVRvdVM1RHZ5T2RuLzlXU3ludnV4d1dlL01ucWZ2b2NuU1BNVEZBZjlXSHVIMGJ1blh4aVRtU3VIenR5b3VYNAprNW9oc3dDTVJ5bUNOQ0VuZWxvdHM1UE9jaHhxdzNkUVM4bXFmdFhpWmlkc3RQRVk5Y0crS2FRRmNKSThsK1JmCkxrLzVBb0dBRkRhdWhWWWhjMlVCZnk2bFB3cVJRQ2tyekJ2ZURoOU1WZ1gvak5TUGJJdFh5N0FVcHZmdGN6NXUKT3licjBLTStuU3pSaGRNZHhsZlI2R1ZGTnZJMWxTUk9ybEJaR3dTYnNDeFQ0YlJWb0hGUi9vTDJQUFE1OUEwWQo1NjVTUGllU3NMbDl1ZWJJRDJ2V3RaVEY2VUFPUlo0MFZqdHFrRjVWS1hqMVlqMi8xNWM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/machine-config-server.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjVENDQWxtZ0F3SUJBZ0lJWklsbzJHRHFXaGd3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5T1Zvd01ERXVNQ3dHQTFVRUF4TWxjMjl0WVd4c1pYa3RZWEJwTG1SbGRtTnNkWE4wClpYSXViM0JsYm5Ob2FXWjBMbU52YlRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQUtGNUVpUGgzcnVGUGdld3RxSmc1dEtzUkJ3Q3dwb3lTMHF2SFgyZ3JIdE5ZMFNGbXdkV250MHZxR0xaZmgxaQpWeHl6QVEyRjBTRXhVeks0YU9QbG5CNFpzMHgzQUF4M2tOZkQ5bTc1M3ZKSUU0MjFtRWdMZzJGaWhEd290WGh4Ci9oS2ZPRzFjTy9sME5OMDQzeEhKLzdBZDVTZ0t5aXY1WUs1WDhqaisvcnhPZjUxeXNLT0ZuNFhFNHNDNFJxU1QKUUVxWjBzVmQ4cm9EdFQwT3gweklWSGxqRlMwOGZDY1JEUGduU0lvRVduSTVGb3c3OXpBaEpoSVhVMys3RGNmWApqYnErSDh3VlZ1YVltdktaRk9nL1F2U1ZRZThEcXVXRFNMbklFeXIxSFFWUTRSWEZ2U2NHUHMwK1hYdzlVcnRyCks0NmtOYklEZkFsaGlmWm1ac1J4d1BVQ0F3RUFBYU9CbURDQmxUQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlJJazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBZgpCZ05WSFNNRUdEQVdnQlJJazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBd0JnTlZIUkVFS1RBbmdpVnpiMjFoCmJHeGxlUzFoY0drdVpHVjJZMngxYzNSbGNpNXZjR1Z1YzJocFpuUXVZMjl0TUEwR0NTcUdTSWIzRFFFQkN3VUEKQTRJQkFRQ2VTU1FwVmNjbFF4bGlXSDBwZk0vdmRHejErSWJaSXA1L0NsaGhnQVRkc2Q5OExxQ0Y0U2RnS2dFQgpsbktQdnZ3Q2xFNFAvZUdLYXMrSFNGZGllZDI5U0QxR3N1QnN0V1gxczhJc1l5YzNlMlpOdWdrdVZPS1owZUtwCmI2RzE0UHAzbEp4RlBtZW1vMUt6WkdSWWd2L2N1d1ExdUlEQ1A1eEZEOExXdFE2ZzltZjV6QW1KTE1NODlXa2sKQ01VTHVCb1NPRXNHU1lRL05tR2FZS3Bsd21lUFliVmNOWjhtL0xQalhxS0NFRHI2MXdLQnB3aUtNMzAxbWNWUApYWlNCeTMrNjBJbUJ2Tkd5NXZJWk90ZHFZSnV1VC9Kd2xEQ2RPMDBsaDVETG53dHc4Q1hsOXh5NDR5QzVCeG1iCm1VWEk2SkpWNXJRS3J1R1VWM0RudCtIQjF5LzEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/service-account.key",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb01nY3FnWFdGeUlwUlY2ZEJoUWNraU51MHI2NmQ1NTZKN1MwYWhSNGJ0MnFkVXR0CmlLeWJDazJoaktyS1kxUHh3VFdYWkIzQVFNVUYzZGdjZHJRWmJERXdpRjdLR1NlZFNTZHVjblorRWl1dDBwUHUKQXRBckJDLzN6Vk0zcGZNdmd6dFlsbHRwVXE4bzdBcE8zYTFQME9kbnFPSDVKZWtFb1dxMFJ5T3hqY0llZWFyTApQMG4wL2Frbkt5T2J4TkJzSllXTjNEVTVMVEhNZVRkMEw1N1pqaEJRNE0rR21ON3ZUWGV1aDQ3REg0d2xSK3hJCmR0UEdja0N4NmdSeFFhUDI3YzNVUEpCQUJsSjd5SUdpcktyL3pQV1BrMmF2TzN3WFhtTW5ZT0t6bXpIdUJ6OXIKaGRybFZlOHJtUlJ3WXU2dlFyN0FsdWNLMlh6aDEvMlVZeitOcVFJREFRQUJBb0lCQUZUb21VcW8vbUVGSjJwOQpCc3ZZL3lXbUZMYXpCdUo1RE9XL0pyQUcwM3NwRVFZVXFXbk9UYXBwU1BGeW1LTlFCNUlUYlRud0JFR3dTdUxYCmFHQy94OVU5UFBZbnFPOFQzcHB0ZW9SMFV5dmhhVkNWMHRJbGdUSWE2dkRDQzlkVjBEZXJ0YUxoNzRNOUFZMTEKL0NSUmpKODBOYWdZZm0wbzI4c3JBTDI0K2VGMFZqaWZpWFEyOXFINFdSaldMZFJTeEo4MVBjSzkxcThLRGFqbQp3ODc1RjNtQkJ0UEZoVElHcTMyb20yVHJQZFVnTHF6ZXN1M0FROHhuU2Q3T2doeisvVk4vdkJBV2tmeXRnK2hECjhqeVh6SEtZRzVrejJ6MkdxOCtwVXpxYW5YZmR0b3VlT1JwU2d4c2s0cmNOVUtxbHhxNWxnanJWUGFsWjliTTAKRlhHMFVNa0NnWUVBemdJZitXN0ZPQkVtQXRaYWVmblhzSVhFRHlBTjREZU1iZWNuOXJxZVFySVFyNm5EaHhLWQpiaENWcnFrUTVMTk5ZZjZTNjB3U2R4ZmhmSzZmRWltcWpLNWw2dWpPT0trN3N0dERrQ1g3S1U5MloxRXBnR0FvClV3bVFYd0NScmszMUhOZzc4S0hEYW1oOUtZR3orVEVDa0tEdmw1REhqbWZjZ3pUTks3R0pZNnNDZ1lFQXg4eGUKbGpMcjA3YXZ4QWc0WnpNb1BncitpbEYvQkh1UXRtKzFBaUJWTytBZlNRTERya2hPaW80a2JjMXVINExaY2JqLwo1UlhuQWNWN280dTRybUFON2wweEprTTIxa1VWUGZXRFdLRE1Cc0lhdlBlY09qai84QU9LT3E5NktTQzNKOVZuCmVtbmZFNzc2czBtS2dyUmVESGJvSzlqUWowRzJvRUNmUitKTGYvc0NnWUJlaC9rV0kyOWFaL3dTUnp4alJuTmsKTEMyb1p5UVc1RWFMVkF3eG1yYnVrZms0TW1WbndPK3phZWJWcS96MWhSV1lSeEl4Nk1sOFhyZjQxOFJrdUR2cgpyRWRXUVJnSVJoZi8zYittRU5lc3dDcnNCQUZRU0UrWXN3WE5vbHczS015MlBMOWNqMDQxc05ibVNmOUU5T2xoClpvZ3ErNk9teENBYkVRcW81eUhOV3dLQmdRQ2loRDQ3OWxlVThuaXQvL0hCSC8rUDErbU1JUllzVTBZMjMwNWcKMkdQOFBDVzJnYVVoMG5id2hRWmt1a0RsS000dWpzaTNVc1dBejEzdWZleFBDcHJLVk10eDBDSit6OXFqZDF6TApicUFHcjBTSWlQQnUrNFpUZU0yclJxa2JZeDBZTGFIcUZNdjdoOURzbk5rcDBBVGdKcWhiWWhUak1oU1c3WG1pClF4UWVtUUtCZ0Z3UEt3VHR0eE9BdnVKdjlyc3dRS0JZTFhjMHdWQld5Y2V0R0Y0R1JsTC85Zm9YY1NJUVkxTFAKUVA4eFAzTWVWbmE5Y0p5VVR4WXhWM01xQ1pQQUJIQ09Wdzg2Z1lDVk1mVllSZ0hOZGUySEd5YWhzWmFNWEZ2UApzeHZhL1NHSEtoeUcyaU96ZkpzWkRsaVoyQ3FnVitMU2FBN3N6ckEzbURSdnRyRytuTm1zCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/tectonic/tls/service-account.pub",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBb01nY3FnWFdGeUlwUlY2ZEJoUWMKa2lOdTByNjZkNTU2SjdTMGFoUjRidDJxZFV0dGlLeWJDazJoaktyS1kxUHh3VFdYWkIzQVFNVUYzZGdjZHJRWgpiREV3aUY3S0dTZWRTU2R1Y25aK0VpdXQwcFB1QXRBckJDLzN6Vk0zcGZNdmd6dFlsbHRwVXE4bzdBcE8zYTFQCjBPZG5xT0g1SmVrRW9XcTBSeU94amNJZWVhckxQMG4wL2Frbkt5T2J4TkJzSllXTjNEVTVMVEhNZVRkMEw1N1oKamhCUTRNK0dtTjd2VFhldWg0N0RINHdsUit4SWR0UEdja0N4NmdSeFFhUDI3YzNVUEpCQUJsSjd5SUdpcktyLwp6UFdQazJhdk8zd1hYbU1uWU9Lem16SHVCejlyaGRybFZlOHJtUlJ3WXU2dlFyN0FsdWNLMlh6aDEvMlVZeitOCnFRSURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/etc/ssl/etcd/ca.crt",
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFakNDQWZxZ0F3SUJBZ0lJUnRDWEcwaGJwSlF3RFFZSktvWklodmNOQVFFTEJRQXdIakVOTUFzR0ExVUUKQ3hNRVpYUmpaREVOTUFzR0ExVUVBeE1FWlhSalpEQWVGdzB4T0RFd01Ua3hNekUzTWpaYUZ3MHlPREV3TVRZeApNekUzTWpoYU1CNHhEVEFMQmdOVkJBc1RCR1YwWTJReERUQUxCZ05WQkFNVEJHVjBZMlF3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURlNTE3cGFxbUFwT0lDTkRmZnMyMTFVYXlzTzVOdGgxVTkKUGlFZ0ZucmhtbHd0TGl0N3l3TGNZNjJBak5MRjlJeGtFcHJidnpZaWp3aXFQYlRpZGMyaFVBVGJDUEdSSUowSwpFQTJNZjFIelFYSWN6VWY0VTZTMFBMcHhtODdNWk04Zk41LzRBU3dxeThTQ3pJVUl5NWlIdjdGb2ZvUTIybGZECk1VS2trV3kzY0JFTXRQV3JDc21ZY3Y1V0MvajRaTXNiWnA4NHp2M1dVVWpQWDhtaUVPTUpJNnJJdWRGemtzc3cKOWxzNkEvMm9RajN4TFJyRi9GU0dycWRKS1B4cFh2RzBrcnZCMHpLVS9nQkV2QlcxWGEzMWRsSmNBZGtsV2FhZQpkd1MyaXAzYnFESXhMZ25FOWRHUU95WEo5eUtlNitOSnZpRFdIV3c2TGMrbWtlMXB1bTVaQWdNQkFBR2pWREJTCk1BNEdBMVVkRHdFQi93UUVBd0lGSURBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEUKQWpBQU1CMEdBMVVkRGdRV0JCVDN5Mlhwa2lLLzhQSk0zQ29nS3VESzhweXkzekFOQmdrcWhraUc5dzBCQVFzRgpBQU9DQVFFQXVBbEkrTEVKMG5kbnBjdHZQUzdxdExJTW1RVHhMUXEySzlkV21jWFhaTEM2eGRzcXl0RnZkczdQCjBEUWZlNUNWeEdLVit5b0pGcFY5djlFNElyb2dRbEg4bk1LdUNtd0ZHSngrZ296UFZvNWxZMGMrbU9aeUJqQzYKaXg5TFFHSGg2bGJvUjA2ZzZhK25zbUJ3eERvNml0em5XODEyL2QxTWFPUXJvYUp5T1F3MFRqbkFnM1Y5OFNtUQovNlg3cDUyYzVRZnU5WGpYWXhIMUhZVjVkUEVYRDdPQ201REszYUFlV0g0VFRJTzBmc3h5TUFBbzFUc0l5a3hKCjA5U0YyUnRzQXp4QWd6ZzRIMW5mUnpoRkFQNDdYSGxSOUw4RHZIdVl4ZkIvNnNRVDdraFFtcHFYbStHSjMvVVQKRkJyM0pEMXVaMDhocGV2QTE0bXVzVDVxYytTSmNRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    }
                ]
            },
            "systemd": {
                "units": [
                    {
                        "contents": "\n[Unit]\nDescription=Bootstrap a Kubernetes cluster\nWants=kubelet.service\nAfter=kubelet.service\n\n[Service]\nWorkingDirectory=/opt/tectonic\n\nExecStart=/opt/tectonic/bootkube.sh\n# Workaround for https://github.com/opencontainers/runc/pull/1807\nExecStartPost=/usr/bin/touch /opt/tectonic/.bootkube.done\n\nRestart=on-failure\nRestartSec=5s\n",
                        "name": "bootkube.service"
                    },
                    {
                        "contents": "\n[Unit]\nDescription=Bootstrap a Tectonic cluster\nWants=bootkube.service\nAfter=bootkube.service\n\n[Service]\nWorkingDirectory=/opt/tectonic/tectonic\n\nExecStart=/opt/tectonic/tectonic.sh /opt/tectonic/auth/kubeconfig\n# Workaround for https://github.com/opencontainers/runc/pull/1807\nExecStartPost=/usr/bin/touch /opt/tectonic/.tectonic.done\n\nRestart=on-failure\nRestartSec=5s\n",
                        "name": "tectonic.service"
                    },
                    {
                        "contents": "\n[Unit]\nDescription=Report the completion of the cluster bootstrap process\n# Workaround for https://github.com/systemd/systemd/issues/1312\nWants=bootkube.service tectonic.service\nAfter=bootkube.service tectonic.service\n\n[Service]\n# Workaround for https://github.com/systemd/systemd/issues/1312 and https://github.com/opencontainers/runc/pull/1807\nExecStartPre=/usr/bin/test -f /opt/tectonic/.bootkube.done\nExecStartPre=/usr/bin/test -f /opt/tectonic/.tectonic.done\nExecStart=/opt/tectonic/report-progress.sh /opt/tectonic/auth/kubeconfig bootstrap-complete \"cluster bootstrapping has completed\"\n\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target\n",
                        "enabled": true,
                        "name": "progress.service"
                    },
                    {
                        "contents": "\n[Unit]\nDescription=Kubernetes Kubelet\nWants=rpc-statd.service\n\n[Service]\nExecStartPre=/bin/mkdir --parents /etc/kubernetes/manifests\nExecStartPre=/usr/bin/bash -c \"gawk '/certificate-authority-data/ {print $2}' /etc/kubernetes/kubeconfig | base64 --decode \u003e /etc/kubernetes/ca.crt\"\nEnvironment=KUBELET_RUNTIME_REQUEST_TIMEOUT=10m\nEnvironmentFile=-/etc/kubernetes/kubelet-env\n\nExecStart=/usr/bin/hyperkube \\\n  kubelet \\\n    --bootstrap-kubeconfig=/etc/kubernetes/kubeconfig \\\n    --kubeconfig=/var/lib/kubelet/kubeconfig \\\n    --rotate-certificates \\\n    --container-runtime=remote \\\n    --container-runtime-endpoint=/var/run/crio/crio.sock \\\n    --runtime-request-timeout=${KUBELET_RUNTIME_REQUEST_TIMEOUT} \\\n    --lock-file=/var/run/lock/kubelet.lock \\\n    --exit-on-lock-contention \\\n    --pod-manifest-path=/etc/kubernetes/manifests \\\n    --allow-privileged \\\n    --node-labels=node-role.kubernetes.io/bootstrap \\\n    --register-with-taints=node-role.kubernetes.io/bootstrap=:NoSchedule \\\n    --minimum-container-ttl-duration=6m0s \\\n    --cluster-dns=10.3.0.10 \\\n    --cluster-domain=cluster.local \\\n    --client-ca-file=/etc/kubernetes/ca.crt \\\n    --cloud-provider=aws \\\n    --anonymous-auth=false \\\n    --cgroup-driver=systemd \\\n    --serialize-image-pulls=false \\\n     \\\n     \\\n\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n",
                        "enabled": true,
                        "name": "kubelet.service"
                    }
                ]
            }
        },
        "File": {
            "Filename": "bootstrap.ign",
            "Data": ""
        }
    },
    "*cluster.Cluster": {
        "FileList": [
            {
                "Filename": "terraform.tfstate",
                "Data": ""
            },
            {
                "Filename": "metadata.json",
                "Data": "eyJjbHVzdGVyTmFtZSI6InNvbWFsbGV5IiwiYXdzIjp7InJlZ2lvbiI6InVzLWVhc3QtMiIsImlkZW50aWZpZXIiOnsidGVjdG9uaWNDbHVzdGVySUQiOiJkMzJlMWFhZS0yMzQwLTQxNmQtOWJhMi00MTQ5YjhlMWRjODUifX19"
            }
        ]
    },
    "*cluster.TerraformVariables": {
        "File": {
            "Filename": "terraform.tfvars",
            "Data": ""
        }
    },
    "*installconfig.InstallConfig": {
        "config": {
            "metadata": {
                "name": "somalley",
                "creationTimestamp": null
            },
            "clusterID": "d32e1aae-2340-416d-9ba2-4149b8e1dc85",
            "admin": {
                "email": "somalley@redhat.com",
                "password": "password",
                "sshKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDUq7W38xCZ9WGSWCvustaMGMT04tRohw6AKGzI7P7xql5lhCAReyt72n9qWQRZsE1YiCSQuTfXI1oc8NpSM7+lMLwj12G8z3I1YT31JHr9LLYg/XIcExkzfBI920CaS82VqmKOpI9+ARHSJBdIbKRI0f5Y+u4xbc5UzKCJX8jcKGG7nEiw8zm+cvAlfOgssMK+qJppIbVcb2iZNTsw5i2aX6FDMyC+b17DQHzBGpNbhZYxuoERZVRcnYctgIzuo6fD60gniX0fVvrchlOnubB1sRYbloP2r6UE22w/dpLKOFE5i7CA0ZzNBERZ94cIKumIH9MiJs1a6bMe89VOjjNV"
            },
            "baseDomain": "devcluster.openshift.com",
            "networking": {
                "type": "flannel",
                "serviceCIDR": "10.3.0.0/16",
                "podCIDR": "10.2.0.0/16"
            },
            "machines": [
                {
                    "name": "master",
                    "replicas": 3,
                    "platform": {}
                },
                {
                    "name": "worker",
                    "replicas": 3,
                    "platform": {}
                }
            ],
            "platform": {
                "aws": {
                    "region": "us-east-2",
                    "vpcID": "",
                    "vpcCIDRBlock": "10.0.0.0/16"
                }
            },
            "pullSecret": "{\"auths\": {\"quay.io\": {\"auth\": \"Y29yZW9zK3RlYzJfaWZidWdsanFpcTR0bXFyeGd1MnMybWtnaTowUldTOVhLVTZGNE8xUU9QMUlZTURFTFpRUUs2NVNVS0kwUTMwTUNWWFU5R0lOWUdDTVQwNDRZMTJNVzIxRVJR\",\"email\": \"\"}}}"
        },
        "file": {
            "Filename": "install-config.yml",
            "Data": "YWRtaW46CiAgZW1haWw6IHNvbWFsbGV5QHJlZGhhdC5jb20KICBwYXNzd29yZDogcGFzc3dvcmQKICBzc2hLZXk6IHNzaC1yc2EgQUFBQUIzTnphQzF5YzJFQUFBQURBUUFCQUFBQkFRRFVxN1czOHhDWjlXR1NXQ3Z1c3RhTUdNVDA0dFJvaHc2QUtHekk3UDd4cWw1bGhDQVJleXQ3Mm45cVdRUlpzRTFZaUNTUXVUZlhJMW9jOE5wU003K2xNTHdqMTJHOHozSTFZVDMxSkhyOUxMWWcvWEljRXhremZCSTkyMENhUzgyVnFtS09wSTkrQVJIU0pCZEliS1JJMGY1WSt1NHhiYzVVektDSlg4amNLR0c3bkVpdzh6bStjdkFsZk9nc3NNSytxSnBwSWJWY2IyaVpOVHN3NWkyYVg2RkRNeUMrYjE3RFFIekJHcE5iaFpZeHVvRVJaVlJjblljdGdJenVvNmZENjBnbmlYMGZWdnJjaGxPbnViQjFzUllibG9QMnI2VUUyMncvZHBMS09GRTVpN0NBMFp6TkJFUlo5NGNJS3VtSUg5TWlKczFhNmJNZTg5Vk9qak5WCmJhc2VEb21haW46IGRldmNsdXN0ZXIub3BlbnNoaWZ0LmNvbQpjbHVzdGVySUQ6IGQzMmUxYWFlLTIzNDAtNDE2ZC05YmEyLTQxNDliOGUxZGM4NQptYWNoaW5lczoKLSBuYW1lOiBtYXN0ZXIKICBwbGF0Zm9ybToge30KICByZXBsaWNhczogMwotIG5hbWU6IHdvcmtlcgogIHBsYXRmb3JtOiB7fQogIHJlcGxpY2FzOiAzCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogc29tYWxsZXkKbmV0d29ya2luZzoKICBwb2RDSURSOiAxMC4yLjAuMC8xNgogIHNlcnZpY2VDSURSOiAxMC4zLjAuMC8xNgogIHR5cGU6IGZsYW5uZWwKcGxhdGZvcm06CiAgYXdzOgogICAgcmVnaW9uOiB1cy1lYXN0LTIKICAgIHZwY0NJRFJCbG9jazogMTAuMC4wLjAvMTYKICAgIHZwY0lEOiAiIgpwdWxsU2VjcmV0OiAneyJhdXRocyI6IHsicXVheS5pbyI6IHsiYXV0aCI6ICJZMjl5Wlc5ekszUmxZekpmYVdaaWRXZHNhbkZwY1RSMGJYRnllR2QxTW5NeWJXdG5hVG93VWxkVE9WaExWVFpHTkU4eFVVOVFNVWxaVFVSRlRGcFJVVXMyTlZOVlMwa3dVVE13VFVOV1dGVTVSMGxPV1VkRFRWUXdORFJaTVRKTlZ6SXhSVkpSIiwiZW1haWwiOgogICIifX19Jwo="
        }
    },
    "*installconfig.baseDomain": {
        "BaseDomain": "devcluster.openshift.com"
    },
    "*installconfig.clusterID": {
        "ClusterID": "d32e1aae-2340-416d-9ba2-4149b8e1dc85"
    },
    "*installconfig.clusterName": {
        "ClusterName": "somalley"
    },
    "*installconfig.emailAddress": {
        "EmailAddress": "somalley@redhat.com"
    },
    "*installconfig.password": {
        "Password": "password"
    },
    "*installconfig.platform": {
        "AWS": {
            "region": "us-east-2",
            "vpcID": "",
            "vpcCIDRBlock": "10.0.0.0/16"
        },
        "Openstack": null,
        "Libvirt": null
    },
    "*installconfig.pullSecret": {
        "PullSecret": "{\"auths\": {\"quay.io\": {\"auth\": \"Y29yZW9zK3RlYzJfaWZidWdsanFpcTR0bXFyeGd1MnMybWtnaTowUldTOVhLVTZGNE8xUU9QMUlZTURFTFpRUUs2NVNVS0kwUTMwTUNWWFU5R0lOWUdDTVQwNDRZMTJNVzIxRVJR\",\"email\": \"\"}}}"
    },
    "*installconfig.sshPublicKey": {
        "Key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDUq7W38xCZ9WGSWCvustaMGMT04tRohw6AKGzI7P7xql5lhCAReyt72n9qWQRZsE1YiCSQuTfXI1oc8NpSM7+lMLwj12G8z3I1YT31JHr9LLYg/XIcExkzfBI920CaS82VqmKOpI9+ARHSJBdIbKRI0f5Y+u4xbc5UzKCJX8jcKGG7nEiw8zm+cvAlfOgssMK+qJppIbVcb2iZNTsw5i2aX6FDMyC+b17DQHzBGpNbhZYxuoERZVRcnYctgIzuo6fD60gniX0fVvrchlOnubB1sRYbloP2r6UE22w/dpLKOFE5i7CA0ZzNBERZ94cIKumIH9MiJs1a6bMe89VOjjNV"
    },
    "*kubeconfig.Admin": {
        "Config": {
            "preferences": {},
            "clusters": [
                {
                    "name": "somalley",
                    "cluster": {
                        "server": "https://somalley-api.devcluster.openshift.com:6443",
                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXdIaGNOTVRneE1ERTVNVE14TnpJMldoY05Namd4TURFMgpNVE14TnpJMldqQW1NUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN3RFNPclpVdDQzcWNmKzFoSlRHczQKQS9JcFY2LzR2dGZDOEUzZnQ5VWcvQjNqdzFVMjZoYTN1Nzdtd0lRRFpNQ2V1UmVzTGtLc29jaWNvaC9lL2RLSQpTQWtOMUJkVHVMRzlUMVVYaThad1NNWjdUTEhCY1JKQU0xdzdTckUyUkJlK1BsakNHSlphdURCZUpBdlhud1pXCmxkQWFHb1FZb0Z6LzFSQlVTeGg0Q25EQ1VWdWZDdGROWXdhY1F3WjBmTHBiVlpoUHFZT3pmNGlWdHFiK3hrR1cKdkgyVGNJV3dDc3JYeUkzNlEwRi82UjY3MVJ5RWNVVFNMWC84aFE1YmxRT0tLMCs3MDRybWhHOHA0eVlWQThPVQpJQzdnSXI5Nkd6NllDT0JyMmUzVWVzMVpQRGZmMjh6bEVPWXVEM2x0RzhMS2creTQxV0NTbDVhTW9zNWpTQ1BECkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVXNyRQo1K1ZVR1ZJcWU1UmdsaUUvQnJnVzNieU5USU5aOC9RV0RTY0VzeU1vVjkrK2ZXbkljKytENXBsNG9EZTZ4bWdKCnVQZzVUcFRLZVRFVVNZbHhxcGZtZkNHVDF5STBKQXZRUmw5cEoyTnN4UHpoRS9FQno3RVYzV0ErYTlBWHoxSC8KOGdveDlCejE2VHlRbXZUU2JrOEFJU1NmUmtTSWFCcytpeTJUZWwzUkx2UkwwL25ueFFzTExFaThpWkZaYXVCdwpUdWZWellMRWlBZCsvMVRHTmRFZFhrWTJiOTZ0b1FJK1E2SE5hMmc5TkMwZmRHVlBidFRuNU84TkZpa21rVHdYCmt1a084Ni9MYWk2K0NDMmVFamdqeHN2TEZnV1YyRTlYVVA3OFNLdysvRE1vdFU4MHY3OFpCQ3lqRnBTY2NvNTcKVFcwV3lCb2x4WldTbnU3UG1nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                    }
                }
            ],
            "users": [
                {
                    "name": "admin",
                    "user": {
                        "client-certificate-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lJRFpnU0xGRUk5TEV3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TURFNU1UTXhOekkyV2hjTgpNamd4TURFMk1UTXhOekk0V2pBd01SY3dGUVlEVlFRS0V3NXplWE4wWlcwNmJXRnpkR1Z5Y3pFVk1CTUdBMVVFCkF4TU1jM2x6ZEdWdE9tRmtiV2x1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEKdmc3NEc1MEViWlNBTGVBWkVGdWRsM3pVMUNmaElOcUh2dHlpNnJVdWNjdXplK2dmbmZCT1BieHVUYy82N1NVbgpXT1dJZXRtNFFlVlZEMnYrSXQ4UVRxemxBaUFhKzFETUE5MnpoYktvY1ZRNDMxQkRFUnI0QTErNzRST0dUR2toCnJNQ3hvU3plMGxVaHRIblhPd0dhemZaTkhUeFMwTEgrTko2UTNoOTQwSVZLNGZsWU13RlB0ZUdaZndNNllzQlUKMTNKLzAvb2NJS0VlN2FtdGVTQks4cDdMMXFDMFdHK3lpOElJRW1sTmwxc0dHbDE0SkdCUTloeGdLNHBFRnlMegpGSHpHbFNQRVFlSmV0aDNlZ1pTdm52WHY5d05nZVkvWXFqaTNyZnVueEdmTS9CR21nYkhMRjgzdDJ5ZjJTbXUvCjNNV0hZS0FJVHNEOWV5WmVHVHM5SVFJREFRQUJvMzh3ZlRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRQpGS0dKbWlKZ0x1UEFydGhLVDJWdGVDZi9iam1CTUI4R0ExVWRJd1FZTUJhQUZFaVQyWHZUaHBsVTZVTUEwK1dHCk9COUx0SVUrTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCNVlyeVF4dHNIY3VqZWNXQ3FIQnNLMEl1SDhRWFAKYWRlUUEramtVSWdrSmxmYzFjOHlZME00ZVkrVkNuZTJsN2srYnpRY0kvV2IwY3JrTTMwdXRWZkN1RkZURXdTOQp5c1N1djFJbFJ6T0R2M3NwK2NVMkhLcFNBRHljMm1hd3BBem9vNks2NW12dkdZaUVaMEpNcFlFVWt1aDlEM2lRCjVZZ1NkZWxrZUU0NDlHN0hCTHh6aFpTWkVvOEM4OXVqTzZKTXlXa3MzNzhVbjVpOFByUm5yblFzc3dJQ1Y1LzgKNW45YzVBTE5zdk9pcmtMVW9oSFRoeTlMNS82KzdPS1JlTlM2eGZCeVhyK2pnZ01ub3lsalFCcG5SWTdxWEJ4aAo4TFVUdUFJZElUaDJJQmloV2kzRFY1UjY0SFJrUFgzNFFGZzh0UlVtQUJralFzdkExa245M1E0UwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                        "client-key-data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdmc3NEc1MEViWlNBTGVBWkVGdWRsM3pVMUNmaElOcUh2dHlpNnJVdWNjdXplK2dmCm5mQk9QYnh1VGMvNjdTVW5XT1dJZXRtNFFlVlZEMnYrSXQ4UVRxemxBaUFhKzFETUE5MnpoYktvY1ZRNDMxQkQKRVJyNEExKzc0Uk9HVEdraHJNQ3hvU3plMGxVaHRIblhPd0dhemZaTkhUeFMwTEgrTko2UTNoOTQwSVZLNGZsWQpNd0ZQdGVHWmZ3TTZZc0JVMTNKLzAvb2NJS0VlN2FtdGVTQks4cDdMMXFDMFdHK3lpOElJRW1sTmwxc0dHbDE0CkpHQlE5aHhnSzRwRUZ5THpGSHpHbFNQRVFlSmV0aDNlZ1pTdm52WHY5d05nZVkvWXFqaTNyZnVueEdmTS9CR20KZ2JITEY4M3QyeWYyU211LzNNV0hZS0FJVHNEOWV5WmVHVHM5SVFJREFRQUJBb0lCQVFDSWhMSWRDNTFacFBpcAplellsdE5rdkxtQ2wvL3RMSVEydXdFZFo5a2psUHArdkdoNVQwWUF5QWo3dEw3NmJSenZMTkJ6anVhNEx6MUpaCklJWk13Qk96bjZkajduSFRJY2RaNDQ4SE16eWhJeEV5L3pFZGdWU3kvN294dzFlTlhWcnQvdi9ZdVNWWXlnUEsKNGxZQ3NYVmtDazU3K0krNERwSjljNFMxdUwrTWIyVmpkUWd6NzBsN1VEY2p0ZDFLWDZrcHhxcTI2MUlBQkcrOApabkxuZWFDeC9IUHpBcDhaRHh0NzZ0SjBqSUZuT0tQLzRCZ21pQlNSelpIMmM1cTREWUQ4MlZmRVIxSGgwVWRHCi94dVZHYllvQXAyZ2w5Vklvenk0ZnNtT3JHc3psVmcvTjdGa0RXeHV6UEtYdjFZT1BPeDJDKzNXbTN6eTllNEgKdzhxalZ0NjlBb0dCQU5xcFhtNnJZVmZRVXFjcGJiRXpFRDY2SS90UHlGNGVLNUVLaDhmb0pmemZUaFk4ZDltTgpHY0ZBc1lTOXVCSXoyV012eEk5RjYvN0dLaHl0M0JUTXZVZEw2ZTMxTVIxTkNWaDBGZVJER05LV213U2ZHeTVFCndHamdnVlVHY3ZuMGRsVEVOcHZ3SjJsN0lZeHVwRkRvQUdwdVg5S1ZKaE4venhKZ29ZMnNoOENyQW9HQkFONkQKUEZtMUxXdzRjckZzMlRKMUttaWxpR1gvOWVWaW9WSllsWXJaQytGTjF2SE9JbGJWbDBYMisrRHpvSmpWWlp6TgpGdWsycm0xS3BEQ09KTnd4UVdZQ3BxdVdtQU9UODBTeWNqUHJkVk5NRTlLNnNZOVU2MnkrZW5qN0czTUlFVFViCnpQYk94OFVNQ0loeHNubVBsVU5xTlRMZi9pQ0VnNUxFckdiTWtURmpBb0dBUHpuV0NsNFh5Wko5TThTdzZSb0EKeW9KOFFRQ3l5VFFrR001WXNKOFp6T0tzNjVVVWVwMW9JdzhYeFhBdU4yVXlxSkY1WG93elR2bngxMVVXWEJWUApiYnd2cWhUSjNOVVhyTEgwV29wa05SQkRSclRTNFRBVUNyOVA1a3YxRnYxdThkZkNpcGlJYk9HanM3MlNXYXFiCjVDcUNIcHZ0NUptQ1FLZ2NUcURpcC8wQ2dZRUFtOTRxWkZ5NTJOa2gzbzkxQmhkMUFhRVREd0JoNjdGUGVETjkKYmFuazNJcCtTeHd1aWMxTkRrR1k1MWRCNUUxM3hJTVZ6WC8wWjdLbG1TMjVQRlYwamxURkUrV0Z6dHZReVFxSApYVDlQREc1NlpGOUxDakJlU2VxVU9ETU9ZMkgvUzhpUnAwSHFSbW5MZ0dqRXNNcVhzSVd4aGxYSjJsVjVKVktICndlc0N1aWtDZ1lFQXZCZkxvYnRUN0dWZ21Ya0RUNkhPZUpDcmVXSnRkRGY5eDF6dTZ3YzNIVFFJV2x5NExXUzEKRUpIa3ppVnBLN0xLejJ2cjNGc3J5Tk15UDJnbjErTlFyc0RPVm5vNEhJUGo1S0NRZ3dWZ2pFR2tQaFNhSkp6QQowdjhMVmJOUTZhTG8xSmVMZlZ3OFFCeWUwRFVGb3E1ajlnK0tHRHBXWDBVMEdCWjBPbDhwVmYwPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
                    }
                }
            ],
            "contexts": [
                {
                    "name": "admin",
                    "context": {
                        "cluster": "somalley",
                        "user": "admin"
                    }
                }
            ],
            "current-context": "admin"
        },
        "File": {
            "Filename": "auth/kubeconfig",
            "Data": "Y2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRFZFTkRRV1pIWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRnRUVkpKZDBWQldVUldVVkZNUlhkc2RtTkhWblVLWXpKb2NGcHVVWGhGUkVGUFFtZE9Wa0pCVFZSQ00wcDJZak5SZEZreVJYZElhR05PVFZSbmVFMUVSVFZOVkUxNFRucEpNbGRvWTA1TmFtZDRUVVJGTWdwTlZFMTRUbnBKTWxkcVFXMU5Va2wzUlVGWlJGWlJVVXhGZDJ4MlkwZFdkV015YUhCYWJsRjRSVVJCVDBKblRsWkNRVTFVUWpOS2RtSXpVWFJaTWtWM0NtZG5SV2xOUVRCSFExTnhSMU5KWWpORVVVVkNRVkZWUVVFMFNVSkVkMEYzWjJkRlMwRnZTVUpCVVVOM1JGTlBjbHBWZERRemNXTm1LekZvU2xSSGN6UUtRUzlKY0ZZMkx6UjJkR1pET0VVelpuUTVWV2N2UWpOcWR6RlZNalpvWVROMU56ZHRkMGxSUkZwTlEyVjFVbVZ6VEd0TGMyOWphV052YUM5bEwyUkxTUXBUUVd0T01VSmtWSFZNUnpsVU1WVllhVGhhZDFOTldqZFVURWhDWTFKS1FVMHhkemRUY2tVeVVrSmxLMUJzYWtOSFNscGhkVVJDWlVwQmRsaHVkMXBYQ214a1FXRkhiMUZaYjBaNkx6RlNRbFZUZUdnMFEyNUVRMVZXZFdaRGRHUk9XWGRoWTFGM1dqQm1USEJpVmxwb1VIRlpUM3BtTkdsV2RIRmlLM2hyUjFjS2RrZ3lWR05KVjNkRGMzSlllVWt6TmxFd1JpODJValkzTVZKNVJXTlZWRk5NV0M4NGFGRTFZbXhSVDB0TE1DczNNRFJ5YldoSE9IQTBlVmxXUVRoUFZRcEpRemRuU1hJNU5rZDZObGxEVDBKeU1tVXpWV1Z6TVZwUVJHWm1Namg2YkVWUFdYVkVNMngwUnpoTVMyY3JlVFF4VjBOVGJEVmhUVzl6TldwVFExQkVDa0ZuVFVKQlFVZHFVV3BDUVUxQk5FZEJNVlZrUkhkRlFpOTNVVVZCZDBsRGNFUkJVRUpuVGxaSVVrMUNRV1k0UlVKVVFVUkJVVWd2VFVJd1IwRXhWV1FLUkdkUlYwSkNVa2xyT1d3M01EUmhXbFpQYkVSQlRsQnNhR3BuWmxNM1UwWlFha0ZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJWWE55UlFvMUsxWlZSMVpKY1dVMVVtZHNhVVV2UW5KblZ6TmllVTVVU1U1YU9DOVJWMFJUWTBWemVVMXZWamtySzJaWGJrbGpLeXRFTlhCc05HOUVaVFo0YldkS0NuVlFaelZVY0ZSTFpWUkZWVk5aYkhoeGNHWnRaa05IVkRGNVNUQktRWFpSVW13NWNFb3lUbk40VUhwb1JTOUZRbm8zUlZZelYwRXJZVGxCV0hveFNDOEtPR2R2ZURsQ2VqRTJWSGxSYlhaVVUySnJPRUZKVTFObVVtdFRTV0ZDY3l0cGVUSlVaV3d6VWt4MlVrd3dMMjV1ZUZGelRFeEZhVGhwV2taYVlYVkNkd3BVZFdaV2VsbE1SV2xCWkNzdk1WUkhUbVJGWkZocldUSmlPVFowYjFGSksxRTJTRTVoTW1jNVRrTXdabVJIVmxCaWRGUnVOVTg0VGtacGEyMXJWSGRZQ210MWEwODROaTlNWVdrMkswTkRNbVZGYW1kcWVITjJURVpuVjFZeVJUbFlWVkEzT0ZOTGR5c3ZSRTF2ZEZVNE1IWTNPRnBDUTNscVJuQlRZMk52TlRjS1ZGY3dWM2xDYjJ4NFdsZFRiblUzVUcxblBUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly9zb21hbGxleS1hcGkuZGV2Y2x1c3Rlci5vcGVuc2hpZnQuY29tOjY0NDMKICBuYW1lOiBzb21hbGxleQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3Rlcjogc29tYWxsZXkKICAgIHVzZXI6IGFkbWluCiAgbmFtZTogYWRtaW4KY3VycmVudC1jb250ZXh0OiBhZG1pbgpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZTogYWRtaW4KICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlLWRhdGE6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJXYWtORFFXbzJaMEYzU1VKQlowbEpSRnBuVTB4R1JVazVURVYzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkS1ZFVlNUVUU0UjBFeFZVVUtRM2hOU1ZsdE9YWmtSM1F4V1cxVmVFVkVRVTlDWjA1V1FrRk5WRUl5ZERGWmJWVjBXVEpGZDBob1kwNU5WR2Q0VFVSRk5VMVVUWGhPZWtreVYyaGpUZ3BOYW1kNFRVUkZNazFVVFhoT2VrazBWMnBCZDAxU1kzZEdVVmxFVmxGUlMwVjNOWHBsV0U0d1dsY3dObUpYUm5wa1IxWjVZM3BGVmsxQ1RVZEJNVlZGQ2tGNFRVMWpNMng2WkVkV2RFOXRSbXRpVjJ4MVRVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFS2RtYzNORWMxTUVWaVdsTkJUR1ZCV2tWR2RXUnNNM3BWTVVObWFFbE9jVWgyZEhscE5uSlZkV05qZFhwbEsyZG1ibVpDVDFCaWVIVlVZeTgyTjFOVmJncFhUMWRKWlhSdE5GRmxWbFpFTW5ZclNYUTRVVlJ4ZW14QmFVRmhLekZFVFVFNU1ucG9Za3R2WTFaUk5ETXhRa1JGVW5JMFFURXJOelJTVDBkVVIydG9DbkpOUTNodlUzcGxNR3hWYUhSSWJsaFBkMGRoZW1aYVRraFVlRk13VEVnclRrbzJVVE5vT1RRd1NWWkxOR1pzV1UxM1JsQjBaVWRhWm5kTk5sbHpRbFVLTVROS0x6QXZiMk5KUzBWbE4yRnRkR1ZUUWtzNGNEZE1NWEZETUZkSEszbHBPRWxKUlcxc1Rtd3hjMGRIYkRFMFNrZENVVGxvZUdkTE5IQkZSbmxNZWdwR1NIcEhiRk5RUlZGbFNtVjBhRE5sWjFwVGRtNTJXSFk1ZDA1blpWa3ZXWEZxYVROeVpuVnVlRWRtVFM5Q1IyMW5Za2hNUmpnemRESjVaakpUYlhVdkNqTk5WMGhaUzBGSlZITkVPV1Y1V21WSFZITTVTVkZKUkVGUlFVSnZNemgzWmxSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQ1lVRjNTRkZaUkZaU01Hd0tRa0paZDBaQldVbExkMWxDUWxGVlNFRjNSVWREUTNOSFFWRlZSa0ozVFVOTlFYZEhRVEZWWkVWM1JVSXZkMUZEVFVGQmQwaFJXVVJXVWpCUFFrSlpSUXBHUzBkS2JXbEtaMHgxVUVGeWRHaExWREpXZEdWRFppOWlhbTFDVFVJNFIwRXhWV1JKZDFGWlRVSmhRVVpGYVZReVdIWlVhSEJzVlRaVlRVRXdLMWRIQ2s5Q09VeDBTVlVyVFVFd1IwTlRjVWRUU1dJelJGRkZRa04zVlVGQk5FbENRVkZDTlZseWVWRjRkSE5JWTNWcVpXTlhRM0ZJUW5OTE1FbDFTRGhSV0ZBS1lXUmxVVUVyYW10VlNXZHJTbXhtWXpGak9IbFpNRTAwWlZrclZrTnVaVEpzTjJzcllucFJZMGt2VjJJd1kzSnJUVE13ZFhSV1prTjFSa1pVUlhkVE9RcDVjMU4xZGpGSmJGSjZUMFIyTTNOd0syTlZNa2hMY0ZOQlJIbGpNbTFoZDNCQmVtOXZOa3MyTlcxMmRrZFphVVZhTUVwTmNGbEZWV3QxYURsRU0ybFJDalZaWjFOa1pXeHJaVVUwTkRsSE4waENUSGg2YUZwVFdrVnZPRU00T1hWcVR6WktUWGxYYTNNek56aFZialZwT0ZCeVVtNXlibEZ6YzNkSlExWTFMemdLTlc0NVl6VkJURTV6ZGs5cGNtdE1WVzlvU0ZSb2VUbE1OUzgyS3pkUFMxSmxUbE0yZUdaQ2VWaHlLMnBuWjAxdWIzbHNhbEZDY0c1U1dUZHhXRUo0YUFvNFRGVlVkVUZKWkVsVWFESkpRbWxvVjJrelJGWTFValkwU0ZKclVGZ3pORkZHWnpoMFVsVnRRVUpyYWxGemRrRXhhMjQ1TTFFMFV3b3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0KICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGY0ZGSlFrRkJTME5CVVVWQmRtYzNORWMxTUVWaVdsTkJUR1ZCV2tWR2RXUnNNM3BWTVVObWFFbE9jVWgyZEhscE5uSlZkV05qZFhwbEsyZG1DbTVtUWs5UVluaDFWR012TmpkVFZXNVhUMWRKWlhSdE5GRmxWbFpFTW5ZclNYUTRVVlJ4ZW14QmFVRmhLekZFVFVFNU1ucG9Za3R2WTFaUk5ETXhRa1FLUlZKeU5FRXhLemMwVWs5SFZFZHJhSEpOUTNodlUzcGxNR3hWYUhSSWJsaFBkMGRoZW1aYVRraFVlRk13VEVnclRrbzJVVE5vT1RRd1NWWkxOR1pzV1FwTmQwWlFkR1ZIV21aM1RUWlpjMEpWTVROS0x6QXZiMk5KUzBWbE4yRnRkR1ZUUWtzNGNEZE1NWEZETUZkSEszbHBPRWxKUlcxc1Rtd3hjMGRIYkRFMENrcEhRbEU1YUhoblN6UndSVVo1VEhwR1NIcEhiRk5RUlZGbFNtVjBhRE5sWjFwVGRtNTJXSFk1ZDA1blpWa3ZXWEZxYVROeVpuVnVlRWRtVFM5Q1IyMEtaMkpJVEVZNE0zUXllV1l5VTIxMUx6Tk5WMGhaUzBGSlZITkVPV1Y1V21WSFZITTVTVkZKUkVGUlFVSkJiMGxDUVZGRFNXaE1TV1JETlRGYWNGQnBjQXBsZWxsc2RFNXJka3h0UTJ3dkwzUk1TVkV5ZFhkRlpGbzVhMnBzVUhBcmRrZG9OVlF3V1VGNVFXbzNkRXczTm1KU2VuWk1Ua0o2YW5WaE5FeDZNVXBhQ2tsSldrMTNRazk2Ympaa2FqZHVTRlJKWTJSYU5EUTRTRTE2ZVdoSmVFVjVMM3BGWkdkV1Uza3ZOMjk0ZHpGbFRsaFdjblF2ZGk5WmRWTldXWGxuVUVzS05HeFpRM05ZVm10RGF6VTNLMGtyTkVSd1NqbGpORk14ZFV3clRXSXlWbXBrVVdkNk56QnNOMVZFWTJwMFpERkxXRFpyY0hoeGNUSTJNVWxCUWtjck9BcGFia3h1WldGRGVDOUlVSHBCY0RoYVJIaDBOelowU2pCcVNVWnVUMHRRTHpSQ1oyMXBRbE5TZWxwSU1tTTFjVFJFV1VRNE1sWm1SVkl4U0dnd1ZXUkhDaTk0ZFZaSFlsbHZRWEF5WjJ3NVZrbHZlbmswWm5OdFQzSkhjM3BzVm1jdlRqZEdhMFJYZUhWNlVFdFlkakZaVDFCUGVESkRLek5YYlRONmVUbGxORWdLZHpoeGFsWjBOamxCYjBkQ1FVNXhjRmh0Tm5KWlZtWlJWWEZqY0dKaVJYcEZSRFkyU1M5MFVIbEdOR1ZMTlVWTGFEaG1iMHBtZW1aVWFGazRaRGx0VGdwSFkwWkJjMWxUT1hWQ1NYb3lWMDEyZUVrNVJqWXZOMGRMYUhsME0wSlVUWFpWWkV3MlpUTXhUVkl4VGtOV2FEQkdaVkpFUjA1TFYyMTNVMlpIZVRWRkNuZEhhbWRuVmxWSFkzWnVNR1JzVkVWT2NIWjNTakpzTjBsWmVIVndSa1J2UVVkd2RWZzVTMVpLYUU0dmVuaEtaMjlaTW5Ob09FTnlRVzlIUWtGT05rUUtVRVp0TVV4WGR6Umpja1p6TWxSS01VdHRhV3hwUjFndk9XVldhVzlXU2xsc1dYSmFReXRHVGpGMlNFOUpiR0pXYkRCWU1pc3JSSHB2U21wV1dscDZUZ3BHZFdzeWNtMHhTM0JFUTA5S1RuZDRVVmRaUTNCeGRWZHRRVTlVT0RCVGVXTnFVSEprVms1TlJUbExObk5aT1ZVMk1ua3JaVzVxTjBjelRVbEZWRlZpQ25wUVlrOTRPRlZOUTBsb2VITnViVkJzVlU1eFRsUk1aaTlwUTBWbk5VeEZja2RpVFd0VVJtcEJiMGRCVUhwdVYwTnNORmg1V2tvNVRUaFRkelpTYjBFS2VXOUtPRkZSUTNsNVZGRnJSMDAxV1hOS09GcDZUMHR6TmpWVlZXVndNVzlKZHpoWWVGaEJkVTR5VlhseFNrWTFXRzkzZWxSMmJuZ3hNVlZYV0VKV1VBcGlZbmQyY1doVVNqTk9WVmh5VEVnd1YyOXdhMDVTUWtSU2NsUlRORlJCVlVOeU9WQTFhM1l4Um5ZeGRUaGtaa05wY0dsSllrOUhhbk0zTWxOWFlYRmlDalZEY1VOSWNIWjBOVXB0UTFGTFoyTlVjVVJwY0M4d1EyZFpSVUZ0T1RSeFdrWjVOVEpPYTJnemJ6a3hRbWhrTVVGaFJWUkVkMEpvTmpkR1VHVkVUamtLWW1GdWF6TkpjQ3RUZUhkMWFXTXhUa1JyUjFrMU1XUkNOVVV4TTNoSlRWWjZXQzh3V2pkTGJHMVRNalZRUmxZd2FteFVSa1VyVjBaNmRIWlJlVkZ4U0FwWVZEbFFSRWMxTmxwR09VeERha0psVTJWeFZVOUVUVTlaTWtndlV6aHBVbkF3U0hGU2JXNU1aMGRxUlhOTmNWaHpTVmQ0YUd4WVNqSnNWalZLVmt0SUNuZGxjME4xYVd0RFoxbEZRWFpDWmt4dlluUlVOMGRXWjIxWWEwUlVOa2hQWlVwRGNtVlhTblJrUkdZNWVERjZkVFozWXpOSVZGRkpWMng1TkV4WFV6RUtSVXBJYTNwcFZuQkxOMHhMZWpKMmNqTkdjM0o1VGsxNVVESm5iakVyVGxGeWMwUlBWbTV2TkVoSlVHbzFTME5SWjNkV1oycEZSMnRRYUZOaFNrcDZRUW93ZGpoTVZtSk9VVFpoVEc4eFNtVk1abFozT0ZGQ2VXVXdSRlZHYjNFMWFqbG5LMHRIUkhCWFdEQlZNRWRDV2pCUGJEaHdWbVl3UFFvdExTMHRMVVZPUkNCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0K"
        }
    },
    "*kubeconfig.Kubelet": {
        "Config": {
            "preferences": {},
            "clusters": [
                {
                    "name": "somalley",
                    "cluster": {
                        "server": "https://somalley-api.devcluster.openshift.com:6443",
                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXdIaGNOTVRneE1ERTVNVE14TnpJMldoY05Namd4TURFMgpNVE14TnpJMldqQW1NUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN3RFNPclpVdDQzcWNmKzFoSlRHczQKQS9JcFY2LzR2dGZDOEUzZnQ5VWcvQjNqdzFVMjZoYTN1Nzdtd0lRRFpNQ2V1UmVzTGtLc29jaWNvaC9lL2RLSQpTQWtOMUJkVHVMRzlUMVVYaThad1NNWjdUTEhCY1JKQU0xdzdTckUyUkJlK1BsakNHSlphdURCZUpBdlhud1pXCmxkQWFHb1FZb0Z6LzFSQlVTeGg0Q25EQ1VWdWZDdGROWXdhY1F3WjBmTHBiVlpoUHFZT3pmNGlWdHFiK3hrR1cKdkgyVGNJV3dDc3JYeUkzNlEwRi82UjY3MVJ5RWNVVFNMWC84aFE1YmxRT0tLMCs3MDRybWhHOHA0eVlWQThPVQpJQzdnSXI5Nkd6NllDT0JyMmUzVWVzMVpQRGZmMjh6bEVPWXVEM2x0RzhMS2creTQxV0NTbDVhTW9zNWpTQ1BECkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVXNyRQo1K1ZVR1ZJcWU1UmdsaUUvQnJnVzNieU5USU5aOC9RV0RTY0VzeU1vVjkrK2ZXbkljKytENXBsNG9EZTZ4bWdKCnVQZzVUcFRLZVRFVVNZbHhxcGZtZkNHVDF5STBKQXZRUmw5cEoyTnN4UHpoRS9FQno3RVYzV0ErYTlBWHoxSC8KOGdveDlCejE2VHlRbXZUU2JrOEFJU1NmUmtTSWFCcytpeTJUZWwzUkx2UkwwL25ueFFzTExFaThpWkZaYXVCdwpUdWZWellMRWlBZCsvMVRHTmRFZFhrWTJiOTZ0b1FJK1E2SE5hMmc5TkMwZmRHVlBidFRuNU84TkZpa21rVHdYCmt1a084Ni9MYWk2K0NDMmVFamdqeHN2TEZnV1YyRTlYVVA3OFNLdysvRE1vdFU4MHY3OFpCQ3lqRnBTY2NvNTcKVFcwV3lCb2x4WldTbnU3UG1nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                    }
                }
            ],
            "users": [
                {
                    "name": "kubelet",
                    "user": {
                        "client-certificate-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsRENDQW55Z0F3SUJBZ0lJQWN5WmkrMGpXMTh3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TURFNU1UTXhOekkyV2hjTgpNVGd4TURFNU1UTTBOekk0V2pCNE1VSXdLUVlEVlFRS0V5SnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblJ6Ck9tdDFZbVV0YzNsemRHVnRNQlVHQTFVRUNoTU9jM2x6ZEdWdE9tMWhjM1JsY25NeE1qQXdCZ05WQkFNVEtYTjUKYzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwcmRXSmxMWE41YzNSbGJUcGtaV1poZFd4ME1JSUJJakFOQmdrcQpoa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXo4MzVkc3pxQ2hoSExITjNJK3RmQnlWRk9WN1o4djlYCkFYVGljRVBnbU1EdmJndXVaVGVUdTkvWE4yMU9NSlVCVGZpaEdZd29wVmFWQVowbVdTWWtyVnRMTFp3TTQ3VW4KOXAwUklXR1ZmNlJGNms5ZHByckx4MTBYL3paYWZ2ZG0xMGZyMXlXSTJ4OWIyRFJ5a0crdDA4YnM1dHJxUVZnMQpRaUxRbEc0ZUlNUkh5Z0pmU2dxWFQ0OU9PdGw5bjVoM0JFZU5tc2t0eDNLeGJIUjlyRnNMamtRcEV5WE9VYk5kClU3TGVFVHpHL3Ntd1YvL1Brd0R4c0FEOXVrRnhrNXpZYzd0UFJkUFFGK1VJZkN1Q3ZIandrSUloazhXbitVVWMKemRKYUxvYXY0ckJic2s0YTlKOSswaWdnZjc5Q2hoQTlLRHBUc0Jxa0E2RlRXVGtvOUcwaWp3SURBUUFCbzNVdwpjekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVb1ltYUltQXU0OEN1MkVwUFpXMTRKLzl1T1lFd0h3WURWUjBqQkJnd0ZvQVUKU0pQWmU5T0dtVlRwUXdEVDVZWTRIMHUwaFQ0d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHekh6dlhuamh6WQo1dDFJZFA2U3ZsNnlQaU9RY2kvMWhxanJseit5eis2VTgyellQZlc3bEU3ZVduUzlINXdJU0pDWGM5N24xTW0vCnEzeVdSbHdCUlh3dm1GYyt3TmxCVUc4TVdCMlRLaW5ZWjByRlF0dVpDaklvQUdQUG43dVp4S1pyTUJBWEVVWHEKQW1qcG5CU0NvUlMrV3paUFZPRjNmcndUZGsxUGRWVk9UK0prbkp4d2ZuL2huejFiNlh0QTFnaGlyTFpJTVdKTApKdkFhc1g5d3ozUlZJVU40cGN1NHNKUVRNL1JBMUhlRThVNGMrM3ZuV0RTNVVJaU5qSEN6QzgzSWIzUGdCQVhPCmk4U1BZcXc4QWVWeWdBSnhJd2lzT1RTd3ZUTkU4QW5sbDNrSXExUDhMcTM1QUxSNmlwUG1qU0wwdmxnU2dEdDQKTmhCNE03cllqSWM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                        "client-key-data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBejgzNWRzenFDaGhITEhOM0krdGZCeVZGT1Y3Wjh2OVhBWFRpY0VQZ21NRHZiZ3V1ClpUZVR1OS9YTjIxT01KVUJUZmloR1l3b3BWYVZBWjBtV1NZa3JWdExMWndNNDdVbjlwMFJJV0dWZjZSRjZrOWQKcHJyTHgxMFgvelphZnZkbTEwZnIxeVdJMng5YjJEUnlrRyt0MDhiczV0cnFRVmcxUWlMUWxHNGVJTVJIeWdKZgpTZ3FYVDQ5T090bDluNWgzQkVlTm1za3R4M0t4YkhSOXJGc0xqa1FwRXlYT1ViTmRVN0xlRVR6Ry9zbXdWLy9QCmt3RHhzQUQ5dWtGeGs1elljN3RQUmRQUUYrVUlmQ3VDdkhqd2tJSWhrOFduK1VVY3pkSmFMb2F2NHJCYnNrNGEKOUo5KzBpZ2dmNzlDaGhBOUtEcFRzQnFrQTZGVFdUa285RzBpandJREFRQUJBb0lCQUJ1NXQ1Y0tNQSs0dllaSQp3WlNoU3NTQlRJTWpES0ZIUUN5Sms4eTJ3YmlmeFZKQmJMdEVkd21TQy96eE1JVjYyL216T290V0QvWS9YeElnCkRZWEhlUTFJS1BlazRuTmZNRDNQSndIMUt5VWtuYzl0VjJsdmN0RGVzdHp5TzVERklZdUhwUWZIa2tMcUpDN3MKa0h5RTZnUmZmaXd1K1NKT3lveFFhTlBrL1ZBUm9vQkIrZVVxZ1lOanJsUHFpbnNDdWxkelpBWFFCc2JJeit6Rgo4dEN2OTlYMjA5YVlWaCtpYWtobHRHTEZDNC92S0Y5UDlZbFVSdHoxODN3K0E1ck5zMDAwbFp1Ym5BaHU2WW9DCk1UeE9QV1FHS1EraHhpSlIraGNKalN4MTZ2RXpUei9oK0cvajkzODR1SFV2ZXdDZW5PNU1oVE91T2d4bzdPdFIKL3lOR1RRRUNnWUVBMnNDak1VQUR2R1VFYlFwd0NUN2xjV1R2TzlWbHFkbWpuT3o0ei9KN050QlIrTk1mMjlXUApWN0MwNXVoaVhDYzMwMy9Md1hZL3dNNjhia25nSnVqMGxYVmJBaXlxTmtDWjV5dU5zKzdnbFJacEtLcGpJTHlNCkk1VFJpOFRzaHp0K2NueGVvKzZqeFZzK1R6UE9pb2dKRUtBVS9jd3VXYno2NzZteG9TRmt5LzhDZ1lFQTh6QWUKOE83MmY2SUVZMjBNaEdCUUJuN2E2VVpTL0ZvSGtIaEkzWXZpM0V3bnhZV3lxV2pyU1FKUnJPWVBLa2xSNllsLwpHTmsvTWNmVTAweEVRTTQ0WEhBMWwxYjEyVzRMSVlXc3MrbDdmN2JqNCtXTjdJaWJHVWZpNy9hK3R0bGVaakNEClB6bWQwaksvNXVmdVh2eVRUdEZwMjl0a0Nybk1TelBrNlZhODZYRUNnWUJkTVZSVTF3REFjZ2pBcTRHdmJxd3cKOHQ4NGptRVJTemI0MDd2c1cxRkN1TjB6TkQ2T1dSMElMcS9pNzMxMzVQMVRqVTR3elQrNzFGZFNaUWFwalBVbAo5eWtlZEFqUHRCWGM5aUVZVnR3MnA2V0ZQWkdka0xYak1yTlM2RUljR3F4eithZ1lEc0tXZ1ppNkJVZ29uR3ZBCk9YSzM3UlNTQm9DaE9ab0RHMGJsNFFLQmdRRGNIMDJTZGlxbklzYm9IRmY5SnBTcEhJQVlNUENDdlJjbHZNcnYKeG1RRlZlV1dFOHZCTGxmeWtPZlBJYnJPWXVtREExTUk4ZlFTb2pmUlBySjFHblRIcjBYREJCS3F5Y0hIaVJEbgpGTXNWc2owYkZyamRSbFZsajcwcHllV2M2cXBZdzBhNW52UnN4RVVSeEJQdTVKNk45RjNtaFBKTUJ4dVZZcGFzCll6ZkI4UUtCZ0NwMDNteDUyMkZWM1h0OHpJSkVMWnJhQnN6VmhiMDEzSjl5VFduVVU1bk56TkQwUER5MFJnankKMUxQcmpjTmpQL0pBcUk5cXFEWUlpSjQrK1BIU1k3UStDaFQxOEtIMFlNYkxwemdRbkFOOFRiZit4VXBnMVZISAp2b0pwMDI2dFlhR2Z0Wi85Y1RRSVlZWFg1OCsxYUc2K0FMdUNDV2tiQkxRYnJnRnRLa0NDCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                    }
                }
            ],
            "contexts": [
                {
                    "name": "kubelet",
                    "context": {
                        "cluster": "somalley",
                        "user": "kubelet"
                    }
                }
            ],
            "current-context": "kubelet"
        },
        "File": {
            "Filename": "auth/kubeconfig-kubelet",
            "Data": "Y2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRFZFTkRRV1pIWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRnRUVkpKZDBWQldVUldVVkZNUlhkc2RtTkhWblVLWXpKb2NGcHVVWGhGUkVGUFFtZE9Wa0pCVFZSQ00wcDJZak5SZEZreVJYZElhR05PVFZSbmVFMUVSVFZOVkUxNFRucEpNbGRvWTA1TmFtZDRUVVJGTWdwTlZFMTRUbnBKTWxkcVFXMU5Va2wzUlVGWlJGWlJVVXhGZDJ4MlkwZFdkV015YUhCYWJsRjRSVVJCVDBKblRsWkNRVTFVUWpOS2RtSXpVWFJaTWtWM0NtZG5SV2xOUVRCSFExTnhSMU5KWWpORVVVVkNRVkZWUVVFMFNVSkVkMEYzWjJkRlMwRnZTVUpCVVVOM1JGTlBjbHBWZERRemNXTm1LekZvU2xSSGN6UUtRUzlKY0ZZMkx6UjJkR1pET0VVelpuUTVWV2N2UWpOcWR6RlZNalpvWVROMU56ZHRkMGxSUkZwTlEyVjFVbVZ6VEd0TGMyOWphV052YUM5bEwyUkxTUXBUUVd0T01VSmtWSFZNUnpsVU1WVllhVGhhZDFOTldqZFVURWhDWTFKS1FVMHhkemRUY2tVeVVrSmxLMUJzYWtOSFNscGhkVVJDWlVwQmRsaHVkMXBYQ214a1FXRkhiMUZaYjBaNkx6RlNRbFZUZUdnMFEyNUVRMVZXZFdaRGRHUk9XWGRoWTFGM1dqQm1USEJpVmxwb1VIRlpUM3BtTkdsV2RIRmlLM2hyUjFjS2RrZ3lWR05KVjNkRGMzSlllVWt6TmxFd1JpODJValkzTVZKNVJXTlZWRk5NV0M4NGFGRTFZbXhSVDB0TE1DczNNRFJ5YldoSE9IQTBlVmxXUVRoUFZRcEpRemRuU1hJNU5rZDZObGxEVDBKeU1tVXpWV1Z6TVZwUVJHWm1Namg2YkVWUFdYVkVNMngwUnpoTVMyY3JlVFF4VjBOVGJEVmhUVzl6TldwVFExQkVDa0ZuVFVKQlFVZHFVV3BDUVUxQk5FZEJNVlZrUkhkRlFpOTNVVVZCZDBsRGNFUkJVRUpuVGxaSVVrMUNRV1k0UlVKVVFVUkJVVWd2VFVJd1IwRXhWV1FLUkdkUlYwSkNVa2xyT1d3M01EUmhXbFpQYkVSQlRsQnNhR3BuWmxNM1UwWlFha0ZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJWWE55UlFvMUsxWlZSMVpKY1dVMVVtZHNhVVV2UW5KblZ6TmllVTVVU1U1YU9DOVJWMFJUWTBWemVVMXZWamtySzJaWGJrbGpLeXRFTlhCc05HOUVaVFo0YldkS0NuVlFaelZVY0ZSTFpWUkZWVk5aYkhoeGNHWnRaa05IVkRGNVNUQktRWFpSVW13NWNFb3lUbk40VUhwb1JTOUZRbm8zUlZZelYwRXJZVGxCV0hveFNDOEtPR2R2ZURsQ2VqRTJWSGxSYlhaVVUySnJPRUZKVTFObVVtdFRTV0ZDY3l0cGVUSlVaV3d6VWt4MlVrd3dMMjV1ZUZGelRFeEZhVGhwV2taYVlYVkNkd3BVZFdaV2VsbE1SV2xCWkNzdk1WUkhUbVJGWkZocldUSmlPVFowYjFGSksxRTJTRTVoTW1jNVRrTXdabVJIVmxCaWRGUnVOVTg0VGtacGEyMXJWSGRZQ210MWEwODROaTlNWVdrMkswTkRNbVZGYW1kcWVITjJURVpuVjFZeVJUbFlWVkEzT0ZOTGR5c3ZSRTF2ZEZVNE1IWTNPRnBDUTNscVJuQlRZMk52TlRjS1ZGY3dWM2xDYjJ4NFdsZFRiblUzVUcxblBUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly9zb21hbGxleS1hcGkuZGV2Y2x1c3Rlci5vcGVuc2hpZnQuY29tOjY0NDMKICBuYW1lOiBzb21hbGxleQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3Rlcjogc29tYWxsZXkKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0CmN1cnJlbnQtY29udGV4dDoga3ViZWxldApwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZToga3ViZWxldAogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUnNSRU5EUVc1NVowRjNTVUpCWjBsSlFXTjVXbWtyTUdwWE1UaDNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRLVkVWU1RVRTRSMEV4VlVVS1EzaE5TVmx0T1haa1IzUXhXVzFWZUVWRVFVOUNaMDVXUWtGTlZFSXlkREZaYlZWMFdUSkZkMGhvWTA1TlZHZDRUVVJGTlUxVVRYaE9la2t5VjJoalRncE5WR2Q0VFVSRk5VMVVUVEJPZWtrMFYycENORTFWU1hkTFVWbEVWbEZSUzBWNVNucGxXRTR3V2xjd05tTXlWbmxrYld4cVdsZEdhbGt5T1RGaWJsSjZDazl0ZERGWmJWVjBZek5zZW1SSFZuUk5RbFZIUVRGVlJVTm9UVTlqTTJ4NlpFZFdkRTl0TVdoak0xSnNZMjVOZUUxcVFYZENaMDVXUWtGTlZFdFlUalVLWXpOU2JHSlVjSHBhV0VveVlWZE9iRmxYVG1waU0xWjFaRVJ3Y21SWFNteE1XRTQxWXpOU2JHSlVjR3RhVjFwb1pGZDRNRTFKU1VKSmFrRk9RbWRyY1Fwb2EybEhPWGN3UWtGUlJVWkJRVTlEUVZFNFFVMUpTVUpEWjB0RFFWRkZRWG80TXpWa2MzcHhRMmhvU0V4SVRqTkpLM1JtUW5sV1JrOVdOMW80ZGpsWUNrRllWR2xqUlZCbmJVMUVkbUpuZFhWYVZHVlVkVGt2V0U0eU1VOU5TbFZDVkdacGFFZFpkMjl3Vm1GV1FWb3diVmRUV1d0eVZuUk1URnAzVFRRM1ZXNEtPWEF3VWtsWFIxWm1ObEpHTm1zNVpIQnlja3g0TVRCWUwzcGFZV1oyWkcweE1HWnlNWGxYU1RKNE9XSXlSRko1YTBjcmREQTRZbk0xZEhKeFVWWm5NUXBSYVV4UmJFYzBaVWxOVWtoNVowcG1VMmR4V0ZRME9VOVBkR3c1YmpWb00wSkZaVTV0YzJ0MGVETkxlR0pJVWpseVJuTk1hbXRSY0VWNVdFOVZZazVrQ2xVM1RHVkZWSHBITDNOdGQxWXZMMUJyZDBSNGMwRkVPWFZyUm5ock5YcFpZemQwVUZKa1VGRkdLMVZKWmtOMVEzWklhbmRyU1Vsb2F6aFhiaXRWVldNS2VtUktZVXh2WVhZMGNrSmljMnMwWVRsS09Tc3dhV2RuWmpjNVEyaG9RVGxMUkhCVWMwSnhhMEUyUmxSWFZHdHZPVWN3YVdwM1NVUkJVVUZDYnpOVmR3cGpla0ZQUW1kT1ZraFJPRUpCWmpoRlFrRk5RMEpoUVhkRmQxbEVWbEl3YkVKQmQzZERaMWxKUzNkWlFrSlJWVWhCZDBsM1JFRlpSRlpTTUZSQlVVZ3ZDa0pCU1hkQlJFRmtRbWRPVmtoUk5FVkdaMUZWYjFsdFlVbHRRWFUwT0VOMU1rVndVRnBYTVRSS0x6bDFUMWxGZDBoM1dVUldVakJxUWtKbmQwWnZRVlVLVTBwUVdtVTVUMGR0VmxSd1VYZEVWRFZaV1RSSU1IVXdhRlEwZDBSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGRVoyZEZRa0ZIZWtoNmRsaHVhbWg2V1FvMWRERkpaRkEyVTNac05ubFFhVTlSWTJrdk1XaHhhbkpzZWl0NWVpczJWVGd5ZWxsUVpsYzNiRVUzWlZkdVV6bElOWGRKVTBwRFdHTTVOMjR4VFcwdkNuRXplVmRTYkhkQ1VsaDNkbTFHWXl0M1RteENWVWM0VFZkQ01sUkxhVzVaV2pCeVJsRjBkVnBEYWtsdlFVZFFVRzQzZFZwNFMxcHlUVUpCV0VWVldIRUtRVzFxY0c1Q1UwTnZVbE1yVjNwYVVGWlBSak5tY25kVVpHc3hVR1JXVms5VUswcHJia3A0ZDJadUwyaHVlakZpTmxoMFFURm5hR2x5VEZwSlRWZEtUQXBLZGtGaGMxZzVkM296VWxaSlZVNDBjR04xTkhOS1VWUk5MMUpCTVVobFJUaFZOR01yTTNadVYwUlROVlZKYVU1cVNFTjZRemd6U1dJelVHZENRVmhQQ21rNFUxQlpjWGM0UVdWV2VXZEJTbmhKZDJselQxUlRkM1pVVGtVNFFXNXNiRE5yU1hFeFVEaE1jVE0xUVV4U05tbHdVRzFxVTB3d2RteG5VMmRFZERRS1RtaENORTAzY2xscVNXTTlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGYjNkSlFrRkJTME5CVVVWQmVqZ3pOV1J6ZW5GRGFHaElURWhPTTBrcmRHWkNlVlpHVDFZM1dqaDJPVmhCV0ZScFkwVlFaMjFOUkhaaVozVjFDbHBVWlZSMU9TOVlUakl4VDAxS1ZVSlVabWxvUjFsM2IzQldZVlpCV2pCdFYxTlphM0pXZEV4TVduZE5ORGRWYmpsd01GSkpWMGRXWmpaU1JqWnJPV1FLY0hKeVRIZ3hNRmd2ZWxwaFpuWmtiVEV3Wm5JeGVWZEpNbmc1WWpKRVVubHJSeXQwTURoaWN6VjBjbkZSVm1jeFVXbE1VV3hITkdWSlRWSkllV2RLWmdwVFozRllWRFE1VDA5MGJEbHVOV2d6UWtWbFRtMXphM1I0TTB0NFlraFNPWEpHYzB4cWExRndSWGxZVDFWaVRtUlZOMHhsUlZSNlJ5OXpiWGRXTHk5UUNtdDNSSGh6UVVRNWRXdEdlR3MxZWxsak4zUlFVbVJRVVVZclZVbG1RM1ZEZGtocWQydEpTV2hyT0ZkdUsxVlZZM3BrU21GTWIyRjJOSEpDWW5Ock5HRUtPVW81S3pCcFoyZG1OemxEYUdoQk9VdEVjRlJ6UW5GclFUWkdWRmRVYTI4NVJ6QnBhbmRKUkVGUlFVSkJiMGxDUVVKMU5YUTFZMHROUVNzMGRsbGFTUXAzV2xOb1UzTlRRbFJKVFdwRVMwWklVVU41U21zNGVUSjNZbWxtZUZaS1FtSk1kRVZrZDIxVFF5OTZlRTFKVmpZeUwyMTZUMjkwVjBRdldTOVllRWxuQ2tSWldFaGxVVEZKUzFCbGF6UnVUbVpOUkROUVNuZElNVXQ1Vld0dVl6bDBWakpzZG1OMFJHVnpkSHA1VHpWRVJrbFpkVWh3VVdaSWEydE1jVXBETjNNS2EwaDVSVFpuVW1abWFYZDFLMU5LVDNsdmVGRmhUbEJyTDFaQlVtOXZRa0lyWlZWeFoxbE9hbkpzVUhGcGJuTkRkV3hrZWxwQldGRkNjMkpKZWl0NlJnbzRkRU4yT1RsWU1qQTVZVmxXYUN0cFlXdG9iSFJIVEVaRE5DOTJTMFk1VURsWmJGVlNkSG94T0ROM0swRTFjazV6TURBd2JGcDFZbTVCYUhVMldXOURDazFVZUU5UVYxRkhTMUVyYUhocFNsSXJhR05LYWxONE1UWjJSWHBVZWk5b0swY3Zhamt6T0RSMVNGVjJaWGREWlc1UE5VMW9WRTkxVDJkNGJ6ZFBkRklLTDNsT1IxUlJSVU5uV1VWQk1uTkRhazFWUVVSMlIxVkZZbEZ3ZDBOVU4yeGpWMVIyVHpsV2JIRmtiV3B1VDNvMGVpOUtOMDUwUWxJclRrMW1NamxYVUFwV04wTXdOWFZvYVZoRFl6TXdNeTlNZDFoWkwzZE5OamhpYTI1blNuVnFNR3hZVm1KQmFYbHhUbXREV2pWNWRVNXpLemRuYkZKYWNFdExjR3BKVEhsTkNrazFWRkpwT0ZSemFIcDBLMk51ZUdWdkt6WnFlRlp6SzFSNlVFOXBiMmRLUlV0QlZTOWpkM1ZYWW5vMk56WnRlRzlUUm10NUx6aERaMWxGUVRoNlFXVUtPRTgzTW1ZMlNVVlpNakJOYUVkQ1VVSnVOMkUyVlZwVEwwWnZTR3RJYUVreldYWnBNMFYzYm5oWlYzbHhWMnB5VTFGS1VuSlBXVkJMYTJ4U05sbHNMd3BIVG1zdlRXTm1WVEF3ZUVWUlRUUTBXRWhCTVd3eFlqRXlWelJNU1ZsWGMzTXJiRGRtTjJKcU5DdFhUamRKYVdKSFZXWnBOeTloSzNSMGJHVmFha05FQ2xCNmJXUXdha3N2TlhWbWRWaDJlVlJVZEVad01qbDBhME55YmsxVGVsQnJObFpoT0RaWVJVTm5XVUprVFZaU1ZURjNSRUZqWjJwQmNUUkhkbUp4ZDNjS09IUTROR3B0UlZKVGVtSTBNRGQyYzFjeFJrTjFUakI2VGtRMlQxZFNNRWxNY1M5cE56TXhNelZRTVZScVZUUjNlbFFyTnpGR1pGTmFVV0Z3YWxCVmJBbzVlV3RsWkVGcVVIUkNXR001YVVWWlZuUjNNbkEyVjBaUVdrZGthMHhZYWsxeVRsTTJSVWxqUjNGNGVpdGhaMWxFYzB0WFoxcHBOa0pWWjI5dVIzWkJDazlZU3pNM1VsTlRRbTlEYUU5YWIwUkhNR0pzTkZGTFFtZFJSR05JTURKVFpHbHhia2x6WW05SVJtWTVTbkJUY0VoSlFWbE5VRU5EZGxKamJIWk5jbllLZUcxUlJsWmxWMWRGT0haQ1RHeG1lV3RQWmxCSlluSlBXWFZ0UkVFeFRVazRabEZUYjJwbVVsQnlTakZIYmxSSWNqQllSRUpDUzNGNVkwaElhVkpFYmdwR1RYTldjMm93WWtaeWFtUlNiRlpzYWpjd2NIbGxWMk0yY1hCWmR6QmhOVzUyVW5ONFJWVlNlRUpRZFRWS05rNDVSak50YUZCS1RVSjRkVlpaY0dGekNsbDZaa0k0VVV0Q1owTndNRE50ZURVeU1rWldNMWgwT0hwSlNrVk1XbkpoUW5ONlZtaGlNREV6U2psNVZGZHVWVlUxYms1NlRrUXdVRVI1TUZKbmFua0tNVXhRY21walRtcFFMMHBCY1VrNWNYRkVXVWxwU2pRcksxQklVMWszVVN0RGFGUXhPRXRJTUZsTllreHdlbWRSYmtGT09GUmlaaXQ0VlhCbk1WWklTQXAyYjBwd01ESTJkRmxoUjJaMFdpODVZMVJSU1ZsWldGZzFPQ3N4WVVjMkswRk1kVU5EVjJ0aVFreFJZbkpuUm5STGEwTkRDaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2c9PQo="
        }
    },
    "*machine.Master": {
        "Configs": [
            {
                "ignition": {
                    "config": {
                        "append": [
                            {
                                "source": "https://somalley-api.devcluster.openshift.com:49500/config/master?etcd_index=0",
                                "verification": {}
                            }
                        ]
                    },
                    "security": {
                        "tls": {
                            "certificateAuthorities": [
                                {
                                    "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXdIaGNOTVRneE1ERTVNVE14TnpJMldoY05Namd4TURFMgpNVE14TnpJMldqQW1NUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN3RFNPclpVdDQzcWNmKzFoSlRHczQKQS9JcFY2LzR2dGZDOEUzZnQ5VWcvQjNqdzFVMjZoYTN1Nzdtd0lRRFpNQ2V1UmVzTGtLc29jaWNvaC9lL2RLSQpTQWtOMUJkVHVMRzlUMVVYaThad1NNWjdUTEhCY1JKQU0xdzdTckUyUkJlK1BsakNHSlphdURCZUpBdlhud1pXCmxkQWFHb1FZb0Z6LzFSQlVTeGg0Q25EQ1VWdWZDdGROWXdhY1F3WjBmTHBiVlpoUHFZT3pmNGlWdHFiK3hrR1cKdkgyVGNJV3dDc3JYeUkzNlEwRi82UjY3MVJ5RWNVVFNMWC84aFE1YmxRT0tLMCs3MDRybWhHOHA0eVlWQThPVQpJQzdnSXI5Nkd6NllDT0JyMmUzVWVzMVpQRGZmMjh6bEVPWXVEM2x0RzhMS2creTQxV0NTbDVhTW9zNWpTQ1BECkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVXNyRQo1K1ZVR1ZJcWU1UmdsaUUvQnJnVzNieU5USU5aOC9RV0RTY0VzeU1vVjkrK2ZXbkljKytENXBsNG9EZTZ4bWdKCnVQZzVUcFRLZVRFVVNZbHhxcGZtZkNHVDF5STBKQXZRUmw5cEoyTnN4UHpoRS9FQno3RVYzV0ErYTlBWHoxSC8KOGdveDlCejE2VHlRbXZUU2JrOEFJU1NmUmtTSWFCcytpeTJUZWwzUkx2UkwwL25ueFFzTExFaThpWkZaYXVCdwpUdWZWellMRWlBZCsvMVRHTmRFZFhrWTJiOTZ0b1FJK1E2SE5hMmc5TkMwZmRHVlBidFRuNU84TkZpa21rVHdYCmt1a084Ni9MYWk2K0NDMmVFamdqeHN2TEZnV1YyRTlYVVA3OFNLdysvRE1vdFU4MHY3OFpCQ3lqRnBTY2NvNTcKVFcwV3lCb2x4WldTbnU3UG1nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "verification": {}
                                }
                            ]
                        }
                    },
                    "timeouts": {},
                    "version": "2.2.0"
                },
                "networkd": {},
                "passwd": {
                    "users": [
                        {
                            "name": "core",
                            "sshAuthorizedKeys": [
                                "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDUq7W38xCZ9WGSWCvustaMGMT04tRohw6AKGzI7P7xql5lhCAReyt72n9qWQRZsE1YiCSQuTfXI1oc8NpSM7+lMLwj12G8z3I1YT31JHr9LLYg/XIcExkzfBI920CaS82VqmKOpI9+ARHSJBdIbKRI0f5Y+u4xbc5UzKCJX8jcKGG7nEiw8zm+cvAlfOgssMK+qJppIbVcb2iZNTsw5i2aX6FDMyC+b17DQHzBGpNbhZYxuoERZVRcnYctgIzuo6fD60gniX0fVvrchlOnubB1sRYbloP2r6UE22w/dpLKOFE5i7CA0ZzNBERZ94cIKumIH9MiJs1a6bMe89VOjjNV"
                            ]
                        }
                    ]
                },
                "storage": {},
                "systemd": {}
            },
            {
                "ignition": {
                    "config": {
                        "append": [
                            {
                                "source": "https://somalley-api.devcluster.openshift.com:49500/config/master?etcd_index=1",
                                "verification": {}
                            }
                        ]
                    },
                    "security": {
                        "tls": {
                            "certificateAuthorities": [
                                {
                                    "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXdIaGNOTVRneE1ERTVNVE14TnpJMldoY05Namd4TURFMgpNVE14TnpJMldqQW1NUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN3RFNPclpVdDQzcWNmKzFoSlRHczQKQS9JcFY2LzR2dGZDOEUzZnQ5VWcvQjNqdzFVMjZoYTN1Nzdtd0lRRFpNQ2V1UmVzTGtLc29jaWNvaC9lL2RLSQpTQWtOMUJkVHVMRzlUMVVYaThad1NNWjdUTEhCY1JKQU0xdzdTckUyUkJlK1BsakNHSlphdURCZUpBdlhud1pXCmxkQWFHb1FZb0Z6LzFSQlVTeGg0Q25EQ1VWdWZDdGROWXdhY1F3WjBmTHBiVlpoUHFZT3pmNGlWdHFiK3hrR1cKdkgyVGNJV3dDc3JYeUkzNlEwRi82UjY3MVJ5RWNVVFNMWC84aFE1YmxRT0tLMCs3MDRybWhHOHA0eVlWQThPVQpJQzdnSXI5Nkd6NllDT0JyMmUzVWVzMVpQRGZmMjh6bEVPWXVEM2x0RzhMS2creTQxV0NTbDVhTW9zNWpTQ1BECkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVXNyRQo1K1ZVR1ZJcWU1UmdsaUUvQnJnVzNieU5USU5aOC9RV0RTY0VzeU1vVjkrK2ZXbkljKytENXBsNG9EZTZ4bWdKCnVQZzVUcFRLZVRFVVNZbHhxcGZtZkNHVDF5STBKQXZRUmw5cEoyTnN4UHpoRS9FQno3RVYzV0ErYTlBWHoxSC8KOGdveDlCejE2VHlRbXZUU2JrOEFJU1NmUmtTSWFCcytpeTJUZWwzUkx2UkwwL25ueFFzTExFaThpWkZaYXVCdwpUdWZWellMRWlBZCsvMVRHTmRFZFhrWTJiOTZ0b1FJK1E2SE5hMmc5TkMwZmRHVlBidFRuNU84TkZpa21rVHdYCmt1a084Ni9MYWk2K0NDMmVFamdqeHN2TEZnV1YyRTlYVVA3OFNLdysvRE1vdFU4MHY3OFpCQ3lqRnBTY2NvNTcKVFcwV3lCb2x4WldTbnU3UG1nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "verification": {}
                                }
                            ]
                        }
                    },
                    "timeouts": {},
                    "version": "2.2.0"
                },
                "networkd": {},
                "passwd": {
                    "users": [
                        {
                            "name": "core",
                            "sshAuthorizedKeys": [
                                "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDUq7W38xCZ9WGSWCvustaMGMT04tRohw6AKGzI7P7xql5lhCAReyt72n9qWQRZsE1YiCSQuTfXI1oc8NpSM7+lMLwj12G8z3I1YT31JHr9LLYg/XIcExkzfBI920CaS82VqmKOpI9+ARHSJBdIbKRI0f5Y+u4xbc5UzKCJX8jcKGG7nEiw8zm+cvAlfOgssMK+qJppIbVcb2iZNTsw5i2aX6FDMyC+b17DQHzBGpNbhZYxuoERZVRcnYctgIzuo6fD60gniX0fVvrchlOnubB1sRYbloP2r6UE22w/dpLKOFE5i7CA0ZzNBERZ94cIKumIH9MiJs1a6bMe89VOjjNV"
                            ]
                        }
                    ]
                },
                "storage": {},
                "systemd": {}
            },
            {
                "ignition": {
                    "config": {
                        "append": [
                            {
                                "source": "https://somalley-api.devcluster.openshift.com:49500/config/master?etcd_index=2",
                                "verification": {}
                            }
                        ]
                    },
                    "security": {
                        "tls": {
                            "certificateAuthorities": [
                                {
                                    "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXdIaGNOTVRneE1ERTVNVE14TnpJMldoY05Namd4TURFMgpNVE14TnpJMldqQW1NUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN3RFNPclpVdDQzcWNmKzFoSlRHczQKQS9JcFY2LzR2dGZDOEUzZnQ5VWcvQjNqdzFVMjZoYTN1Nzdtd0lRRFpNQ2V1UmVzTGtLc29jaWNvaC9lL2RLSQpTQWtOMUJkVHVMRzlUMVVYaThad1NNWjdUTEhCY1JKQU0xdzdTckUyUkJlK1BsakNHSlphdURCZUpBdlhud1pXCmxkQWFHb1FZb0Z6LzFSQlVTeGg0Q25EQ1VWdWZDdGROWXdhY1F3WjBmTHBiVlpoUHFZT3pmNGlWdHFiK3hrR1cKdkgyVGNJV3dDc3JYeUkzNlEwRi82UjY3MVJ5RWNVVFNMWC84aFE1YmxRT0tLMCs3MDRybWhHOHA0eVlWQThPVQpJQzdnSXI5Nkd6NllDT0JyMmUzVWVzMVpQRGZmMjh6bEVPWXVEM2x0RzhMS2creTQxV0NTbDVhTW9zNWpTQ1BECkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVXNyRQo1K1ZVR1ZJcWU1UmdsaUUvQnJnVzNieU5USU5aOC9RV0RTY0VzeU1vVjkrK2ZXbkljKytENXBsNG9EZTZ4bWdKCnVQZzVUcFRLZVRFVVNZbHhxcGZtZkNHVDF5STBKQXZRUmw5cEoyTnN4UHpoRS9FQno3RVYzV0ErYTlBWHoxSC8KOGdveDlCejE2VHlRbXZUU2JrOEFJU1NmUmtTSWFCcytpeTJUZWwzUkx2UkwwL25ueFFzTExFaThpWkZaYXVCdwpUdWZWellMRWlBZCsvMVRHTmRFZFhrWTJiOTZ0b1FJK1E2SE5hMmc5TkMwZmRHVlBidFRuNU84TkZpa21rVHdYCmt1a084Ni9MYWk2K0NDMmVFamdqeHN2TEZnV1YyRTlYVVA3OFNLdysvRE1vdFU4MHY3OFpCQ3lqRnBTY2NvNTcKVFcwV3lCb2x4WldTbnU3UG1nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "verification": {}
                                }
                            ]
                        }
                    },
                    "timeouts": {},
                    "version": "2.2.0"
                },
                "networkd": {},
                "passwd": {
                    "users": [
                        {
                            "name": "core",
                            "sshAuthorizedKeys": [
                                "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDUq7W38xCZ9WGSWCvustaMGMT04tRohw6AKGzI7P7xql5lhCAReyt72n9qWQRZsE1YiCSQuTfXI1oc8NpSM7+lMLwj12G8z3I1YT31JHr9LLYg/XIcExkzfBI920CaS82VqmKOpI9+ARHSJBdIbKRI0f5Y+u4xbc5UzKCJX8jcKGG7nEiw8zm+cvAlfOgssMK+qJppIbVcb2iZNTsw5i2aX6FDMyC+b17DQHzBGpNbhZYxuoERZVRcnYctgIzuo6fD60gniX0fVvrchlOnubB1sRYbloP2r6UE22w/dpLKOFE5i7CA0ZzNBERZ94cIKumIH9MiJs1a6bMe89VOjjNV"
                            ]
                        }
                    ]
                },
                "storage": {},
                "systemd": {}
            }
        ],
        "FileList": [
            {
                "Filename": "master-0.ign",
                "Data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL3NvbWFsbGV5LWFwaS5kZXZjbHVzdGVyLm9wZW5zaGlmdC5jb206NDk1MDAvY29uZmlnL21hc3Rlcj9ldGNkX2luZGV4PTAiLCJ2ZXJpZmljYXRpb24iOnt9fV19LCJzZWN1cml0eSI6eyJ0bHMiOnsiY2VydGlmaWNhdGVBdXRob3JpdGllcyI6W3sic291cmNlIjoiZGF0YTp0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJEVkVORFFXWkhaMEYzU1VKQlowbENRVVJCVGtKbmEzRm9hMmxIT1hjd1FrRlJjMFpCUkVGdFRWSkpkMFZCV1VSV1VWRk1SWGRzZG1OSFZuVUtZekpvY0ZwdVVYaEZSRUZQUW1kT1ZrSkJUVlJDTTBwMllqTlJkRmt5UlhkSWFHTk9UVlJuZUUxRVJUVk5WRTE0VG5wSk1sZG9ZMDVOYW1kNFRVUkZNZ3BOVkUxNFRucEpNbGRxUVcxTlVrbDNSVUZaUkZaUlVVeEZkMngyWTBkV2RXTXlhSEJhYmxGNFJVUkJUMEpuVGxaQ1FVMVVRak5LZG1JelVYUlpNa1YzQ21kblJXbE5RVEJIUTFOeFIxTkpZak5FVVVWQ1FWRlZRVUUwU1VKRWQwRjNaMmRGUzBGdlNVSkJVVU4zUkZOUGNscFZkRFF6Y1dObUt6Rm9TbFJIY3pRS1FTOUpjRlkyTHpSMmRHWkRPRVV6Wm5RNVZXY3ZRak5xZHpGVk1qWm9ZVE4xTnpkdGQwbFJSRnBOUTJWMVVtVnpUR3RMYzI5amFXTnZhQzlsTDJSTFNRcFRRV3RPTVVKa1ZIVk1SemxVTVZWWWFUaGFkMU5OV2pkVVRFaENZMUpLUVUweGR6ZFRja1V5VWtKbEsxQnNha05IU2xwaGRVUkNaVXBCZGxodWQxcFhDbXhrUVdGSGIxRlpiMFo2THpGU1FsVlRlR2cwUTI1RVExVldkV1pEZEdST1dYZGhZMUYzV2pCbVRIQmlWbHBvVUhGWlQzcG1OR2xXZEhGaUszaHJSMWNLZGtneVZHTkpWM2REYzNKWWVVa3pObEV3Umk4MlVqWTNNVko1UldOVlZGTk1XQzg0YUZFMVlteFJUMHRMTUNzM01EUnliV2hIT0hBMGVWbFdRVGhQVlFwSlF6ZG5TWEk1TmtkNk5sbERUMEp5TW1VelZXVnpNVnBRUkdabU1qaDZiRVZQV1hWRU0yeDBSemhNUzJjcmVUUXhWME5UYkRWaFRXOXpOV3BUUTFCRUNrRm5UVUpCUVVkcVVXcENRVTFCTkVkQk1WVmtSSGRGUWk5M1VVVkJkMGxEY0VSQlVFSm5UbFpJVWsxQ1FXWTRSVUpVUVVSQlVVZ3ZUVUl3UjBFeFZXUUtSR2RSVjBKQ1VrbHJPV3czTURSaFdsWlBiRVJCVGxCc2FHcG5abE0zVTBaUWFrRk9RbWRyY1docmFVYzVkekJDUVZGelJrRkJUME5CVVVWQlZYTnlSUW8xSzFaVlIxWkpjV1UxVW1kc2FVVXZRbkpuVnpOaWVVNVVTVTVhT0M5UlYwUlRZMFZ6ZVUxdlZqa3JLMlpYYmtsakt5dEVOWEJzTkc5RVpUWjRiV2RLQ25WUVp6VlVjRlJMWlZSRlZWTlpiSGh4Y0dadFprTkhWREY1U1RCS1FYWlJVbXc1Y0VveVRuTjRVSHBvUlM5RlFubzNSVll6VjBFcllUbEJXSG94U0M4S09HZHZlRGxDZWpFMlZIbFJiWFpVVTJKck9FRkpVMU5tVW10VFNXRkNjeXRwZVRKVVpXd3pVa3gyVWt3d0wyNXVlRkZ6VEV4RmFUaHBXa1phWVhWQ2R3cFVkV1pXZWxsTVJXbEJaQ3N2TVZSSFRtUkZaRmhyV1RKaU9UWjBiMUZKSzFFMlNFNWhNbWM1VGtNd1ptUkhWbEJpZEZSdU5VODRUa1pwYTIxclZIZFlDbXQxYTA4NE5pOU1ZV2sySzBORE1tVkZhbWRxZUhOMlRFWm5WMVl5UlRsWVZWQTNPRk5MZHlzdlJFMXZkRlU0TUhZM09GcENRM2xxUm5CVFkyTnZOVGNLVkZjd1YzbENiMng0V2xkVGJuVTNVRzFuUFQwS0xTMHRMUzFGVGtRZ1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFvPSIsInZlcmlmaWNhdGlvbiI6e319XX19LCJ0aW1lb3V0cyI6e30sInZlcnNpb24iOiIyLjIuMCJ9LCJuZXR3b3JrZCI6e30sInBhc3N3ZCI6eyJ1c2VycyI6W3sibmFtZSI6ImNvcmUiLCJzc2hBdXRob3JpemVkS2V5cyI6WyJzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJBUURVcTdXMzh4Q1o5V0dTV0N2dXN0YU1HTVQwNHRSb2h3NkFLR3pJN1A3eHFsNWxoQ0FSZXl0NzJuOXFXUVJac0UxWWlDU1F1VGZYSTFvYzhOcFNNNytsTUx3ajEyRzh6M0kxWVQzMUpIcjlMTFlnL1hJY0V4a3pmQkk5MjBDYVM4MlZxbUtPcEk5K0FSSFNKQmRJYktSSTBmNVkrdTR4YmM1VXpLQ0pYOGpjS0dHN25FaXc4em0rY3ZBbGZPZ3NzTUsrcUpwcEliVmNiMmlaTlRzdzVpMmFYNkZETXlDK2IxN0RRSHpCR3BOYmhaWXh1b0VSWlZSY25ZY3RnSXp1bzZmRDYwZ25pWDBmVnZyY2hsT251YkIxc1JZYmxvUDJyNlVFMjJ3L2RwTEtPRkU1aTdDQTBaek5CRVJaOTRjSUt1bUlIOU1pSnMxYTZiTWU4OVZPampOViJdfV19LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319"
            },
            {
                "Filename": "master-1.ign",
                "Data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL3NvbWFsbGV5LWFwaS5kZXZjbHVzdGVyLm9wZW5zaGlmdC5jb206NDk1MDAvY29uZmlnL21hc3Rlcj9ldGNkX2luZGV4PTEiLCJ2ZXJpZmljYXRpb24iOnt9fV19LCJzZWN1cml0eSI6eyJ0bHMiOnsiY2VydGlmaWNhdGVBdXRob3JpdGllcyI6W3sic291cmNlIjoiZGF0YTp0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJEVkVORFFXWkhaMEYzU1VKQlowbENRVVJCVGtKbmEzRm9hMmxIT1hjd1FrRlJjMFpCUkVGdFRWSkpkMFZCV1VSV1VWRk1SWGRzZG1OSFZuVUtZekpvY0ZwdVVYaEZSRUZQUW1kT1ZrSkJUVlJDTTBwMllqTlJkRmt5UlhkSWFHTk9UVlJuZUUxRVJUVk5WRTE0VG5wSk1sZG9ZMDVOYW1kNFRVUkZNZ3BOVkUxNFRucEpNbGRxUVcxTlVrbDNSVUZaUkZaUlVVeEZkMngyWTBkV2RXTXlhSEJhYmxGNFJVUkJUMEpuVGxaQ1FVMVVRak5LZG1JelVYUlpNa1YzQ21kblJXbE5RVEJIUTFOeFIxTkpZak5FVVVWQ1FWRlZRVUUwU1VKRWQwRjNaMmRGUzBGdlNVSkJVVU4zUkZOUGNscFZkRFF6Y1dObUt6Rm9TbFJIY3pRS1FTOUpjRlkyTHpSMmRHWkRPRVV6Wm5RNVZXY3ZRak5xZHpGVk1qWm9ZVE4xTnpkdGQwbFJSRnBOUTJWMVVtVnpUR3RMYzI5amFXTnZhQzlsTDJSTFNRcFRRV3RPTVVKa1ZIVk1SemxVTVZWWWFUaGFkMU5OV2pkVVRFaENZMUpLUVUweGR6ZFRja1V5VWtKbEsxQnNha05IU2xwaGRVUkNaVXBCZGxodWQxcFhDbXhrUVdGSGIxRlpiMFo2THpGU1FsVlRlR2cwUTI1RVExVldkV1pEZEdST1dYZGhZMUYzV2pCbVRIQmlWbHBvVUhGWlQzcG1OR2xXZEhGaUszaHJSMWNLZGtneVZHTkpWM2REYzNKWWVVa3pObEV3Umk4MlVqWTNNVko1UldOVlZGTk1XQzg0YUZFMVlteFJUMHRMTUNzM01EUnliV2hIT0hBMGVWbFdRVGhQVlFwSlF6ZG5TWEk1TmtkNk5sbERUMEp5TW1VelZXVnpNVnBRUkdabU1qaDZiRVZQV1hWRU0yeDBSemhNUzJjcmVUUXhWME5UYkRWaFRXOXpOV3BUUTFCRUNrRm5UVUpCUVVkcVVXcENRVTFCTkVkQk1WVmtSSGRGUWk5M1VVVkJkMGxEY0VSQlVFSm5UbFpJVWsxQ1FXWTRSVUpVUVVSQlVVZ3ZUVUl3UjBFeFZXUUtSR2RSVjBKQ1VrbHJPV3czTURSaFdsWlBiRVJCVGxCc2FHcG5abE0zVTBaUWFrRk9RbWRyY1docmFVYzVkekJDUVZGelJrRkJUME5CVVVWQlZYTnlSUW8xSzFaVlIxWkpjV1UxVW1kc2FVVXZRbkpuVnpOaWVVNVVTVTVhT0M5UlYwUlRZMFZ6ZVUxdlZqa3JLMlpYYmtsakt5dEVOWEJzTkc5RVpUWjRiV2RLQ25WUVp6VlVjRlJMWlZSRlZWTlpiSGh4Y0dadFprTkhWREY1U1RCS1FYWlJVbXc1Y0VveVRuTjRVSHBvUlM5RlFubzNSVll6VjBFcllUbEJXSG94U0M4S09HZHZlRGxDZWpFMlZIbFJiWFpVVTJKck9FRkpVMU5tVW10VFNXRkNjeXRwZVRKVVpXd3pVa3gyVWt3d0wyNXVlRkZ6VEV4RmFUaHBXa1phWVhWQ2R3cFVkV1pXZWxsTVJXbEJaQ3N2TVZSSFRtUkZaRmhyV1RKaU9UWjBiMUZKSzFFMlNFNWhNbWM1VGtNd1ptUkhWbEJpZEZSdU5VODRUa1pwYTIxclZIZFlDbXQxYTA4NE5pOU1ZV2sySzBORE1tVkZhbWRxZUhOMlRFWm5WMVl5UlRsWVZWQTNPRk5MZHlzdlJFMXZkRlU0TUhZM09GcENRM2xxUm5CVFkyTnZOVGNLVkZjd1YzbENiMng0V2xkVGJuVTNVRzFuUFQwS0xTMHRMUzFGVGtRZ1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFvPSIsInZlcmlmaWNhdGlvbiI6e319XX19LCJ0aW1lb3V0cyI6e30sInZlcnNpb24iOiIyLjIuMCJ9LCJuZXR3b3JrZCI6e30sInBhc3N3ZCI6eyJ1c2VycyI6W3sibmFtZSI6ImNvcmUiLCJzc2hBdXRob3JpemVkS2V5cyI6WyJzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJBUURVcTdXMzh4Q1o5V0dTV0N2dXN0YU1HTVQwNHRSb2h3NkFLR3pJN1A3eHFsNWxoQ0FSZXl0NzJuOXFXUVJac0UxWWlDU1F1VGZYSTFvYzhOcFNNNytsTUx3ajEyRzh6M0kxWVQzMUpIcjlMTFlnL1hJY0V4a3pmQkk5MjBDYVM4MlZxbUtPcEk5K0FSSFNKQmRJYktSSTBmNVkrdTR4YmM1VXpLQ0pYOGpjS0dHN25FaXc4em0rY3ZBbGZPZ3NzTUsrcUpwcEliVmNiMmlaTlRzdzVpMmFYNkZETXlDK2IxN0RRSHpCR3BOYmhaWXh1b0VSWlZSY25ZY3RnSXp1bzZmRDYwZ25pWDBmVnZyY2hsT251YkIxc1JZYmxvUDJyNlVFMjJ3L2RwTEtPRkU1aTdDQTBaek5CRVJaOTRjSUt1bUlIOU1pSnMxYTZiTWU4OVZPampOViJdfV19LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319"
            },
            {
                "Filename": "master-2.ign",
                "Data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL3NvbWFsbGV5LWFwaS5kZXZjbHVzdGVyLm9wZW5zaGlmdC5jb206NDk1MDAvY29uZmlnL21hc3Rlcj9ldGNkX2luZGV4PTIiLCJ2ZXJpZmljYXRpb24iOnt9fV19LCJzZWN1cml0eSI6eyJ0bHMiOnsiY2VydGlmaWNhdGVBdXRob3JpdGllcyI6W3sic291cmNlIjoiZGF0YTp0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJEVkVORFFXWkhaMEYzU1VKQlowbENRVVJCVGtKbmEzRm9hMmxIT1hjd1FrRlJjMFpCUkVGdFRWSkpkMFZCV1VSV1VWRk1SWGRzZG1OSFZuVUtZekpvY0ZwdVVYaEZSRUZQUW1kT1ZrSkJUVlJDTTBwMllqTlJkRmt5UlhkSWFHTk9UVlJuZUUxRVJUVk5WRTE0VG5wSk1sZG9ZMDVOYW1kNFRVUkZNZ3BOVkUxNFRucEpNbGRxUVcxTlVrbDNSVUZaUkZaUlVVeEZkMngyWTBkV2RXTXlhSEJhYmxGNFJVUkJUMEpuVGxaQ1FVMVVRak5LZG1JelVYUlpNa1YzQ21kblJXbE5RVEJIUTFOeFIxTkpZak5FVVVWQ1FWRlZRVUUwU1VKRWQwRjNaMmRGUzBGdlNVSkJVVU4zUkZOUGNscFZkRFF6Y1dObUt6Rm9TbFJIY3pRS1FTOUpjRlkyTHpSMmRHWkRPRVV6Wm5RNVZXY3ZRak5xZHpGVk1qWm9ZVE4xTnpkdGQwbFJSRnBOUTJWMVVtVnpUR3RMYzI5amFXTnZhQzlsTDJSTFNRcFRRV3RPTVVKa1ZIVk1SemxVTVZWWWFUaGFkMU5OV2pkVVRFaENZMUpLUVUweGR6ZFRja1V5VWtKbEsxQnNha05IU2xwaGRVUkNaVXBCZGxodWQxcFhDbXhrUVdGSGIxRlpiMFo2THpGU1FsVlRlR2cwUTI1RVExVldkV1pEZEdST1dYZGhZMUYzV2pCbVRIQmlWbHBvVUhGWlQzcG1OR2xXZEhGaUszaHJSMWNLZGtneVZHTkpWM2REYzNKWWVVa3pObEV3Umk4MlVqWTNNVko1UldOVlZGTk1XQzg0YUZFMVlteFJUMHRMTUNzM01EUnliV2hIT0hBMGVWbFdRVGhQVlFwSlF6ZG5TWEk1TmtkNk5sbERUMEp5TW1VelZXVnpNVnBRUkdabU1qaDZiRVZQV1hWRU0yeDBSemhNUzJjcmVUUXhWME5UYkRWaFRXOXpOV3BUUTFCRUNrRm5UVUpCUVVkcVVXcENRVTFCTkVkQk1WVmtSSGRGUWk5M1VVVkJkMGxEY0VSQlVFSm5UbFpJVWsxQ1FXWTRSVUpVUVVSQlVVZ3ZUVUl3UjBFeFZXUUtSR2RSVjBKQ1VrbHJPV3czTURSaFdsWlBiRVJCVGxCc2FHcG5abE0zVTBaUWFrRk9RbWRyY1docmFVYzVkekJDUVZGelJrRkJUME5CVVVWQlZYTnlSUW8xSzFaVlIxWkpjV1UxVW1kc2FVVXZRbkpuVnpOaWVVNVVTVTVhT0M5UlYwUlRZMFZ6ZVUxdlZqa3JLMlpYYmtsakt5dEVOWEJzTkc5RVpUWjRiV2RLQ25WUVp6VlVjRlJMWlZSRlZWTlpiSGh4Y0dadFprTkhWREY1U1RCS1FYWlJVbXc1Y0VveVRuTjRVSHBvUlM5RlFubzNSVll6VjBFcllUbEJXSG94U0M4S09HZHZlRGxDZWpFMlZIbFJiWFpVVTJKck9FRkpVMU5tVW10VFNXRkNjeXRwZVRKVVpXd3pVa3gyVWt3d0wyNXVlRkZ6VEV4RmFUaHBXa1phWVhWQ2R3cFVkV1pXZWxsTVJXbEJaQ3N2TVZSSFRtUkZaRmhyV1RKaU9UWjBiMUZKSzFFMlNFNWhNbWM1VGtNd1ptUkhWbEJpZEZSdU5VODRUa1pwYTIxclZIZFlDbXQxYTA4NE5pOU1ZV2sySzBORE1tVkZhbWRxZUhOMlRFWm5WMVl5UlRsWVZWQTNPRk5MZHlzdlJFMXZkRlU0TUhZM09GcENRM2xxUm5CVFkyTnZOVGNLVkZjd1YzbENiMng0V2xkVGJuVTNVRzFuUFQwS0xTMHRMUzFGVGtRZ1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFvPSIsInZlcmlmaWNhdGlvbiI6e319XX19LCJ0aW1lb3V0cyI6e30sInZlcnNpb24iOiIyLjIuMCJ9LCJuZXR3b3JrZCI6e30sInBhc3N3ZCI6eyJ1c2VycyI6W3sibmFtZSI6ImNvcmUiLCJzc2hBdXRob3JpemVkS2V5cyI6WyJzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJBUURVcTdXMzh4Q1o5V0dTV0N2dXN0YU1HTVQwNHRSb2h3NkFLR3pJN1A3eHFsNWxoQ0FSZXl0NzJuOXFXUVJac0UxWWlDU1F1VGZYSTFvYzhOcFNNNytsTUx3ajEyRzh6M0kxWVQzMUpIcjlMTFlnL1hJY0V4a3pmQkk5MjBDYVM4MlZxbUtPcEk5K0FSSFNKQmRJYktSSTBmNVkrdTR4YmM1VXpLQ0pYOGpjS0dHN25FaXc4em0rY3ZBbGZPZ3NzTUsrcUpwcEliVmNiMmlaTlRzdzVpMmFYNkZETXlDK2IxN0RRSHpCR3BOYmhaWXh1b0VSWlZSY25ZY3RnSXp1bzZmRDYwZ25pWDBmVnZyY2hsT251YkIxc1JZYmxvUDJyNlVFMjJ3L2RwTEtPRkU1aTdDQTBaek5CRVJaOTRjSUt1bUlIOU1pSnMxYTZiTWU4OVZPampOViJdfV19LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319"
            }
        ]
    },
    "*machine.Worker": {
        "Config": {
            "ignition": {
                "config": {
                    "append": [
                        {
                            "source": "https://somalley-api.devcluster.openshift.com:49500/config/worker",
                            "verification": {}
                        }
                    ]
                },
                "security": {
                    "tls": {
                        "certificateAuthorities": [
                            {
                                "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXdIaGNOTVRneE1ERTVNVE14TnpJMldoY05Namd4TURFMgpNVE14TnpJMldqQW1NUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN3RFNPclpVdDQzcWNmKzFoSlRHczQKQS9JcFY2LzR2dGZDOEUzZnQ5VWcvQjNqdzFVMjZoYTN1Nzdtd0lRRFpNQ2V1UmVzTGtLc29jaWNvaC9lL2RLSQpTQWtOMUJkVHVMRzlUMVVYaThad1NNWjdUTEhCY1JKQU0xdzdTckUyUkJlK1BsakNHSlphdURCZUpBdlhud1pXCmxkQWFHb1FZb0Z6LzFSQlVTeGg0Q25EQ1VWdWZDdGROWXdhY1F3WjBmTHBiVlpoUHFZT3pmNGlWdHFiK3hrR1cKdkgyVGNJV3dDc3JYeUkzNlEwRi82UjY3MVJ5RWNVVFNMWC84aFE1YmxRT0tLMCs3MDRybWhHOHA0eVlWQThPVQpJQzdnSXI5Nkd6NllDT0JyMmUzVWVzMVpQRGZmMjh6bEVPWXVEM2x0RzhMS2creTQxV0NTbDVhTW9zNWpTQ1BECkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVXNyRQo1K1ZVR1ZJcWU1UmdsaUUvQnJnVzNieU5USU5aOC9RV0RTY0VzeU1vVjkrK2ZXbkljKytENXBsNG9EZTZ4bWdKCnVQZzVUcFRLZVRFVVNZbHhxcGZtZkNHVDF5STBKQXZRUmw5cEoyTnN4UHpoRS9FQno3RVYzV0ErYTlBWHoxSC8KOGdveDlCejE2VHlRbXZUU2JrOEFJU1NmUmtTSWFCcytpeTJUZWwzUkx2UkwwL25ueFFzTExFaThpWkZaYXVCdwpUdWZWellMRWlBZCsvMVRHTmRFZFhrWTJiOTZ0b1FJK1E2SE5hMmc5TkMwZmRHVlBidFRuNU84TkZpa21rVHdYCmt1a084Ni9MYWk2K0NDMmVFamdqeHN2TEZnV1YyRTlYVVA3OFNLdysvRE1vdFU4MHY3OFpCQ3lqRnBTY2NvNTcKVFcwV3lCb2x4WldTbnU3UG1nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                "verification": {}
                            }
                        ]
                    }
                },
                "timeouts": {},
                "version": "2.2.0"
            },
            "networkd": {},
            "passwd": {
                "users": [
                    {
                        "name": "core",
                        "sshAuthorizedKeys": [
                            "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDUq7W38xCZ9WGSWCvustaMGMT04tRohw6AKGzI7P7xql5lhCAReyt72n9qWQRZsE1YiCSQuTfXI1oc8NpSM7+lMLwj12G8z3I1YT31JHr9LLYg/XIcExkzfBI920CaS82VqmKOpI9+ARHSJBdIbKRI0f5Y+u4xbc5UzKCJX8jcKGG7nEiw8zm+cvAlfOgssMK+qJppIbVcb2iZNTsw5i2aX6FDMyC+b17DQHzBGpNbhZYxuoERZVRcnYctgIzuo6fD60gniX0fVvrchlOnubB1sRYbloP2r6UE22w/dpLKOFE5i7CA0ZzNBERZ94cIKumIH9MiJs1a6bMe89VOjjNV"
                        ]
                    }
                ]
            },
            "storage": {},
            "systemd": {}
        },
        "File": {
            "Filename": "worker.ign",
            "Data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL3NvbWFsbGV5LWFwaS5kZXZjbHVzdGVyLm9wZW5zaGlmdC5jb206NDk1MDAvY29uZmlnL3dvcmtlciIsInZlcmlmaWNhdGlvbiI6e319XX0sInNlY3VyaXR5Ijp7InRscyI6eyJjZXJ0aWZpY2F0ZUF1dGhvcml0aWVzIjpbeyJzb3VyY2UiOiJkYXRhOnRleHQvcGxhaW47Y2hhcnNldD11dGYtODtiYXNlNjQsTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUkRWRU5EUVdaSFowRjNTVUpCWjBsQ1FVUkJUa0puYTNGb2EybEhPWGN3UWtGUmMwWkJSRUZ0VFZKSmQwVkJXVVJXVVZGTVJYZHNkbU5IVm5VS1l6Sm9jRnB1VVhoRlJFRlBRbWRPVmtKQlRWUkNNMHAyWWpOUmRGa3lSWGRJYUdOT1RWUm5lRTFFUlRWTlZFMTRUbnBKTWxkb1kwNU5hbWQ0VFVSRk1ncE5WRTE0VG5wSk1sZHFRVzFOVWtsM1JVRlpSRlpSVVV4RmQyeDJZMGRXZFdNeWFIQmFibEY0UlVSQlQwSm5UbFpDUVUxVVFqTktkbUl6VVhSWk1rVjNDbWRuUldsTlFUQkhRMU54UjFOSllqTkVVVVZDUVZGVlFVRTBTVUpFZDBGM1oyZEZTMEZ2U1VKQlVVTjNSRk5QY2xwVmREUXpjV05tS3pGb1NsUkhjelFLUVM5SmNGWTJMelIyZEdaRE9FVXpablE1VldjdlFqTnFkekZWTWpab1lUTjFOemR0ZDBsUlJGcE5RMlYxVW1WelRHdExjMjlqYVdOdmFDOWxMMlJMU1FwVFFXdE9NVUprVkhWTVJ6bFVNVlZZYVRoYWQxTk5XamRVVEVoQ1kxSktRVTB4ZHpkVGNrVXlVa0psSzFCc2FrTkhTbHBoZFVSQ1pVcEJkbGh1ZDFwWENteGtRV0ZIYjFGWmIwWjZMekZTUWxWVGVHZzBRMjVFUTFWV2RXWkRkR1JPV1hkaFkxRjNXakJtVEhCaVZscG9VSEZaVDNwbU5HbFdkSEZpSzNoclIxY0tka2d5VkdOSlYzZERjM0pZZVVrek5sRXdSaTgyVWpZM01WSjVSV05WVkZOTVdDODRhRkUxWW14UlQwdExNQ3MzTURSeWJXaEhPSEEwZVZsV1FUaFBWUXBKUXpkblNYSTVOa2Q2TmxsRFQwSnlNbVV6VldWek1WcFFSR1ptTWpoNmJFVlBXWFZFTTJ4MFJ6aE1TMmNyZVRReFYwTlRiRFZoVFc5ek5XcFRRMUJFQ2tGblRVSkJRVWRxVVdwQ1FVMUJORWRCTVZWa1JIZEZRaTkzVVVWQmQwbERjRVJCVUVKblRsWklVazFDUVdZNFJVSlVRVVJCVVVndlRVSXdSMEV4VldRS1JHZFJWMEpDVWtsck9XdzNNRFJoV2xaUGJFUkJUbEJzYUdwblpsTTNVMFpRYWtGT1FtZHJjV2hyYVVjNWR6QkNRVkZ6UmtGQlQwTkJVVVZCVlhOeVJRbzFLMVpWUjFaSmNXVTFVbWRzYVVVdlFuSm5Wek5pZVU1VVNVNWFPQzlSVjBSVFkwVnplVTF2VmprcksyWlhia2xqS3l0RU5YQnNORzlFWlRaNGJXZEtDblZRWnpWVWNGUkxaVlJGVlZOWmJIaHhjR1p0WmtOSFZERjVTVEJLUVhaUlVtdzVjRW95VG5ONFVIcG9SUzlGUW5vM1JWWXpWMEVyWVRsQldIb3hTQzhLT0dkdmVEbENlakUyVkhsUmJYWlVVMkpyT0VGSlUxTm1VbXRUU1dGQ2N5dHBlVEpVWld3elVreDJVa3d3TDI1dWVGRnpURXhGYVRocFdrWmFZWFZDZHdwVWRXWldlbGxNUldsQlpDc3ZNVlJIVG1SRlpGaHJXVEppT1RaMGIxRkpLMUUyU0U1aE1tYzVUa013Wm1SSFZsQmlkRlJ1TlU4NFRrWnBhMjFyVkhkWUNtdDFhMDg0Tmk5TVlXazJLME5ETW1WRmFtZHFlSE4yVEVablYxWXlSVGxZVlZBM09GTkxkeXN2UkUxdmRGVTRNSFkzT0ZwQ1EzbHFSbkJUWTJOdk5UY0tWRmN3VjNsQ2IyeDRXbGRUYm5VM1VHMW5QVDBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89IiwidmVyaWZpY2F0aW9uIjp7fX1dfX0sInRpbWVvdXRzIjp7fSwidmVyc2lvbiI6IjIuMi4wIn0sIm5ldHdvcmtkIjp7fSwicGFzc3dkIjp7InVzZXJzIjpbeyJuYW1lIjoiY29yZSIsInNzaEF1dGhvcml6ZWRLZXlzIjpbInNzaC1yc2EgQUFBQUIzTnphQzF5YzJFQUFBQURBUUFCQUFBQkFRRFVxN1czOHhDWjlXR1NXQ3Z1c3RhTUdNVDA0dFJvaHc2QUtHekk3UDd4cWw1bGhDQVJleXQ3Mm45cVdRUlpzRTFZaUNTUXVUZlhJMW9jOE5wU003K2xNTHdqMTJHOHozSTFZVDMxSkhyOUxMWWcvWEljRXhremZCSTkyMENhUzgyVnFtS09wSTkrQVJIU0pCZEliS1JJMGY1WSt1NHhiYzVVektDSlg4amNLR0c3bkVpdzh6bStjdkFsZk9nc3NNSytxSnBwSWJWY2IyaVpOVHN3NWkyYVg2RkRNeUMrYjE3RFFIekJHcE5iaFpZeHVvRVJaVlJjblljdGdJenVvNmZENjBnbmlYMGZWdnJjaGxPbnViQjFzUllibG9QMnI2VUUyMncvZHBMS09GRTVpN0NBMFp6TkJFUlo5NGNJS3VtSUg5TWlKczFhNmJNZTg5Vk9qak5WIl19XX0sInN0b3JhZ2UiOnt9LCJzeXN0ZW1kIjp7fX0="
        }
    },
    "*machines.ClusterK8sIO": {
        "Raw": "CmFwaVZlcnNpb246ICJjbHVzdGVyLms4cy5pby92MWFscGhhMSIKa2luZDogQ2x1c3RlcgptZXRhZGF0YToKICBuYW1lOiBzb21hbGxleQogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNsdXN0ZXItYXBpCnNwZWM6CiAgY2x1c3Rlck5ldHdvcms6CiAgICBzZXJ2aWNlczoKICAgICAgY2lkckJsb2NrczoKICAgICAgLSAxMC4zLjAuMC8xNgogICAgcG9kczoKICAgICAgY2lkckJsb2NrczoKICAgICAgLSAxMC4yLjAuMC8xNgogICAgc2VydmljZURvbWFpbjogdW51c2VkCg=="
    },
    "*machines.Worker": {
        "MachineSetRaw": "CmFwaVZlcnNpb246IGNsdXN0ZXIuazhzLmlvL3YxYWxwaGExCmtpbmQ6IE1hY2hpbmVTZXQKbWV0YWRhdGE6CiAgbmFtZTogc29tYWxsZXktd29ya2VyLTAKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQogIGxhYmVsczoKICAgIHNpZ3MuazhzLmlvL2NsdXN0ZXItYXBpLWNsdXN0ZXI6IHNvbWFsbGV5CiAgICBzaWdzLms4cy5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IHdvcmtlcgogICAgc2lncy5rOHMuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKc3BlYzoKICByZXBsaWNhczogMwogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIHNpZ3MuazhzLmlvL2NsdXN0ZXItYXBpLW1hY2hpbmVzZXQ6IHdvcmtlcgogICAgICBzaWdzLms4cy5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBzb21hbGxleQogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBzaWdzLms4cy5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiB3b3JrZXIKICAgICAgICBzaWdzLms4cy5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBzb21hbGxleQogICAgICAgIHNpZ3MuazhzLmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgc2lncy5rOHMuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgIHNwZWM6CiAgICAgIHByb3ZpZGVyQ29uZmlnOgogICAgICAgIHZhbHVlOgogICAgICAgICAgYXBpVmVyc2lvbjogYXdzLmNsdXN0ZXIuazhzLmlvL3YxYWxwaGExCiAgICAgICAgICBraW5kOiBBV1NNYWNoaW5lUHJvdmlkZXJDb25maWcKICAgICAgICAgIGFtaToKICAgICAgICAgICAgaWQ6IGFtaS0wMDJjZTI4ZTQzYzExOTA1NAogICAgICAgICAgaW5zdGFuY2VUeXBlOiB0Mi5tZWRpdW0KICAgICAgICAgIHBsYWNlbWVudDoKICAgICAgICAgICAgcmVnaW9uOiB1cy1lYXN0LTIKICAgICAgICAgIHN1Ym5ldDoKICAgICAgICAgICAgZmlsdGVyczoKICAgICAgICAgICAgLSBuYW1lOiAidGFnOk5hbWUiCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gInNvbWFsbGV5LXdvcmtlci0qIgogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogInNvbWFsbGV5LXdvcmtlci1wcm9maWxlIgogICAgICAgICAgdGFnczoKICAgICAgICAgICAgLSBuYW1lOiAidGVjdG9uaWNDbHVzdGVySUQiCiAgICAgICAgICAgICAgdmFsdWU6ICJkMzJlMWFhZS0yMzQwLTQxNmQtOWJhMi00MTQ5YjhlMWRjODUiCiAgICAgICAgICBzZWN1cml0eUdyb3VwczoKICAgICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAgIC0gbmFtZTogInRhZzpOYW1lIgogICAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgICAgLSAic29tYWxsZXlfd29ya2VyX3NnIgogICAgICAgICAgdXNlckRhdGFTZWNyZXQ6CiAgICAgICAgICAgIG5hbWU6IHdvcmtlci11c2VyLWRhdGEKICAgICAgdmVyc2lvbnM6CiAgICAgICAga3ViZWxldDogIiIKICAgICAgICBjb250cm9sUGxhbmU6ICIiCg==",
        "UserDataSecretRaw": "CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci1hcGkKdHlwZTogT3BhcXVlCmRhdGE6CiAgdXNlckRhdGE6IGV5SnBaMjVwZEdsdmJpSTZleUpqYjI1bWFXY2lPbnNpWVhCd1pXNWtJanBiZXlKemIzVnlZMlVpT2lKb2RIUndjem92TDNOdmJXRnNiR1Y1TFdGd2FTNWtaWFpqYkhWemRHVnlMbTl3Wlc1emFHbG1kQzVqYjIwNk5EazFNREF2WTI5dVptbG5MM2R2Y210bGNpSXNJblpsY21sbWFXTmhkR2x2YmlJNmUzMTlYWDBzSW5ObFkzVnlhWFI1SWpwN0luUnNjeUk2ZXlKalpYSjBhV1pwWTJGMFpVRjFkR2h2Y21sMGFXVnpJanBiZXlKemIzVnlZMlVpT2lKa1lYUmhPblJsZUhRdmNHeGhhVzQ3WTJoaGNuTmxkRDExZEdZdE9EdGlZWE5sTmpRc1RGTXdkRXhUTVVOU1ZXUktWR2xDUkZKV1NsVlRWVnBLVVRCR1ZWSlRNSFJNVXpCMFEyc3hTbE5WVWtSV1JVNUVVVmRhU0Zvd1JqTlRWVXBDV2pCc1ExRlZVa0pVYTBwdVlUTkdiMkV5YkVoUFdHTjNVV3RHVW1Nd1drSlNSVVowVkZaS1NtUXdWa0pYVlZKWFZWWkdUVkpZWkhOa2JVNUlWbTVWUzFsNlNtOWpSbkIxVlZob1JsSkZSbEJSYldSUFZtdEtRbFJXVWtOTk1IQXlXV3BPVW1SR2EzbFNXR1JKWVVkT1QxUldVbTVsUlRGRlVsUldUbFpGTVRSVWJuQktUV3hrYjFrd05VNWhiV1EwVkZWU1JrMW5jRTVXUlRFMFZHNXdTazFzWkhGUlZ6Rk9WV3RzTTFKVlJscFNSbHBTVlZWNFJtUXllREpaTUdSWFpGZE5lV0ZJUW1GaWJFWTBVbFZTUWxRd1NtNVViRnBEVVZVeFZWRnFUa3RrYlVsNlZWaFNXazFyVmpORGJXUnVVbGRzVGxGVVFraFJNVTU0VWpGT1NsbHFUa1ZWVlZaRFVWWkdWbEZWUlRCVFZVcEZaREJHTTFveVpFWlRNRVoyVTFWS1FsVlZUak5TUms1UVkyeHdWbVJFVVhwalYwNXRTM3BHYjFOc1VraGplbEZMVVZNNVNtTkdXVEpNZWxJeVpFZGFSRTlGVlhwYWJsRTFWbGRqZGxGcVRuRmtla1pXVFdwYWIxbFVUakZPZW1SMFpEQnNVbEpHY0U1Uk1sWXhWVzFXZWxSSGRFeGpNamxxWVZkT2RtRkRPV3hNTWxKTVUxRndWRkZYZEU5TlZVcHJWa2hXVFZKNmJGVk5WbFpaWVZSb1lXUXhUazVYYW1SVlZFVm9RMWt4U2t0UlZUQjRaSHBrVkdOclZYbFZhMHBzU3pGQ2MyRnJUa2hUYkhCb1pGVlNRMXBWY0VKa2JHaDFaREZ3V0VOdGVHdFJWMFpJWWpGR1dtSXdXalpNZWtaVFVXeFdWR1ZIWnpCUk1qVkZVVEZXVjJSWFdrUmtSMUpQVjFoa2FGa3hSak5YYWtKdFZFaENhVlpzY0c5VlNFWmFWRE53YlU1SGJGZGtTRVpwU3pOb2NsSXhZMHRrYTJkNVZrZE9TbFl6WkVSak0wcFpaVlZyZWs1c1JYZFNhVGd5VldwWk0wMVdTalZTVjA1V1ZrWk9UVmRET0RSaFJrVXhXVzE0VWxRd2RFeE5RM016VFVSU2VXSlhhRWhQU0VFd1pWWnNWMUZVYUZCV1VYQktVWHBrYmxOWVNUVk9hMlEyVG14c1JGUXdTbmxOYlZWNlZsZFdlazFXY0ZGU1IxcHRUV3BvTm1KRlZsQlhXRlpGVFRKNE1GSjZhRTFUTW1OeVpWUlJlRll3VGxSaVJGWm9WRmM1ZWs1WGNGUlJNVUpGUTJ0R2JsUlZTa0pSVldSeFZWZHdRMUZWTVVKT1JXUkNUVlpXYTFKSVpFWlJhVGt6VlZWV1FtUXdiRVJqUlZKQ1ZVVktibFJzV2tsVmF6RkRVVmRaTkZKVlNsVlJWVkpDVlZWbmRsUlZTWGRTTUVWNFZsZFJTMUpIWkZKV01FcERWV3RzY2s5WGR6Tk5SRkpvVjJ4YVVHSkZVa0pVYkVKellVZHdibHBzVFROVk1GcFJZV3RHVDFGdFpISmpWMmh5WVZWak5XUjZRa05SVmtaNlVtdEdRbFF3VGtKVlZWWkNWbGhPZVZKUmJ6RkxNVnBXVWpGYVNtTlhWVEZWYldSellWVlZkbEZ1U201V2VrNXBaVlUxVlZOVk5XRlBRemxTVmpCU1ZGa3dWbnBsVlRGMlZtcHJja3N5V2xoaWEyeHFTM2wwUlU1WVFuTk9SemxGV2xSYU5HSlhaRXREYmxaUlducFdWV05HVWt4YVZsSkdWbFpPV21KSWFIaGpSMXAwV210T1NGWkVSalZUVkVKTFVWaGFVbFZ0ZHpWalJXOTVWRzVPTkZWSWNHOVNVemxHVVc1dk0xSldXWHBXTUVWeVdWUnNRbGRJYjNoVFF6aExUMGRrZG1WRWJFTmxha1V5Vmtoc1VtSllXbFZWTWtweVQwVkdTbFV4VG0xVmJYUlVVMWRHUTJONWRIQmxWRXBWV2xkM2VsVnJlREpWYTNkM1RESTFkV1ZHUm5wVVJYaEdZVlJvY0ZkcldtRlpXRlpEWkhkd1ZXUlhXbGRsYkd4TlVsZHNRbHBEYzNaTlZsSklWRzFTUmxwR2FISlhWRXBwVDFSYU1HSXhSa3BMTVVVeVUwVTFhRTF0WXpWVWEwMTNXbTFTU0Zac1FtbGtSbEoxVGxVNE5GUnJXbkJoTWpGeVZraGtXVU50ZERGaE1EZzBUbWs1VFZsWGF6SkxNRTVFVFcxV1JtRnRaSEZsU0U0eVZFVmFibFl4V1hsU1ZHeFpWbFpCTTA5R1RreGtlWE4yVWtVeGRtUkdWVFJOU0ZrelQwWndRMUV6YkhGU2JrSlVXVEpPZGs1VVkwdFdSbU4zVmpOc1EySXllRFJYYkdSVVltNVZNMVZITVc1UVZEQkxURk13ZEV4VE1VWlVhMUZuVVRCV1UxWkZiRWRUVlU1Q1ZrVlZkRXhUTUhSTVVXODlJaXdpZG1WeWFXWnBZMkYwYVc5dUlqcDdmWDFkZlgwc0luUnBiV1Z2ZFhSeklqcDdmU3dpZG1WeWMybHZiaUk2SWpJdU1pNHdJbjBzSW01bGRIZHZjbXRrSWpwN2ZTd2ljR0Z6YzNka0lqcDdJblZ6WlhKeklqcGJleUp1WVcxbElqb2lZMjl5WlNJc0luTnphRUYxZEdodmNtbDZaV1JMWlhseklqcGJJbk56YUMxeWMyRWdRVUZCUVVJelRucGhRekY1WXpKRlFVRkJRVVJCVVVGQ1FVRkJRa0ZSUkZWeE4xY3pPSGhEV2psWFIxTlhRM1oxYzNSaFRVZE5WREEwZEZKdmFIYzJRVXRIZWtrM1VEZDRjV3cxYkdoRFFWSmxlWFEzTW00NWNWZFJVbHB6UlRGWmFVTlRVWFZVWmxoSk1XOWpPRTV3VTAwM0syeE5USGRxTVRKSE9Ib3pTVEZaVkRNeFNraHlPVXhNV1djdldFbGpSWGhyZW1aQ1NUa3lNRU5oVXpneVZuRnRTMDl3U1RrclFWSklVMHBDWkVsaVMxSkpNR1kxV1N0MU5IaGlZelZWZWt0RFNsZzRhbU5MUjBjM2JrVnBkemg2YlN0amRrRnNaazluYzNOTlN5dHhTbkJ3U1dKV1kySXlhVnBPVkhOM05Xa3lZVmcyUmtSTmVVTXJZakUzUkZGSWVrSkhjRTVpYUZwWmVIVnZSVkphVmxKamJsbGpkR2RKZW5Wdk5tWkVOakJuYm1sWU1HWldkbkpqYUd4UGJuVmlRakZ6VWxsaWJHOVFNbkkyVlVVeU1uY3ZaSEJNUzA5R1JUVnBOME5CTUZwNlRrSkZVbG81TkdOSlMzVnRTVWc1VFdsS2N6RmhObUpOWlRnNVZrOXFhazVXSWwxOVhYMHNJbk4wYjNKaFoyVWlPbnQ5TENKemVYTjBaVzFrSWpwN2ZYMD0K"
    },
    "*manifests.Manifests": {
        "KubeSysConfig": {
            "kind": "ConfigMap",
            "apiVersion": "v1",
            "metadata": {
                "name": "cluster-config-v1",
                "namespace": "kube-system"
            },
            "data": {
                "install-config": "admin:\n  email: somalley@redhat.com\n  password: password\n  sshKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDUq7W38xCZ9WGSWCvustaMGMT04tRohw6AKGzI7P7xql5lhCAReyt72n9qWQRZsE1YiCSQuTfXI1oc8NpSM7+lMLwj12G8z3I1YT31JHr9LLYg/XIcExkzfBI920CaS82VqmKOpI9+ARHSJBdIbKRI0f5Y+u4xbc5UzKCJX8jcKGG7nEiw8zm+cvAlfOgssMK+qJppIbVcb2iZNTsw5i2aX6FDMyC+b17DQHzBGpNbhZYxuoERZVRcnYctgIzuo6fD60gniX0fVvrchlOnubB1sRYbloP2r6UE22w/dpLKOFE5i7CA0ZzNBERZ94cIKumIH9MiJs1a6bMe89VOjjNV\nbaseDomain: devcluster.openshift.com\nclusterID: d32e1aae-2340-416d-9ba2-4149b8e1dc85\nmachines:\n- name: master\n  platform: {}\n  replicas: 3\n- name: worker\n  platform: {}\n  replicas: 3\nmetadata:\n  creationTimestamp: null\n  name: somalley\nnetworking:\n  podCIDR: 10.2.0.0/16\n  serviceCIDR: 10.3.0.0/16\n  type: flannel\nplatform:\n  aws:\n    region: us-east-2\n    vpcCIDRBlock: 10.0.0.0/16\n    vpcID: \"\"\npullSecret: '{\"auths\": {\"quay.io\": {\"auth\": \"Y29yZW9zK3RlYzJfaWZidWdsanFpcTR0bXFyeGd1MnMybWtnaTowUldTOVhLVTZGNE8xUU9QMUlZTURFTFpRUUs2NVNVS0kwUTMwTUNWWFU5R0lOWUdDTVQwNDRZMTJNVzIxRVJR\",\"email\":\n  \"\"}}}'\n",
                "mao-config": "apiServiceCA: |\n  -----BEGIN CERTIFICATE-----\n  MIIDMzCCAhugAwIBAgIIdrE1QEtrnA0wDQYJKoZIhvcNAQELBQAwJjESMBAGA1UE\n  CxMJb3BlbnNoaWZ0MRAwDgYDVQQDEwdyb290LWNhMB4XDTE4MTAxOTEzMTcyNloX\n  DTI4MTAxNjEzMTcyN1owKDERMA8GA1UECxMIYm9vdGt1YmUxEzARBgNVBAMTCmFn\n  Z3JlZ2F0b3IwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCVRwwC/F8\n  Bf5UgYLg8CSp9GstazEtMqC3OHZ72O892BGOPV42iTQ00nE1AMvdO3YeBMpoAZGD\n  bociQjvaA7xWbZBQ4M7ckZ0M32P061HyrjIm1m8Lb2YTdYMoz5UftYJ/RIiRb7+C\n  1uThYSk+atjKV6kLcsq7ijtJGecxZCWgklt9QdgnjrXfk80gz5xa+UCQa/A2qyXb\n  qj+nhGl8MajQ479i57Or08EPcfkOkxY+Dfldx7Gu1EfMeAB7cXg3VLsvtb643Qn0\n  4FtnzN4neuOe+kPYH9++KWecEHrYgGkZbDEMU9bJbeH36H1PgmQbT8nE2DWHQglC\n  NkAYZ6hDgVUvAgMBAAGjYzBhMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTAD\n  AQH/MB0GA1UdDgQWBBRIk9l704aZVOlDANPlhjgfS7SFPjAfBgNVHSMEGDAWgBRI\n  k9l704aZVOlDANPlhjgfS7SFPjANBgkqhkiG9w0BAQsFAAOCAQEARIfNPhitfNx1\n  1w1l+hf+0p5nOLdYBY2nawepTa9TNfkaLrVNK0YbTCb9aqyty68miWySjXw0ryR7\n  I9svadVgxEG6+hMhleCoFpsByShfHGiv5v94ODDoeA7ZGOcYcqRv+Rt7WUylnw1r\n  0XB8ZVZRzNmTUG6rDRhrXruDBRxg5E6o4ScaGpep22J7e1XSsMH/Gh2b3Lbx6Wwt\n  Otl5o85sPpJzDLuoCbiCn/OMh12Bxs/+06YP9D1P2+/zZqMPUGKb0ftU6WMIls4X\n  6C77iit9WbnU9MOm0NMnDqq+cTmSL8AWE1uv0KtlxKy/aLlBFCmcgMtm8Ih4GYmG\n  n2YAbQhVsg==\n  -----END CERTIFICATE-----\napiVersion: v1\naws:\n  availabilityZone: \"\"\n  clusterID: d32e1aae-2340-416d-9ba2-4149b8e1dc85\n  clusterName: somalley\n  image: ami-002ce28e43c119054\n  region: us-east-2\n  replicas: 0\nkind: machineAPIOperatorConfig\nlibvirt: null\nopenstack: null\nprovider: aws\ntargetNamespace: openshift-cluster-api\n",
                "network-config": "apiVersion: v1\ncalicoConfig:\n  mtu: \"1450\"\nkind: TectonicNetworkOperatorConfig\nnetworkProfile: flannel\npodCIDR: 10.2.0.0/16\n"
            }
        },
        "FileList": [
            {
                "Filename": "manifests/cluster-config.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKZGF0YToKICBpbnN0YWxsLWNvbmZpZzogfAogICAgYWRtaW46CiAgICAgIGVtYWlsOiBzb21hbGxleUByZWRoYXQuY29tCiAgICAgIHBhc3N3b3JkOiBwYXNzd29yZAogICAgICBzc2hLZXk6IHNzaC1yc2EgQUFBQUIzTnphQzF5YzJFQUFBQURBUUFCQUFBQkFRRFVxN1czOHhDWjlXR1NXQ3Z1c3RhTUdNVDA0dFJvaHc2QUtHekk3UDd4cWw1bGhDQVJleXQ3Mm45cVdRUlpzRTFZaUNTUXVUZlhJMW9jOE5wU003K2xNTHdqMTJHOHozSTFZVDMxSkhyOUxMWWcvWEljRXhremZCSTkyMENhUzgyVnFtS09wSTkrQVJIU0pCZEliS1JJMGY1WSt1NHhiYzVVektDSlg4amNLR0c3bkVpdzh6bStjdkFsZk9nc3NNSytxSnBwSWJWY2IyaVpOVHN3NWkyYVg2RkRNeUMrYjE3RFFIekJHcE5iaFpZeHVvRVJaVlJjblljdGdJenVvNmZENjBnbmlYMGZWdnJjaGxPbnViQjFzUllibG9QMnI2VUUyMncvZHBMS09GRTVpN0NBMFp6TkJFUlo5NGNJS3VtSUg5TWlKczFhNmJNZTg5Vk9qak5WCiAgICBiYXNlRG9tYWluOiBkZXZjbHVzdGVyLm9wZW5zaGlmdC5jb20KICAgIGNsdXN0ZXJJRDogZDMyZTFhYWUtMjM0MC00MTZkLTliYTItNDE0OWI4ZTFkYzg1CiAgICBtYWNoaW5lczoKICAgIC0gbmFtZTogbWFzdGVyCiAgICAgIHBsYXRmb3JtOiB7fQogICAgICByZXBsaWNhczogMwogICAgLSBuYW1lOiB3b3JrZXIKICAgICAgcGxhdGZvcm06IHt9CiAgICAgIHJlcGxpY2FzOiAzCiAgICBtZXRhZGF0YToKICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgbmFtZTogc29tYWxsZXkKICAgIG5ldHdvcmtpbmc6CiAgICAgIHBvZENJRFI6IDEwLjIuMC4wLzE2CiAgICAgIHNlcnZpY2VDSURSOiAxMC4zLjAuMC8xNgogICAgICB0eXBlOiBmbGFubmVsCiAgICBwbGF0Zm9ybToKICAgICAgYXdzOgogICAgICAgIHJlZ2lvbjogdXMtZWFzdC0yCiAgICAgICAgdnBjQ0lEUkJsb2NrOiAxMC4wLjAuMC8xNgogICAgICAgIHZwY0lEOiAiIgogICAgcHVsbFNlY3JldDogJ3siYXV0aHMiOiB7InF1YXkuaW8iOiB7ImF1dGgiOiAiWTI5eVpXOXpLM1JsWXpKZmFXWmlkV2RzYW5GcGNUUjBiWEZ5ZUdkMU1uTXliV3RuYVRvd1VsZFRPVmhMVlRaR05FOHhVVTlRTVVsWlRVUkZURnBSVVVzMk5WTlZTMGt3VVRNd1RVTldXRlU1UjBsT1dVZERUVlF3TkRSWk1USk5Wekl4UlZKUiIsImVtYWlsIjoKICAgICAgIiJ9fX0nCiAgbWFvLWNvbmZpZzogfAogICAgYXBpU2VydmljZUNBOiB8CiAgICAgIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogICAgICBNSUlETXpDQ0FodWdBd0lCQWdJSWRyRTFRRXRybkEwd0RRWUpLb1pJaHZjTkFRRUxCUUF3SmpFU01CQUdBMVVFCiAgICAgIEN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNE1UQXhPVEV6TVRjeU5sb1gKICAgICAgRFRJNE1UQXhOakV6TVRjeU4xb3dLREVSTUE4R0ExVUVDeE1JWW05dmRHdDFZbVV4RXpBUkJnTlZCQU1UQ21GbgogICAgICBaM0psWjJGMGIzSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQ1ZSd3dDL0Y4CiAgICAgIEJmNVVnWUxnOENTcDlHc3RhekV0TXFDM09IWjcyTzg5MkJHT1BWNDJpVFEwMG5FMUFNdmRPM1llQk1wb0FaR0QKICAgICAgYm9jaVFqdmFBN3hXYlpCUTRNN2NrWjBNMzJQMDYxSHlyakltMW04TGIyWVRkWU1vejVVZnRZSi9SSWlSYjcrQwogICAgICAxdVRoWVNrK2F0aktWNmtMY3NxN2lqdEpHZWN4WkNXZ2tsdDlRZGduanJYZms4MGd6NXhhK1VDUWEvQTJxeVhiCiAgICAgIHFqK25oR2w4TWFqUTQ3OWk1N09yMDhFUGNma09reFkrRGZsZHg3R3UxRWZNZUFCN2NYZzNWTHN2dGI2NDNRbjAKICAgICAgNEZ0bnpONG5ldU9lK2tQWUg5KytLV2VjRUhyWWdHa1piREVNVTliSmJlSDM2SDFQZ21RYlQ4bkUyRFdIUWdsQwogICAgICBOa0FZWjZoRGdWVXZBZ01CQUFHall6QmhNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFECiAgICAgIEFRSC9NQjBHQTFVZERnUVdCQlJJazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBZkJnTlZIU01FR0RBV2dCUkkKICAgICAgazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVJJZk5QaGl0Zk54MQogICAgICAxdzFsK2hmKzBwNW5PTGRZQlkybmF3ZXBUYTlUTmZrYUxyVk5LMFliVENiOWFxeXR5NjhtaVd5U2pYdzByeVI3CiAgICAgIEk5c3ZhZFZneEVHNitoTWhsZUNvRnBzQnlTaGZIR2l2NXY5NE9ERG9lQTdaR09jWWNxUnYrUnQ3V1V5bG53MXIKICAgICAgMFhCOFpWWlJ6Tm1UVUc2ckRSaHJYcnVEQlJ4ZzVFNm80U2NhR3BlcDIySjdlMVhTc01IL0doMmIzTGJ4Nld3dAogICAgICBPdGw1bzg1c1BwSnpETHVvQ2JpQ24vT01oMTJCeHMvKzA2WVA5RDFQMisvelpxTVBVR0tiMGZ0VTZXTUlsczRYCiAgICAgIDZDNzdpaXQ5V2JuVTlNT20wTk1uRHFxK2NUbVNMOEFXRTF1djBLdGx4S3kvYUxsQkZDbWNnTXRtOEloNEdZbUcKICAgICAgbjJZQWJRaFZzZz09CiAgICAgIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KICAgIGFwaVZlcnNpb246IHYxCiAgICBhd3M6CiAgICAgIGF2YWlsYWJpbGl0eVpvbmU6ICIiCiAgICAgIGNsdXN0ZXJJRDogZDMyZTFhYWUtMjM0MC00MTZkLTliYTItNDE0OWI4ZTFkYzg1CiAgICAgIGNsdXN0ZXJOYW1lOiBzb21hbGxleQogICAgICBpbWFnZTogYW1pLTAwMmNlMjhlNDNjMTE5MDU0CiAgICAgIHJlZ2lvbjogdXMtZWFzdC0yCiAgICAgIHJlcGxpY2FzOiAwCiAgICBraW5kOiBtYWNoaW5lQVBJT3BlcmF0b3JDb25maWcKICAgIGxpYnZpcnQ6IG51bGwKICAgIG9wZW5zdGFjazogbnVsbAogICAgcHJvdmlkZXI6IGF3cwogICAgdGFyZ2V0TmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci1hcGkKICBuZXR3b3JrLWNvbmZpZzogfAogICAgYXBpVmVyc2lvbjogdjEKICAgIGNhbGljb0NvbmZpZzoKICAgICAgbXR1OiAiMTQ1MCIKICAgIGtpbmQ6IFRlY3RvbmljTmV0d29ya09wZXJhdG9yQ29uZmlnCiAgICBuZXR3b3JrUHJvZmlsZTogZmxhbm5lbAogICAgcG9kQ0lEUjogMTAuMi4wLjAvMTYKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGNsdXN0ZXItY29uZmlnLXYxCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQo="
            },
            {
                "Filename": "manifests/machine-config-server-tls-secret.yaml",
                "Data": "CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiBtYWNoaW5lLWNvbmZpZy1zZXJ2ZXItdGxzCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1jb25maWctb3BlcmF0b3IKdHlwZTogT3BhcXVlCmRhdGE6CiAgdGxzLmNydDogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUmpWRU5EUVd4dFowRjNTVUpCWjBsSldrbHNiekpIUkhGWGFHZDNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRLYWtWVFRVSkJSMEV4VlVVS1EzaE5TbUl6UW14aWJrNXZZVmRhTUUxU1FYZEVaMWxFVmxGUlJFVjNaSGxpTWprd1RGZE9hRTFDTkZoRVZFVTBUVlJCZUU5VVJYcE5WR041VG14dldBcEVWRWswVFZSQmVFNXFSWHBOVkdONVQxWnZkMDFFUlhWTlEzZEhRVEZWUlVGNFRXeGpNamwwV1ZkNGMxcFlhM1JaV0VKd1RHMVNiR1J0VG5Oa1dFNHdDbHBZU1hWaU0wSnNZbTVPYjJGWFdqQk1iVTUyWWxSRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUlLUVV0R05VVnBVR2d6Y25WR1VHZGxkM1J4U21jMWRFdHpVa0ozUTNkd2IzbFRNSEYyU0ZneVozSklkRTVaTUZOR2JYZGtWMjUwTUhaeFIweGFabWd4YVFwV2VIbDZRVkV5UmpCVFJYaFZla3MwWVU5UWJHNUNORnB6TUhnelFVRjRNMnRPWmtRNWJUYzFNM1pLU1VVME1qRnRSV2RNWnpKR2FXaEVkMjkwV0doNENpOW9TMlpQUnpGalR5OXNNRTVPTURRemVFaEtMemRCWkRWVFowdDVhWFkxV1VzMVdEaHFhaXN2Y25oUFpqVXhlWE5MVDBadU5GaEZOSE5ETkZKeFUxUUtVVVZ4V2pCelZtUTRjbTlFZEZRd1QzZ3dla2xXU0d4cVJsTXdPR1pEWTFKRVVHZHVVMGx2UlZkdVNUVkdiM2MzT1hwQmFFcG9TVmhWTXlzM1JHTm1XQXBxWW5FclNEaDNWbFoxWVZsdGRrdGFSazluTDFGMlUxWlJaVGhFY1hWWFJGTk1ia2xGZVhJeFNGRldVVFJTV0VaMlUyTkhVSE13SzFoWWR6bFZjblJ5Q2tzME5tdE9Za2xFWmtGc2FHbG1XbTFhYzFKNGQxQlZRMEYzUlVGQllVOUNiVVJEUW14VVFWUkNaMDVXU0ZOVlJVUkVRVXRDWjJkeVFtZEZSa0pSWTBRS1FWUkJUVUpuVGxaSVVrMUNRV1k0UlVGcVFVRk5RakJIUVRGVlpFUm5VVmRDUWxKSmF6bHNOekEwWVZwV1QyeEVRVTVRYkdocVoyWlROMU5HVUdwQlpncENaMDVXU0ZOTlJVZEVRVmRuUWxKSmF6bHNOekEwWVZwV1QyeEVRVTVRYkdocVoyWlROMU5HVUdwQmQwSm5UbFpJVWtWRlMxUkJibWRwVm5waU1qRm9DbUpIZUd4bFV6Rm9ZMGRyZFZwSFZqSlpNbmd4WXpOU2JHTnBOWFpqUjFaMVl6Sm9jRnB1VVhWWk1qbDBUVUV3UjBOVGNVZFRTV0l6UkZGRlFrTjNWVUVLUVRSSlFrRlJRMlZUVTFGd1ZtTmpiRkY0YkdsWFNEQndaazB2ZG1SSGVqRXJTV0phU1hBMUwwTnNhR2huUVZSa2MyUTVPRXh4UTBZMFUyUm5TMmRGUWdwc2JrdFFkblozUTJ4Rk5GQXZaVWRMWVhNclNGTkdaR2xsWkRJNVUwUXhSM04xUW5OMFYxZ3hjemhKYzFsNVl6TmxNbHBPZFdkcmRWWlBTMW93WlV0d0NtSTJSekUwVUhBemJFcDRSbEJ0Wlcxdk1VdDZXa2RTV1dkMkwyTjFkMUV4ZFVsRVExQTFlRVpFT0V4WGRGRTJaemx0WmpWNlFXMUtURTFOT0RsWGEyc0tRMDFWVEhWQ2IxTlBSWE5IVTFsUkwwNXRSMkZaUzNCc2QyMWxVRmxpVm1OT1dqaHRMMHhRYWxoeFMwTkZSSEkyTVhkTFFuQjNhVXROTXpBeGJXTldVQXBZV2xOQ2VUTXJOakJKYlVKMlRrZDVOWFpKV2s5MFpIRlpTblYxVkM5S2QyeEVRMlJQTURCc2FEVkVURzUzZEhjNFExaHNPWGg1TkRSNVF6VkNlRzFpQ20xVldFazJTa3BXTlhKUlMzSjFSMVZXTTBSdWRDdElRakY1THpFS0xTMHRMUzFGVGtRZ1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFvPQogIHRscy5rZXk6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIyZEpRa0ZCUzBOQlVVVkJiMWhyVTBrclNHVjFORlVyUWpkRE1tOXRSRzB3Y1hoRlNFRk1RMjFxU2t4VGNUaGtabUZEYzJVd01XcFNTVmRpQ2tJeFlXVXpVeXR2V1hSc0swaFhTbGhJVEUxQ1JGbFlVa2xVUmxSTmNtaHZOQ3RYWTBob2JYcFVTR05CUkVobFVURTRVREppZG01bE9HdG5WR3BpVjFrS1UwRjFSRmxYUzBWUVEya3haVWhJSzBWd09EUmlWbmMzSzFoUk1ETlVhbVpGWTI0dmMwSXpiRXRCY2t0TEwyeG5jbXhtZVU5UU55dDJSVFV2YmxoTGR3cHZORmRtYUdOVWFYZE1hRWR3U2s1QlUzQnVVM2hXTTNsMVowOHhVRkUzU0ZSTmFGVmxWMDFXVEZSNE9FcDRSVTByUTJSSmFXZFNZV05xYTFkcVJIWXpDazFEUlcxRmFHUlVaamR6VG5nNVpVNTFjalJtZWtKV1Z6VndhV0U0Y0d0Vk5rUTVRemxLVmtJM2QwOXhOVmxPU1hWaloxUkxkbFZrUWxaRWFFWmpWemtLU25kWkszcFVOV1JtUkRGVGRUSnpjbXB4VVRGelowNDRRMWRIU2psdFdtMTRTRWhCT1ZGSlJFRlJRVUpCYjBsQ1FVaFpTRXRXZEZKSWNESjZTakJSTXdwNE1HVndlbEUzZUVoR1ptUk1TMGhLV1ZnclZuZE9hWHBQVjBKdWEwMW1iRmxSZUdOS1NVNUpPSEY0VDJwblEzTm5WVUphUmpoMmNYQktTeXR0ZWtoWUNqSmtUemRaWjBsbGFIaERPV0Y1ZFhoMVp6TTVSRFJVVHpSRlpqUndNVXBQUTNGSFpYbE5ia2RYVTBsblNEUlhTM3BWZVZCV1dTdGhaVGQzTjFaUGFtWUtVMU0yV0cxSE5FUmlRakUwZUZrMlprZHBlRll6U21kTmVTdGhXREJOVTBGRFVEQlBZMnBYTmt0NVJTOURUMVZwYTNkdFMzbERRVlY1YldJMU56UmxVd296V1RSQ2JWRkZSekZ5WlRCS1RqWTVNelU1Tnk5MVMwaDRWV0pTWnpScGFWTmpZbkpYUkVaVWQwTXdNMDgwV2xKRVYybHZUbXd4ZUhvMVdYQllZbE5YQ2tkUk1YcG5SbG81Y0RJMmQzYzJSRTB6Wm5SbFlXSlRlRUpzYTFsT1FVY3dlVmRrZWtZeFUyTmFkRGxRUzFKRmJXRlFNMk5tWVVWcFZsZDFjamhSVDFZS1RqbFNRbXRaUlVObldVVkJNWEpNUW1kbmVsaGFlRUZZZG5FM1dWUktUa1ZoVVhSS2FtUktUWFZRWWxkRFNrNTFkRGxLVUhwUlNsQlVkVE5EVFd4aFZBcHdNRGhTZVZCTGNFOXRNRlpNVEdnNFJXa3pSMUpFT1dkdWEyeEJUazhyTjJ4RGQyUmxNWFJTVEZKTWVIUkJlbFZOTWpkb1drUlFObmRtVmtGQlZ6RTBDbEZ4UzI1V1pUYzNhVU56ZERSeVRtaDJkVkk0YVdoNFNHMDRPWFoxYUhKQlowcG1aVVpYY1hKbFJIbE9RMnhLYVVock5raEJhWE5EWjFsRlFYZEphMmNLYlRSc2FsQk1Xbk5LZVhkdU5uUk9XR0owTkVaallrbGFkVVpVWVhsVVlVZERhWGR1VVhwbU5UQXdRMlEwUmpsRlpHSXZXaTkzUVcxRmFHTnNUMlZRTWdvelIycFpOalZoWjA1c1J6TldiVU4wYTFvMFV6UmhSMmhxVFhoWFJrZFhWRFZxTlU1T1Yxb3JTRFpIT0dwWlFYQjZPVmx3T0d4RVpIVTRiVFpTUkVFNENqaGhRVnBOUlc5V1JFcHRTVk4yZW5SMlFYSkJjbGwwYm5wR1IwZHBWVFJxUm5SR1JsZFdPRU5uV1VGWlZHWlpaaTlqYjI5eVlXRjVaa2RMWVVWS1dFOEtLMjF6YVU1bGRHWnBVRzVxTUV0VVdrSkhUSEZTTVdWd1JFeDBUMHhaVkdKcVRsUnliR0ZVV1hFeE5scFRSekJ5VG1Gc1lrMXVNa05xWWtwTFF6bFhSZ3BUV2xWM01FdzJXWGh4Y3poQllsQklLM05hYWt4SmN6Tm9PR0oxU1c1R1duZGpXVVp6VmpocFNrSnJNbkkyTTJsRFZWZGlPRTlYWlZkMFdrRkZRMVUwQ25GWWFVaHVhVXMxU1hOdGIyOUlhbWhETW5relRIZExRbWREVFhJMllUQkJSMEZVVEZCck5scHViVVZxV1cxR05scFlkM3ByVFdNdmJWRm5VVEJqVDJnS09WUnZkVk0xUkhaNVQyUnVMemxYVTNsdWRuVjRkMWRsTDAxdWNXWjJiMk51VTFCTlZFWkJaamxYU0hWSU1HSjFibGg0YVZSdFUzVkllblI1YjNWWU5BcHJOVzlvYzNkRFRWSjViVU5PUTBWdVpXeHZkSE0xVUU5amFIaHhkek5rVVZNNGJYRm1kRmhwV21sa2MzUlFSVms1WTBjclMyRlJSbU5LU1Roc0sxSm1Da3hyTHpWQmIwZEJSa1JoZFdoV1dXaGpNbFZDWm5rMmJGQjNjVkpSUTJ0eWVrSjJaVVJvT1UxV1oxZ3ZhazVUVUdKSmRGaDVOMEZWY0habWRHTjZOWFVLVDNsaWNqQkxUU3R1VTNwU2FHUk5aSGhzWmxJMlIxWkdUblpKTVd4VFVrOXliRUphUjNkVFluTkRlRlEwWWxKV2IwaEdVaTl2VERKUVVGRTFPVUV3V1FvMU5qVlRVR2xsVTNOTWJEbDFaV0pKUkRKMlYzUmFWRVkyVlVGUFVsbzBNRlpxZEhGclJqVldTMWhxTVZscU1pOHhOV005Q2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0K"
            },
            {
                "Filename": "manifests/02-ingress-namespace.yaml",
                "Data": "Ci0tLQphcGlWZXJzaW9uOiB2MQpraW5kOiBOYW1lc3BhY2UKbWV0YWRhdGE6CiAgIyBUaGlzIGlzIHRoZSBuYW1lc3BhY2UgdXNlZCB0byBob2xkIHRoZSB0ZWN0b25pYyBpbmdyZXNzIGNvbnRyb2xsZXJzCiAgbmFtZTogb3BlbnNoaWZ0LWluZ3Jlc3MKICAjIEdpdmUgdGhlIG5hbWVzcGFjZSBhIGxhYmVsLCBzbyB3ZSBjYW4gc2VsZWN0IGZvciBpdCBpbiBuZXR3b3JrcG9saWN5CiAgbGFiZWxzOgogICAga3ViZXJuZXRlcy5pby9pbmdyZXNzLmNsYXNzOiB0ZWN0b25pYwogICAgbmFtZTogb3BlbnNoaWZ0LWluZ3Jlc3MKICAgIG9wZW5zaGlmdC5pby9ydW4tbGV2ZWw6ICIxIgo="
            },
            {
                "Filename": "manifests/kube-apiserver-secret.yaml",
                "Data": "CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiBrdWJlLWFwaXNlcnZlcgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KdHlwZTogT3BhcXVlCmRhdGE6CiAgYWdncmVnYXRvci1jYS5jcnQ6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJOZWtORFFXaDFaMEYzU1VKQlowbEpaSEpGTVZGRmRISnVRVEIzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkS2FrVlRUVUpCUjBFeFZVVUtRM2hOU21JelFteGliazV2WVZkYU1FMVNRWGRFWjFsRVZsRlJSRVYzWkhsaU1qa3dURmRPYUUxQ05GaEVWRVUwVFZSQmVFOVVSWHBOVkdONVRteHZXQXBFVkVrMFRWUkJlRTVxUlhwTlZHTjVUakZ2ZDB0RVJWSk5RVGhIUVRGVlJVTjRUVWxaYlRsMlpFZDBNVmx0VlhoRmVrRlNRbWRPVmtKQlRWUkRiVVp1Q2xvelNteGFNa1l3WWpOSmQyZG5SV2xOUVRCSFExTnhSMU5KWWpORVVVVkNRVkZWUVVFMFNVSkVkMEYzWjJkRlMwRnZTVUpCVVVSRFZsSjNkME12UmpnS1FtWTFWV2RaVEdjNFExTndPVWR6ZEdGNlJYUk5jVU16VDBoYU56SlBPRGt5UWtkUFVGWTBNbWxVVVRBd2JrVXhRVTEyWkU4eldXVkNUWEJ2UVZwSFJBcGliMk5wVVdwMllVRTNlRmRpV2tKUk5FMDNZMnRhTUUwek1sQXdOakZJZVhKcVNXMHhiVGhNWWpKWlZHUlpUVzk2TlZWbWRGbEtMMUpKYVZKaU55dERDakYxVkdoWlUyc3JZWFJxUzFZMmEweGpjM0UzYVdwMFNrZGxZM2hhUTFkbmEyeDBPVkZrWjI1cWNsaG1hemd3WjNvMWVHRXJWVU5SWVM5Qk1uRjVXR0lLY1dvcmJtaEhiRGhOWVdwUk5EYzVhVFUzVDNJd09FVlFZMlpyVDJ0NFdTdEVabXhrZURkSGRURkZaazFsUVVJM1kxaG5NMVpNYzNaMFlqWTBNMUZ1TUFvMFJuUnVlazQwYm1WMVQyVXJhMUJaU0RrckswdFhaV05GU0hKWlowZHJXbUpFUlUxVk9XSktZbVZJTXpaSU1WQm5iVkZpVkRodVJUSkVWMGhSWjJ4RENrNXJRVmxhTm1oRVoxWlZka0ZuVFVKQlFVZHFXWHBDYUUxQk5FZEJNVlZrUkhkRlFpOTNVVVZCZDBsRGNFUkJVRUpuVGxaSVVrMUNRV1k0UlVKVVFVUUtRVkZJTDAxQ01FZEJNVlZrUkdkUlYwSkNVa2xyT1d3M01EUmhXbFpQYkVSQlRsQnNhR3BuWmxNM1UwWlFha0ZtUW1kT1ZraFRUVVZIUkVGWFowSlNTUXByT1d3M01EUmhXbFpQYkVSQlRsQnNhR3BuWmxNM1UwWlFha0ZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJVa2xtVGxCb2FYUm1Ubmd4Q2pGM01Xd3JhR1lyTUhBMWJrOU1aRmxDV1RKdVlYZGxjRlJoT1ZST1ptdGhUSEpXVGtzd1dXSlVRMkk1WVhGNWRIazJPRzFwVjNsVGFsaDNNSEo1VWpjS1NUbHpkbUZrVm1kNFJVYzJLMmhOYUd4bFEyOUdjSE5DZVZOb1praEhhWFkxZGprMFQwUkViMlZCTjFwSFQyTlpZM0ZTZGl0U2REZFhWWGxzYm5jeGNnb3dXRUk0V2xaYVVucE9iVlJWUnpaeVJGSm9jbGh5ZFVSQ1VuaG5OVVUyYnpSVFkyRkhjR1Z3TWpKS04yVXhXRk56VFVndlIyZ3lZak5NWW5nMlYzZDBDazkwYkRWdk9EVnpVSEJLZWtSTWRXOURZbWxEYmk5UFRXZ3hNa0o0Y3k4ck1EWlpVRGxFTVZBeUt5OTZXbkZOVUZWSFMySXdablJWTmxkTlNXeHpORmdLTmtNM04ybHBkRGxYWW01Vk9VMVBiVEJPVFc1RWNYRXJZMVJ0VTB3NFFWZEZNWFYyTUV0MGJIaExlUzloVEd4Q1JrTnRZMmROZEcwNFNXZzBSMWx0UndwdU1sbEJZbEZvVm5OblBUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICBhZ2dyZWdhdG9yLWNhLmtleTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGYjNkSlFrRkJTME5CVVVWQmQyeFZZMDFCZG5obVFWZ3JWa2xIUXpSUVFXdHhabEp5VEZkemVFeFVTMmQwZW1neVpUbHFkbEJrWjFKcWFqRmxDazV2YXpCT1RrcDRUbEZFVEROVWRESklaMVJMWVVGSFVtY3lOa2hKYTBrM01tZFBPRlp0TWxGVlQwUlBNMHBIWkVST09XbzVUM1JTT0hFMGVVcDBXbllLUXpJNWJVVXpWMFJMVFN0V1NEZFhRMll3VTBsclZ5c3ZaM1JpYXpSWFJYQlFiWEpaZVd4bGNFTXpURXQxTkc4M1UxSnViazFYVVd4dlNrcGlabFZJV1FwS05EWXhNelZRVGtsTksyTlhkbXhCYTBkMmQwNXhjMnd5Tm04dmNEUlNjR1pFUjI4d1QwOHZXWFZsZW5FNVVFSkVNMGcxUkhCTlYxQm5NelZZWTJWNENuSjBVa2g2U0dkQlpUTkdORTR4VXpkTU4xY3JkVTR3U2psUFFtSmFPSHBsU2pOeWFtNTJjRVF5UWk5bWRtbHNibTVDUWpZeVNVSndSMWQzZUVSR1VGY0tlVmN6YURrcmFEbFVORXByUnpBdlNuaE9aekZvTUVsS1VXcGFRVWRIWlc5Uk5FWldUSGRKUkVGUlFVSkJiMGxDUVVSdmFVcGpWMFoyVWpab01rWjRSZ3BTWm1GMVVDOXRUR2RaYUdKMVlVWlJkRTR3Tm1sak9IZHlVbXAxUTNkd2JUa3dhMUJOUlhabk4wUmhlak13YURKSmFtRkhjbXh2UVhCb2QxRk5Na3RtQ2s0M1NsaFVZamMxUm1GUWMweEdWekZTWVhJeFNreDVLM0pKZDFKaGFsWlBSRzVtTkZGcGRuVkRiV1J3SzJFd04zRnBZMU5TUm5oc1pHNHZXV041TW5NS01rSTJkemRrZEZJM0sweGFNbmxZVWtONk1IQXZOSGMxTjJwMWFrcDRMMkZ6VjB0TFluaFJjSFIxTDJ0b1FtUnJZMU54WTJ0c1pURkZVRE14Y25CdE9RcGFaVEJZT1RCdllWaHZNa0l5YlZkblMyVktRV3hvVG5NMlpXcFVSR3BqZGtKa1VHeFpTMjUyTWxjNGJFTXZNM28zWkVsTFkybExjbWRsYVdaSFJGWndDbEpvT0dWUU5rSm1Na29yUjBkU1YyY3dhMFIyWVZNMWNqSXZSbXhyVkZFcmREVlJPQzh2UW1jclpuSjRlblpIWjI5MWVuZzROa2xuVFVwbGNpdFpiMElLZDJsdVUzbHFhME5uV1VWQk1WTTNkR0ZYZGtaTldtNVZaR0ZuYzBWMVIzVjJjbXRsSzBseGRrTkxTVFZtVlVKUU4zRTRRVVprU1hWRE1XTnhXRVZSTkFwTllsRXJiRzl6WkcxUWRYTm1aMUEyVG10S01IQlBUWE40U0VKUlQydGFObGhWUzJRdlVFSjFMelIzYkhwbVR5OVRSRGRKV201V1JtcHpWRlJHTVdKRENsVTBPSFZRZEM5eFlrRk5XRVZxZEc1VWVVMW9iMU50ZGtkNmNWZExkMUpYV1U5a1VIazVNa1J5Y2tWdUwxUllUR1ZXVHpKSmNEQkRaMWxGUVRaV2VuZ0tjVTVoVHpVMU9VZGhWVmt6V2tWcksyWktVREkyY1V4eE1VWlhObHBuYjBkSVdTOVFWbUY1V0RKRGNHczNXSGhxWkU5V1FtUlFiM0pITWpkWU5UQkpVd3A0TjNkWE0zUm1TMGsyTVhsUVVVRnlkMjU0UW1wYVFXRlVhemN6UzBFeFkwSTRkRFJDVGpKUVNUaHVXRUZZYUhoNGFtTnJkVlJzTjNKQ1dERXdUMkozQ25sbU9WSnhNM1pPZVVGdWRWSnJhMkkxY2lzMVMyUktka3hMVkZKYVZYTkNRMnhEVlZaNmMwTm5XVUoyVUdSMVdrSlRiVlJLYldoa1RsQkpObk5DVmxZS1drcG5jWEpaVDBWb09VcHFOekpzUjJKWU9HNDBPVTEyUXpjNFNrRnVaMjlTTlhaYVVuRkxaRXc0WW10M2QwdFFlV05JUVZGUFRXUmFiRmxYT0hGMmNncGxiRmRwY0ZoMmJWVmhWbmRuVGpaNGRtdEZiMXBqTVRCSlNGUmxWM1ZHZDFwUGFVY3ljVlZwTURoSU5FODFUUzlGYkM4NFJIaHdWM0JSTW5wVFRVbHBDazEwU0VzeVlqVmlURUZ3YmpoUGFFdFhWWEJVWVZGTFFtZFJRMngxYzA1S1FTc3JSRmxYVFhjcmNGQXlTR1Z3U25OUkswaG1WMHBIYjBGa056Rm9lVmdLZFM4d2ExQkRiWFZrUWxWMllqaHdNbEo1V21kbVFscElTMnRaWTNvMWFtdDZjR2g2WkVVM2VsaFpaVzByVFhOaVIxRkhOVVp4UlVsQmFEWllSRVF6VXdweU1XRjVTbVZOTVV0SVFWRmtSV2huTWl0TGVIaE1aMjA0TkZkaE9GcG5TamRPUWtWa0t6Qm9OWEZQV1hWUE1HVjVRVkZ3VW01Q09FSlRWazE1WVV0WkNtWTNaVW8xZDB0Q1owRm1keTlQVFdoaVRHbFhUVmhGTldjdmNreEllWHB4WkRFdmFVSkxVbGswV1V0dVNEQjZWSGhWTlN0NGFtMUljV1ppZFhsalVYTUtXR0pGWW5aMk1FMUZUR1JwUWtvdk5rNVBLMUpGZEVsa1NGUnFaWEV6ZEN0aVJpdHZVMWRsWm01M01uRkNVM2hMYkdOMlUwMDVhelZ2TkVJM1FWUjBTQXBSVGs1RVRESktTbk4zSzBWeGNqQTBWbE0yYUhCVVYxcHhTMEpyTVVGdWVtdG5RaXR0YVV3MGFXWjNLM1ZqTDFseFIxWkpDaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2c9PQogIGFwaXNlcnZlci5rZXk6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIyZEpRa0ZCUzBOQlVVVkJiM1U0U0dScVVHVkRVMnBZV2xORWNqTjJTVkJPZVVGT1JXcFZOMWRhTlhkcWEzWXpPRlZFZGpCNFNFbFBTVzF4Q25selYzTnJTMDFCUTJadWFXcHFlazB2SzBGTVEyeFJZbTFLVFZsaVdXUmFSMHB6UmpCWllYRkJObko0TlVsQ0swaDJSMm8zVGpKemNsaHNkMUV4YW00S2VGRm5VbGw2VlV0Q016azFZMFE1V1ZsNlpWSnRjVnBqV25kaVRrcDZUbGRPVWs1TFNsQm5UMEZuU0hWVFVGRlZVVzEwTTBSYVZuWlBRbEp5ZFVJeFJBcE5RVWhWYlRobVlpdFhOMDVVZHpBeFlqWmhObGMyVkdoUVRubFplSFZuU0dSbFNsRkdZWEJMTDNsemNHUXJhV3BKVjFkNGRWYzVVM2t4YW5nd1RWWlVDa2wyYkZOaFdHTnhWa0ozWkhZeVNtcHFXVzFKVGpScFZ5dDBSVk5NU2tkNFdrUllUMlpsV0VjNFpGRXpZMjVZWkdSSFVqUkZjMFoyTUZoTVUxZEdXRWNLWlVnMVdFaFVSRmQ0YzNoYU9EWjBWMFZsYUhadloyVjBOMHc1YldwcFVtZEVRMFppZW5kSlJFRlJRVUpCYjBsQ1FVTndNVGRzVkdkcFdFZE1iMmsxY0FwdFR6VTVNa2hqSzA1QmJsWnpORlJWV2toTVFUSXpiVlYxWVhObmVrUlFiblJKYlhCWlEwcEdVMFZLVWxNM2FGUnZabnBuY25ndlpUaFdOR1Z1TVZGVUNqTkxWWEkyVTFaRlYyUlJaek5YTnpKRFYyZGFRWFZaT0d0eU5sZHJhVzlMTld0UFZIRmhlRmcyZVdkMlJWUXJkVlZ0VG5jelRrbFlibkZpSzNZNFNVTUtaaXR1VUVGQ2FVbFRSMWt2YVVwRFkyZDRZMWxIUjNWRE1GQjNhemc0VjJ4eVZXbERVRWN5TVRsRU5WbFBhVTVEYTJvMlVGbGFZVFZOTjNCYWRuSjNaZ3AwUjJObVVtODNXVUo1TWpGWU1rSmlkRWxvZEZKT05YcFRRMFZOYUdoWWFYSjJVbVpaUldkMFQxVjFaRm92ZFhCelNHRnFORk5aWVhCVVkzcHRPVU4zQ213MWJVSlpVaTlpVDJsWlltZHNUbTV2ZDA5dlMzbHhjeTgxZURsV00zTTBXWGhuVWtKdFRtTXlOV1JTWTFadlJYRlVPRGROUmpOWGVURnFOV3hLUmxJS1JtcHdjMEpEUlVObldVVkJlbWczY1UxQlpXaFNha0ZoWTJjNVJXODRRMHBPVWpKaE9VNHZkRFpKTW5oUlZtNVFTVFl6VVUwM2VEaElhVzAzTlRRM2N3b3hSblJ3VVM5bFJYWmhSa041T1M5UVUxUkljVkJ4YTBwMGJtOUNLMlpRWTBkWVQxTnJLMGh4VW1nemNrdFZOell4VFRCMVVDOWFWVzlJUTB4U1UxcDJDamRpVldSQk5sUjJRMGxzUmxKdmFGWTBXQ3R5TlUwNFEyRmlWRk5vYW05SGJGRm1iMUZaVHpOQ1JVdGFNbVptV0RCYVFYSnpiRGhEWjFsRlFYbHNlWGtLVkdNMk56aHFkalUwTlRsT1VIRmtNbEV6ZDI0cmNFeEdZbVZDVkc5YVEwZGhSMFJaV0V3eGVTdGFObXRGTDJweFpEUlVOMGx3TnpWaVlVbE5lblJXUkFwMWRXTnNXbkpXWW04eWJ5dEVNVlo0TXpGQ1RHeHBRekZ6WWxoUVIwbHhjSGRxYWpWRFlURlNlSEpDZVV4T2FWQTJObUZYTVhjNVpscDJiVkJsU1dOeUNsVkVXbmN4U1c1b1MwWmxaR1JEYlU1alUwbHZTR2RxWXl0VWMwbGthMnB0WTFSUWJreEtSVU5uV1VKNE9HNXJOR3RDT1VJNEwyNUxjMFpKWW5wTFlVNEtZa2sxY21KU1psTm9aa3BHTVVkYVJYSlRVRFpXWlhGMmNXaGhjM3ByUW5seVVUUnRaWE5GZUVzclRVaFlabFI2TWpsd1NsSmFNazhyVTJZMmFrTjBWQXBFY1dOeWFHRnlSR3hIY1dGaVdWVlJLekZVYTBjd1RuaGFiMWt6WkdsYVQxaE9PWEpWYkZOeFpsZHBSWE16TXpKeFYxQlliUzlGVkdsMGExQlNlV2swQ2xoeFUzaEJlVmMzTDNreVlWb3ZPSGhhVDJkcVRsRkxRbWRITkhVNGRHSjVlbVJ6YWxaUWFtWmpSWFpDUjNRck56VnVha1pIWTB0ME9XeDBkVTluUkhvS1YyeDFSWFVyYlRKMU1XY3dia1pZWm1wdE5WaGhWRU5OYmpkVGRUUnRXVTlJV1hSRVJFWmFOa3h5YUdseFpFbFRRV3haU1VWWFdteDJRa1k0ZW5SdU1RbzRORTlXV0RSV2VqVllZMDV2Tml0SU1GaElaalpQTlVWNlFqSjNWelpGWkZFeWJ6SmxUMXBwWW14VmJHMTFTVk15ZHpCbVpteEpiVVp2Um5oVFEyZDZDbEJ3YUVKQmIwZEJVMGhvWkdoU2FUbEhhekV3V1d4UGNtOVlURVJUVW5Cb2VFVnBkekJDUVV4MlJWbHlWa2hCWW5neVEzTjFZMlZEWVcxNWRHaHhRbXNLU1c1eGVHWlhjbkJzYkRWUlVVTnhTRFJNTHpKM1MwMXBObE0zV1d4VE5sSkpXQ3RqYnpoaU1IbFFaVE5oUlVaUVdERlBLMWcwWWk5RVZVUjRTakpLV2dwaVpHY3hWRkZWV25VNWFWRkdWMEZPYUVweU1FNW5UU3RvYTBKdE1IWTVVbWhXY0U5UWNuaGpUM2RaYzI1S2VrOW9lVzg5Q2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0KICBhcGlzZXJ2ZXIuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VWQmVrTkRRWFYxWjBGM1NVSkJaMGxKUzFwWWVVVlpXalZzZEVGM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtWRVZTVFVFNFIwRXhWVVVLUTNoTlNWbHRPWFprUjNReFdXMVZlRVZFUVU5Q1owNVdRa0ZOVkVJeWRERlpiVlYwV1RKRmQwaG9ZMDVOVkdkNFRVUkZOVTFVVFhoT2Vra3lWMmhqVGdwTmFtZDRUVVJGTWsxVVRYaE9la2swVjJwQmRrMVNVWGRGWjFsRVZsRlJTMFYzZEhKa1YwcHNURmN4YUdNelVteGpha1ZZVFVKVlIwRXhWVVZCZUUxUENtRXpWbWxhVXpGb1kwZHNlbHBZU2pKYVdFbDNaMmRGYVUxQk1FZERVM0ZIVTBsaU0wUlJSVUpCVVZWQlFUUkpRa1IzUVhkblowVkxRVzlKUWtGUlEya0tOM2RrTWswNU5FcExUbVJzU1U5MlpUaG5PRE5KUVRCVFRsUjBXbTV1UTA5VEwyWjRVVTh2VkVWalp6UnBZWEpMZUdGNVVXOTNRVW9yWlV0UFVFMTZMd28wUVhOTFZrSjFXV3Q0YUhSb01XdFpiWGRZVW1oeGIwUnhka2hyWjBnMFpUaGhVSE16WVhsMFpWaENSRmRQWmtaRFFrWnFUbEZ2U0dZemJIZFFNV2hxQ2s0MVIyRndiSGh1UW5Nd2JrMHhXVEZGTUc5ckswRTBRMEZsTlVrNVFsSkRZVE5qVG14WE9EUkdSM1UwU0ZWTmQwRmtVMko0T1hZMVluTXhVRVJVVm5ZS2NISndZbkJQUlRnelNtcEhOa0ZrTVRSc1FWWnhhM0l2UzNsc016WkxUV2hhWWtjMVlqRk1URmRRU0ZGNFZrMXBLMVpLY0dSNWNGVklRakl2V1cxUFRncHBXV2N6YVVwaU5qQlNTWE5yWWtaclRtTTFPVFZqWW5neFJHUjVaR1F4TUZwSVoxTjNWeTlTWTNSS1dWWmpXalJtYkdOa1RVNWlSM3BHYm5weE1WbFNDalpISzJsQ05qTnpkakpoVDBwSFFVMUpWblpRUVdkTlFrRkJSMnBuWjBWeVRVbEpRa3A2UVU5Q1owNVdTRkU0UWtGbU9FVkNRVTFEUW1GQmQwaFJXVVFLVmxJd2JFSkNXWGRHUVZsSlMzZFpRa0pSVlVoQmQwVkhRME56UjBGUlZVWkNkMDFEVFVGM1IwRXhWV1JGZDBWQ0wzZFJRMDFCUVhkSVVWbEVWbEl3VHdwQ1FsbEZSa3RIU20xcFNtZE1kVkJCY25Sb1MxUXlWblJsUTJZdlltcHRRazFDT0VkQk1WVmtTWGRSV1UxQ1lVRkdSV2xVTWxoMlZHaHdiRlUyVlUxQkNqQXJWMGRQUWpsTWRFbFZLMDFKUjI1Q1owNVdTRkpGUldkYU9IZG5XbmxEU2xoT2RtSlhSbk5pUjFZMVRGZEdkMkZUTld0YVdGcHFZa2hXZW1SSFZua0tURzA1ZDFwWE5YcGhSMnh0WkVNMWFtSXlNa05EYlhReFdXMVdlV0p0VmpCYVdFOURSVzEwTVZsdFZubGliVll3V2xoTmRWcEhWbTFaV0ZaelpFbEpWd3BoTTFacFdsaEtkVnBZVW14amVUVnJXbGRhYUdSWGVEQk1iazR5V1RSSmEyRXpWbWxhV0VwMVdsaFNiR041Tld0YVYxcG9aRmQ0TUV4dVRqSlplVFZxQ21KSVZucGtSMVo1VEcxNGRsa3lSbk5uWjJ4ellqSk9hR0pIYUhaak0xTklRa0Z2UkVGQlIwaENTRGhCUVVGRmQwUlJXVXBMYjFwSmFIWmpUa0ZSUlV3S1FsRkJSR2RuUlVKQlJsTm1NMjAxYVcwdksxUnNNMkZaTjI1aFJ6WnJSSFp5WkZCR1NuSjNlRXB3WWxaNWNIQjROMVpDU1hoR2R6UmtNbEZXYVVwVGVBcE5ObFZSTW1Sb01uZEtjSFZwUmtobFlqaFpNMk1yYkhad1IwVkdWVEE1SzNSQ1QzbERMM051YlhWeFVtVk1hVlZPYzJwU1EyMUJRbTFaU1dwMloyb3hDazVwUms1bllVbFpXazUxVTJWTWJTc3dSRGc0VmtwT1ZDOU1jV1I1VlVFeFJETXJhV0ZLZEU5c1dXbFROa1l6WVZWUWRHZHdTMVpIWW01WWVHZFFMMWdLVG5WT2VFZ3JUbXBLVFd0TGREVnpXRzVsTVZZNGN6Unpia2xKYUhKWVNXSXpWbnAzY2pZNGJHVkhhREJMUVZaRVJGZGthRWRCV0U1MVNVSlBhRVpUWWdwR0wzVjZOVzFRTHpnM1dXRXpXSFo1VEZKQ01tVklURk5xZDNkTmRreHhTa1ZHYUdobGMwMUZRWFFyTlZaeGJtbzRZWHBXYzFoMU9YQjVibXRwUWs1WENrWkNVM2RuUTBGMGVXWkhiMkkxTm05aE1VRXhOVk5RYkRsRFJETXJhRGc5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLQ2kwdExTMHRRa1ZIU1U0Z1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFwTlNVbEVUVVJEUTBGb2FXZEJkMGxDUVdkSlNVZFdMM0pvZFdZMWNVTlpkMFJSV1VwTGIxcEphSFpqVGtGUlJVeENVVUYzU21wRlUwMUNRVWRCTVZWRkNrTjRUVXBpTTBKc1ltNU9iMkZYV2pCTlVrRjNSR2RaUkZaUlVVUkZkMlI1WWpJNU1FeFhUbWhOUWpSWVJGUkZORTFVUVhoUFZFVjZUVlJqZVU1c2IxZ0tSRlJKTkUxVVFYaE9ha1Y2VFZSamVVNXNiM2RLVkVWU1RVRTRSMEV4VlVWRGVFMUpXVzA1ZG1SSGRERlpiVlY0UlVSQlQwSm5UbFpDUVUxVVFqSjBNUXBaYlZWMFdUSkZkMmRuUldsTlFUQkhRMU54UjFOSllqTkVVVVZDUVZGVlFVRTBTVUpFZDBGM1oyZEZTMEZ2U1VKQlVVTnpORnBHTVZOTmFWaHVWemhZQ25KNU5ESnJWV3c1WmpCcGVFaFJURWcwWm5WTlpqQmFUVTFTVUhwR1dtUnJUelpaZW1ZMmJqZHFVMXBUTHk5bFdGWTRkV3N3YVRWNGJsY3hjVzlXU2xrS09FcHFRVUpJUVZsQk1tZEtjRXRLVVVZMGVGTmthSFZ6ZWtoWlVXaFNOVFJWV1U1S1RqaE5lR2syUldKTk1sQkRZbGwxTUhST1dtRnJRbU5GUkZwU2VBcHFObUU1U21rd1pVcHBSbkUyUkZKQlRGa3hkSGQwVUdoM2JGUTNXREpqWm10all5dExWVzEzTm5rMlNYSklhR0pTWjJsRVRDOXplbUp5TnpKc1NFdFVDbEpMTnpCNFZtMWplV1JxU21vNFJXRjVPSGsyVkhWT2NIZFZkVzFSZWxKRlVuQmlSbVZ0ZEdkdlR6Tm9lRk50WlhkdWRIaFZXazlCYlVaRGJqUlVRMlVLTDFOdlUzTm5NVE5XU0V0MmVuVkVSM3BEZFhSclJVWlFlRXRsUjBsNmFYVXJSemhCTlZvM1EwWXliaTkxYm5wSU0ySkZUUzhyZVZCM1oxRk9XUzlhTkFwb05uTm9TRmRTU2tGblRVSkJRVWRxV1hwQ2FFMUJORWRCTVZWa1JIZEZRaTkzVVVWQmQwbERjRVJCVUVKblRsWklVazFDUVdZNFJVSlVRVVJCVVVndkNrMUNNRWRCTVZWa1JHZFJWMEpDVWtsck9XdzNNRFJoV2xaUGJFUkJUbEJzYUdwblpsTTNVMFpRYWtGbVFtZE9Wa2hUVFVWSFJFRlhaMEpTU1dzNWJEY0tNRFJoV2xaUGJFUkJUbEJzYUdwblpsTTNVMFpRYWtGT1FtZHJjV2hyYVVjNWR6QkNRVkZ6UmtGQlQwTkJVVVZCUW1wS2FERnBNVXh2YURoc1JVdEVSd3BHWm1sQk9FUm5hRnAyZWxsYWJrOHpOa3RxWVdnM1NqWk1hWHBhU3pGWWRGazVUSGRHV1dJeU1uaExjV2x6YmtobVdFVnRTMEZDZVVNMU5DOVlOa1pDQ25CVWRFOVpXRFozUTFRclpHbzJiVUphV1VkUFRVa3ZiMmxGU1VOSWFEVmFaVkZOVUdOSFpGZGhTMWxyUmpZemMyRlRielZZV21RMFowNUdZMHRQZUV3S1ZrMXNiMEpKUm5FNGJtb3pNQ3RNTnpabk9XOVdTWFF4Y2s1NmRuSnJTa2RzWTJ0bFYzTnBZV05DYVdSTldISmhRMFE1Wkd4UFMycDROMWxxTm0xUlRncFZPVEVyTDB4b1RVMHZZV05DWlVObFRtcHdURTlDVkhWdFVHNW1lSEZ6VVhnMlMyOHdNekF4VUdGMVNVMDBiMlJ6VEVOUWNVRnRSWEpXWWpWSFZHRlBDa0lyTVdRck5FZEhjblUwYjJKWmIwNDJjbmhoTm5SbE1tVkZORTlqTTFoa1pIUk5hV1IzTUhWdkwwNDVUR2hUTUhsM1MwdGhaRFJUYzJoaWNVUnVSRmNLY2t3dmJYRkJQVDBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89CiAgYXBpc2VydmVyLXByb3h5LmtleTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGYjNkSlFrRkJTME5CVVVWQk16SnJRV0pEYWpSQlkxaG5WakpJWTJSWlprcENiMjV1WVdOREx6aEVTVTFhUkZRNFYxWkZiU3RGT0U5T2ExRXpDbFp5U0RKb1FtTTNkbTFLZUhKQ2VteHRWR3RCVG5JeVRIWmxRMWhNTVRWc1VrWlhXak5rYkROcloxVlJOWGxwVURnck1qWkNaMGN3VG1JMVNqZ3phRFFLZFZNNVVWZDFRV0pGZW1KNWJVSktUaXRqYm5vd1VETkNkblJLYlZSU2RrdGFlbFF6TmpoTmQwbHdWWHB6TDFoR1JFcFJiMmRMU1RjMFJsZEtjWGhyU2dwT1VERjJlbVZuVEZkc1FWZDBjRTlHWmxKRk1ua3hZbmt3Tlc1M1FrdExOVzU2U0RST1lWcFlaalp0YURGeGFGQkVXR0ZZVlVKcloycFBRa1pwYjNWNkNqQXZXVGhzTVdodk0zRmFiVGx2ZWxsTlVWRmtSa0p4WmtsUlZVUm5aSFl2YmxWUlRXaGtMMjFGTVUxeVZVWTVXVXBTYzA4MFdXdEdWalZXTDJsa1FqUUtWMEoxVVdsNGJsVTRlV05DV1ZBNVlXOHlhR2RvZDA0NFYzcExZVmd6VlRKT09URmpiMUZKUkVGUlFVSkJiMGxDUVVoVEwyOXZSR3BTTDJSc1QwdzVlQXBZU1haMU1GcGhhRXRzVjFKaVRIaFJObnBxVTJ3MmVqRlJOMEYyV0M5WWNqUkNPVzFGVEZWdGFuZHZSekV2UW1ocFdIQjNNWHBRUlVObGNrbEhlbTFrQ2pCeU0weElaMVphVWpaeUwwTnlOVUkzUkdoRk1uaHRXV1ZzZHpkbVRtNUhPSGNyVkUxcFRFeFRiSEpaVGtJMVZVMXVkQ3RzWms0MVMwYzFXRGxUTkVjS1pqbGpMMVIxTDJSeFMwaHdOVzlNT0hoSFV6SmhRbEZSY3podFpUZDZNSHBwUjNGNFdYaEdRMGhHVlVWRGIySmtabEkzY2sxbGNqVnRNSFZMZG1sRWVRcG9kVmRGWVdwV2NFNVdaMEphYUd0bUt6aGhaSFJQTHl0RGJDOWllRkp1ZG1zclkyNUhVMkZSVmxaVVdreDBXV3RZVVVaR2EybGhlRVJtYjB3NWNVSjJDbEJKVlhOMmRsZFFXblpqVm5VcmRGSmphbUZsWWtkNEwyaDFkVVZZTjB4a1UxVlJWa2xNZEZWNlRWY3lNMUpEYUZKeWJVcHBTV1IxS3pWc1IzWm5UMW9LVGtaT1NscG5SVU5uV1VWQk15OXNUWFpRTlZsM0syZEVhSEpQVDNWWFUyTm5Xak5QTUdRM2FYcFBlR3BDTkM5bU1tcDRXWGRsVHpJMk9IQlVlRGN3Y0FvdkswNDBjSEJPWVRWSVlUUm9WbU5GVDNaelRtaFBhbVZWZERSNmVWQk5hbE5ZUkRoSlkxVllSMmRqYVRkWGNYSTVOWGRWTlVRMlYwNXFiVFl6WlhWSENrazFMMHRtWWxVMlRHOWhOems1Y0c1clN6QlNWbUpOWTNKT1UxWnRhM04zWW1KR2QzbHhiVUUzWTJaT2VVTXlhUzkzYmxKdU5XdERaMWxGUVM4eGMxSUthMEpzUlhSbGVYSjVWekZLU0V0bVYwZEpaVmhpUW5vM09YWjBkemxsU1djdk1rUmFjMVpCY3pkMlZsVmliRXRrY1hOc2JuZG9lREZxTmxKQlpVaFhhQXA2VFVaRlJuQnRiak5QYjI1WVRXTk9SbUY1ZVZscVJIQk1SMVpXZVhWUWJGaFhlWGhxUmpGekwyODJVMWhDYVN0aWQwUTFaV2hIWW5BNGNEaG9URTUzQ2xkV1dVVm5NVVZhZGxkMFJGZENVbFJaY1hOd2RtTXpTbFpvSzJFNFl5dFVkV1F6T1RacmEwTm5XVUYzY2xCeFRHWkhLMGxNUVRGUlNXZG1ZbkpOTUVNS2MyMTNNMWRyZUV0SmRtMXRkRUpNTDFZcmQyMVFlbTlMTlc4M2MzTjFWRVV3ZDJaMWF6aHVSMHQ2VFZFM05HUm5NV2g2Y2tSTWVqaHVORkEzYjFSUVJBcERNRmxSYUUxbWRtaFRkVWhGTkRkTFNXMWhOemhCYjNaUlREWnRObW92WkRCRFZuVjViM05hWmpOcGMyUm5MMW81Ymt3eFFVSmpNRlJKVFhrMVJFcHFDazVLVVVKNE0weFpkVzV4ZW1wWkswZEJMMnhHZVZGTFFtZFJSR1ptVFdKalVsTkZOM280TVhneGVrbGlORVpEYVRJeGEwNXBSR2xHY1hZM2MxWkhURzhLTXpoNmJsRlFTbmx0VldsNE0yRkRZMkoyVm1WclExaGlPVGRrZEU1b1lrdzJORWsxTDFoV1RFSmhkelZ4VVZOemNWbzNaVVJWZVcxVVNFcFFlR3BHYVFwSFRsVjZjMnBxU1dWbFRtbHpNREZKVUdGUllYb3ZjRnBYWjBOek5qVmplWFZRVUhWTmFtSkROek5RWWxSTU4wZEtiVTgzSzB4V2VuRlBiV3hLVkZZekNtZFFSRkE0VVV0Q1owTkxUbE5ZT1ZabGMwODNZbk15ZUM4d1UzZFdSSE5PTkVsWlpEWlZSMFJyU0daSWRsWm5RVUZPY1UwMk9FSnRWVEI2UjBWcWVUUUtjMGRCT1dNMVVrcE1RMDl2U1RneE5FcEhUVEJPTWxZMVdXTnpXRTl0ZWk5Rk1qVnJWMFUxYVZsTFRWQkxRVE5QVVRWR1pucDBRbmg2ZEZSTk5UTjBjd296VnpWV1UzaFJUR0ZTYVRkUVIzcGphazQ0TmxGb04xbFlVelZqU2pOTmVuUnVORkF3VTBkUGVVVndPSHBEYURNcmFTOVRDaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2c9PQogIGFwaXNlcnZlci1wcm94eS5jcnQ6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJXUkVORFFXcDVaMEYzU1VKQlowbEpVazE0Ym5wQmF6aElNSGQzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkTFJFVlNUVUU0UjBFeFZVVUtRM2hOU1ZsdE9YWmtSM1F4V1cxVmVFVjZRVkpDWjA1V1FrRk5WRU50Um01YU0wcHNXakpHTUdJelNYZElhR05PVFZSbmVFMUVSVFZOVkUxNFRucEpNZ3BYYUdOT1RXcG5lRTFFUlRKTlZFMTRUbnBKTkZkcVFURk5VbEYzUldkWlJGWlJVVXRGZDNSeVpGZEtiRXhYTVdoak0xSnNZMnBGWkUxQ2MwZEJNVlZGQ2tGNFRWVmhNMVpwV2xNeGFHTkhiSHBhV0VveVdsaEpkR05JU25abFNHdDNaMmRGYVUxQk1FZERVM0ZIVTBsaU0wUlJSVUpCVVZWQlFUUkpRa1IzUVhjS1oyZEZTMEZ2U1VKQlVVUm1ZVkZDYzB0UVowSjRaVUpZV1dSNE1XZzRhMGRwWldSd2Qwd3ZkMDFuZUd0T1VIaGFWVk5pTkZSM05ESlNSR1JYYzJaaFJRcEdlblVyV1c1SGMwaFBWMXBQVVVFeWRsbDFPVFJLWTNaWWJWWkZWbHB1WkRKWVpWTkNVa1J1UzBrdmVqZGliMGRCWWxFeGRtdHVlbVZJYVRWTU1VSmhDalJDYzFST2RrdFpSV3N6TlhsbVVGRXZZMGNyTUcxYVRrYzRjRzVPVUdaeWQzcEJhV3hVVDNvNVkxVk5iRU5wUVc5cWRtZFdXVzF5UjFGck1DOVhMMDRLTmtGMFlWVkNZVEpyTkZZNVJWUmlURloyVEZSdFprRkZiM0p0WmsxbVp6RndiR1F2Y1dGSVYzRkZPRTVrY0dSUlIxTkRUVFJGVjB0cE4xQlVPV3A1V0FwWFIycGxjRzFpTW1wT1ozaENRakJWUjNBNGFFSlJUMEl5THl0a1VrRjVSak1yV1ZSVmVYUlJXREZuYkVkM04yaHBVVlpZYkZnclNqQklhRmxITlVOTUNrZGtWSHBLZDBabkx6RnhhbUZIUTBoQk0zaGlUWEJ3Wm1SVVdUTXpWbmxvUVdkTlFrRkJSMnBrVkVKNlRVRTBSMEV4VldSRWQwVkNMM2RSUlVGM1NVWUtiMFJCVkVKblRsWklVMVZGUkVSQlMwSm5aM0pDWjBWR1FsRmpSRUZxUVUxQ1owNVdTRkpOUWtGbU9FVkJha0ZCVFVJd1IwRXhWV1JFWjFGWFFrSlVRd3B6VUZSWVZXODJRblZLWTNoQ1VUZE5PSFJtWlc5cVlYY3JSRUZtUW1kT1ZraFRUVVZIUkVGWFowSlNTV3M1YkRjd05HRmFWazlzUkVGT1VHeG9hbWRtQ2xNM1UwWlFha0ZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJaVzVKWkVaVFkydFdhVE5NVWpCR2RsRjVlVlZaYjNNdlZHRm9TMXBqUjJRS05FcHZjV1k1Tm1oUGNqRlZWV3ROYzJ0NVRrUkxlVEZRTXpBelMxcFpSeTh3WlRsSVZYVldRamhLWVRkcFYyc3dNMlpqU3l0emVGcGFiMHRuWkNzMWJRcEVka1J3UzA5eFNpdFRjelk0ZVZSRWFGWkdUaXR1ZW1rdlVIbFZOMjQxT0haNFUzRXpaR3R2Tms1TmR5OWtRMWxsWldGVVpHWTJTVEpJY2pGWmJHVjBDbTFCZFZWUWNFeGlWVmhNUTFWcmRWaFdkR0ZLYjI5VkswTk5ja0UyUm5wQ1YwNHJUbXBXWWtwcGVsVnNNa2RsV25SNmEzZ3lUVWR4SzBWNlZuWlliVWtLVm5FeFV6bDRiRlV5U1dSWmF6RklhVTV2VjJOVWNuVnpjbkppZDNodlpqTmFNWE5OTTJJNWVtOTFkekY2VFU1R1ZtdFhPR0pDWkhwcVlUaFVhbk41WVFwTE9FOWxjMVZuTVZSUldtdEVWV296WXpkbVZGRjVMMWhHU25WVVUzWjRUMXBYY2xoU2REWTVTVkowVVZCT01HUXZRMVZ4Y25jOVBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0KICBzZXJ2aWNlLWFjY291bnQucHViOiBMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGVkNURWxESUV0RldTMHRMUzB0Q2sxSlNVSkpha0ZPUW1kcmNXaHJhVWM1ZHpCQ1FWRkZSa0ZCVDBOQlVUaEJUVWxKUWtOblMwTkJVVVZCYjAxblkzRm5XRmRHZVVsd1VsWTJaRUpvVVdNS2EybE9kVEJ5Tmpaa05UVTJTamRUTUdGb1VqUmlkREp4WkZWMGRHbExlV0pEYXpKb2FrdHlTMWt4VUhoM1ZGZFlXa0l6UVZGTlZVWXpaR2RqWkhKUldncGlSRVYzYVVZM1MwZFRaV1JUVTJSMVkyNWFLMFZwZFhRd2NGQjFRWFJCY2tKREx6TjZWazB6Y0daTmRtZDZkRmxzYkhSd1ZYRTRiemRCY0U4ellURlFDakJQWkc1eFQwZzFTbVZyUlc5WGNUQlNlVTk0YW1OSlpXVmhja3hRTUc0d0wyRnJia3Q1VDJKNFRrSnpTbGxYVGpORVZUVk1WRWhOWlZSa01FdzFOMW9LYW1oQ1VUUk5LMGR0VGpkMlZGaGxkV2cwTjBSSU5IZHNVaXQ0U1dSMFVFZGphME40Tm1kU2VGRmhVREkzWXpOVlVFcENRVUpzU2pkNVNVZHBja3R5THdwNlVGZFFhekpoZGs4emQxaFliVTF1V1U5TGVtMTZTSFZDZWpseWFHUnliRlpsT0hKdFVsSjNXWFUyZGxGeU4wRnNkV05MTWxoNmFERXZNbFZaZWl0T0NuRlJTVVJCVVVGQ0NpMHRMUzB0UlU1RUlGSlRRU0JRVlVKTVNVTWdTMFZaTFMwdExTMEsKICBzZXJ2aWNlLWFjY291bnQua2V5OiBMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFwTlNVbEZiM2RKUWtGQlMwTkJVVVZCYjAxblkzRm5XRmRHZVVsd1VsWTJaRUpvVVdOcmFVNTFNSEkyTm1RMU5UWktOMU13WVdoU05HSjBNbkZrVlhSMENtbExlV0pEYXpKb2FrdHlTMWt4VUhoM1ZGZFlXa0l6UVZGTlZVWXpaR2RqWkhKUldtSkVSWGRwUmpkTFIxTmxaRk5UWkhWamJsb3JSV2wxZERCd1VIVUtRWFJCY2tKREx6TjZWazB6Y0daTmRtZDZkRmxzYkhSd1ZYRTRiemRCY0U4ellURlFNRTlrYm5GUFNEVktaV3RGYjFkeE1GSjVUM2hxWTBsbFpXRnlUQXBRTUc0d0wyRnJia3Q1VDJKNFRrSnpTbGxYVGpORVZUVk1WRWhOWlZSa01FdzFOMXBxYUVKUk5FMHJSMjFPTjNaVVdHVjFhRFEzUkVnMGQyeFNLM2hKQ21SMFVFZGphME40Tm1kU2VGRmhVREkzWXpOVlVFcENRVUpzU2pkNVNVZHBja3R5TDNwUVYxQnJNbUYyVHpOM1dGaHRUVzVaVDB0NmJYcElkVUo2T1hJS2FHUnliRlpsT0hKdFVsSjNXWFUyZGxGeU4wRnNkV05MTWxoNmFERXZNbFZaZWl0T2NWRkpSRUZSUVVKQmIwbENRVVpVYjIxVmNXOHZiVVZHU2pKd09RcENjM1paTDNsWGJVWk1ZWHBDZFVvMVJFOVhMMHB5UVVjd00zTndSVkZaVlhGWGJrOVVZWEJ3VTFCR2VXMUxUbEZDTlVsVVlsUnVkMEpGUjNkVGRVeFlDbUZIUXk5NE9WVTVVRkJaYm5GUE9GUXpjSEIwWlc5U01GVjVkbWhoVmtOV01IUkpiR2RVU1dFMmRrUkRRemxrVmpCRVpYSjBZVXhvTnpSTk9VRlpNVEVLTDBOU1VtcEtPREJPWVdkWlptMHdiekk0YzNKQlRESTBLMlZHTUZacWFXWnBXRkV5T1hGSU5GZFNhbGRNWkZKVGVFbzRNVkJqU3preGNUaExSR0ZxYlFwM09EYzFSak50UWtKMFVFWm9WRWxIY1RNeWIyMHlWSEpRWkZWblRIRjZaWE4xTTBGUk9IaHVVMlEzVDJkb2Vpc3ZWazR2ZGtKQlYydG1lWFJuSzJoRUNqaHFlVmg2U0V0WlJ6VnJlako2TWtkeE9DdHdWWHB4WVc1WVptUjBiM1ZsVDFKd1UyZDRjMnMwY21OT1ZVdHhiSGh4Tld4bmFuSldVR0ZzV2psaVRUQUtSbGhITUZWTmEwTm5XVVZCZW1kSlppdFhOMFpQUWtWdFFYUmFZV1ZtYmxoelNWaEZSSGxCVGpSRVpVMWlaV051T1hKeFpWRnlTVkZ5Tm01RWFIaExXUXBpYUVOV2NuRnJVVFZNVGs1WlpqWlROakIzVTJSNFptaG1TelptUldsdGNXcExOV3cyZFdwUFQwdHJOM04wZEVSclExZzNTMVU1TWxveFJYQm5SMEZ2Q2xWM2JWRllkME5TY21zek1VaE9aemM0UzBoRVlXMW9PVXRaUjNvclZFVkRhMHRFZG13MVJFaHFiV1pqWjNwVVRrczNSMHBaTm5ORFoxbEZRWGc0ZUdVS2JHcE1jakEzWVhaNFFXYzBXbnBOYjFCbmNpdHBiRVl2UWtoMVVYUnRLekZCYVVKV1R5dEJabE5SVEVSeWEyaFBhVzgwYTJKak1YVklORXhhWTJKcUx3bzFVbGh1UVdOV04yODBkVFJ5YlVGT04yd3dlRXByVFRJeGExVldVR1pYUkZkTFJFMUNjMGxoZGxCbFkwOXFhaTg0UVU5TFQzRTVOa3RUUXpOS09WWnVDbVZ0Ym1aRk56YzJjekJ0UzJkeVVtVkVTR0p2U3pscVVXb3dSekp2UlVObVVpdEtUR1l2YzBObldVSmxhQzlyVjBreU9XRmFMM2RUVW5wNGFsSnVUbXNLVEVNeWIxcDVVVmMxUldGTVZrRjNlRzF5WW5WclptczBUVzFXYm5kUEszcGhaV0pXY1M5Nk1XaFNWMWxTZUVsNE5rMXNPRmh5WmpReE9GSnJkVVIyY2dweVJXUlhVVkpuU1ZKb1ppOHpZaXR0UlU1bGMzZERjbk5DUVVaUlUwVXJXWE4zV0U1dmJIY3pTMDE1TWxCTU9XTnFNRFF4YzA1aWJWTm1PVVU1VDJ4b0NscHZaM0VyTms5dGVFTkJZa1ZSY1c4MWVVaE9WM2RMUW1kUlEybG9SRFEzT1d4bFZUaHVhWFF2TDBoQ1NDOHJVREVyYlUxSlVsbHpWVEJaTWpNd05XY0tNa2RRT0ZCRFZ6Sm5ZVlZvTUc1aWQyaFJXbXQxYTBSc1MwMDBkV3B6YVROVmMxZEJlakV6ZFdabGVGQkRjSEpMVmsxMGVEQkRTaXQ2T1hGcVpERjZUQXBpY1VGSGNqQlRTV2xRUW5Vck5GcFVaVTB5Y2xKeGEySlplREJaVEdGSWNVWk5kamRvT1VSemJrNXJjREJCVkdkS2NXaGlXV2hVYWsxb1UxYzNXRzFwQ2xGNFVXVnRVVXRDWjBaM1VFdDNWSFIwZUU5QmRuVktkamx5YzNkUlMwSlpURmhqTUhkV1FsZDVZMlYwUjBZMFIxSnNUQzg1Wm05WVkxTkpVVmt4VEZBS1VWQTRlRkF6VFdWV2JtRTVZMHA1VlZSNFdYaFdNMDF4UTFwUVFVSklRMDlXZHpnMloxbERWazFtVmxsU1owaE9aR1V5U0VkNVlXaHpXbUZOV0VaMlVBcHplSFpoTDFOSFNFdG9lVWN5YVU5NlprcHpXa1JzYVZveVEzRm5WaXRNVTJGQk4zTjZja0V6YlVSU2RuUnlSeXR1VG0xekNpMHRMUzB0UlU1RUlGSlRRU0JRVWtsV1FWUkZJRXRGV1MwdExTMHRDZz09CiAgcm9vdC1jYS5jcnQ6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJEVkVORFFXWkhaMEYzU1VKQlowbENRVVJCVGtKbmEzRm9hMmxIT1hjd1FrRlJjMFpCUkVGdFRWSkpkMFZCV1VSV1VWRk1SWGRzZG1OSFZuVUtZekpvY0ZwdVVYaEZSRUZQUW1kT1ZrSkJUVlJDTTBwMllqTlJkRmt5UlhkSWFHTk9UVlJuZUUxRVJUVk5WRTE0VG5wSk1sZG9ZMDVOYW1kNFRVUkZNZ3BOVkUxNFRucEpNbGRxUVcxTlVrbDNSVUZaUkZaUlVVeEZkMngyWTBkV2RXTXlhSEJhYmxGNFJVUkJUMEpuVGxaQ1FVMVVRak5LZG1JelVYUlpNa1YzQ21kblJXbE5RVEJIUTFOeFIxTkpZak5FVVVWQ1FWRlZRVUUwU1VKRWQwRjNaMmRGUzBGdlNVSkJVVU4zUkZOUGNscFZkRFF6Y1dObUt6Rm9TbFJIY3pRS1FTOUpjRlkyTHpSMmRHWkRPRVV6Wm5RNVZXY3ZRak5xZHpGVk1qWm9ZVE4xTnpkdGQwbFJSRnBOUTJWMVVtVnpUR3RMYzI5amFXTnZhQzlsTDJSTFNRcFRRV3RPTVVKa1ZIVk1SemxVTVZWWWFUaGFkMU5OV2pkVVRFaENZMUpLUVUweGR6ZFRja1V5VWtKbEsxQnNha05IU2xwaGRVUkNaVXBCZGxodWQxcFhDbXhrUVdGSGIxRlpiMFo2THpGU1FsVlRlR2cwUTI1RVExVldkV1pEZEdST1dYZGhZMUYzV2pCbVRIQmlWbHBvVUhGWlQzcG1OR2xXZEhGaUszaHJSMWNLZGtneVZHTkpWM2REYzNKWWVVa3pObEV3Umk4MlVqWTNNVko1UldOVlZGTk1XQzg0YUZFMVlteFJUMHRMTUNzM01EUnliV2hIT0hBMGVWbFdRVGhQVlFwSlF6ZG5TWEk1TmtkNk5sbERUMEp5TW1VelZXVnpNVnBRUkdabU1qaDZiRVZQV1hWRU0yeDBSemhNUzJjcmVUUXhWME5UYkRWaFRXOXpOV3BUUTFCRUNrRm5UVUpCUVVkcVVXcENRVTFCTkVkQk1WVmtSSGRGUWk5M1VVVkJkMGxEY0VSQlVFSm5UbFpJVWsxQ1FXWTRSVUpVUVVSQlVVZ3ZUVUl3UjBFeFZXUUtSR2RSVjBKQ1VrbHJPV3czTURSaFdsWlBiRVJCVGxCc2FHcG5abE0zVTBaUWFrRk9RbWRyY1docmFVYzVkekJDUVZGelJrRkJUME5CVVVWQlZYTnlSUW8xSzFaVlIxWkpjV1UxVW1kc2FVVXZRbkpuVnpOaWVVNVVTVTVhT0M5UlYwUlRZMFZ6ZVUxdlZqa3JLMlpYYmtsakt5dEVOWEJzTkc5RVpUWjRiV2RLQ25WUVp6VlVjRlJMWlZSRlZWTlpiSGh4Y0dadFprTkhWREY1U1RCS1FYWlJVbXc1Y0VveVRuTjRVSHBvUlM5RlFubzNSVll6VjBFcllUbEJXSG94U0M4S09HZHZlRGxDZWpFMlZIbFJiWFpVVTJKck9FRkpVMU5tVW10VFNXRkNjeXRwZVRKVVpXd3pVa3gyVWt3d0wyNXVlRkZ6VEV4RmFUaHBXa1phWVhWQ2R3cFVkV1pXZWxsTVJXbEJaQ3N2TVZSSFRtUkZaRmhyV1RKaU9UWjBiMUZKSzFFMlNFNWhNbWM1VGtNd1ptUkhWbEJpZEZSdU5VODRUa1pwYTIxclZIZFlDbXQxYTA4NE5pOU1ZV2sySzBORE1tVkZhbWRxZUhOMlRFWm5WMVl5UlRsWVZWQTNPRk5MZHlzdlJFMXZkRlU0TUhZM09GcENRM2xxUm5CVFkyTnZOVGNLVkZjd1YzbENiMng0V2xkVGJuVTNVRzFuUFQwS0xTMHRMUzFGVGtRZ1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFvPQogIGt1YmUtY2EuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSTlJFTkRRV2hwWjBGM1NVSkJaMGxKUjFZdmNtaDFaalZ4UTFsM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVVMFRWUkJlRTlVUlhwTlZHTjVUbXh2V0FwRVZFazBUVlJCZUU1cVJYcE5WR041VG14dmQwcFVSVkpOUVRoSFFURlZSVU40VFVsWmJUbDJaRWQwTVZsdFZYaEZSRUZQUW1kT1ZrSkJUVlJDTW5ReENsbHRWWFJaTWtWM1oyZEZhVTFCTUVkRFUzRkhVMGxpTTBSUlJVSkJVVlZCUVRSSlFrUjNRWGRuWjBWTFFXOUpRa0ZSUTNNMFdrWXhVMDFwV0c1WE9GZ0tjbmswTW10VmJEbG1NR2w0U0ZGTVNEUm1kVTFtTUZwTlRWSlFla1phWkd0UE5sbDZaalp1TjJwVFdsTXZMMlZZVmpoMWF6QnBOWGh1VnpGeGIxWktXUW80U21wQlFraEJXVUV5WjBwd1MwcFJSalI0VTJSb2RYTjZTRmxSYUZJMU5GVlpUa3BPT0UxNGFUWkZZazB5VUVOaVdYVXdkRTVhWVd0Q1kwVkVXbEo0Q21vMllUbEthVEJsU21sR2NUWkVVa0ZNV1RGMGQzUlFhSGRzVkRkWU1tTm1hMk5qSzB0VmJYYzJlVFpKY2tob1lsSm5hVVJNTDNONlluSTNNbXhJUzFRS1VrczNNSGhXYldONVpHcEthamhGWVhrNGVUWlVkVTV3ZDFWMWJWRjZVa1ZTY0dKR1pXMTBaMjlQTTJoNFUyMWxkMjUwZUZWYVQwRnRSa051TkZSRFpRb3ZVMjlUYzJjeE0xWklTM1o2ZFVSSGVrTjFkR3RGUmxCNFMyVkhTWHBwZFN0SE9FRTFXamREUmpKdUwzVnVla2d6WWtWTkx5dDVVSGRuVVU1WkwxbzBDbWcyYzJoSVYxSktRV2ROUWtGQlIycFpla0pvVFVFMFIwRXhWV1JFZDBWQ0wzZFJSVUYzU1VOd1JFRlFRbWRPVmtoU1RVSkJaamhGUWxSQlJFRlJTQzhLVFVJd1IwRXhWV1JFWjFGWFFrSlNTV3M1YkRjd05HRmFWazlzUkVGT1VHeG9hbWRtVXpkVFJsQnFRV1pDWjA1V1NGTk5SVWRFUVZkblFsSkphemxzTndvd05HRmFWazlzUkVGT1VHeG9hbWRtVXpkVFJsQnFRVTVDWjJ0eGFHdHBSemwzTUVKQlVYTkdRVUZQUTBGUlJVRkNha3BvTVdreFRHOW9PR3hGUzBSSENrWm1hVUU0Ukdkb1duWjZXVnB1VHpNMlMycGhhRGRLTmt4cGVscExNVmgwV1RsTWQwWlpZakl5ZUV0eGFYTnVTR1pZUlcxTFFVSjVRelUwTDFnMlJrSUtjRlIwVDFsWU5uZERWQ3RrYWpadFFscFpSMDlOU1M5dmFVVkpRMGhvTlZwbFVVMVFZMGRrVjJGTFdXdEdOak56WVZOdk5WaGFaRFJuVGtaalMwOTRUQXBXVFd4dlFrbEdjVGh1YWpNd0swdzNObWM1YjFaSmRERnlUbnAyY210S1IyeGphMlZYYzJsaFkwSnBaRTFZY21GRFJEbGtiRTlMYW5nM1dXbzJiVkZPQ2xVNU1Tc3ZUR2hOVFM5aFkwSmxRMlZPYW5CTVQwSlVkVzFRYm1aNGNYTlJlRFpMYnpBek1ERlFZWFZKVFRSdlpITk1RMUJ4UVcxRmNsWmlOVWRVWVU4S1Fpc3haQ3MwUjBkeWRUUnZZbGx2VGpaeWVHRTJkR1V5WlVVMFQyTXpXR1JrZEUxcFpIY3dkVzh2VGpsTWFGTXdlWGRMUzJGa05GTnphR0p4Ukc1RVZ3cHlUQzl0Y1VFOVBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0KICBldGNkLWNsaWVudC1jYS5jcnQ6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJMVkVORFFXaEhaMEYzU1VKQlowbEpSbFEyTTB0bVZtNXRTamgzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkS2FrVlRUVUpCUjBFeFZVVUtRM2hOU21JelFteGliazV2WVZkYU1FMVNRWGRFWjFsRVZsRlJSRVYzWkhsaU1qa3dURmRPYUUxQ05GaEVWRVUwVFZSQmVFOVVSWHBOVkdONVRteHZXQXBFVkVrMFRWUkJlRTVxUlhwTlZHTjVUbXh2ZDBocVJVNU5RWE5IUVRGVlJVTjRUVVZhV0ZKcVdrUkZUazFCYzBkQk1WVkZRWGhOUlZwWVVtcGFSRU5EQ2tGVFNYZEVVVmxLUzI5YVNXaDJZMDVCVVVWQ1FsRkJSR2RuUlZCQlJFTkRRVkZ2UTJkblJVSkJURFkyUnpNcmFVVnNZamhuUmxOWlRVTk1jelpYYlZrS2JXRlpSR2RoTTFNNGVXdHdjR1I0WW5KUFRpOVVkMGRMTW1OdllXSlpSSGx5U21KVFZGWmlhMGRaVXpSMVdIVTBUM0pvWXpZeFJHNVRWM0YwZUZSSFN3b3lTa3BhUzJwSGFWQlpXV0l5UTBodllsVm9SbkJuU1VzNGNWWnRhMmhsVTA5dE1EVm1kRUZRUmpkMkwxTmhhR2M0V2xGNWNHdGlNRmR3WmtaSmVVNVpDbFJGWTBKUFQxaHZUSFJ2TTB4b1JVdHhPVnBVT1M5R2EwcG5VRVZwU0Vac2VtUmlOa3hRVmtaa1lVWnJNalEzVm5OaFNXeFBVbm8yWWtkNVExbDFTV2dLZGk4NGVGVTRTMjhyY1dORGJGTlRZMnR5ZG1GQ01XRnVWRzh2VDA4NFdEWmtkMFpTTUhwd1Z6ZGpTRmh5ZUd4WWRWWnZiRlZUWVRFNVp6a3pNMGgyWndwMU5uazFPVkJFTms1dlpqTk5ZMjh2YUM5SlV6ZG5SMjkyUTFJME5FWktOa2RLUWxoRVlVcEVNVFV3VnpsWVVqRlRVVWQyTWxrMmFWSk5MMlJsVGsxRENrRjNSVUZCWVU1cVRVZEZkMFJuV1VSV1VqQlFRVkZJTDBKQlVVUkJaMHRyVFVFNFIwRXhWV1JGZDBWQ0wzZFJSazFCVFVKQlpqaDNTRkZaUkZaU01FOEtRa0paUlVaRmFWUXlXSFpVYUhCc1ZUWlZUVUV3SzFkSFQwSTVUSFJKVlN0TlFqaEhRVEZWWkVsM1VWbE5RbUZCUmtWcFZESllkbFJvY0d4Vk5sVk5RUW93SzFkSFQwSTVUSFJKVlN0TlFUQkhRMU54UjFOSllqTkVVVVZDUTNkVlFVRTBTVUpCVVVOd2QxcG5XWGN2THpFelJXZERhSHB2U2xocVZsQldkVEp1Q21KYWJXRlVkV3RvYlVoQlVDdFVSMGxITWtKUmIyNHhSazB3UTNCc1NraFBiRXBoTW14TWIwSnZVVE5JTkVrMFdqaHFObVIzTUhoS2VUWk9VVzlCY0dNS1JVUTBXVEJpWlU1dlNVTjZMMnR3TkRnMk5ERkRTRFF2WlRKeGNHTkVVMUIyUWxOeVFVOXRXV3BpWTB0cVNqSk9OREl4UkhSNlpUTTRlV1ZhZEVWa1NRcFdRemxqTldkSFEyaFlPVGxrWWtSalYzWm5lWFJzTmxWamNtNURabWhqWWtOalQwTTViSGsxY1RaWmMyUm9hbWRhTm5GT2JYVlJZMmszZVZCcGJ5dHdDbmhoUXpCVlJGbE9WV0p4ZERKT2VXdEpaak5qWkd0QlJrNVhVbWx5VEhkeVdDdDFTVXRHUzNocE9WWk9PVWhVWm1aWVJYQk1ZU3N2ZURSelZFY3JSSEVLUmtneGJ6ZFVTMHhGU2xCSE1WQTNPRVpwWm5WbU9VMWFSak1yZVc1NVNEVllLM1ZxVTFsalZtcDNXazE0Vm5kdE9USnZNRmMwTldaNU1HeDNDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICBldGNkLWNsaWVudC5jcnQ6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJGYWtORFFXWnhaMEYzU1VKQlowbEpVblJEV0Vjd2FHSndTbEYzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkSWFrVk9UVUZ6UjBFeFZVVUtRM2hOUlZwWVVtcGFSRVZPVFVGelIwRXhWVVZCZUUxRldsaFNhbHBFUVdWR2R6QjRUMFJGZDAxVWEzaE5la1V6VFdwYVlVWjNNSGxQUkVWM1RWUlplQXBOZWtVelRXcG9ZVTFDTkhoRVZFRk1RbWRPVmtKQmMxUkNSMVl3V1RKUmVFUlVRVXhDWjA1V1FrRk5WRUpIVmpCWk1sRjNaMmRGYVUxQk1FZERVM0ZIQ2xOSllqTkVVVVZDUVZGVlFVRTBTVUpFZDBGM1oyZEZTMEZ2U1VKQlVVUmxOVEUzY0dGeGJVRndUMGxEVGtSbVpuTXlNVEZWWVhselR6Vk9kR2d4VlRrS1VHbEZaMFp1Y21odGJIZDBUR2wwTjNsM1RHTlpOakpCYWs1TVJqbEplR3RGY0hKaWRucFphV3AzYVhGUVlsUnBaR015YUZWQlZHSkRVRWRTU1Vvd1N3cEZRVEpOWmpGSWVsRllTV042VldZMFZUWlRNRkJNY0hodE9EZE5XazA0Wms0MUx6UkJVM2R4ZVRoVFEzcEpWVWw1TldsSWRqZEdiMlp2VVRJeWJHWkVDazFWUzJ0clYza3pZMEpGVFhSUVYzSkRjMjFaWTNZMVYwTXZhalJhVFhOaVduQTROSHAyTTFkVlZXcFFXRGh0YVVWUFRVcEpObkpKZFdSR2VtdHpjM2NLT1d4ek5rRXZNbTlSYWpONFRGSnlSaTlHVTBkeWNXUktTMUI0Y0ZoMlJ6QnJjblpDTUhwTFZTOW5Ra1YyUWxjeFdHRXpNV1JzU21OQlpHdHNWMkZoWlFwa2QxTXlhWEF6WW5GRVNYaE1aMjVGT1dSSFVVOTVXRW81ZVV0bE5pdE9TblpwUkZkSVYzYzJUR01yYld0bE1YQjFiVFZhUVdkTlFrRkJSMnBXUkVKVENrMUJORWRCTVZWa1JIZEZRaTkzVVVWQmQwbEdTVVJCVkVKblRsWklVMVZGUkVSQlMwSm5aM0pDWjBWR1FsRmpSRUZxUVUxQ1owNVdTRkpOUWtGbU9FVUtRV3BCUVUxQ01FZEJNVlZrUkdkUlYwSkNWRE41TWxod2EybExMemhRU2swelEyOW5TM1ZFU3pod2VYa3pla0ZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSZ3BCUVU5RFFWRkZRWFZCYkVrclRFVktNRzVrYm5CamRIWlFVemR4ZEV4SlRXMVJWSGhNVVhFeVN6bGtWMjFqV0ZoYVRFTTJlR1J6Y1hsMFJuWmtjemRRQ2pCRVVXWmxOVU5XZUVkTFZpdDViMHBHY0ZZNWRqbEZORWx5YjJkUmJFZzRiazFMZFVOdGQwWkhTbmdyWjI5NlVGWnZOV3haTUdNcmJVOWFlVUpxUXpZS2FYZzVURkZIU0dnMmJHSnZVakEyWnpaaEsyNXpiVUozZUVSdk5tbDBlbTVYT0RFeUwyUXhUV0ZQVVhKdllVcDVUMUYzTUZScWJrRm5NMVk1T0ZOdFVRb3ZObGczY0RVeVl6VlJablU1V0dwWVdYaElNVWhaVmpWa1VFVllSRGRQUTIwMVJFc3pZVUZsVjBnMFZGUkpUekJtYzNoNVRVRkJiekZVYzBsNWEzaEtDakE1VTBZeVVuUnpRWHA0UVdkNlp6UklNVzVtVW5wb1JrRlFORGRZU0d4U09VdzRSSFpJZFZsNFprSXZObk5SVkRkcmFGRnRjSEZZYlN0SFNqTXZWVlFLUmtKeU0wcEVNWFZhTURob2NHVjJRVEUwYlhWelZEVnhZeXRUU21OUlBUMEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICBldGNkLWNsaWVudC5rZXk6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmNFRkpRa0ZCUzBOQlVVVkJNM1ZrWlRaWGNYQm5TMVJwUVdwUk16TTNUblJrVmtkemNrUjFWR0paWkZaUVZEUm9TVUphTmpSYWNHTk1VelJ5Q21VNGMwTXpSMDkwWjBsNlUzaG1VMDFhUWt0aE1qYzRNa2x2T0VseGFqSXdORzVZVG05V1FVVXlkMnA0YTFORFpFTm9RVTVxU0RsU09EQkdlVWhOTVVnS0swWlBhM1JFZVRaalduWlBla2RVVUVoNlpXWXJRVVZ6UzNOMlJXZHplVVpEVFhWWmFEY3JlR0ZJTmtWT2RIQllkM3BHUTNCS1JuTjBNMEZTUkV4VU1RcHhkM0pLYlVoTUsxWm5kalFyUjFSTVJ6SmhaazlOTnpreGJFWkplakV2U205b1JHcERVMDl4ZVV4dVVtTTFURXhOVUZwaVQyZFFPWEZGU1RrNFV6QmhDbmhtZUZWb2NUWnVVMU5xT0dGV04zaDBTa3MzZDJSTmVXeFFORUZTVEhkV2RGWXlkRGxZV2xOWVFVaGFTbFp0Ylc1dVkwVjBiM0ZrTWpabmVVMVRORW9LZUZCWVVtdEVjMng1Wm1OcGJuVjJhbE5pTkdjeGFERnpUMmt6VUhCd1NIUmhZbkIxVjFGSlJFRlJRVUpCYjBsQ1FVWmlWekZOWTJrMGNqVllabWxXVmdweGNEZG5SRVJwTUdoUmVtdGxUamh0TldwS2FIcG5NM1ZPUW14SlVtSnFhMVE1VWl0c2NrczVjMjgxZFZSdU9FbGpkR3hhTVdwTVpVZ3plaTlPUjFRckNtWlZXSE5zZUhaT1ZFNWlOR1ZSVVU1TVMwVkxPUzk0VVdKbFJGUkZiRE5sU3pkbE1pOXRaWEJqVVd4d2NHWjBSRWQwTkZOcllWQlJPRk5CVEVkd1prc0thbVJ0VEZZdlZYRXpWR0pWWTNwWVltZHRNWE01TkZka2EycHJNRWRaYzBOaFExSm9hRXN6YkRKTmFYSlRObkppZVdFd04ySnhhbmh1V25oV1JrNTJaUXBDVmxSU2EybHBiMHRKVEc5bmRYbG1iRVJpY21wUVVscHRiVEpIWTFwamRrazBTRmhXV1RkWVdUZ3dZVWswZURaTGMzQTVPR1F2TjNGUFdGbFROMFZ3Q2xKdU9EbE9jR1ZGYjBwV1IzSkVTemM1T1VsVmRWaE1Lemt4VG14MmVqZFpjbmxZU3k5cmJqVkJlSE5ZTUhSa0szbEZjM05yWjNSSlpYZG1aMDQ0ZERZS0t6TnVTMk5CUlVObldVVkJPR2xFTTBvelJqTnpZa3R6TUVsMFYybDRiMmxTTlM5cWNrY3pVR2s0T0d0SVExVkdSbVpYVDFSWldtaG9iRnBwUXpacE13cFhlV1oxZHpScE9GbGlRM2RRZGxoMVRYRkhPVkJHSzFOS2JsRmhRVWR4TmpVM09VMHpVRlVyTmxGcWNVUmpTMUo0VTB4a2JscFFSVUYzVUZsMlNsVm9Da3BVYWs4d2J5c3ZNSG80YzFaS1NtMUhZVEoxUmpSRU9ETjJSVlJvTkVoQ1VpdG9Sa0UxTXpWNk9HWnhVRUUwTXpKS1YyVmlUbXREWjFsRlFUWTJlREFLVEdKRVRHSnlSMjFuWjJaTFVpOTRjelZ3TWxoVFNrODJZamhOTVdkVVRsVlZRbTVhTDBsWGNIUkxNMXA0TlZnMGRqQkxLM3BQYnpCcmFWcFVXbWR1TVFwSU4yZHllRTQyY2xsR1pFOUhkMHhNWW10NFREbHVkVmQxV21JMWJGQmpiR1I0ZDBoVFQzbHpZV04xYzNoRWQxUldNV2hNZVRRdlZIUnJSRzgzWkVVNENsZE9NVTlDWXl0clRGUm1WUzlPZUVJdllqUlRRbnBRU1ZFck1UWnJUamQ2Ym5GQ05VaFpSVU5uV1VWQmQweENRbGxKT1hCUVR6UXZiakZ6TUVSV1JrZ0tPVWswYlhoMVRrRTFlbVEyZFdwamRqSXZSRzFTV1ZoeEswNXBiMEZFVms1aVpYSlRiR0ZQYzI0eVdGbGlUa3RWZEVwRFNXODFTUzlKWjBWR1lrVXlSQW96YzJkaU5rUXZNM2c0WVVSV1ZqUkNWMk40VFZvMGJtWXhURXB5SzI1QlNIZzNTakI2V21JcmFIRlFaM0ZLUlRGV1luZHNUSEZzUmtaRWNuZFhjMlZHQ2xKTE9YZDBUbU13Y0dkdGJuWkNSbTl0YVVVdmVXTnJRMmRaUWtSSGR6ZFdkRGhMYkZkV1dteE1hSGwxUmt4V1dtdFZVSHBsV1ZWaWNqaFVOMkpuWTNrS05qZHRSRk4yWjBGd05GRmpZbHB4ZG5ONWVYSkpiMFZ1YjBaM1l6aFFZbTlQYTFCVlVXVmpaMlp3ZFZJeU1rUmlibXRRTDBGcUwzWjRiM0EwYmxWelFRcDFSekZ0YlZkWFlXeHNSWGxoZW5wRGIxUlRjakpPT1dGNFR6ZFBWVTFpVkUxMWFURm9UMDVzYzAxRmJqUjJkWHBoWW5sMVlXeE5OamRHVERkRU1VUnNDazlUU21wblVVdENaMUZEZUc4eVoxaExiRGg1Wld3MVUzUnNWVlpvTUhGamVXNDNPR1JXZUc0MVZtaDJOMWR3YVVoQ1JFSjZLMFY1Vm5wU1dYQlFTM2NLWTJKcVdFbFVZVlp6T1RReVdsaFBiM0JKTURaQk5tOWxhMFk1VHk5c2FXTnlVRmQ0YW5sWWJEVnNNM1paY2xOT1FtcERZbEpCWTBGc1VtRjRVR3hEUndwRmJ5OTZURnBhYkZwSllsUndTMjEwWTBoMGJEZ3lWM0pyUkZJMGQzZEtjRk0wVTNoa1pIVTRkemd2VVVkYVVIWnZNWEJFYjNjOVBRb3RMUzB0TFVWT1JDQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUW89CiAgb2lkYy1jYS5jcnQ6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJOUkVORFFXaHBaMEYzU1VKQlowbEpSMVl2Y21oMVpqVnhRMWwzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkS2FrVlRUVUpCUjBFeFZVVUtRM2hOU21JelFteGliazV2WVZkYU1FMVNRWGRFWjFsRVZsRlJSRVYzWkhsaU1qa3dURmRPYUUxQ05GaEVWRVUwVFZSQmVFOVVSWHBOVkdONVRteHZXQXBFVkVrMFRWUkJlRTVxUlhwTlZHTjVUbXh2ZDBwVVJWSk5RVGhIUVRGVlJVTjRUVWxaYlRsMlpFZDBNVmx0VlhoRlJFRlBRbWRPVmtKQlRWUkNNblF4Q2xsdFZYUlpNa1YzWjJkRmFVMUJNRWREVTNGSFUwbGlNMFJSUlVKQlVWVkJRVFJKUWtSM1FYZG5aMFZMUVc5SlFrRlJRM00wV2tZeFUwMXBXRzVYT0ZnS2NuazBNbXRWYkRsbU1HbDRTRkZNU0RSbWRVMW1NRnBOVFZKUWVrWmFaR3RQTmxsNlpqWnVOMnBUV2xNdkwyVllWamgxYXpCcE5YaHVWekZ4YjFaS1dRbzRTbXBCUWtoQldVRXlaMHB3UzBwUlJqUjRVMlJvZFhONlNGbFJhRkkxTkZWWlRrcE9PRTE0YVRaRllrMHlVRU5pV1hVd2RFNWFZV3RDWTBWRVdsSjRDbW8yWVRsS2FUQmxTbWxHY1RaRVVrRk1XVEYwZDNSUWFIZHNWRGRZTW1ObWEyTmpLMHRWYlhjMmVUWkpja2hvWWxKbmFVUk1MM042WW5JM01teElTMVFLVWtzM01IaFdiV041WkdwS2FqaEZZWGs0ZVRaVWRVNXdkMVYxYlZGNlVrVlNjR0pHWlcxMFoyOVBNMmg0VTIxbGQyNTBlRlZhVDBGdFJrTnVORlJEWlFvdlUyOVRjMmN4TTFaSVMzWjZkVVJIZWtOMWRHdEZSbEI0UzJWSFNYcHBkU3RIT0VFMVdqZERSakp1TDNWdWVrZ3pZa1ZOTHl0NVVIZG5VVTVaTDFvMENtZzJjMmhJVjFKS1FXZE5Ra0ZCUjJwWmVrSm9UVUUwUjBFeFZXUkVkMFZDTDNkUlJVRjNTVU53UkVGUVFtZE9Wa2hTVFVKQlpqaEZRbFJCUkVGUlNDOEtUVUl3UjBFeFZXUkVaMUZYUWtKU1NXczViRGN3TkdGYVZrOXNSRUZPVUd4b2FtZG1VemRUUmxCcVFXWkNaMDVXU0ZOTlJVZEVRVmRuUWxKSmF6bHNOd293TkdGYVZrOXNSRUZPVUd4b2FtZG1VemRUUmxCcVFVNUNaMnR4YUd0cFJ6bDNNRUpCVVhOR1FVRlBRMEZSUlVGQ2FrcG9NV2t4VEc5b09HeEZTMFJIQ2tabWFVRTRSR2RvV25aNldWcHVUek0yUzJwaGFEZEtOa3hwZWxwTE1WaDBXVGxNZDBaWllqSXllRXR4YVhOdVNHWllSVzFMUVVKNVF6VTBMMWcyUmtJS2NGUjBUMWxZTm5kRFZDdGthalp0UWxwWlIwOU5TUzl2YVVWSlEwaG9OVnBsVVUxUVkwZGtWMkZMV1d0R05qTnpZVk52TlZoYVpEUm5Ua1pqUzA5NFRBcFdUV3h2UWtsR2NUaHVhak13SzB3M05tYzViMVpKZERGeVRucDJjbXRLUjJ4amEyVlhjMmxoWTBKcFpFMVljbUZEUkRsa2JFOUxhbmczV1dvMmJWRk9DbFU1TVNzdlRHaE5UUzloWTBKbFEyVk9hbkJNVDBKVWRXMVFibVo0Y1hOUmVEWkxiekF6TURGUVlYVkpUVFJ2WkhOTVExQnhRVzFGY2xaaU5VZFVZVThLUWlzeFpDczBSMGR5ZFRSdllsbHZUalp5ZUdFMmRHVXlaVVUwVDJNeldHUmtkRTFwWkhjd2RXOHZUamxNYUZNd2VYZExTMkZrTkZOemFHSnhSRzVFVndweVRDOXRjVUU5UFFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2c9PQogIHNlcnZpY2Utc2VydmluZy1jYS5jcnQ6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJQUkVORFFXbERaMEYzU1VKQlowbEpWbkpTU25oSGVrMWxOWGQzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkS2FrVlRUVUpCUjBFeFZVVUtRM2hOU21JelFteGliazV2WVZkYU1FMVNRWGRFWjFsRVZsRlJSRVYzWkhsaU1qa3dURmRPYUUxQ05GaEVWRVUwVFZSQmVFOVVSWHBOVkdONVRteHZXQXBFVkVrMFRWUkJlRTVxUlhwTlZHTjVUakZ2ZDB4VVJWSk5RVGhIUVRGVlJVTjRUVWxaYlRsMlpFZDBNVmx0VlhoSFJFRlhRbWRPVmtKQlRWUkVNMDVzQ21OdVduQlpNbFYwWXpKV2VXUnRiSFZhZWtORFFWTkpkMFJSV1VwTGIxcEphSFpqVGtGUlJVSkNVVUZFWjJkRlVFRkVRME5CVVc5RFoyZEZRa0ZPU213S1JVRnRRa3h0UlRaMmVFTTNabU4xTDNWeVVFUjZWV1pTT0V4M01rb3pTVmR6TWtkRldXb3hTbXhEWnpKNVdsYzBVV3AwY0V0ME1VVjJVa3BtVUc5T1JBbzJZemRoY1dST2JtNHJNME5DV1d0NGEyOVlSblYyWmtaR1FqbE9jak15YkhFMWNXWlBXbFV4YW5CeE5XTkhlWGRHUWt4NkwxQlVaU3RpYURnMEwzWjRDbkJ4YkdJeVlTOVlTMmc0WVRaalR6RkpMeXRYUnpBdlRuWjFjbFJZWm1sTGJtUnJMMkpVY1hGeU5UVlBRbXBPYVdacFFYQm9OVTV5VUhKTE5FOVhURk1LUW5CNGJWSlVOMEpzYkc1eVlucE1UWGRMV0ZKWFJFZFpNREIxTkROdGVUbEpTVUp3TjNaUGJsWkVXVFV5ZFZkSlYzSkhXRFV5UkZrM2JHVlpURXB3T1FveGFFUnVkMjlvVjNSMWFGRk5NMmt2U1hjeFkzazBXWGxMVVZselZYaEdkak4wVTNCMFZtRlNTRGgzYjBwV2N6aG1VbUpoY0U5REwyNDBOMk5oTUhjNENuQnVTemhFVm1STFoyVlJXa0o1WnpKU1RITkRRWGRGUVVGaFRtcE5SMFYzUkdkWlJGWlNNRkJCVVVndlFrRlJSRUZuUzJ0TlFUaEhRVEZWWkVWM1JVSUtMM2RSUmsxQlRVSkJaamgzU0ZGWlJGWlNNRTlDUWxsRlJrVnBWREpZZGxSb2NHeFZObFZOUVRBclYwZFBRamxNZEVsVkswMUNPRWRCTVZWa1NYZFJXUXBOUW1GQlJrVnBWREpZZGxSb2NHeFZObFZOUVRBclYwZFBRamxNZEVsVkswMUJNRWREVTNGSFUwbGlNMFJSUlVKRGQxVkJRVFJKUWtGUlFuSnRNMk5PQ2twM2EwZE5NM1oxU1VkU1NtcEVUVVZYZGtWblVsYzNjek5YVjI1dVpGWTBSMFphT0hSMlkzbzVOazFNY0hONk5GRTBXWFY2YTFOWUt6VjROa3RyY1d3S2FEWXdUWG96Ym1scGIzTmpOMnhrY2t0cFVGWk5ZbGhZVTAxS2FWbFVRbXhMUTA5a01UQnRaRWhSVUVKbU1GaFJZamNyYUdzd1NrZFlVbFV6Um5kaVVncDJWV3BvVm05Q2VtaEZMM053VmtSelRXdEZVblZWWTJoNGRuZDFjMUpqVGxkbmNVWlZRM2d4Ums0ek9HRlVaR3A2VGs5UlRUSmtaMnRrYkVka2FHcFhDbk13V1dsWGEwSnVPVGRTZURoaFpERllNbmh6YjNKb2FFY3Zia1Z1Y2xKUWJuUm5hMlZEY2pocmNHY3laVEVySzI4cmIxVkZRWEpXT0hKeGRHTnFlQzhLYW5SeE16TjVLMXAzYlZjck1IbElXbUYyWjJOeWRreHdWa05FZFRGaGEzVklSMlZ5TVdFeVNUZHhZMEZRTldGNlIybEhVVTVwVERSWFFtMUxlR2syWXdwSk16TnpRVFJvU0hKMVVFdDBWWHB5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgc2VydmljZS1zZXJ2aW5nLWNhLmtleTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGY0VGSlFrRkJTME5CVVVWQk1HMVZVVU5aUlhWWlZIRXZSVXgwT1hrM0t6WnpPRkJPVWpsSWQzWkVXVzVqYUdGNldWbFNhVkJWYlZWTFJHSktDbXhpYUVOUE1tdHhNMVZUT1VWc09DdG5NRkJ3ZW5SeGNEQXlaV1kzWTBsR2FWUkhVMmhqVnpZNU9GVlZTREF5ZG1aaFYzSnRjRGcxYkZSWFQyMXliSGNLWWt4QlZVVjJVRGc1VGpjMWRVaDZhaXN2UjIxeFZuWmFjamxqY1VoNGNuQjNOMVZxTHpWWllsUTRNaXMyZEU1a0swbHhaREpVT1hSUGNYRjJibXMwUndwTk1rb3JTVU50U0dzeWN5dHpjbWMxV1hSSlIyNUhXa1pRYzBkWFYyVjBkazF6ZWtGd1pFWlpUVnBxVkZNM2FtVmlUREJuWjBkdWRUZzJaRlZPYW01aENqVlphR0Z6V21adVdVNXFkVlkxWjNOdGJqTlhSVTltUTJsR1lUSTJSa0Y2WlV3NGFrUldla3hvYWtsd1FtbDRWRVZYTDJVeFMyMHhWbkJGWm5wRFoyd0tWM3A0T1VaMGNXczBUQ3RtYW5SNGNsUkVlVzFqY25kT1ZqQnhRalZDYTBoTFJGcEZkWGRKUkVGUlFVSkJiMGxDUVVoQ1VUa3hRemR1TjBSVlJtRXJkZ3BDTm1FdloyTklOVzk0Y2xkSWJtVTNVMU1yUlc5MGNFdFBPQ3RRSzJkSVJucGlUMXB0TDBoMldVdDVhWGd6VTBwV0szWnVWVEptVlVnMWFqRXhkRU56Q2twU2VIRldSbWRLYVVwb1FXOHdPV0YyTTJGS0wwdFJZMjlFWW1oVmJrZFRNRlYxVldKQlREWk5Wek5tYjNSM2VpODVhemt4WTFSUVptUlNOMUJ6WkVFS1RFMDRTRmx0U2s1R1pVNTVZVXB6Wm01NWFsSm9lR0V3TXpORVZFOWxhVmRNVlVwemRHNU9abXREVEVwT2RtUnpPVTlLUjI0MFZEVjBVbTFDUVRNelZ3cHViRk5SVml0MFprWjZlRnBCUzI5dmQweDNSWFkwTlVzd1drZFBZWGR4WWxZNWRpdFFjMU13S3pVMGJreGxRa2xTVnpRd2NDODRjM2xDY0doU1pDOTZDbk5LUzNSRWRHcEJSemxxUVVkUmJUUjZhMHRKVmtaNWFucDFUVTlTUXpCT2JYYzJhbUU0TDBWeE1YQTBiSEJUVVZacFFVWmpSbGxMV2tobk9YRlhhRzhLYm1kSGNGTndSVU5uV1VWQk5GQkZiRlZWYVhBeGJEWnRjREp3VERSUmRETmFaekpYU0ZSM1lUWjJZMlZvYjJ4NlREbGthMXBRYWpZdmFXZGFlR3RYYXdwWmREbGlkemxrUlN0clJXWndSVTFVVjBGd1pYUnpjelV2ZDA1NlQxVmpWQ3RGYTA4NVMzRnRkbEpHV1hNNGMycHFaRkpTWjI5ME4xVm5NRmRoVUZwVUNraHRRbVpuWm1ac1p6SnlXVWRqYXpGUlZsRk1iRGRpYm1GVlJIWndUMlkwU0ZKU1dqVkhNamhxU0U5UmRqQmhTall2VHpWeGJHTkRaMWxGUVRjelJ6WUtXRlZEVlRaWFFrUTNPRWxzUlhwbVRWTm9SbEoxTm14QmNUQkpSVTlwUmk4M1pXaHVlVXRxYjJFM1p6TkNkMlZsT0cwdlRFWlpkR2RFVUd0bllVZFZSUXB2VVcxRFZsaDBUbTVtS3lzMmVWTkdVbXhuWlRGRFVsSXJVMjVWVjBwc2MyZG5SVFpWYm5Ca2VHMUxiRWhGYjFWbFlrdHFNM2RrU3pnNFlsWTFlQ3RNQ25sc1praG1kRE5aZFUxVUwzVlVjRVYwYTNVd1RqaElaRlk0TldKM1JrVTVhRU42T0VGcU1FTm5XVVZCZVU0NFVGVkNUSFprTTNReWJucEpVa3RLYjNjS2RWaFhVV2N2VEZWd2RHRmxOemd4TW1reFduaFdTMjU1YlZaMkswTkZlbEZwTW5GcFlUZFRhelpGVjFoc0wzY3JTR1pVUlhRM0szSjJjM0UxTjI5Q1J3cHRVVmhGTUZWQ1JGQmlkSEl4YzB0cmMxWmlWVzk0YzJwMVVsaDFNbFJTS3pkVVZuRnNTV3h0TnpSQ1QwVnNhbGh6WTNJemRucGxZVlo1WldneVZWVTVDa1E1Y2tsdE0wSlVWelpyYm5KWFpUQmhibmgyV2tkclEyZFpSVUY2TkVVd2NUZHVZa1YzUTNNdk1uVXhjVFZxZDJaelVGSnVRbk5MWjNndk55ODVRMjBLVTBOMlpsQlRUVGhCU2xsMFoyWmpWbmhUTkdsNGFrZzFPVWRSTVhSTFRFOTRlWGQ0WldocldWazNUMDQxWTFCS2FDOVBORU00Y2t0RE1qZ3pjV1Y1VkFvdk0zQkhOamxHUmpCVVdVNTBjREYzWW5sTWEwcDBWSGRJUzBWV1NVY3pWRkJJUTJvek5ITnpWa3gyVFdwa05EQlRMMDFDV2tWNWNXOUllV2xSVDBadENuVldVWFYwVmxWRFoxbEJkVEJIT0VOcFpFOXNWa3BHYldGWU1uVXJSVGRPU1ZCT1Z5OUZNWFZ0YlVrdlRYbFdRV1JZVXpkTVREQlRhMnBrZUZSMVFsTUtZWE5sVTJSblV5dE9lVFJuZW1WaVpraERSRlZ0TlV0YWNFeDFOM1JDTVV0ck5GTm5NMUpzUVZoV1NGTjJUR1Z2Um5SRVUwRllTVVp3TUc1YVVVZHhWQXBRZWpaWFVUTjZTRzF3UzJWbU1WYzJhelJ0ZDNSRFpXODRXaXRaU1RBeFZGbDFOVmQzT1U5cFdDdDVOSEJoVDBGVVJGQmxaR2M5UFFvdExTMHRMVVZPUkNCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0KICBrdWJlY29uZmlnOiBZMngxYzNSbGNuTTZDaTBnWTJ4MWMzUmxjam9LSUNBZ0lHTmxjblJwWm1sallYUmxMV0YxZEdodmNtbDBlUzFrWVhSaE9pQk1VekIwVEZNeFExSlZaRXBVYVVKRVVsWktWVk5WV2twUk1FWlZVbE13ZEV4VE1IUkRhekZLVTFWU1JGWkZUa1JSVjFwSVdqQkdNMU5WU2tKYU1HeERVVlZTUWxSclNtNWhNMFp2WVRKc1NFOVlZM2RSYTBaU1l6QmFRbEpGUm5SVVZrcEtaREJXUWxkVlVsZFZWa1pOVWxoa2MyUnRUa2hXYmxWTFdYcEtiMk5HY0hWVldHaEdVa1ZHVUZGdFpFOVdhMHBDVkZaU1EwMHdjREpaYWs1U1pFWnJlVkpZWkVsaFIwNVBWRlpTYm1WRk1VVlNWRlpPVmtVeE5GUnVjRXBOYkdSdldUQTFUbUZ0WkRSVVZWSkdUV2R3VGxaRk1UUlVibkJLVFd4a2NWRlhNVTVWYTJ3elVsVkdXbEpHV2xKVlZYaEdaREo0TWxrd1pGZGtWMDE1WVVoQ1lXSnNSalJTVlZKQ1ZEQktibFJzV2tOUlZURlZVV3BPUzJSdFNYcFZXRkphVFd0V00wTnRaRzVTVjJ4T1VWUkNTRkV4VG5oU01VNUtXV3BPUlZWVlZrTlJWa1pXVVZWRk1GTlZTa1ZrTUVZeldqSmtSbE13Um5aVFZVcENWVlZPTTFKR1RsQmpiSEJXWkVSUmVtTlhUbTFMZWtadlUyeFNTR042VVV0UlV6bEtZMFpaTWt4NlVqSmtSMXBFVDBWVmVscHVVVFZXVjJOMlVXcE9jV1I2UmxaTmFscHZXVlJPTVU1NlpIUmtNR3hTVWtad1RsRXlWakZWYlZaNlZFZDBUR015T1dwaFYwNTJZVU01YkV3eVVreFRVWEJVVVZkMFQwMVZTbXRXU0ZaTlVucHNWVTFXVmxsaFZHaGhaREZPVGxkcVpGVlVSV2hEV1RGS1MxRlZNSGhrZW1SVVkydFZlVlZyU214TE1VSnpZV3RPU0ZOc2NHaGtWVkpEV2xWd1FtUnNhSFZrTVhCWVEyMTRhMUZYUmtoaU1VWmFZakJhTmt4NlJsTlJiRlpVWlVkbk1GRXlOVVZSTVZaWFpGZGFSR1JIVWs5WFdHUm9XVEZHTTFkcVFtMVVTRUpwVm14d2IxVklSbHBVTTNCdFRrZHNWMlJJUm1sTE0yaHlVakZqUzJSclozbFdSMDVLVmpOa1JHTXpTbGxsVld0NlRteEZkMUpwT0RKVmFsa3pUVlpLTlZKWFRsWldSazVOVjBNNE5HRkdSVEZaYlhoU1ZEQjBURTFEY3pOTlJGSjVZbGRvU0U5SVFUQmxWbXhYVVZSb1VGWlJjRXBSZW1SdVUxaEpOVTVyWkRaT2JHeEVWREJLZVUxdFZYcFdWMVo2VFZad1VWSkhXbTFOYW1nMllrVldVRmRZVmtWTk1uZ3dVbnBvVFZNeVkzSmxWRkY0VmpCT1ZHSkVWbWhVVnpsNlRsZHdWRkV4UWtWRGEwWnVWRlZLUWxGVlpIRlZWM0JEVVZVeFFrNUZaRUpOVmxaclVraGtSbEZwT1ROVlZWWkNaREJzUkdORlVrSlZSVXB1Vkd4YVNWVnJNVU5SVjFrMFVsVktWVkZWVWtKVlZXZDJWRlZKZDFJd1JYaFdWMUZMVWtka1VsWXdTa05WYTJ4eVQxZDNNMDFFVW1oWGJGcFFZa1ZTUWxSc1FuTmhSM0J1V214Tk0xVXdXbEZoYTBaUFVXMWtjbU5YYUhKaFZXTTFaSHBDUTFGV1JucFNhMFpDVkRCT1FsVlZWa0pXV0U1NVVsRnZNVXN4V2xaU01WcEtZMWRWTVZWdFpITmhWVlYyVVc1S2JsWjZUbWxsVlRWVlUxVTFZVTlET1ZKV01GSlVXVEJXZW1WVk1YWldhbXR5U3pKYVdHSnJiR3BMZVhSRlRsaENjMDVIT1VWYVZGbzBZbGRrUzBOdVZsRmFlbFpWWTBaU1RGcFdVa1pXVms1YVlraG9lR05IV25SYWEwNUlWa1JHTlZOVVFrdFJXRnBTVlcxM05XTkZiM2xVYms0MFZVaHdiMUpUT1VaUmJtOHpVbFpaZWxZd1JYSlpWR3hDVjBodmVGTkRPRXRQUjJSMlpVUnNRMlZxUlRKV1NHeFNZbGhhVlZVeVNuSlBSVVpLVlRGT2JWVnRkRlJUVjBaRFkzbDBjR1ZVU2xWYVYzZDZWV3Q0TWxWcmQzZE1NalYxWlVaR2VsUkZlRVpoVkdod1YydGFZVmxZVmtOa2QzQlZaRmRhVjJWc2JFMVNWMnhDV2tOemRrMVdVa2hVYlZKR1drWm9jbGRVU21sUFZGb3dZakZHU2tzeFJUSlRSVFZvVFcxak5WUnJUWGRhYlZKSVZteENhV1JHVW5WT1ZUZzBWR3RhY0dFeU1YSldTR1JaUTIxME1XRXdPRFJPYVRsTldWZHJNa3N3VGtSTmJWWkdZVzFrY1dWSVRqSlVSVnB1VmpGWmVWSlViRmxXVmtFelQwWk9UR1I1YzNaU1JURjJaRVpWTkUxSVdUTlBSbkJEVVROc2NWSnVRbFJaTWs1MlRsUmpTMVpHWTNkV00yeERZako0TkZkc1pGUmlibFV6VlVjeGJsQlVNRXRNVXpCMFRGTXhSbFJyVVdkUk1GWlRWa1ZzUjFOVlRrSldSVlYwVEZNd2RFeFJiejBLSUNBZ0lITmxjblpsY2pvZ2FIUjBjSE02THk5emIyMWhiR3hsZVMxaGNHa3VaR1YyWTJ4MWMzUmxjaTV2Y0dWdWMyaHBablF1WTI5dE9qWTBORE1LSUNCdVlXMWxPaUJ6YjIxaGJHeGxlUXBqYjI1MFpYaDBjem9LTFNCamIyNTBaWGgwT2dvZ0lDQWdZMngxYzNSbGNqb2djMjl0WVd4c1pYa0tJQ0FnSUhWelpYSTZJR0ZrYldsdUNpQWdibUZ0WlRvZ1lXUnRhVzRLWTNWeWNtVnVkQzFqYjI1MFpYaDBPaUJoWkcxcGJncHdjbVZtWlhKbGJtTmxjem9nZTMwS2RYTmxjbk02Q2kwZ2JtRnRaVG9nWVdSdGFXNEtJQ0IxYzJWeU9nb2dJQ0FnWTJ4cFpXNTBMV05sY25ScFptbGpZWFJsTFdSaGRHRTZJRXhUTUhSTVV6RkRVbFZrU2xScFFrUlNWa3BWVTFWYVNsRXdSbFZTVXpCMFRGTXdkRU5yTVVwVFZWSlhZV3RPUkZGWGJ6SmFNRVl6VTFWS1Fsb3diRXBTUm5CdVZUQjRSMUpWYXpWVVJWWXpVa1pHV2xOcmRIWlhhMnh2WkcxT1QxRldSa1pVUlVwU1VWaGtTMVpGVmxOVVZVVTBVakJGZUZaVlZVdFJNMmhPVTFac2RFOVlXbXRTTTFGNFYxY3hWbVZGVmtWUlZUbERXakExVjFGclJrNVdSVWw1WkVSR1dtSldWakJYVkVwR1pEQm9iMWt3TlU1V1IyUTBWRlZTUms1Vk1WVlVXR2hQWld0cmVWWXlhR3BVWjNCT1lXMWtORlJWVWtaTmF6RlZWRmhvVDJWcmF6QldNbkJDWkRBeFUxa3paRWRWVm14RlZteEdVbE13VmpOT1dIQnNWMFUwZDFkc1kzZE9iVXBZVW01d2ExSXhXalZaTTNCR1Ztc3hRMVJWWkVKTlZsWkdRMnRHTkZSVk1XcE5NbmcyV2tWa1YyUkZPWFJTYlhScFZqSjRNVlJWYkVwUmEyeHhVVlUxUTFveWRIaGhSM1J3VW5wc00wMUZTa0pWVlZaSFVWVkdVRkV3UmxKUFJVWk9VMVZzUTFFeVpFeFJNRVpTVWxWRlMyUnRZek5PUldNeFRVVldhVmRzVGtKVVIxWkNWMnRXUjJSWFVuTk5NM0JXVFZWT2JXRkZiRTlqVldneVpFaHNjRTV1U2xaa1YwNXFaRmh3YkVzeVpHMWliVnBEVkRGQ2FXVklWbFZaZVRneVRqRk9WbUpuY0ZoVU1XUktXbGhTZEU1R1JteFdiRnBGVFc1WmNsTllVVFJWVmxKNFpXMTRRbUZWUm1oTGVrWkZWRlZGTlUxdWNHOVphM1IyV1RGYVVrNUVUWGhSYTFKR1ZXNUpNRkZVUlhKT2VsSlRWREJrVlZJeWRHOURia3BPVVROb2RsVXpjR3hOUjNoV1lVaFNTV0pzYUZCa01HUm9aVzFhWVZScmFGVmxSazEzVkVWbmNsUnJiekpWVkU1dlQxUlJkMU5XV2t4T1IxcHpWMVV4TTFKc1FqQmFWV1JoV201a1RrNXNiSHBSYkZWTFRWUk9TMHg2UVhaaU1rNUtVekJXYkU0eVJuUmtSMVpVVVd0ek5HTkVaRTFOV0VaRVRVWmtTRXN6YkhCUFJXeEtVbGN4YzFSdGQzaGpNR1JJWWtSRk1GTnJaRU5WVkd4dlpVZGtURTVJUWtaU2JteE5aV2R3UjFOSWNFaGlSazVSVWxaR2JGTnRWakJoUkU1c1dqRndWR1J0TlRKWFNGazFaREExYmxwV2EzWlhXRVp4WVZST2VWcHVWblZsUldSdFZGTTVRMUl5TVc1WmEyaE5VbXBuZW1SRVNqVmFha3BVWWxoVmRrTnFUazVXTUdoYVV6QkdTbFpJVGtWUFYxWTFWMjFXU0ZaSVRUVlRWa1pLVWtWR1VsRlZTblpOZW1neldteFNRbFF3U201VWJGcEpWVlJvUTFGWFdUUlNWVXBDVkZWT1ExbFZSak5UUmtaYVVrWmFVMDFIZDB0UmEwcGFaREJhUWxkVmJFeGtNV3hEVVd4R1ZsTkZSak5TVldSRVVUTk9TRkZXUmxaU2Ewb3pWRlZPVGxGWVpFaFJWRVpXV2tWV00xSlZTWFprTVVaRVZGVkdRbVF3YUZKWFZWSlhWV3BDVUZGclNscFNVWEJIVXpCa1MySlhiRXRhTUhneFZVVkdlV1JIYUV4V1JFcFhaRWRXUkZwcE9XbGhiVEZEVkZWSk5GSXdSWGhXVjFKS1pERkdXbFJWU21oUlZWcEdZVlpSZVZkSVdsVmhTRUp6VmxSYVZsUlZSWGRMTVdSSVEyczVRMDlWZURCVFZsVnlWRlZGZDFJd1RsUmpWV1JVVTFkSmVsSkdSa1pSYTA0elZsVkdRazVGYkVOUlZrWkRUbFpzZVdWV1JqUmtTRTVKV1ROV2NWcFhUbGhSTTBaSlVXNU9URTFGYkRGVFJHaFNWMFpCUzFsWFVteFZWVVZ5WVcxMFZsTlhaSEpUYlhodFdYcEdhazlJYkZwTlJUQXdXbFpyY2xaclRuVmFWRXB6VGpKemNsbHVjRkpaTUd0MlZqSkpkMWt6U25KVVZFMTNaRmhTVjFwclRqRlNhMXBWVWxoa1ZFOVJjRFZqTVU0eFpHcEdTbUpHU2paVU1GSXlUVE5PZDBzeVRsWk5hMmhNWTBaT1FsSkliR3BOYlRGb1pETkNRbVZ0T1haT2EzTXlUbGN4TW1SclpGcGhWVlpoVFVWd1RtTkdiRVpXVjNReFlVUnNSVTB5YkZKRGFsWmFXakZPYTFwWGVISmFWVlV3VGtSc1NFNHdhRU5VU0dnMllVWndWRmRyVm5aUFJVMDBUMWhXY1ZSNldrdFVXR3hZWVROTmVrNTZhRlppYWxad1QwWkNlVlZ0TlhsaWJFWjZZek5rU2xFeFdURk1lbWRMVGxjME5WbDZWa0pVUlRWNlpHczVjR050ZEUxV1Z6bHZVMFpTYjJWVWJFMU9Vemd5UzNwa1VGTXhTbXhVYkUweVpVZGFRMlZXYUhsTE1uQnVXakF4ZFdJemJITmhiRVpEWTBjMVUxZFVaSGhYUlVvMFlVRnZORlJHVmxWa1ZVWktXa1ZzVldGRVNrcFJiV3h2VmpKcmVsSkdXVEZWYWxrd1UwWktjbFZHWjNwT1JrWkhXbnBvTUZWc1ZuUlJWVXB5WVd4R2VtUnJSWGhoTWpRMVRURkZNRlYzYjNSTVV6QjBURlZXVDFKRFFrUlNWa3BWVTFWYVNsRXdSbFZTVXpCMFRGTXdkRU5uUFQwS0lDQWdJR05zYVdWdWRDMXJaWGt0WkdGMFlUb2dURk13ZEV4VE1VTlNWV1JLVkdsQ1UxVXdSV2RWUmtwS1ZtdEdWVkpUUWt4U1ZtdDBURk13ZEV4UmNFNVRWV3hHWTBaR1NsRnJSa0pUTUU1Q1ZWVldRbVJ0WXpOT1JXTXhUVVZXYVZkc1RrSlVSMVpDVjJ0V1IyUlhVbk5OTTNCV1RWVk9iV0ZGYkU5alZXZ3laRWhzY0U1dVNsWmtWMDVxWkZod2JFc3laRzFEYlRWdFVXczVVVmx1YURGV1IwMTJUbXBrVkZaWE5WaFVNV1JLV2xoU2RFNUdSbXhXYkZwRlRXNVpjbE5ZVVRSVlZsSjRaVzE0UW1GVlJtaExla1pGVkZWRk5VMXVjRzlaYTNSMldURmFVazVFVFhoUmExRkxVbFpLZVU1RlJYaExlbU13VldzNVNGWkZaSEpoU0VwT1VUTm9kbFV6Y0d4TlIzaFdZVWhTU1dKc2FGQmtNR1JvWlcxYVlWUnJhRlZsUmsxM1ZFVm5jbFJyYnpKVlZFNXZUMVJSZDFOV1dreE9SMXB6VjFGd1RtUXdXbEZrUjFaSVYyMWFNMVJVV2xwak1FcFdUVlJPUzB4NlFYWmlNazVLVXpCV2JFNHlSblJrUjFaVVVXdHpOR05FWkUxTldFWkVUVVprU0VzemJIQlBSV3hLVWxjeGMxUnRkM2hqTUdSSVlrUkZNRU5yY0VoUmJFVTFZVWhvYmxONlVuZFNWVm8xVkVod1IxTkljRWhpUms1UlVsWkdiRk50VmpCaFJFNXNXakZ3VkdSdE5USlhTRmsxWkRBMWJscFdhM1pYV0VaeFlWUk9lVnB1Vm5WbFJXUnRWRk01UTFJeU1FdGFNa3BKVkVWWk5FMHpVWGxsVjFsNVZUSXhNVXg2VGs1V01HaGFVekJHU2xaSVRrVlBWMVkxVjIxV1NGWklUVFZUVmtaS1VrVkdVbEZWU2tKaU1HeERVVlpHUkZOWGFFMVRWMUpFVGxSR1lXTkdRbkJqUVhCc1pXeHNjMlJGTlhKa2EzaDBVVEozZGt3elVrMVRWa1Y1WkZoa1JscEdielZoTW5CelZVaEJjbVJyWkc5T1ZsRjNWMVZHTlZGWGJ6TmtSWGN6VG0xS1UyVnVXazFVYTBvMllXNVdhRTVGZURaTlZYQmhRMnRzU2xkck1UTlJhemsyWW1wYWEyRnFaSFZUUmxKS1dUSlNZVTVFVVRSVFJURTJaVmRvU21WRlZqVk1NM0JHV2tka1YxVXphM1pPTWprMFpIcEdiRlJzYUZkamJsRjJaR2s1V21SV1RsZFhXR3h1VlVWelMwNUhlRnBSTTA1WlZtMTBSR0Y2VlROTE1HdHlUa1ZTZDFOcWJHcE9SazE0WkZWM2NsUlhTWGxXYlhCclZWZGtOazU2UW5OT01WWkZXVEp3TUZwRVJreFhSRnB5WTBob2VHTlVTVEpOVld4Q1VXdGpjazlCY0dGaWEzaDFXbGRHUkdWRE9VbFZTSEJDWTBSb1lWSklhREJPZWxvd1UycENjVk5WV25WVU1IUlJUSHBTUTFveU1YQlJiRTVUWld4d1NVMXRUVEZqVkZKRlYxVlJORTFzV20xU1ZrbDRVMGRuZDFaWFVraERhVGswWkZaYVNGbHNiSFpSV0VGNVdqSjNOVlpyYkhabGJtc3dXbTVPZEZRelNraGpNM0J6Vm0xamRsUnFaRWRoTUZKWVpVaFdObFZGZEZsa2FrWmFWREZDVUdWRVNrUkxlazVZWWxST05tVlViR3hPUldkTFpIcG9lR0ZzV2pCT2FteENZakJrUTFGVk5YaGpSbWgwVG01S1dsWnRXbEpXV0VacVkwZEthVkpZY0VaU1JGa3lVMU01TUZWSWJFZE9SMVpNVGxWV1RHRkVhRzFpTUhCdFpXMWFWV0ZHYXpSYVJHeDBWR2R3U0Zrd1drSmpNV3hVVDFoV1ExTlliM2xXTURFeVpVVnJOVkpxV1haT01HUk1ZVWhzTUUwd1NsVlVXRnBXV2tWM01scFVUWGhVVmtsNFZHdE9WMkZFUWtkYVZrcEZVakExVEZZeU1UTlZNbHBJWlZSV1JrTnVaRWhoYldSdVZteFdTRmt6V25WTlIxSnpWa1ZXVDJOSVdqTlRha3B6VGpCc1dtVklWbmRTYTFKMlVWVmtkMlJXWnpWVE1WcExZVVUwZG1WdWFFdGFNamxhVFc1T2IwOUZUbmxSVnpsSVVXdEdUMDVyVVV0VlJWcDBUVlY0V0dSNlVtcGphMXA2VFd4U1MwMVZkSFJoVjNod1VqRm5kazlYVmxkaFZ6bFhVMnhzYzFkWVNtRlJlWFJIVkdwR01sTkZPVXBpUjBwWFlrUkNXVTFwYzNKU1NIQjJVMjF3VjFkc2NEWlVaM0JIWkZkemVXTnRNSGhUTTBKRlVUQTVTMVJ1WkRSVlZtUmFVVE5DZUdSV1pIUlJWVGxWVDBSQ1ZHVlhUbkZWU0VwclZtczFUbEpVYkV4T2JrNWFUMVpWTWsxdWEzSmFWelZ4VGpCamVsUlZiRVpXUmxacFEyNXdVVmxyT1RSUFJsWk9VVEJzYjJWSVRuVmlWa0p6VmxVMWVGUnNVazFhYVRsd1VUQldiazVWZUVaamEyUnBWRmQwVlZKdGNFSmlNR1JDVlVod2RWWXdUbk5PUm1nMVYydHZOVlJVYUZSa2VscFRZakJGUzJWWE9VdFBSa1pTVVROc05WWkdSbkpTTURBeFYxaE9TMDlHY0RaVU1IUjZUbXBXVmxaWFZuZE5WemxLWkhwb1dXVkdhRUprVlRSNVZsaHNlRk5yV1RGWFJ6a3paV3hTTW1KdVozaE5WbFpZVjBWS1YxVkJjR2xaYm1ReVkxZG9WVk5xVGs5V1ZtaDVWRVZuZDFZeU9YZGhNRFZUVVd0U1UyTnNVbFJPUmxKQ1ZsVk9lVTlXUVRGaE0xbDRVbTVaZUdSVWFHdGFhMDV3WTBkc1NsbHJPVWhoYmswelRXeE9XRmxZUm1sRGFsWkVZMVZPU1dOSVdqQk9WWEIwVVRGR1RGb3lUbFZqVlZKd1kwTTRkMUV5WkZwU1ZVWjBUMVJTZUZkcldqVk9WRXBQWVRKbmVtSjZhM2hSYldoclRWVkdhRkpXVWtWa01FcHZUbXBrUjFWSFZrVlVhbXRMV1cxR2RXRjZUa3BqUTNSVVpVaGtNV0ZYVFhoVWExSnlVakZyTVUxWFVrTk9WVlY0VFROb1NsUldXalpYUXpoM1YycGtUR0pITVZSTmFsWlJVbXhaZDJGdGVGVlNhMVZ5VmpCYU5tUklXbEpsVmtaNFUwRndXVlpFYkZGU1JXTXhUbXh3UjA5VmVFUmhhMHBzVlRKV2VGWlZPVVZVVlRsYVRXdG5kbFY2YUhCVmJrRjNVMGhHVTJKWE5VMWFNR1J4VWxoT1RtTldhSHBUVm1RMFlVZDRXVk5xU25OV2FsWkxWbXQwU1VOdVpHeGpNRTR4WVZkMFJGb3hiRVpSV0ZwRFdtdDRkbGx1VWxWT01HUlhXakl4V1dFd1VsVk9hMmhRV2xWd1JHTnRWbGhUYmxKclVrZFpOV1ZFUmpaa1ZGb3pXWHBPU1ZaR1JrcFdNbmcxVGtWNFdGVjZSVXRTVlhCSllUTndjRlp1UWt4T01IaE1aV3BLTW1OcVRrZGpNMG8xVkdzeE5WVkVTbTVpYWtWeVZHeEdlV013VWxCV2JUVjJUa1ZvU2xWSGJ6RlRNRTVTV2pOa1Yxb3ljRVpTTW5SUllVWk9hRk5yY0RaUlVXOTNaR3BvVFZadFNrOVZWRnBvVkVjNGVGTnRWazFhYkZvelQwWkdRMlZYVlhkU1JsWkhZak5GTVdGcWJHNUxNSFJJVWtoQ1dGZEVRbFpOUldSRFYycENVR0pFYUhkV2JWbDNVRkZ2ZEV4VE1IUk1WVlpQVWtOQ1UxVXdSV2RWUmtwS1ZtdEdWVkpUUWt4U1ZtdDBURk13ZEV4UmJ6MEsK"
            },
            {
                "Filename": "manifests/openshift-service-signer-secret.yaml",
                "Data": "CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiBzZXJ2aWNlLXNlcnZpbmctY2VydC1zaWduZXItc2lnbmluZy1rZXkKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1zZXJ2aWNlLWNlcnQtc2lnbmVyCnR5cGU6IGt1YmVybmV0ZXMuaW8vdGxzCmRhdGE6CiAgdGxzLmNydDogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUlBSRU5EUVdsRFowRjNTVUpCWjBsSlZuSlNTbmhIZWsxbE5YZDNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRLYWtWVFRVSkJSMEV4VlVVS1EzaE5TbUl6UW14aWJrNXZZVmRhTUUxU1FYZEVaMWxFVmxGUlJFVjNaSGxpTWprd1RGZE9hRTFDTkZoRVZFVTBUVlJCZUU5VVJYcE5WR041VG14dldBcEVWRWswVFZSQmVFNXFSWHBOVkdONVRqRnZkMHhVUlZKTlFUaEhRVEZWUlVONFRVbFpiVGwyWkVkME1WbHRWWGhIUkVGWFFtZE9Wa0pCVFZSRU0wNXNDbU51V25CWk1sVjBZekpXZVdSdGJIVmFla05EUVZOSmQwUlJXVXBMYjFwSmFIWmpUa0ZSUlVKQ1VVRkVaMmRGVUVGRVEwTkJVVzlEWjJkRlFrRk9TbXdLUlVGdFFreHRSVFoyZUVNM1ptTjFMM1Z5VUVSNlZXWlNPRXgzTWtvelNWZHpNa2RGV1dveFNteERaeko1V2xjMFVXcDBjRXQwTVVWMlVrcG1VRzlPUkFvMll6ZGhjV1JPYm00ck0wTkNXV3Q0YTI5WVJuVjJaa1pHUWpsT2NqTXliSEUxY1daUFdsVXhhbkJ4TldOSGVYZEdRa3g2TDFCVVpTdGlhRGcwTDNaNENuQnhiR0l5WVM5WVMyZzRZVFpqVHpGSkx5dFhSekF2VG5aMWNsUllabWxMYm1SckwySlVjWEZ5TlRWUFFtcE9hV1pwUVhCb05VNXlVSEpMTkU5WFRGTUtRbkI0YlZKVU4wSnNiRzV5WW5wTVRYZExXRkpYUkVkWk1EQjFORE50ZVRsSlNVSndOM1pQYmxaRVdUVXlkVmRKVjNKSFdEVXlSRmszYkdWWlRFcHdPUW94YUVSdWQyOW9WM1IxYUZGTk0ya3ZTWGN4WTNrMFdYbExVVmx6VlhoR2RqTjBVM0IwVm1GU1NEaDNiMHBXY3pobVVtSmhjRTlETDI0ME4yTmhNSGM0Q25CdVN6aEVWbVJMWjJWUldrSjVaekpTVEhORFFYZEZRVUZoVG1wTlIwVjNSR2RaUkZaU01GQkJVVWd2UWtGUlJFRm5TMnROUVRoSFFURlZaRVYzUlVJS0wzZFJSazFCVFVKQlpqaDNTRkZaUkZaU01FOUNRbGxGUmtWcFZESllkbFJvY0d4Vk5sVk5RVEFyVjBkUFFqbE1kRWxWSzAxQ09FZEJNVlZrU1hkUldRcE5RbUZCUmtWcFZESllkbFJvY0d4Vk5sVk5RVEFyVjBkUFFqbE1kRWxWSzAxQk1FZERVM0ZIVTBsaU0wUlJSVUpEZDFWQlFUUkpRa0ZSUW5KdE0yTk9Da3AzYTBkTk0zWjFTVWRTU21wRVRVVlhka1ZuVWxjM2N6TlhWMjV1WkZZMFIwWmFPSFIyWTNvNU5rMU1jSE42TkZFMFdYVjZhMU5ZS3pWNE5rdHJjV3dLYURZd1RYb3pibWxwYjNOak4yeGtja3RwVUZaTllsaFlVMDFLYVZsVVFteExRMDlrTVRCdFpFaFJVRUptTUZoUllqY3JhR3N3U2tkWVVsVXpSbmRpVWdwMlZXcG9WbTlDZW1oRkwzTndWa1J6VFd0RlVuVlZZMmg0ZG5kMWMxSmpUbGRuY1VaVlEzZ3hSazR6T0dGVVpHcDZUazlSVFRKa1oydGtiRWRrYUdwWENuTXdXV2xYYTBKdU9UZFNlRGhoWkRGWU1uaHpiM0pvYUVjdmJrVnVjbEpRYm5SbmEyVkRjamhyY0djeVpURXJLMjhyYjFWRlFYSldPSEp4ZEdOcWVDOEthblJ4TXpONUsxcDNiVmNyTUhsSVdtRjJaMk55ZGt4d1ZrTkVkVEZoYTNWSVIyVnlNV0V5U1RkeFkwRlFOV0Y2UjJsSFVVNXBURFJYUW0xTGVHazJZd3BKTXpOelFUUm9TSEoxVUV0MFZYcHlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICB0bHMua2V5OiBMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFwTlNVbEZjRUZKUWtGQlMwTkJVVVZCTUcxVlVVTlpSWFZaVkhFdlJVeDBPWGszS3paek9GQk9VamxJZDNaRVdXNWphR0Y2V1ZsU2FWQlZiVlZMUkdKS0NteGlhRU5QTW10eE0xVlRPVVZzT0N0bk1GQndlblJ4Y0RBeVpXWTNZMGxHYVZSSFUyaGpWelk1T0ZWVlNEQXlkbVpoVjNKdGNEZzFiRlJYVDIxeWJIY0tZa3hCVlVWMlVEZzVUamMxZFVoNmFpc3ZSMjF4Vm5aYWNqbGpjVWg0Y25CM04xVnFMelZaWWxRNE1pczJkRTVrSzBseFpESlVPWFJQY1hGMmJtczBSd3BOTWtvclNVTnRTR3N5Y3l0emNtYzFXWFJKUjI1SFdrWlFjMGRYVjJWMGRrMXpla0Z3WkVaWlRWcHFWRk0zYW1WaVREQm5aMGR1ZFRnMlpGVk9hbTVoQ2pWWmFHRnpXbVp1V1U1cWRWWTFaM050YmpOWFJVOW1RMmxHWVRJMlJrRjZaVXc0YWtSV2VreG9ha2x3UW1sNFZFVlhMMlV4UzIweFZuQkZabnBEWjJ3S1YzcDRPVVowY1dzMFRDdG1hblI0Y2xSRWVXMWpjbmRPVmpCeFFqVkNhMGhMUkZwRmRYZEpSRUZSUVVKQmIwbENRVWhDVVRreFF6ZHVOMFJWUm1FcmRncENObUV2WjJOSU5XOTRjbGRJYm1VM1UxTXJSVzkwY0V0UE9DdFFLMmRJUm5waVQxcHRMMGgyV1V0NWFYZ3pVMHBXSzNadVZUSm1WVWcxYWpFeGRFTnpDa3BTZUhGV1JtZEthVXBvUVc4d09XRjJNMkZLTDB0UlkyOUVZbWhWYmtkVE1GVjFWV0pCVERaTlZ6Tm1iM1IzZWk4NWF6a3hZMVJRWm1SU04xQnpaRUVLVEUwNFNGbHRTazVHWlU1NVlVcHpabTU1YWxKb2VHRXdNek5FVkU5bGFWZE1WVXB6ZEc1T1ptdERURXBPZG1Sek9VOUtSMjQwVkRWMFVtMUNRVE16VndwdWJGTlJWaXQwWmtaNmVGcEJTMjl2ZDB4M1JYWTBOVXN3V2tkUFlYZHhZbFk1ZGl0UWMxTXdLelUwYmt4bFFrbFNWelF3Y0M4NGMzbENjR2hTWkM5NkNuTktTM1JFZEdwQlJ6bHFRVWRSYlRSNmEwdEpWa1o1YW5wMVRVOVNRekJPYlhjMmFtRTRMMFZ4TVhBMGJIQlRVVlpwUVVaalJsbExXa2huT1hGWGFHOEtibWRIY0ZOd1JVTm5XVVZCTkZCRmJGVlZhWEF4YkRadGNESndURFJSZEROYVp6SlhTRlIzWVRaMlkyVm9iMng2VERsa2ExcFFhall2YVdkYWVHdFhhd3BaZERsaWR6bGtSU3RyUldad1JVMVVWMEZ3WlhSemN6VXZkMDU2VDFWalZDdEZhMDg1UzNGdGRsSkdXWE00YzJwcVpGSlNaMjkwTjFWbk1GZGhVRnBVQ2todFFtWm5abVpzWnpKeVdVZGphekZSVmxGTWJEZGlibUZWUkhad1QyWTBTRkpTV2pWSE1qaHFTRTlSZGpCaFNqWXZUelZ4YkdORFoxbEZRVGN6UnpZS1dGVkRWVFpYUWtRM09FbHNSWHBtVFZOb1JsSjFObXhCY1RCSlJVOXBSaTgzWldodWVVdHFiMkUzWnpOQ2QyVmxPRzB2VEVaWmRHZEVVR3RuWVVkVlJRcHZVVzFEVmxoMFRtNW1LeXMyZVZOR1VteG5aVEZEVWxJclUyNVZWMHBzYzJkblJUWlZibkJrZUcxTGJFaEZiMVZsWWt0cU0zZGtTemc0WWxZMWVDdE1DbmxzWmtobWRETlpkVTFVTDNWVWNFVjBhM1V3VGpoSVpGWTROV0ozUmtVNWFFTjZPRUZxTUVObldVVkJlVTQ0VUZWQ1RIWmtNM1F5Ym5wSlVrdEtiM2NLZFZoWFVXY3ZURlZ3ZEdGbE56Z3hNbWt4V25oV1MyNTViVloySzBORmVsRnBNbkZwWVRkVGF6WkZWMWhzTDNjclNHWlVSWFEzSzNKMmMzRTFOMjlDUndwdFVWaEZNRlZDUkZCaWRISXhjMHRyYzFaaVZXOTRjMnAxVWxoMU1sUlNLemRVVm5Gc1NXeHROelJDVDBWc2FsaHpZM0l6ZG5wbFlWWjVaV2d5VlZVNUNrUTVja2x0TTBKVVZ6WnJibkpYWlRCaGJuaDJXa2RyUTJkWlJVRjZORVV3Y1RkdVlrVjNRM012TW5VeGNUVnFkMlp6VUZKdVFuTkxaM2d2Tnk4NVEyMEtVME4yWmxCVFRUaEJTbGwwWjJaalZuaFROR2w0YWtnMU9VZFJNWFJMVEU5NGVYZDRaV2hyV1ZrM1QwNDFZMUJLYUM5UE5FTTRja3RETWpnemNXVjVWQW92TTNCSE5qbEdSakJVV1U1MGNERjNZbmxNYTBwMFZIZElTMFZXU1VjelZGQklRMm96TkhOelZreDJUV3BrTkRCVEwwMUNXa1Y1Y1c5SWVXbFJUMFp0Q25WV1VYVjBWbFZEWjFsQmRUQkhPRU5wWkU5c1ZrcEdiV0ZZTW5VclJUZE9TVkJPVnk5Rk1YVnRiVWt2VFhsV1FXUllVemRNVERCVGEycGtlRlIxUWxNS1lYTmxVMlJuVXl0T2VUUm5lbVZpWmtoRFJGVnROVXRhY0V4MU4zUkNNVXRyTkZObk0xSnNRVmhXU0ZOMlRHVnZSblJFVTBGWVNVWndNRzVhVVVkeFZBcFFlalpYVVRONlNHMXdTMlZtTVZjMmF6UnRkM1JEWlc4NFdpdFpTVEF4VkZsMU5WZDNPVTlwV0N0NU5IQmhUMEZVUkZCbFpHYzlQUW90TFMwdExVVk9SQ0JTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFvPQo="
            },
            {
                "Filename": "manifests/tectonic-network-operator.yaml",
                "Data": "Ci0tLQphcGlWZXJzaW9uOiBhcHBzL3YxYmV0YTIKa2luZDogRGFlbW9uU2V0Cm1ldGFkYXRhOgogIG5hbWU6IHRlY3RvbmljLW5ldHdvcmstb3BlcmF0b3IKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCiAgbGFiZWxzOgogICAgazhzLWFwcDogdGVjdG9uaWMtbmV0d29yay1vcGVyYXRvcgogICAgbWFuYWdlZC1ieS1jaGFubmVsLW9wZXJhdG9yOiAidHJ1ZSIKc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBrOHMtYXBwOiB0ZWN0b25pYy1uZXR3b3JrLW9wZXJhdG9yCiAgdXBkYXRlU3RyYXRlZ3k6CiAgICByb2xsaW5nVXBkYXRlOgogICAgICBtYXhVbmF2YWlsYWJsZTogMQogICAgdHlwZTogUm9sbGluZ1VwZGF0ZQogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBrOHMtYXBwOiB0ZWN0b25pYy1uZXR3b3JrLW9wZXJhdG9yCiAgICAgICAgdGVjdG9uaWMtYXBwLXZlcnNpb24tbmFtZTogdGVjdG9uaWMtbmV0d29yawogICAgc3BlYzoKICAgICAgY29udGFpbmVyczoKICAgICAgICAtIG5hbWU6IHRlY3RvbmljLW5ldHdvcmstb3BlcmF0b3IKICAgICAgICAgIGltYWdlOiBxdWF5LmlvL2NvcmVvcy90ZWN0b25pYy1uZXR3b3JrLW9wZXJhdG9yLWRldjozNzU0MjNhMzMyZjJjMTJiNzk0MzhmYzZhNmRhNmU0NDhlMjhlYzBmCiAgICAgICAgICByZXNvdXJjZXM6CiAgICAgICAgICAgIGxpbWl0czoKICAgICAgICAgICAgICBjcHU6IDIwbQogICAgICAgICAgICAgIG1lbW9yeTogNTBNaQogICAgICAgICAgICByZXF1ZXN0czoKICAgICAgICAgICAgICBjcHU6IDIwbQogICAgICAgICAgICAgIG1lbW9yeTogNTBNaQogICAgICAgICAgdm9sdW1lTW91bnRzOgogICAgICAgICAgICAtIG5hbWU6IGNsdXN0ZXItY29uZmlnCiAgICAgICAgICAgICAgbW91bnRQYXRoOiAvZXRjL2NsdXN0ZXItY29uZmlnCiAgICAgIGhvc3ROZXR3b3JrOiB0cnVlCiAgICAgIHJlc3RhcnRQb2xpY3k6IEFsd2F5cwogICAgICBpbWFnZVB1bGxTZWNyZXRzOgogICAgICAgIC0gbmFtZTogY29yZW9zLXB1bGwtc2VjcmV0CiAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICBydW5Bc05vblJvb3Q6IHRydWUKICAgICAgICBydW5Bc1VzZXI6IDY1NTM0CiAgICAgIHZvbHVtZXM6CiAgICAgICAgLSBuYW1lOiBjbHVzdGVyLWNvbmZpZwogICAgICAgICAgY29uZmlnTWFwOgogICAgICAgICAgICBuYW1lOiBjbHVzdGVyLWNvbmZpZy12MQogICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAtIGtleTogbmV0d29yay1jb25maWcKICAgICAgICAgICAgICAgIHBhdGg6IG5ldHdvcmstY29uZmlnCiAgICAgIG5vZGVTZWxlY3RvcjoKICAgICAgICBub2RlLXJvbGUua3ViZXJuZXRlcy5pby9tYXN0ZXI6ICIiCiAgICAgIHRvbGVyYXRpb25zOgogICAgICAgIC0ga2V5OiAibm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyIgogICAgICAgICAgb3BlcmF0b3I6ICJFeGlzdHMiCiAgICAgICAgICBlZmZlY3Q6ICJOb1NjaGVkdWxlIgogICAgdXBkYXRlU3RyYXRlZ3k6CiAgICAgIHJvbGxpbmdVcGRhdGU6CiAgICAgICAgbWF4VW5hdmFpbGFibGU6IDEKICAgICAgdHlwZTogUm9sbGluZ1VwZGF0ZQo="
            },
            {
                "Filename": "manifests/etcd-service-endpoints.yaml",
                "Data": "CmFwaVZlcnNpb246IHYxCmtpbmQ6IEVuZHBvaW50cwptZXRhZGF0YToKICBuYW1lOiBldGNkCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogIGFubm90YXRpb25zOgogICAgYWxwaGEuaW5zdGFsbGVyLm9wZW5zaGlmdC5pby9kbnMtc3VmZml4OiBkZXZjbHVzdGVyLm9wZW5zaGlmdC5jb20Kc3Vic2V0czoKLSBhZGRyZXNzZXM6CiAgLSBpcDogMTkyLjAuMi4xCiAgICBob3N0bmFtZTogc29tYWxsZXktZXRjZC0wCiAgLSBpcDogMTkyLjAuMi4yCiAgICBob3N0bmFtZTogc29tYWxsZXktZXRjZC0xCiAgLSBpcDogMTkyLjAuMi4zCiAgICBob3N0bmFtZTogc29tYWxsZXktZXRjZC0yCiAgcG9ydHM6CiAgLSBuYW1lOiBldGNkCiAgICBwb3J0OiAyMzc5CiAgICBwcm90b2NvbDogVENQCg=="
            },
            {
                "Filename": "manifests/01-tectonic-namespace.yaml",
                "Data": "Ci0tLQphcGlWZXJzaW9uOiB2MQpraW5kOiBOYW1lc3BhY2UKbWV0YWRhdGE6CiAgbmFtZTogdGVjdG9uaWMtc3lzdGVtICAjIENyZWF0ZSB0aGUgbmFtZXNwYWNlIGZpcnN0LgogIGxhYmVsczogICMgbmV0d29yayBwb2xpY3kgY2FuIG9ubHkgc2VsZWN0IGJ5IGxhYmVscwogICAgbmFtZTogdGVjdG9uaWMtc3lzdGVtCiAgICBvcGVuc2hpZnQuaW8vcnVuLWxldmVsOiAiMSIK"
            },
            {
                "Filename": "manifests/04-openshift-machine-config-operator.yaml",
                "Data": "CmFwaVZlcnNpb246IHYxCmtpbmQ6IE5hbWVzcGFjZQptZXRhZGF0YToKICBuYW1lOiBvcGVuc2hpZnQtbWFjaGluZS1jb25maWctb3BlcmF0b3IKICBsYWJlbHM6CiAgICBuYW1lOiBvcGVuc2hpZnQtbWFjaGluZS1jb25maWctb3BlcmF0b3IKICAgIG9wZW5zaGlmdC5pby9ydW4tbGV2ZWw6ICIxIgo="
            },
            {
                "Filename": "manifests/ign-config.yaml",
                "Data": "CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiBpZ25pdGlvbi13b3JrZXIKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQp0eXBlOiBPcGFxdWUKZGF0YToKICB1c2VyRGF0YTogZXlKcFoyNXBkR2x2YmlJNmV5SmpiMjVtYVdjaU9uc2lZWEJ3Wlc1a0lqcGJleUp6YjNWeVkyVWlPaUpvZEhSd2N6b3ZMM052YldGc2JHVjVMV0Z3YVM1a1pYWmpiSFZ6ZEdWeUxtOXdaVzV6YUdsbWRDNWpiMjA2TkRrMU1EQXZZMjl1Wm1sbkwzZHZjbXRsY2lJc0luWmxjbWxtYVdOaGRHbHZiaUk2ZTMxOVhYMHNJbk5sWTNWeWFYUjVJanA3SW5Sc2N5STZleUpqWlhKMGFXWnBZMkYwWlVGMWRHaHZjbWwwYVdWeklqcGJleUp6YjNWeVkyVWlPaUprWVhSaE9uUmxlSFF2Y0d4aGFXNDdZMmhoY25ObGREMTFkR1l0T0R0aVlYTmxOalFzVEZNd2RFeFRNVU5TVldSS1ZHbENSRkpXU2xWVFZWcEtVVEJHVlZKVE1IUk1VekIwUTJzeFNsTlZVa1JXUlU1RVVWZGFTRm93UmpOVFZVcENXakJzUTFGVlVrSlVhMHB1WVROR2IyRXliRWhQV0dOM1VXdEdVbU13V2tKU1JVWjBWRlpLU21Rd1ZrSlhWVkpYVlZaR1RWSllaSE5rYlU1SVZtNVZTMWw2U205alJuQjFWVmhvUmxKRlJsQlJiV1JQVm10S1FsUldVa05OTUhBeVdXcE9VbVJHYTNsU1dHUkpZVWRPVDFSV1VtNWxSVEZGVWxSV1RsWkZNVFJVYm5CS1RXeGtiMWt3TlU1aGJXUTBWRlZTUmsxbmNFNVdSVEUwVkc1d1NrMXNaSEZSVnpGT1ZXdHNNMUpWUmxwU1JscFNWVlY0Um1ReWVESlpNR1JYWkZkTmVXRklRbUZpYkVZMFVsVlNRbFF3U201VWJGcERVVlV4VlZGcVRrdGtiVWw2VlZoU1drMXJWak5EYldSdVVsZHNUbEZVUWtoUk1VNTRVakZPU2xscVRrVlZWVlpEVVZaR1ZsRlZSVEJUVlVwRlpEQkdNMW95WkVaVE1FWjJVMVZLUWxWVlRqTlNSazVRWTJ4d1ZtUkVVWHBqVjA1dFMzcEdiMU5zVWtoamVsRkxVVk01U21OR1dUSk1lbEl5WkVkYVJFOUZWWHBhYmxFMVZsZGpkbEZxVG5Ga2VrWldUV3BhYjFsVVRqRk9lbVIwWkRCc1VsSkdjRTVSTWxZeFZXMVdlbFJIZEV4ak1qbHFZVmRPZG1GRE9XeE1NbEpNVTFGd1ZGRlhkRTlOVlVwclZraFdUVko2YkZWTlZsWlpZVlJvWVdReFRrNVhhbVJWVkVWb1Exa3hTa3RSVlRCNFpIcGtWR05yVlhsVmEwcHNTekZDYzJGclRraFRiSEJvWkZWU1ExcFZjRUprYkdoMVpERndXRU50ZUd0UlYwWklZakZHV21Jd1dqWk1la1pUVVd4V1ZHVkhaekJSTWpWRlVURldWMlJYV2tSa1IxSlBWMWhrYUZreFJqTlhha0p0VkVoQ2FWWnNjRzlWU0VaYVZETndiVTVIYkZka1NFWnBTek5vY2xJeFkwdGthMmQ1VmtkT1NsWXpaRVJqTTBwWlpWVnJlazVzUlhkU2FUZ3lWV3BaTTAxV1NqVlNWMDVXVmtaT1RWZERPRFJoUmtVeFdXMTRVbFF3ZEV4TlEzTXpUVVJTZVdKWGFFaFBTRUV3WlZac1YxRlVhRkJXVVhCS1VYcGtibE5ZU1RWT2EyUTJUbXhzUkZRd1NubE5iVlY2VmxkV2VrMVdjRkZTUjFwdFRXcG9ObUpGVmxCWFdGWkZUVEo0TUZKNmFFMVRNbU55WlZSUmVGWXdUbFJpUkZab1ZGYzVlazVYY0ZSUk1VSkZRMnRHYmxSVlNrSlJWV1J4VlZkd1ExRlZNVUpPUldSQ1RWWldhMUpJWkVaUmFUa3pWVlZXUW1Rd2JFUmpSVkpDVlVWS2JsUnNXa2xWYXpGRFVWZFpORkpWU2xWUlZWSkNWVlZuZGxSVlNYZFNNRVY0VmxkUlMxSkhaRkpXTUVwRFZXdHNjazlYZHpOTlJGSm9WMnhhVUdKRlVrSlViRUp6WVVkd2JscHNUVE5WTUZwUllXdEdUMUZ0WkhKalYyaHlZVlZqTldSNlFrTlJWa1o2VW10R1FsUXdUa0pWVlZaQ1ZsaE9lVkpSYnpGTE1WcFdVakZhU21OWFZURlZiV1J6WVZWVmRsRnVTbTVXZWs1cFpWVTFWVk5WTldGUFF6bFNWakJTVkZrd1ZucGxWVEYyVm1wcmNrc3lXbGhpYTJ4cVMzbDBSVTVZUW5OT1J6bEZXbFJhTkdKWFpFdERibFpSV25wV1ZXTkdVa3hhVmxKR1ZsWk9XbUpJYUhoalIxcDBXbXRPU0ZaRVJqVlRWRUpMVVZoYVVsVnRkelZqUlc5NVZHNU9ORlZJY0c5U1V6bEdVVzV2TTFKV1dYcFdNRVZ5V1ZSc1FsZEliM2hUUXpoTFQwZGtkbVZFYkVObGFrVXlWa2hzVW1KWVdsVlZNa3B5VDBWR1NsVXhUbTFWYlhSVVUxZEdRMk41ZEhCbFZFcFZXbGQzZWxWcmVESlZhM2QzVERJMWRXVkdSbnBVUlhoR1lWUm9jRmRyV21GWldGWkRaSGR3VldSWFdsZGxiR3hOVWxkc1FscERjM1pOVmxKSVZHMVNSbHBHYUhKWFZFcHBUMVJhTUdJeFJrcExNVVV5VTBVMWFFMXRZelZVYTAxM1dtMVNTRlpzUW1sa1JsSjFUbFU0TkZSclduQmhNakZ5Vmtoa1dVTnRkREZoTURnMFRtazVUVmxYYXpKTE1FNUVUVzFXUm1GdFpIRmxTRTR5VkVWYWJsWXhXWGxTVkd4WlZsWkJNMDlHVGt4a2VYTjJVa1V4ZG1SR1ZUUk5TRmt6VDBad1ExRXpiSEZTYmtKVVdUSk9kazVVWTB0V1JtTjNWak5zUTJJeWVEUlhiR1JVWW01Vk0xVkhNVzVRVkRCTFRGTXdkRXhUTVVaVWExRm5VVEJXVTFaRmJFZFRWVTVDVmtWVmRFeFRNSFJNVVc4OUlpd2lkbVZ5YVdacFkyRjBhVzl1SWpwN2ZYMWRmWDBzSW5ScGJXVnZkWFJ6SWpwN2ZTd2lkbVZ5YzJsdmJpSTZJakl1TWk0d0luMHNJbTVsZEhkdmNtdGtJanA3ZlN3aWNHRnpjM2RrSWpwN0luVnpaWEp6SWpwYmV5SnVZVzFsSWpvaVkyOXlaU0lzSW5OemFFRjFkR2h2Y21sNlpXUkxaWGx6SWpwYkluTnphQzF5YzJFZ1FVRkJRVUl6VG5waFF6RjVZekpGUVVGQlFVUkJVVUZDUVVGQlFrRlJSRlZ4TjFjek9IaERXamxYUjFOWFEzWjFjM1JoVFVkTlZEQTBkRkp2YUhjMlFVdEhla2szVURkNGNXdzFiR2hEUVZKbGVYUTNNbTQ1Y1ZkUlVscHpSVEZaYVVOVFVYVlVabGhKTVc5ak9FNXdVMDAzSzJ4TlRIZHFNVEpIT0hvelNURlpWRE14U2toeU9VeE1XV2N2V0VsalJYaHJlbVpDU1RreU1FTmhVemd5Vm5GdFMwOXdTVGtyUVZKSVUwcENaRWxpUzFKSk1HWTFXU3QxTkhoaVl6VlZla3REU2xnNGFtTkxSMGMzYmtWcGR6aDZiU3RqZGtGc1prOW5jM05OU3l0eFNuQndTV0pXWTJJeWFWcE9WSE4zTldreVlWZzJSa1JOZVVNcllqRTNSRkZJZWtKSGNFNWlhRnBaZUhWdlJWSmFWbEpqYmxsamRHZEplblZ2Tm1aRU5qQm5ibWxZTUdaV2RuSmphR3hQYm5WaVFqRnpVbGxpYkc5UU1uSTJWVVV5TW5jdlpIQk1TMDlHUlRWcE4wTkJNRnA2VGtKRlVsbzVOR05KUzNWdFNVZzVUV2xLY3pGaE5tSk5aVGc1Vms5cWFrNVdJbDE5WFgwc0luTjBiM0poWjJVaU9udDlMQ0p6ZVhOMFpXMWtJanA3ZlgwPQo="
            },
            {
                "Filename": "manifests/kube-cloud-config.yaml",
                "Data": "CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiBrdWJlLWNsb3VkLWNmZwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KdHlwZTogT3BhcXVlCmRhdGE6CiAgY29uZmlnOiAiIgo="
            },
            {
                "Filename": "manifests/kube-controller-manager-secret.yaml",
                "Data": ""
            },
            {
                "Filename": "manifests/openshift-apiserver-secret.yaml",
                "Data": ""
            },
            {
                "Filename": "manifests/pull.json",
                "Data": "CnsKICAiYXBpVmVyc2lvbiI6ICJ2MSIsCiAgImtpbmQiOiAiU2VjcmV0IiwKICAidHlwZSI6ICJrdWJlcm5ldGVzLmlvL2RvY2tlcmNvbmZpZ2pzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lc3BhY2UiOiAia3ViZS1zeXN0ZW0iLAogICAgIm5hbWUiOiAiY29yZW9zLXB1bGwtc2VjcmV0IgogIH0sCiAgImRhdGEiOiB7CiAgICAiLmRvY2tlcmNvbmZpZ2pzb24iOiAiZXlKaGRYUm9jeUk2SUhzaWNYVmhlUzVwYnlJNklIc2lZWFYwYUNJNklDSlpNamw1V2xjNWVrc3pVbXhaZWtwbVlWZGFhV1JYWkhOaGJrWndZMVJTTUdKWVJubGxSMlF4VFc1TmVXSlhkRzVoVkc5M1ZXeGtWRTlXYUV4V1ZGcEhUa1U0ZUZWVk9WRk5WV3hhVkZWU1JsUkdjRkpWVlhNeVRsWk9WbE13YTNkVlZFMTNWRlZPVjFkR1ZUVlNNR3hQVjFWa1JGUldVWGRPUkZKYVRWUktUbFo2U1hoU1ZrcFNJaXdpWlcxaGFXd2lPaUFpSW4xOWZRPT0iCiAgfQp9Cg=="
            },
            {
                "Filename": "manifests/cvo-overrides.yaml",
                "Data": "CmFwaVZlcnNpb246IGNsdXN0ZXJ2ZXJzaW9uLm9wZW5zaGlmdC5pby92MQpraW5kOiBDVk9Db25maWcKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci12ZXJzaW9uCiAgbmFtZTogY2x1c3Rlci12ZXJzaW9uLW9wZXJhdG9yCnVwc3RyZWFtOiBodHRwOi8vbG9jYWxob3N0OjgwODAvZ3JhcGgKY2hhbm5lbDogZmFzdApjbHVzdGVySUQ6IGQzMmUxYWFlLTIzNDAtNDE2ZC05YmEyLTQxNDliOGUxZGM4NQpvdmVycmlkZXM6Ci0ga2luZDogRGVwbG95bWVudCAgICAgICAgICAgICAgICAgICAgIyB0aGlzIGNvbmZsaWN0cyB3aXRoIGt1YmUtY29yZS1vcGVyYXRvcgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNsdXN0ZXItbmV0d29yay1vcGVyYXRvcgogIG5hbWU6IGNsdXN0ZXItbmV0d29yay1vcGVyYXRvcgogIHVubWFuYWdlZDogdHJ1ZQotIGtpbmQ6IERlcGxveW1lbnQgICAgICAgICAgICAgICAgICAgICMgdGhpcyBjb25mbGljdHMgd2l0aCB0ZWN0b25pYy1pbmdyZXNzLWNvbnRyb2xsZXItb3BlcmF0b3IKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLWluZ3Jlc3Mtb3BlcmF0b3IKICBuYW1lOiBjbHVzdGVyLWluZ3Jlc3Mtb3BlcmF0b3IKICB1bm1hbmFnZWQ6IHRydWUKLSBraW5kOiBTZXJ2aWNlQWNjb3VudCAgICAgICAgICAgICAgICAjIG1pc3NpbmcgcnVuIGxldmVsIDAgb24gdGhlIG5hbWVzcGFjZSBhbmQgaGFzIDAwMDBfMDgKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLWRucy1vcGVyYXRvcgogIG5hbWU6IGNsdXN0ZXItZG5zLW9wZXJhdG9yCiAgdW5tYW5hZ2VkOiB0cnVlCi0ga2luZDogRGVwbG95bWVudCAgICAgICAgICAgICAgICAgICAgIyB0aGlzIGNvbmZsaWN0cyB3aXRoIGt1YmUtY29yZS1vcGVyYXRvcgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNsdXN0ZXItZG5zLW9wZXJhdG9yCiAgbmFtZTogY2x1c3Rlci1kbnMtb3BlcmF0b3IKICB1bm1hbmFnZWQ6IHRydWUKLSBraW5kOiBBUElTZXJ2aWNlICAgICAgICAgICAgICAgICAgICAjIHBhY2thZ2VzLmFwcHMucmVkaGF0LmNvbSBmYWlscyB0byBzdGFydCBwcm9wZXJseQogIG5hbWU6IHYxYWxwaGExLnBhY2thZ2VzLmFwcHMucmVkaGF0LmNvbQogIHVubWFuYWdlZDogdHJ1ZQo="
            },
            {
                "Filename": "manifests/05-openshift-cluster-api-namespace.yaml",
                "Data": "Ci0tLQphcGlWZXJzaW9uOiB2MQpraW5kOiBOYW1lc3BhY2UKbWV0YWRhdGE6CiAgIyBUaGlzIGlzIHRoZSBuYW1lc3BhY2UgdXNlZCB0byBob2xkIGNsdXN0ZXItYXBpIGNvbXBvbmVudHMuCiAgbmFtZTogb3BlbnNoaWZ0LWNsdXN0ZXItYXBpCiAgbGFiZWxzOgogICAgbmFtZTogb3BlbnNoaWZ0LWNsdXN0ZXItYXBpCiAgICBvcGVuc2hpZnQuaW8vcnVuLWxldmVsOiAiMSIK"
            },
            {
                "Filename": "manifests/09-openshift-service-signer-namespace.yaml",
                "Data": "Ci0tLQphcGlWZXJzaW9uOiB2MQpraW5kOiBOYW1lc3BhY2UKbWV0YWRhdGE6CiAgIyBUaGlzIGlzIHRoZSBuYW1lc3BhY2UgdXNlZCB0byBob2xkIHRoZSBzZXJ2aWNlLXNlcnZpbmctY2VydC1zaWduZXIuCiAgbmFtZTogb3BlbnNoaWZ0LXNlcnZpY2UtY2VydC1zaWduZXIKICBsYWJlbHM6CiAgICBvcGVuc2hpZnQuaW8vcnVuLWxldmVsOiAiMSIK"
            },
            {
                "Filename": "manifests/cluster-apiserver-certs.yaml",
                "Data": "CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAp0eXBlOiBrdWJlcm5ldGVzLmlvL3RscwptZXRhZGF0YToKICBuYW1lOiBjbHVzdGVyLWFwaXNlcnZlci1jZXJ0cwogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNsdXN0ZXItYXBpCiAgbGFiZWxzOgogICAgYXBpOiBjbHVzdGVyYXBpCiAgICBhcGlzZXJ2ZXI6ICJ0cnVlIgpkYXRhOgogIHRscy5jcnQ6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJVZWtORFFXcGxaMEYzU1VKQlowbEpZVnBhYW05alZqRkdja2wzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkTFJFVlNUVUU0UjBFeFZVVUtRM2hOU1ZsdE9YWmtSM1F4V1cxVmVFVjZRVkpDWjA1V1FrRk5WRU50Um01YU0wcHNXakpHTUdJelNYZElhR05PVFZSbmVFMUVSVFZOVkUxNFRucEpNZ3BYYUdOT1RXcG5lRTFFUlRKTlZFMTRUbnBKTTFkcVFrTk5Va1YzUkhkWlJGWlJVVXhGZDJocFlqSTVNR0V6Vm1sYVZFVjBUVU56UjBFeFZVVkJlRTFyQ2xreWVERmpNMUpzWTIxR2QyRlROWFpqUjFaMVl6Sm9jRnB1VVhSWk1uZ3hZek5TYkdOcE1XaGpSMnQxWXpOYWFrMUpTVUpKYWtGT1FtZHJjV2hyYVVjS09YY3dRa0ZSUlVaQlFVOURRVkU0UVUxSlNVSkRaMHREUVZGRlFUVkhXV2hxTTBWSVQyOTFTa3RCVGxoV1owWnNjWEF6U3pOWmMwZzJVVkI1WjNBdk9BbzFXREpVTmpsRU4xVndlblJEVkVWS01YSTNVVmxIUVV0TFMzRmtiVXRPYm1ZMVUzVjZRWGgwUVdaNlltTjZVekpQYUhkU2QxRnliVVZ6WldoVVNVMVFDa3BhV2t4MU5DOUJTMGcyVjJOWUwxSnBVRE56VkhCUWFGRmhhMHN5SzBoaWVGRktabU5UT0VOVWRXSnJORzlRTmxwV2JIbDVORzVWWkdaTVl5OUhTVzBLVEVac1p6bGhPVWxDY0hwNFNIWm5kWEl4ZG5rM1lXbzVaVEpHYUZaaFV6WjVkV1kyUkhSeVoyVkpSSHAzZVZwdWNUZHdTVkIzWkZsVVZ6Tk5OMHh1YkFwU2JsWlJhMmhVYjJ0M2MzSXpSbkpYZUVKQ2IxQjBSV05TWVhRMVRUQkljV2xXT1haR2VrNUxZbmRRYUV4R2RsRm1PSEJxUkhwU1RqVmtSM1JGZEVwQ0NsaE5ZM2d2VDNscmVVWmxiWEkwVGtreWJUY3pUREI2UlRjMFFXeFBXRlZPYzJwa1VUUnhiMlZtWW5SeE1UUmpWemxSU1VSQlVVRkNiekpOZDFsVVFVOEtRbWRPVmtoUk9FSkJaamhGUWtGTlEwRnhVWGRFZDFsRVZsSXdWRUZSU0M5Q1FWVjNRWGRGUWk5NlFXUkNaMDVXU0ZFMFJVWm5VVlYzY2tRd01URkxUd3BuWW1sWVRWRlZUM3BRVEZnemNVa3ljMUJuZDBoM1dVUldVakJxUWtKbmQwWnZRVlZUU2xCYVpUbFBSMjFXVkhCUmQwUlVOVmxaTkVnd2RUQm9WRFIzQ2tSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGRVoyZEZRa0ZJV0djd2JFSTFSVmhLWXpkbFRXbEZRMlF2Vms1b1ZXRndOMm95VFcweFFWRnJOMUkyU21nS1RWUkhlRkZuUkU4MlJqUkJMemhQUlZJMk5rczFNV1V3V0ZOemJuZERXRzA1U1VKMFZtcDFiak5QUlV4bE1UaFVSazlpY0VsMVMydEhPRVJoZDBRNFl3cHBaMVZZWlROU1IwZHNabnBxY0RoSVZtNTJhbGcyYkcweWRFaDVOVTVTVFd0SGVXUTBlRWhZT1dwbldrMW9VbmgyZVhSdGJsVkdTVUkzVVhSRGRUQXJDbkpNWjBGM1NrczBka3BvVmxkWWNURmpUVm81ZEhGQllrcHNlR1pVY0RCaVFVdG9URE5UU1dsalptSTNaRXMyWmtSbU1rb3ZNVmhHTm1sQlVuWnBTakVLUTFkVVZVNVBWVzgxZUdSVGNVUnliQzgzY1hscEwxcHVhVzUzVFVKMGRFZEllVmR2Y1dkQk9GUkROUzlxTW1oSFVXSmhkRTl3ZWtSSVQyTjBPVFp5V2dwalNIbDRVVlY2Ylc4elprVkxkbmhPUzFNMFRVdHFhVzVRVkdkWlpFTTBTbUk1VDFRMFRUWTRiVlZUTVhRclp6MEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRb0tMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSTmVrTkRRV2gxWjBGM1NVSkJaMGxKWkhKRk1WRkZkSEp1UVRCM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVVMFRWUkJlRTlVUlhwTlZHTjVUbXh2V0FwRVZFazBUVlJCZUU1cVJYcE5WR041VGpGdmQwdEVSVkpOUVRoSFFURlZSVU40VFVsWmJUbDJaRWQwTVZsdFZYaEZla0ZTUW1kT1ZrSkJUVlJEYlVadUNsb3pTbXhhTWtZd1lqTkpkMmRuUldsTlFUQkhRMU54UjFOSllqTkVVVVZDUVZGVlFVRTBTVUpFZDBGM1oyZEZTMEZ2U1VKQlVVUkRWbEozZDBNdlJqZ0tRbVkxVldkWlRHYzRRMU53T1VkemRHRjZSWFJOY1VNelQwaGFOekpQT0RreVFrZFBVRlkwTW1sVVVUQXdia1V4UVUxMlpFOHpXV1ZDVFhCdlFWcEhSQXBpYjJOcFVXcDJZVUUzZUZkaVdrSlJORTAzWTJ0YU1FMHpNbEF3TmpGSWVYSnFTVzB4YlRoTVlqSlpWR1JaVFc5Nk5WVm1kRmxLTDFKSmFWSmlOeXREQ2pGMVZHaFpVMnNyWVhScVMxWTJhMHhqYzNFM2FXcDBTa2RsWTNoYVExZG5hMngwT1ZGa1oyNXFjbGhtYXpnd1ozbzFlR0VyVlVOUllTOUJNbkY1V0dJS2NXb3JibWhIYkRoTllXcFJORGM1YVRVM1QzSXdPRVZRWTJaclQydDRXU3RFWm14a2VEZEhkVEZGWmsxbFFVSTNZMWhuTTFaTWMzWjBZalkwTTFGdU1BbzBSblJ1ZWs0MGJtVjFUMlVyYTFCWlNEa3JLMHRYWldORlNISlpaMGRyV21KRVJVMVZPV0pLWW1WSU16WklNVkJuYlZGaVZEaHVSVEpFVjBoUloyeERDazVyUVZsYU5taEVaMVpWZGtGblRVSkJRVWRxV1hwQ2FFMUJORWRCTVZWa1JIZEZRaTkzVVVWQmQwbERjRVJCVUVKblRsWklVazFDUVdZNFJVSlVRVVFLUVZGSUwwMUNNRWRCTVZWa1JHZFJWMEpDVWtsck9XdzNNRFJoV2xaUGJFUkJUbEJzYUdwblpsTTNVMFpRYWtGbVFtZE9Wa2hUVFVWSFJFRlhaMEpTU1Fwck9XdzNNRFJoV2xaUGJFUkJUbEJzYUdwblpsTTNVMFpRYWtGT1FtZHJjV2hyYVVjNWR6QkNRVkZ6UmtGQlQwTkJVVVZCVWtsbVRsQm9hWFJtVG5neENqRjNNV3dyYUdZck1IQTFiazlNWkZsQ1dUSnVZWGRsY0ZSaE9WUk9abXRoVEhKV1Rrc3dXV0pVUTJJNVlYRjVkSGsyT0cxcFYzbFRhbGgzTUhKNVVqY0tTVGx6ZG1Ga1ZtZDRSVWMySzJoTmFHeGxRMjlHY0hOQ2VWTm9aa2hIYVhZMWRqazBUMFJFYjJWQk4xcEhUMk5aWTNGU2RpdFNkRGRYVlhsc2JuY3hjZ293V0VJNFdsWmFVbnBPYlZSVlJ6WnlSRkpvY2xoeWRVUkNVbmhuTlVVMmJ6UlRZMkZIY0dWd01qSktOMlV4V0ZOelRVZ3ZSMmd5WWpOTVluZzJWM2QwQ2s5MGJEVnZPRFZ6VUhCS2VrUk1kVzlEWW1sRGJpOVBUV2d4TWtKNGN5OHJNRFpaVURsRU1WQXlLeTk2V25GTlVGVkhTMkl3Wm5SVk5sZE5TV3h6TkZnS05rTTNOMmxwZERsWFltNVZPVTFQYlRCT1RXNUVjWEVyWTFSdFUwdzRRVmRGTVhWMk1FdDBiSGhMZVM5aFRHeENSa050WTJkTmRHMDRTV2cwUjFsdFJ3cHVNbGxCWWxGb1ZuTm5QVDBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89CiAgdGxzLmtleTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGY0VGSlFrRkJTME5CVVVWQk5VZFphR296UlVoUGIzVktTMEZPV0ZablJteHhjRE5MTTFselNEWlJVSGxuY0M4NE5WZ3lWRFk1UkRkVmNIcDBDa05VUlVveGNqZFJXVWRCUzB0TGNXUnRTMDV1WmpWVGRYcEJlSFJCWm5waVkzcFRNazlvZDFKM1VYSnRSWE5sYUZSSlRWQktXbHBNZFRRdlFVdElObGNLWTFndlVtbFFNM05VY0ZCb1VXRnJTeklyU0dKNFVVcG1ZMU00UTFSMVltczBiMUEyV2xac2VYazBibFZrWmt4akwwZEpiVXhHYkdjNVlUbEpRbkI2ZUFwSWRtZDFjakYyZVRkaGFqbGxNa1pvVm1GVE5ubDFaalpFZEhKblpVbEVlbmQ1V201eE4zQkpVSGRrV1ZSWE0wMDNURzVzVW01V1VXdG9WRzlyZDNOeUNqTkdjbGQ0UWtKdlVIUkZZMUpoZERWTk1FaHhhVlk1ZGtaNlRrdGlkMUJvVEVaMlVXWTRjR3BFZWxKT05XUkhkRVYwU2tKWVRXTjRMMDk1YTNsR1pXMEtjalJPU1RKdE56Tk1NSHBGTnpSQmJFOVlWVTV6YW1SUk5IRnZaV1ppZEhFeE5HTlhPVkZKUkVGUlFVSkJiMGxDUVVGSGJUUXpUa0ZLUVdNcldIZ3lWUW9yU25FNGJ6bHRZVVJ2SzFCdk9UQkNiRVV4ZUdwemFYbEpaRWhCZW5wRFNIaG5ZMk12WVRnMU4yaFFhMWhsTlhoWVdGcDJTMEkxTmtkMFIwc3ZXR0paQ2s0eFdXSXJXREYxUjI5eVJUUXlhMkpZU1ZaTVNsWTNiVTlYU0M4MWFXNXJNRWd5T1hGUGVFOTFaR3BRY0ZBNWRXczBLMGhyUzJ4aFNGRnhZV2h0S3k4S2NEaFJhbkJFYmpkaVlVMW1UMmhSYjFRMFZHSjVUamRzVUhCb1NWTnpUalJXTW5Gb09YTXlOa3RaVFdaWU56RnBka2xDTmpKMGQxQmxaR0pGYmxOVFVBbzVhbEV4TjNoV2VYbGxWRmhrTW5wUFdsWlFSRWRXUVdKaE5rVlRVRWsxWnpZM01WcHZkMFJxZEZRM1RtbDBSMG80Y2xBMGNsTXZialY0WnpKbVMxQlhDbGhsT0RCRlNqUTFiR3h6TWtVd1R6ZE5SbWR6YUhNeFpqQXZia3hhWnpoYVdrZDBTV0puWTBkRFEzVk9ibXBsWm1aT1oyUk9OMFI2TDI1SlZtZzNUR0VLTlhGck1UTjZhME5uV1VWQk9XMHhTazF5TjJKYWVWUkJXSFpYZUdsaWJIUXZOVFZqUTFOUmFYSk5iVU5PVTBGMmRVOXdaRWR3YVdoS05VMDBaUzltZWdwSFFqTmpMMkV4VlhKS1pIQlFWV2xYYlVneVVVSmphMHRvUkZKaVJGRk1RV2N4WlVwblExVk9Nak5zUWxSTFIyUm9NVkJyTmtkMU1YWllXVE01TVhWb0Nrc3lkRlpSZUVkWlQybEtZa3Q2VFZSaFNVaDVjRVZNYW1KcGRXSnRTMFZaTUUxbWVsaDBOVEJ1WWpkWGIyNHdjalp1V1cxdWVrMURaMWxGUVRkVlYwOEtja3BGVGpscFprdGlOa1ZVUldsSVZVaG9ZWFp4Y1RCVFJFWlJOVnBJSzNZemRrSTFkaXRtTVRGc1lsSTVVV1pPZW5GWFYwaFFVMHgxUkhscFNtaHJUUW93VFhOc1dFRnVRekpRWVZoMk9VMHZSbFJ2U0hWUE16a3pVVWRNTDNKVldHNTZWbUl2Tml0RWJIZ3ZSMFZ3WmpodWFGVjROM3B0VUdSRlluTlRZMnh3Q2s5d1MydGtWbmRoYWxrNGJEbEpkMmc0YkhwNlRrc3dURnBXVG1RelVVcHNiM1ZMTVd0VVkwTm5XVUppVWpsbldtRkJSVEZxTjA5RFpWWm5kVkF2VjNrS0wybEllR05QVlROUk9URnlaVWRUTVVKdWN5dFpkRTEyUzJGV0szQnFXSGc1VUROeVMyTXhNM05STlZkdFVrUlFielZOTlRCWFMwZ3phWHB6UVU1Nk1ncDVaa2wzSzFscVRXZ3pibU4yVUVSNFRTczFVeXRpVERCWU1XOVVNRzFyT1VGRFJYaEhjemxqYlZkV1ZEbDZUakZRY3pFeVkzbENlbkZ6ZFZWSFptaHlDbEJsVnpCbGIzRlFPVU5VYkZFMlEwVXhVV040WVZGTFFtZFJSR2hKWldKSGFISjNaMjVLUkZGaGNESldlblJPWkRKV2FrWk5XVXN5WjBKUlZUYzNUVWtLWW14VFdHRndhM2Q2ZVVKWmVIaGlXWGhRVlhsa1JHTXJhMUZ0Y0RkSmNtdGpiSG8wWmpaeFMwRjZSSEJ4Y0RsdmJrczVTRWxWY1VoelZHZE5ZbVpuUkFvNFRGWnBXR280VmpObFozSk1SblJsUVNzMWJHUjBRbEJJUW5sSWVISjNOUzh6Y0dOblVrRlJNRmx5UzBJd01FOXJiazlTZGpjdldWaE5ibkpOY1UxT0NtTjBLMnM0VVV0Q1oxRkVXWEZJVHpCeVpHOXNOa3hMY0ZkcWNGQkpibnAzVW0wMGJHVklPSEJYWWpaNWRuQkJXakI2ZGxkMGQyTjVibWhzYVc0MFJEY0tXU3RyVjNOMVozTkJlVGRFYm05aWJHODNLM0ZuV0RsTGEwVkVVMkZhZDBzM01FeGphM05WTDJJeVVUZHRiV2xDU2xadFJVVkNhMWRYZDJKclRubDBjUXBYZEdvNGJuSlFlVUp3Umt0M2NFcHpNMDVUWVU5TU5UTjJiMjFVY21OVFJEbE9XRXAzTlVSek5taG1UVE53VmxaWWVrMDVVMUU5UFFvdExTMHRMVVZPUkNCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0K"
            },
            {
                "Filename": "manifests/app-version-tectonic-network.yaml",
                "Data": "Ci0tLQphcGlWZXJzaW9uOiB0Y28uY29yZW9zLmNvbS92MQpraW5kOiBBcHBWZXJzaW9uCm1ldGFkYXRhOgogIG5hbWU6IHRlY3RvbmljLW5ldHdvcmsKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCiAgbGFiZWxzOgogICAgbWFuYWdlZC1ieS1jaGFubmVsLW9wZXJhdG9yOiAidHJ1ZSIKc3BlYzoKICBkZXNpcmVkVmVyc2lvbjoKICBwYXVzZWQ6IGZhbHNlCnN0YXR1czoKICBjdXJyZW50VmVyc2lvbjoKICBwYXVzZWQ6IGZhbHNlCnVwZ3JhZGVyZXE6IDEKdXBncmFkZWNvbXA6IDAK"
            },
            {
                "Filename": "manifests/app-version-kind.yaml",
                "Data": "Ci0tLQphcGlWZXJzaW9uOiAiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMSIKa2luZDogIkN1c3RvbVJlc291cmNlRGVmaW5pdGlvbiIKbWV0YWRhdGE6CiAgbmFtZTogImFwcHZlcnNpb25zLnRjby5jb3Jlb3MuY29tIgpzcGVjOgogIGdyb3VwOiAidGNvLmNvcmVvcy5jb20iCiAgdmVyc2lvbjogInYxIgogIG5hbWVzOgogICAgcGx1cmFsOiAiYXBwdmVyc2lvbnMiCiAgICBraW5kOiAiQXBwVmVyc2lvbiIK"
            },
            {
                "Filename": "manifests/etcd-service.yaml",
                "Data": "Ci0tLQphcGlWZXJzaW9uOiB2MQpraW5kOiBTZXJ2aWNlCm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCiAgbGFiZWxzOgogICAgIyB0aGlzIGxhYmVsIGlzIHVzZWQgdG8gaW5kaWNhdGUgdGhhdCBpdCBzaG91bGQgYmUgc2NhcGVkIGJ5IHByb21ldGhldXMKICAgIGs4cy1hcHA6IGV0Y2QKc3BlYzoKICBjbHVzdGVySVA6IE5vbmUKICBwb3J0czoKICAtIG5hbWU6IGV0Y2QKICAgIHBvcnQ6IDIzNzkKICAgIHByb3RvY29sOiBUQ1AK"
            },
            {
                "Filename": "manifests/03-openshift-web-console-namespace.yaml",
                "Data": "Ci0tLQphcGlWZXJzaW9uOiB2MQpraW5kOiBOYW1lc3BhY2UKbWV0YWRhdGE6CiAgIyBUaGlzIGlzIHRoZSBuYW1lc3BhY2UgdXNlZCB0byBob2xkIHRoZSBvcGVuc2hpZnQgY29uc29sZS4KICAjIFRoZXkgcmVxdWlyZSBvcGVuc2hpZnQgY29uc29sZSBydW4gaW4gdGhpcyBuYW1lc3BhY2UuCiAgbmFtZTogb3BlbnNoaWZ0LXdlYi1jb25zb2xlCiAgbGFiZWxzOgogICAgbmFtZTogb3BlbnNoaWZ0LXdlYi1jb25zb2xlCg=="
            }
        ]
    },
    "*manifests.Tectonic": {
        "TectonicConfig": {
            "kind": "ConfigMap",
            "apiVersion": "v1",
            "metadata": {
                "name": "cluster-config-v1",
                "namespace": "tectonic-system"
            },
            "data": {
                "addon-config": "apiVersion: v1\ncloudProvider: aws\nclusterConfig:\n  apiserver_url: https://somalley-api.devcluster.openshift.com:6443\nkind: KubeAddonOperatorConfig\nregistryHTTPSecret: whbm2jkq6rjtbb8d\n"
            }
        },
        "FileList": [
            {
                "Filename": "tectonic/00_cluster-config.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKZGF0YToKICBhZGRvbi1jb25maWc6IHwKICAgIGFwaVZlcnNpb246IHYxCiAgICBjbG91ZFByb3ZpZGVyOiBhd3MKICAgIGNsdXN0ZXJDb25maWc6CiAgICAgIGFwaXNlcnZlcl91cmw6IGh0dHBzOi8vc29tYWxsZXktYXBpLmRldmNsdXN0ZXIub3BlbnNoaWZ0LmNvbTo2NDQzCiAgICBraW5kOiBLdWJlQWRkb25PcGVyYXRvckNvbmZpZwogICAgcmVnaXN0cnlIVFRQU2VjcmV0OiB3aGJtMmprcTZyanRiYjhkCmtpbmQ6IENvbmZpZ01hcAptZXRhZGF0YToKICBuYW1lOiBjbHVzdGVyLWNvbmZpZy12MQogIG5hbWVzcGFjZTogdGVjdG9uaWMtc3lzdGVtCg=="
            },
            {
                "Filename": "tectonic/99_tectonic-ingress-04-svc-account.yaml",
                "Data": "CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2VBY2NvdW50Cm1ldGFkYXRhOgogIG5hbWU6IHRlY3RvbmljLWluZ3Jlc3MtY29udHJvbGxlci1vcGVyYXRvcgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWluZ3Jlc3MK"
            },
            {
                "Filename": "tectonic/99_tectonic-system-00-binding-admin.yaml",
                "Data": "Ci0tLQpraW5kOiBDbHVzdGVyUm9sZUJpbmRpbmcKYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MWJldGExCm1ldGFkYXRhOgogIG5hbWU6IGFkbWluLXVzZXIKc3ViamVjdHM6CiAgLSBraW5kOiBTZXJ2aWNlQWNjb3VudAogICAgbmFtZXNwYWNlOiB0ZWN0b25pYy1zeXN0ZW0KICAgIG5hbWU6IGRlZmF1bHQKICAtIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1pbmdyZXNzCiAgICBuYW1lOiB0ZWN0b25pYy1pbmdyZXNzLWNvbnRyb2xsZXItb3BlcmF0b3IKcm9sZVJlZjoKICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IGNsdXN0ZXItYWRtaW4KICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwo="
            },
            {
                "Filename": "tectonic/99_binding-discovery.yaml",
                "Data": "Ci0tLQpraW5kOiBDbHVzdGVyUm9sZUJpbmRpbmcKYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MWJldGExCm1ldGFkYXRhOgogIG5hbWU6IGRpc2NvdmVyeQpyb2xlUmVmOgogIGFwaUdyb3VwOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvCiAga2luZDogQ2x1c3RlclJvbGUKICBuYW1lOiBzeXN0ZW06ZGlzY292ZXJ5CnN1YmplY3RzOgogIC0ga2luZDogR3JvdXAKICAgIG5hbWU6ICdzeXN0ZW06dW5hdXRoZW50aWNhdGVkJwogIC0ga2luZDogR3JvdXAKICAgIG5hbWU6ICdzeXN0ZW06YXV0aGVudGljYXRlZCcK"
            },
            {
                "Filename": "tectonic/99_kube-addon-01-operator.yaml",
                "Data": "Ci0tLQphcGlWZXJzaW9uOiBhcHBzL3YxYmV0YTIKa2luZDogRGVwbG95bWVudAptZXRhZGF0YToKICBuYW1lOiBrdWJlLWFkZG9uLW9wZXJhdG9yCiAgbmFtZXNwYWNlOiB0ZWN0b25pYy1zeXN0ZW0KICBsYWJlbHM6CiAgICBrOHMtYXBwOiBrdWJlLWFkZG9uLW9wZXJhdG9yCiAgICBtYW5hZ2VkLWJ5LWNoYW5uZWwtb3BlcmF0b3I6ICJ0cnVlIgpzcGVjOgogIHJlcGxpY2FzOiAxCiAgc2VsZWN0b3I6CiAgICBtYXRjaExhYmVsczoKICAgICAgazhzLWFwcDoga3ViZS1hZGRvbi1vcGVyYXRvcgogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBrOHMtYXBwOiBrdWJlLWFkZG9uLW9wZXJhdG9yCiAgICAgICAgdGVjdG9uaWMtYXBwLXZlcnNpb24tbmFtZToga3ViZS1hZGRvbgogICAgc3BlYzoKICAgICAgY29udGFpbmVyczoKICAgICAgICAtIG5hbWU6IGt1YmUtYWRkb24tb3BlcmF0b3IKICAgICAgICAgIGltYWdlOiBxdWF5LmlvL2NvcmVvcy9rdWJlLWFkZG9uLW9wZXJhdG9yLWRldjozNzU0MjNhMzMyZjJjMTJiNzk0MzhmYzZhNmRhNmU0NDhlMjhlYzBmCiAgICAgICAgICByZXNvdXJjZXM6CiAgICAgICAgICAgIGxpbWl0czoKICAgICAgICAgICAgICBjcHU6IDIwbQogICAgICAgICAgICAgIG1lbW9yeTogNTBNaQogICAgICAgICAgICByZXF1ZXN0czoKICAgICAgICAgICAgICBjcHU6IDIwbQogICAgICAgICAgICAgIG1lbW9yeTogNTBNaQogICAgICAgICAgdm9sdW1lTW91bnRzOgogICAgICAgICAgICAtIG5hbWU6IGNsdXN0ZXItY29uZmlnCiAgICAgICAgICAgICAgbW91bnRQYXRoOiAvZXRjL2NsdXN0ZXItY29uZmlnCiAgICAgIGltYWdlUHVsbFNlY3JldHM6CiAgICAgICAgLSBuYW1lOiBjb3Jlb3MtcHVsbC1zZWNyZXQKICAgICAgbm9kZVNlbGVjdG9yOgogICAgICAgIG5vZGUtcm9sZS5rdWJlcm5ldGVzLmlvL21hc3RlcjogIiIKICAgICAgcmVzdGFydFBvbGljeTogQWx3YXlzCiAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICBydW5Bc05vblJvb3Q6IHRydWUKICAgICAgICBydW5Bc1VzZXI6IDY1NTM0CiAgICAgIHRvbGVyYXRpb25zOgogICAgICAgIC0ga2V5OiAibm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyIgogICAgICAgICAgb3BlcmF0b3I6ICJFeGlzdHMiCiAgICAgICAgICBlZmZlY3Q6ICJOb1NjaGVkdWxlIgogICAgICB2b2x1bWVzOgogICAgICAgIC0gbmFtZTogY2x1c3Rlci1jb25maWcKICAgICAgICAgIGNvbmZpZ01hcDoKICAgICAgICAgICAgbmFtZTogY2x1c3Rlci1jb25maWctdjEKICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgLSBrZXk6IGFkZG9uLWNvbmZpZwogICAgICAgICAgICAgICAgcGF0aDogYWRkb24tY29uZmlnCg=="
            },
            {
                "Filename": "tectonic/99_openshift-cluster-api_worker-user-data-secret.yaml",
                "Data": "CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci1hcGkKdHlwZTogT3BhcXVlCmRhdGE6CiAgdXNlckRhdGE6IGV5SnBaMjVwZEdsdmJpSTZleUpqYjI1bWFXY2lPbnNpWVhCd1pXNWtJanBiZXlKemIzVnlZMlVpT2lKb2RIUndjem92TDNOdmJXRnNiR1Y1TFdGd2FTNWtaWFpqYkhWemRHVnlMbTl3Wlc1emFHbG1kQzVqYjIwNk5EazFNREF2WTI5dVptbG5MM2R2Y210bGNpSXNJblpsY21sbWFXTmhkR2x2YmlJNmUzMTlYWDBzSW5ObFkzVnlhWFI1SWpwN0luUnNjeUk2ZXlKalpYSjBhV1pwWTJGMFpVRjFkR2h2Y21sMGFXVnpJanBiZXlKemIzVnlZMlVpT2lKa1lYUmhPblJsZUhRdmNHeGhhVzQ3WTJoaGNuTmxkRDExZEdZdE9EdGlZWE5sTmpRc1RGTXdkRXhUTVVOU1ZXUktWR2xDUkZKV1NsVlRWVnBLVVRCR1ZWSlRNSFJNVXpCMFEyc3hTbE5WVWtSV1JVNUVVVmRhU0Zvd1JqTlRWVXBDV2pCc1ExRlZVa0pVYTBwdVlUTkdiMkV5YkVoUFdHTjNVV3RHVW1Nd1drSlNSVVowVkZaS1NtUXdWa0pYVlZKWFZWWkdUVkpZWkhOa2JVNUlWbTVWUzFsNlNtOWpSbkIxVlZob1JsSkZSbEJSYldSUFZtdEtRbFJXVWtOTk1IQXlXV3BPVW1SR2EzbFNXR1JKWVVkT1QxUldVbTVsUlRGRlVsUldUbFpGTVRSVWJuQktUV3hrYjFrd05VNWhiV1EwVkZWU1JrMW5jRTVXUlRFMFZHNXdTazFzWkhGUlZ6Rk9WV3RzTTFKVlJscFNSbHBTVlZWNFJtUXllREpaTUdSWFpGZE5lV0ZJUW1GaWJFWTBVbFZTUWxRd1NtNVViRnBEVVZVeFZWRnFUa3RrYlVsNlZWaFNXazFyVmpORGJXUnVVbGRzVGxGVVFraFJNVTU0VWpGT1NsbHFUa1ZWVlZaRFVWWkdWbEZWUlRCVFZVcEZaREJHTTFveVpFWlRNRVoyVTFWS1FsVlZUak5TUms1UVkyeHdWbVJFVVhwalYwNXRTM3BHYjFOc1VraGplbEZMVVZNNVNtTkdXVEpNZWxJeVpFZGFSRTlGVlhwYWJsRTFWbGRqZGxGcVRuRmtla1pXVFdwYWIxbFVUakZPZW1SMFpEQnNVbEpHY0U1Uk1sWXhWVzFXZWxSSGRFeGpNamxxWVZkT2RtRkRPV3hNTWxKTVUxRndWRkZYZEU5TlZVcHJWa2hXVFZKNmJGVk5WbFpaWVZSb1lXUXhUazVYYW1SVlZFVm9RMWt4U2t0UlZUQjRaSHBrVkdOclZYbFZhMHBzU3pGQ2MyRnJUa2hUYkhCb1pGVlNRMXBWY0VKa2JHaDFaREZ3V0VOdGVHdFJWMFpJWWpGR1dtSXdXalpNZWtaVFVXeFdWR1ZIWnpCUk1qVkZVVEZXVjJSWFdrUmtSMUpQVjFoa2FGa3hSak5YYWtKdFZFaENhVlpzY0c5VlNFWmFWRE53YlU1SGJGZGtTRVpwU3pOb2NsSXhZMHRrYTJkNVZrZE9TbFl6WkVSak0wcFpaVlZyZWs1c1JYZFNhVGd5VldwWk0wMVdTalZTVjA1V1ZrWk9UVmRET0RSaFJrVXhXVzE0VWxRd2RFeE5RM016VFVSU2VXSlhhRWhQU0VFd1pWWnNWMUZVYUZCV1VYQktVWHBrYmxOWVNUVk9hMlEyVG14c1JGUXdTbmxOYlZWNlZsZFdlazFXY0ZGU1IxcHRUV3BvTm1KRlZsQlhXRlpGVFRKNE1GSjZhRTFUTW1OeVpWUlJlRll3VGxSaVJGWm9WRmM1ZWs1WGNGUlJNVUpGUTJ0R2JsUlZTa0pSVldSeFZWZHdRMUZWTVVKT1JXUkNUVlpXYTFKSVpFWlJhVGt6VlZWV1FtUXdiRVJqUlZKQ1ZVVktibFJzV2tsVmF6RkRVVmRaTkZKVlNsVlJWVkpDVlZWbmRsUlZTWGRTTUVWNFZsZFJTMUpIWkZKV01FcERWV3RzY2s5WGR6Tk5SRkpvVjJ4YVVHSkZVa0pVYkVKellVZHdibHBzVFROVk1GcFJZV3RHVDFGdFpISmpWMmh5WVZWak5XUjZRa05SVmtaNlVtdEdRbFF3VGtKVlZWWkNWbGhPZVZKUmJ6RkxNVnBXVWpGYVNtTlhWVEZWYldSellWVlZkbEZ1U201V2VrNXBaVlUxVlZOVk5XRlBRemxTVmpCU1ZGa3dWbnBsVlRGMlZtcHJja3N5V2xoaWEyeHFTM2wwUlU1WVFuTk9SemxGV2xSYU5HSlhaRXREYmxaUlducFdWV05HVWt4YVZsSkdWbFpPV21KSWFIaGpSMXAwV210T1NGWkVSalZUVkVKTFVWaGFVbFZ0ZHpWalJXOTVWRzVPTkZWSWNHOVNVemxHVVc1dk0xSldXWHBXTUVWeVdWUnNRbGRJYjNoVFF6aExUMGRrZG1WRWJFTmxha1V5Vmtoc1VtSllXbFZWTWtweVQwVkdTbFV4VG0xVmJYUlVVMWRHUTJONWRIQmxWRXBWV2xkM2VsVnJlREpWYTNkM1RESTFkV1ZHUm5wVVJYaEdZVlJvY0ZkcldtRlpXRlpEWkhkd1ZXUlhXbGRsYkd4TlVsZHNRbHBEYzNaTlZsSklWRzFTUmxwR2FISlhWRXBwVDFSYU1HSXhSa3BMTVVVeVUwVTFhRTF0WXpWVWEwMTNXbTFTU0Zac1FtbGtSbEoxVGxVNE5GUnJXbkJoTWpGeVZraGtXVU50ZERGaE1EZzBUbWs1VFZsWGF6SkxNRTVFVFcxV1JtRnRaSEZsU0U0eVZFVmFibFl4V1hsU1ZHeFpWbFpCTTA5R1RreGtlWE4yVWtVeGRtUkdWVFJOU0ZrelQwWndRMUV6YkhGU2JrSlVXVEpPZGs1VVkwdFdSbU4zVmpOc1EySXllRFJYYkdSVVltNVZNMVZITVc1UVZEQkxURk13ZEV4VE1VWlVhMUZuVVRCV1UxWkZiRWRUVlU1Q1ZrVlZkRXhUTUhSTVVXODlJaXdpZG1WeWFXWnBZMkYwYVc5dUlqcDdmWDFkZlgwc0luUnBiV1Z2ZFhSeklqcDdmU3dpZG1WeWMybHZiaUk2SWpJdU1pNHdJbjBzSW01bGRIZHZjbXRrSWpwN2ZTd2ljR0Z6YzNka0lqcDdJblZ6WlhKeklqcGJleUp1WVcxbElqb2lZMjl5WlNJc0luTnphRUYxZEdodmNtbDZaV1JMWlhseklqcGJJbk56YUMxeWMyRWdRVUZCUVVJelRucGhRekY1WXpKRlFVRkJRVVJCVVVGQ1FVRkJRa0ZSUkZWeE4xY3pPSGhEV2psWFIxTlhRM1oxYzNSaFRVZE5WREEwZEZKdmFIYzJRVXRIZWtrM1VEZDRjV3cxYkdoRFFWSmxlWFEzTW00NWNWZFJVbHB6UlRGWmFVTlRVWFZVWmxoSk1XOWpPRTV3VTAwM0syeE5USGRxTVRKSE9Ib3pTVEZaVkRNeFNraHlPVXhNV1djdldFbGpSWGhyZW1aQ1NUa3lNRU5oVXpneVZuRnRTMDl3U1RrclFWSklVMHBDWkVsaVMxSkpNR1kxV1N0MU5IaGlZelZWZWt0RFNsZzRhbU5MUjBjM2JrVnBkemg2YlN0amRrRnNaazluYzNOTlN5dHhTbkJ3U1dKV1kySXlhVnBPVkhOM05Xa3lZVmcyUmtSTmVVTXJZakUzUkZGSWVrSkhjRTVpYUZwWmVIVnZSVkphVmxKamJsbGpkR2RKZW5Wdk5tWkVOakJuYm1sWU1HWldkbkpqYUd4UGJuVmlRakZ6VWxsaWJHOVFNbkkyVlVVeU1uY3ZaSEJNUzA5R1JUVnBOME5CTUZwNlRrSkZVbG81TkdOSlMzVnRTVWc1VFdsS2N6RmhObUpOWlRnNVZrOXFhazVXSWwxOVhYMHNJbk4wYjNKaFoyVWlPbnQ5TENKemVYTjBaVzFrSWpwN2ZYMD0K"
            },
            {
                "Filename": "tectonic/99_tectonic-ingress-00-appversion.yaml",
                "Data": "Ci0tLQphcGlWZXJzaW9uOiB0Y28uY29yZW9zLmNvbS92MQpraW5kOiBBcHBWZXJzaW9uCm1ldGFkYXRhOgogIG5hbWU6IHRlY3RvbmljLWluZ3Jlc3MKICBuYW1lc3BhY2U6IHRlY3RvbmljLXN5c3RlbQogIGxhYmVsczoKICAgIG1hbmFnZWQtYnktY2hhbm5lbC1vcGVyYXRvcjogInRydWUiCnNwZWM6CiAgZGVzaXJlZFZlcnNpb246CiAgcGF1c2VkOiBmYWxzZQpzdGF0dXM6CiAgcGF1c2VkOiBmYWxzZQp1cGdyYWRlcmVxOiAxCnVwZ3JhZGVjb21wOiAwCg=="
            },
            {
                "Filename": "tectonic/99_role-user.yaml",
                "Data": "Ci0tLQpraW5kOiBDbHVzdGVyUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxYmV0YTEKbWV0YWRhdGE6CiAgbmFtZTogdXNlcgpydWxlczoKICAtIGFwaUdyb3VwczogWyIiXQogICAgcmVzb3VyY2VzOiBbCiAgICAgICJiaW5kaW5ncyIsICJjb25maWdtYXBzIiwgImV2ZW50cyIsICJwb2RzIiwgInJlcGxpY2F0aW9uY29udHJvbGxlcnMiLAogICAgICAic2VjcmV0cyIsICJzZXJ2aWNlcyIsICJzZXJ2aWNlYWNjb3VudHMiLAogICAgICAicG9kcy9hdHRhY2giLAogICAgICAicG9kcy9iaW5kaW5nIiwKICAgICAgInBvZHMvZXhlYyIsCiAgICAgICJwb2RzL2xvZyIsCiAgICAgICJwb2RzL3BvcnRmb3J3YXJkIiwKICAgICAgInBvZHMvcHJveHkiLAogICAgICAicG9kcy9zdGF0dXMiLAogICAgICAicmVwbGljYXRpb25jb250cm9sbGVycy9zY2FsZSIsCiAgICAgICJyZXBsaWNhdGlvbmNvbnRyb2xsZXJzL3N0YXR1cyIsCiAgICAgICJzZXJ2aWNlcy9wcm94eSIsCiAgICAgICJzZXJ2aWNlcy9zdGF0dXMiCiAgICBdCiAgICB2ZXJiczogWyIqIl0KICAgIG5vblJlc291cmNlVVJMczogW10KCiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWwogICAgICAiY29tcG9uZW50c3RhdHVzZXMiLCAiZW5kcG9pbnRzIiwgImxpbWl0cmFuZ2VzIiwgIm5vZGVzIiwgIm5vZGVzL3Byb3h5IiwgIm5vZGVzL3N0YXR1cyIsCiAgICAgICJuYW1lc3BhY2VzIiwgIm5hbWVzcGFjZXMvc3RhdHVzIiwgIm5hbWVzcGFjZXMvZmluYWxpemUiLAogICAgICAicGVyc2lzdGVudHZvbHVtZWNsYWltcyIsICJwZXJzaXN0ZW50dm9sdW1lY2xhaW1zL3N0YXR1cyIsICJwZXJzaXN0ZW50dm9sdW1lcyIsICJyZXNvdXJjZXF1b3RhcyIsCiAgICAgICJyZXNvdXJjZXF1b3Rhcy9zdGF0dXMiCiAgICBdCiAgICB2ZXJiczogWyJnZXQiLCAibGlzdCIsICJ3YXRjaCIsICJwcm94eSIsICJyZWRpcmVjdCJdCiAgICBub25SZXNvdXJjZVVSTHM6IFtdCgogIC0gYXBpR3JvdXBzOiBbImFwcHMiLCAiYmF0Y2giLCAiYXV0b3NjYWxpbmciLCAicG9saWN5Il0KICAgIHJlc291cmNlczogWyIqIl0KICAgIHZlcmJzOiBbIioiXQogICAgbm9uUmVzb3VyY2VVUkxzOiBbXQoKICAtIGFwaUdyb3VwczogWyJleHRlbnNpb25zIl0KICAgIHJlc291cmNlczogWwogICAgICAiZGFlbW9uc2V0cyIsICJkZXBsb3ltZW50cyIsICJob3Jpem9udGFscG9kYXV0b3NjYWxlcnMiLCAiaW5ncmVzc2VzIiwKICAgICAgImpvYnMiLCAicmVwbGljYXNldHMiLCAicmVwbGljYXRpb25jb250cm9sbGVycyIsCgogICAgICAiZGFlbW9uc2V0cy9zdGF0dXMiLAogICAgICAiZGVwbG95bWVudHMvcm9sbGJhY2siLAogICAgICAiZGVwbG95bWVudHMvc2NhbGUiLAogICAgICAiZGVwbG95bWVudHMvc3RhdHVzIiwKICAgICAgImhvcml6b250YWxwb2RhdXRvc2NhbGVycy9zdGF0dXMiLAogICAgICAiaW5ncmVzc2VzL3N0YXR1cyIsCiAgICAgICJqb2JzL3N0YXR1cyIsCiAgICAgICJyZXBsaWNhc2V0cy9zY2FsZSIsCiAgICAgICJyZXBsaWNhc2V0cy9zdGF0dXMiLAogICAgICAicmVwbGljYXRpb25jb250cm9sbGVycy9zY2FsZSIKICAgIF0KICAgIHZlcmJzOiBbIioiXQogICAgbm9uUmVzb3VyY2VVUkxzOiBbXQoKICAtIGFwaUdyb3VwczogWyJleHRlbnNpb25zIl0KICAgIHJlc291cmNlczogWyJuZXR3b3JrcG9saWNpZXMiLCAidGhpcmRwYXJ0eXJlc291cmNlcyJdCiAgICB2ZXJiczogWyJnZXQiLCAibGlzdCIsICJ3YXRjaCIsICJwcm94eSIsICJyZWRpcmVjdCJdCiAgICBub25SZXNvdXJjZVVSTHM6IFtdCgogIC0gYXBpR3JvdXBzOiBbInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbIioiXQogICAgdmVyYnM6IFsiZ2V0IiwgImxpc3QiLCAid2F0Y2giLCAicHJveHkiLCAicmVkaXJlY3QiXQogICAgbm9uUmVzb3VyY2VVUkxzOiBbXQo="
            },
            {
                "Filename": "tectonic/99_tectonic-ingress-01-cluster-config.yaml",
                "Data": "CmFwaVZlcnNpb246IHYxCmtpbmQ6IENvbmZpZ01hcAptZXRhZGF0YToKICBuYW1lOiBjbHVzdGVyLWNvbmZpZy12MQogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWluZ3Jlc3MKZGF0YToKICBpbmdyZXNzLWNvbmZpZzogfAogICAgYXBpVmVyc2lvbjogdjEKICAgIGtpbmQ6IFRlY3RvbmljSW5ncmVzc09wZXJhdG9yQ29uZmlnCiAgICB0eXBlOiBoYXByb3h5LXJvdXRlcgogICAgc3RhdHNQYXNzd29yZDogcGFzc3dvcmQKICAgIHN0YXRzVXNlcm5hbWU6IGFkbWluCg=="
            },
            {
                "Filename": "tectonic/99_tectonic-ingress-02-tls.yaml",
                "Data": "CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiB0ZWN0b25pYy1pbmdyZXNzLXRscwogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWluZ3Jlc3MKdHlwZTogT3BhcXVlCmRhdGE6CiAgdGxzLmNydDogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUjFWRU5EUVhGSFowRjNTVUpCWjBsSldteExObloxU25oVFUzZDNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRLVkVWU1RVRTRSMEV4VlVVS1EzaE5TVmx0T1haa1IzUXhXVzFWZUVWRVFVOUNaMDVXUWtGTlZFSXlkREZaYlZWMFdUSkZkMGhvWTA1TlZHZDRUVVJGTlUxVVRYaE9la2t5VjJoalRncE5hbWQ0VFVSRk1rMVVUWGhPZWtreVYycEJLMDFTUVhkRVoxbEVWbEZSUzBWM1pIQmliV1I1V2xoT2VrMVRiM2RMUVZsRVZsRlJSRVY1Um5waU1qRm9DbUpIZUd4bFV6VnJXbGhhYW1KSVZucGtSMVo1VEcwNWQxcFhOWHBoUjJ4dFpFTTFhbUl5TUhkblowVnBUVUV3UjBOVGNVZFRTV0l6UkZGRlFrRlJWVUVLUVRSSlFrUjNRWGRuWjBWTFFXOUpRa0ZSUkZCNlYzRXhRbEZsVUVGSmJtTkpWbWgxU2tkNE1YUkhSMWh0VkVjMlFYcEtVMGd3Y21aTFUyd3lTMGRVUlFvck5sWk9aRGR5TmpaYVYyOUNkV1ZyTmxOWU4wMU1aWGRCWkhBMU5FUjBPRGhKWlZsTVZTOXhSV05rVWxZM1JEWjBWa3gxVDAxNVRGSndPVlJNUnpsMENsbEdNV0ozT0ZKVFMyOUlXRkJYYm5kTU5EbFFNRlZPSzNsSmFXSjZhVEEwWW1oa0x6WmFPRGczVEhCWlpVdDFWVGhYUjFGSUwyZzNRMFphTmtOYWVVd0tjV1kzUlU5WFZWQkZPRkF3VHk5bVFXaGpjM3BTWjFZMGNtVnlSV0p2Y1c1UlFXSmlUVzVZYVd0elZtVlNLMFkyY0U5UVZYbFJWR0pqVjJ4b01qUkZaUXBSYTJwaWVGUnhiM1IwVDBNeWJYaERORTl4UVVOSmVtMUtkbk5TYkRWR2VtOW1jVU5XWlZOd2FTOURNRXBPVms5cU1HcEJZVWt6V1VWeFduaDFWM2h2Q2tGV1RreGhTbkpFTlhsbmVrZEdRazgwZW5oaVEydHJVa3huV1dkaGRIQm1PWG9yZUhjMlJHNUJaMDFDUVVGSGFtZGtUWGRuWkVGM1JHZFpSRlpTTUZBS1FWRklMMEpCVVVSQloxZG5UVUl3UjBFeFZXUktVVkZYVFVKUlIwTkRjMGRCVVZWR1FuZE5Ra0puWjNKQ1owVkdRbEZqUkVGcVFVMUNaMDVXU0ZKTlFncEJaamhGUVdwQlFVMUNNRWRCTVZWa1JHZFJWMEpDVTJocFdtOXBXVU0zYW5kTE4xbFRhemxzWWxobmJpOHlORFZuVkVGbVFtZE9Wa2hUVFVWSFJFRlhDbWRDVWtsck9XdzNNRFJoV2xaUGJFUkJUbEJzYUdwblpsTTNVMFpRYWtKU1FtZE9Wa2hTUlVWVGFrSkpaMmxHZW1JeU1XaGlSM2hzWlZNMWExcFlXbW9LWWtoV2VtUkhWbmxNYlRsM1dsYzFlbUZIYkcxa1F6VnFZakl5UTBsNWIzVmpNamwwV1ZkNGMxcFlhM1ZhUjFZeVdUSjRNV016VW14amFUVjJZMGRXZFFwak1taHdXbTVSZFZreU9YUk5RVEJIUTFOeFIxTkpZak5FVVVWQ1EzZFZRVUUwU1VKQlVVSlNTbEptV2xNdmFVRnROamREWlZwakt6SjNaamREZFdacUNtMHhSbE5ZTDBaeU5tUm1Wak50V0VKMVkwOTBWRlZXWXpnck9IcEtVVmRyTW5GR01HZEViM2RZYUVzMFVGRktWRE5hTXk5VVRqaGFja0ZuV0ZaQmJtb0tLMnR4VDBKM016RXhRVVYwWjBOTU4zQnlZamx3WW5KUllXRTBiemxRY0ZSdmFVcGtNRmd2VXpSVEwwVmFVRXh0VGpsdlpEVnNhalk1YW05SlZqSmtXZ3BhZHpCUGNWTkNhbUl4T0hoMkwzZEhPRzU2TVhsNVRIcEtRaloyWjNCUWFFZExZWEJVZG1rMlVITTBUSFZ5WVd3M1FqWTNOREIxVWtadlptRnBZVTVyQ2t4WFpGazRNMFYyTVhRMmNHdEllVFJCUzJwVk9ETjZhazl2UXl0T2FXeHplR1ZJVVdJM00zRnJMM05tVTBVd1NsRkJVMFp2WW5ocWNtdDBhVGhJYms0S1lqQjNORk5CV0VsRk5WWnNibEF5YjFoNFFsQnpTbkp4TW01eFdqYzROVzVDUWtSWmNFVktSRTA0YWtoaGREaFhTWFpZTkRoQmFYaE9hakpOQ2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLQ2kwdExTMHRRa1ZIU1U0Z1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFwTlNVbEVUVVJEUTBGb2FXZEJkMGxDUVdkSlNVZFdMM0pvZFdZMWNVTlpkMFJSV1VwTGIxcEphSFpqVGtGUlJVeENVVUYzU21wRlUwMUNRVWRCTVZWRkNrTjRUVXBpTTBKc1ltNU9iMkZYV2pCTlVrRjNSR2RaUkZaUlVVUkZkMlI1WWpJNU1FeFhUbWhOUWpSWVJGUkZORTFVUVhoUFZFVjZUVlJqZVU1c2IxZ0tSRlJKTkUxVVFYaE9ha1Y2VFZSamVVNXNiM2RLVkVWU1RVRTRSMEV4VlVWRGVFMUpXVzA1ZG1SSGRERlpiVlY0UlVSQlQwSm5UbFpDUVUxVVFqSjBNUXBaYlZWMFdUSkZkMmRuUldsTlFUQkhRMU54UjFOSllqTkVVVVZDUVZGVlFVRTBTVUpFZDBGM1oyZEZTMEZ2U1VKQlVVTnpORnBHTVZOTmFWaHVWemhZQ25KNU5ESnJWV3c1WmpCcGVFaFJURWcwWm5WTlpqQmFUVTFTVUhwR1dtUnJUelpaZW1ZMmJqZHFVMXBUTHk5bFdGWTRkV3N3YVRWNGJsY3hjVzlXU2xrS09FcHFRVUpJUVZsQk1tZEtjRXRLVVVZMGVGTmthSFZ6ZWtoWlVXaFNOVFJWV1U1S1RqaE5lR2syUldKTk1sQkRZbGwxTUhST1dtRnJRbU5GUkZwU2VBcHFObUU1U21rd1pVcHBSbkUyUkZKQlRGa3hkSGQwVUdoM2JGUTNXREpqWm10all5dExWVzEzTm5rMlNYSklhR0pTWjJsRVRDOXplbUp5TnpKc1NFdFVDbEpMTnpCNFZtMWplV1JxU21vNFJXRjVPSGsyVkhWT2NIZFZkVzFSZWxKRlVuQmlSbVZ0ZEdkdlR6Tm9lRk50WlhkdWRIaFZXazlCYlVaRGJqUlVRMlVLTDFOdlUzTm5NVE5XU0V0MmVuVkVSM3BEZFhSclJVWlFlRXRsUjBsNmFYVXJSemhCTlZvM1EwWXliaTkxYm5wSU0ySkZUUzhyZVZCM1oxRk9XUzlhTkFwb05uTm9TRmRTU2tGblRVSkJRVWRxV1hwQ2FFMUJORWRCTVZWa1JIZEZRaTkzVVVWQmQwbERjRVJCVUVKblRsWklVazFDUVdZNFJVSlVRVVJCVVVndkNrMUNNRWRCTVZWa1JHZFJWMEpDVWtsck9XdzNNRFJoV2xaUGJFUkJUbEJzYUdwblpsTTNVMFpRYWtGbVFtZE9Wa2hUVFVWSFJFRlhaMEpTU1dzNWJEY0tNRFJoV2xaUGJFUkJUbEJzYUdwblpsTTNVMFpRYWtGT1FtZHJjV2hyYVVjNWR6QkNRVkZ6UmtGQlQwTkJVVVZCUW1wS2FERnBNVXh2YURoc1JVdEVSd3BHWm1sQk9FUm5hRnAyZWxsYWJrOHpOa3RxWVdnM1NqWk1hWHBhU3pGWWRGazVUSGRHV1dJeU1uaExjV2x6YmtobVdFVnRTMEZDZVVNMU5DOVlOa1pDQ25CVWRFOVpXRFozUTFRclpHbzJiVUphV1VkUFRVa3ZiMmxGU1VOSWFEVmFaVkZOVUdOSFpGZGhTMWxyUmpZemMyRlRielZZV21RMFowNUdZMHRQZUV3S1ZrMXNiMEpKUm5FNGJtb3pNQ3RNTnpabk9XOVdTWFF4Y2s1NmRuSnJTa2RzWTJ0bFYzTnBZV05DYVdSTldISmhRMFE1Wkd4UFMycDROMWxxTm0xUlRncFZPVEVyTDB4b1RVMHZZV05DWlVObFRtcHdURTlDVkhWdFVHNW1lSEZ6VVhnMlMyOHdNekF4VUdGMVNVMDBiMlJ6VEVOUWNVRnRSWEpXWWpWSFZHRlBDa0lyTVdRck5FZEhjblUwYjJKWmIwNDJjbmhoTm5SbE1tVkZORTlqTTFoa1pIUk5hV1IzTUhWdkwwNDVUR2hUTUhsM1MwdGhaRFJUYzJoaWNVUnVSRmNLY2t3dmJYRkJQVDBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89CiAgdGxzLmtleTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGYjNkSlFrRkJTME5CVVVWQmVqZ3hjWFJSVlVocWQwTktNME5HV1dKcFVuTmtZbEpvYkRWcmVIVm5UWGxWYURsTE0zbHJjR1JwYUd0NFVIVnNDbFJZWlRZcmRXMVdjVUZpYm5CUGEyd3Jla016YzBGSVlXVmxRVGRtVUVOSWJVTXhVRFpvU0VoVlZtVjNLM0pXVXpkcWFrMXBNR0ZtVlhsNGRtSlhRbVFLVnpoUVJWVnBjVUl4ZWpGd09FTXJVRlE1UmtSbWMybEpiVGcwZEU5SE5GaG1LMjFtVUU5NU5sZElhWEpzVUVab2EwSXZOR1YzYUZkbFoyMWphVFp1S3dwNFJHeHNSSGhRUkRsRWRqTjNTVmhNVFRCWlJtVkxNM0Y0UnpaTGNEQkJSeko2U2pFMGNFeEdXR3RtYUdWeFZHb3hUV3RGTWpOR2NGbGtkVUpJYTBwSkNqSTRWVFp4VEdKVVozUndjMUYxUkhGblFXbE5OV2xpTjBWYVpWSmpOa2cyWjJ4WWEzRlpkbmQwUTFSV1ZHODVTWGRIYVU0eVFrdHRZMkpzYzJGQlJsUUtVekpwWVhjclkyOU5lR2hSVkhWTk9GZDNjRXBGVXpSSFNVZHlZVmd2WXk5elkwOW5OWGRKUkVGUlFVSkJiMGxDUVVSMGJYSjJRV05DWmsxak5XdDFhd3A0U2tOSWJsQkdkM0JOTUdaSU5WaGhkMEpITVc1RlRqWnJjakpUUVcxNFJYVjRXVkFyWTFWeU4waHVhSEl5YmpKek9FeEJVa2RJZEhoaVVUbEpkMUYxQ2tKaVV6aHFla2RNTnpOM1ZFbDVXVzV0ZUUwMU4xVTJTekkxVWpsRFZWVnpNMDFOVldwU1VXNTZiMGh0Y214bVdWbEtSV2xqY21KV1VVTmxOVzlxWlZZS1ZVOWFhSFJCUmtsamJWSkVObXhvYWxBNE5XaE9WR2xIVVRaSlUyaFhkVmsyV0M5S2NuSldPSElyUkU5SmNGQTRSV0pCVVdsM2VrazFVV3cyYkdONVVBcENWRU5PV0cxNFNTOUhOR1ptWm1ob1VEQmlTbVI0VWs1V016RllWR3hFVEVwMmVFNXRhMWd6ZEN0RlkyMXZPQzlGUkZOalNsRmxSVlI1YldFNGMyMTZDalozYlVaeVFVdHBlVzU1VEZka056VnBRbmMwVGtkdWVWWXhiMWxKTkZZMmJrcE1RMm8wTUVkcGQxVlpaREF3U1Roc1NFbHdSblJGZW5SQmVqQTBhVmNLUzBWSlRGWkRSVU5uV1VWQk5EaEdOVEJYTWprMloyUmtSVVY2UmsxQk1tWTRRa00ySzJoMVlVazVSekl4VERoQ1RVOHdSWEJCU2xwRFJVeHVaMlpDVUFwRFExZzNZMnRQT0ROaUsxQkVkR2xhYzBOdVIxbFBUbGt2V0hKV09XdE5jblZHWjNoRFIwUlhhMHd3Y2l0M2IydE5PRGt6T0VGM2MyWjNibWRJVFdWb0NrNHZPREJsTjB4V01VOVpNM1JPTms1a2NUWTJSVUZwY2tOV1FsTm9VRGxCV1dSdWNHRnhXbGd5VUd4VVZsbzNjRmxGVW5CVE5HdERaMWxGUVRaYVNqZ0tUV0pPTkZjM1IyODJTMlJ2ZG1GeVJtOHlPVUpYVUZwMFRrRjBXVEkyYkdkRmIySmtUSFIwZW1KRGNuUndRVVF4Vkd4VWJtdE1XRVJOYm14dE4zYzROUXBsWTNKcGJGZFhkazE0VVdWT1pGTkNSbU54YTFSdFNqWlBTa0ZwWjBoVlN6QlBNa0kyYURKdFIzRkVVV2RuTTFCNFRucGlXakYxTlVwMmFqUlpOVmRqQ2pGRFdEUTBRU3QxTlNzMFprbFhhRWw2TVRoQ05YVnpUbXR5YkRKaFdFbG9TVkF3ZVZCUE9FTm5XVUY0UlRjelYxQlNiVkpXYldwa1dFVXlXbGg2V1RVS2JYTkdVSEEyWWpsV1VFWmhkM0JZVmtoNE0wTTBZV0ZvZFhocU4zcFFZV0YzVDFJdk5rMTZTREE0UmxZMU5rdHRZbFJ2VFVseVJrbFlZa2hDVlZKUldRcHplR2hPZGl0Qk9HSkRZMUF2TURGNGVFdEZTbTUyV0hadloyTnBOMGhzTTBGWk1HcHZjRTlzVUhJMUsxRlFObTEwYkhaMGJrcERUMlo2Y0c4MGFpOVVDbFpuZFZGTFlYZEJWM2xzZWpVM2VFOVFReXRqVlZGTFFtZFJSRXgzTVhkUVN6aGtSRVIyUlZGNlowMUZLemRpYUZKcmVWYzFTbmRPTDBKM2RuWlZiM1lLZGpOSGVqQkJVMWxvTjJFM1JGazNla2xCVkVnM1Ntd3lUR2Q2VEZoMFprRldWM1J1T0RoYWN6VkJPR0V6VDBWcU9YQXhlVTlHZW5obVYxSnlPV2s1VXdwYWRrTm5TV1U1Ym1GWlYyTXZOVzFUTTNreVZYUkxUVWw1WTJjdlkwTlVXblZ4Y1hOS1YwcHlkVkZPTVdKSWJXZFdkbnBqZVRWQlUzZFVURFFyU0ZSSkNsSTNjVTVDZDB0Q1owSnpaMVJhVlRSd1UwNVpaMnhuZDFSa2RXOTVVMHhGWjBWdmIybDNUVTFtTVVkMWFYYzRLMjQyZW5sRlMwNTFRV3d3VXpGd0wySUtMMDAxTTNZNFpXeG9WM1JpVUhKaWRqWk5kMHBGVEZsRFZYQlZlRU5UTnpGbWRWVXJaRmR0U3pGbVpFZFJSMkZQVDNvclNHZDBPVmMzYUZCSWNHZEVPUW8zVVhFM1JHNHpiV1U0YWpneVRtbFVVM3BKVUVSV2MxQnBXa1l3YVUwekt6ZG9OVXBpYjBRM01rNWtWVEZsWW1nNVl6aFFDaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2c9PQogIGJ1bmRsZS5jcnQ6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVIxVkVORFFYRkhaMEYzU1VKQlowbEpXbXhMTm5aMVNuaFRVM2QzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkS1ZFVlNUVUU0UjBFeFZVVUtRM2hOU1ZsdE9YWmtSM1F4V1cxVmVFVkVRVTlDWjA1V1FrRk5WRUl5ZERGWmJWVjBXVEpGZDBob1kwNU5WR2Q0VFVSRk5VMVVUWGhPZWtreVYyaGpUZ3BOYW1kNFRVUkZNazFVVFhoT2Vra3lWMnBCSzAxU1FYZEVaMWxFVmxGUlMwVjNaSEJpYldSNVdsaE9lazFUYjNkTFFWbEVWbEZSUkVWNVJucGlNakZvQ21KSGVHeGxVelZyV2xoYWFtSklWbnBrUjFaNVRHMDVkMXBYTlhwaFIyeHRaRU0xYW1JeU1IZG5aMFZwVFVFd1IwTlRjVWRUU1dJelJGRkZRa0ZSVlVFS1FUUkpRa1IzUVhkblowVkxRVzlKUWtGUlJGQjZWM0V4UWxGbFVFRkpibU5KVm1oMVNrZDRNWFJIUjFodFZFYzJRWHBLVTBnd2NtWkxVMnd5UzBkVVJRb3JObFpPWkRkeU5qWmFWMjlDZFdWck5sTllOMDFNWlhkQlpIQTFORVIwT0RoSlpWbE1WUzl4UldOa1VsWTNSRFowVmt4MVQwMTVURkp3T1ZSTVJ6bDBDbGxHTVdKM09GSlRTMjlJV0ZCWGJuZE1ORGxRTUZWT0szbEphV0o2YVRBMFltaGtMelphT0RnM1RIQlpaVXQxVlRoWFIxRklMMmczUTBaYU5rTmFlVXdLY1dZM1JVOVhWVkJGT0ZBd1R5OW1RV2hqYzNwU1oxWTBjbVZ5UldKdmNXNVJRV0ppVFc1WWFXdHpWbVZTSzBZMmNFOVFWWGxSVkdKalYyeG9NalJGWlFwUmEycGllRlJ4YjNSMFQwTXliWGhETkU5eFFVTkplbTFLZG5OU2JEVkdlbTltY1VOV1pWTndhUzlETUVwT1ZrOXFNR3BCWVVreldVVnhXbmgxVjNodkNrRldUa3hoU25KRU5YbG5la2RHUWs4MGVuaGlRMnRyVWt4bldXZGhkSEJtT1hvcmVIYzJSRzVCWjAxQ1FVRkhhbWRrVFhkblpFRjNSR2RaUkZaU01GQUtRVkZJTDBKQlVVUkJaMWRuVFVJd1IwRXhWV1JLVVZGWFRVSlJSME5EYzBkQlVWVkdRbmROUWtKblozSkNaMFZHUWxGalJFRnFRVTFDWjA1V1NGSk5RZ3BCWmpoRlFXcEJRVTFDTUVkQk1WVmtSR2RSVjBKQ1UyaHBXbTlwV1VNM2FuZExOMWxUYXpsc1lsaG5iaTh5TkRWblZFRm1RbWRPVmtoVFRVVkhSRUZYQ21kQ1VrbHJPV3czTURSaFdsWlBiRVJCVGxCc2FHcG5abE0zVTBaUWFrSlNRbWRPVmtoU1JVVlRha0pKWjJsR2VtSXlNV2hpUjNoc1pWTTFhMXBZV21vS1lraFdlbVJIVm5sTWJUbDNXbGMxZW1GSGJHMWtRelZxWWpJeVEwbDViM1ZqTWpsMFdWZDRjMXBZYTNWYVIxWXlXVEo0TVdNelVteGphVFYyWTBkV2RRcGpNbWh3V201UmRWa3lPWFJOUVRCSFExTnhSMU5KWWpORVVVVkNRM2RWUVVFMFNVSkJVVUpTU2xKbVdsTXZhVUZ0TmpkRFpWcGpLekozWmpkRGRXWnFDbTB4UmxOWUwwWnlObVJtVmpOdFdFSjFZMDkwVkZWV1l6Z3JPSHBLVVZkck1uRkdNR2RFYjNkWWFFczBVRkZLVkROYU15OVVUamhhY2tGbldGWkJibW9LSzJ0eFQwSjNNekV4UVVWMFowTk1OM0J5WWpsd1luSlJZV0UwYnpsUWNGUnZhVXBrTUZndlV6UlRMMFZhVUV4dFRqbHZaRFZzYWpZNWFtOUpWakprV2dwYWR6QlBjVk5DYW1JeE9IaDJMM2RIT0c1Nk1YbDVUSHBLUWpaMlozQlFhRWRMWVhCVWRtazJVSE0wVEhWeVlXdzNRalkzTkRCMVVrWnZabUZwWVU1ckNreFhaRms0TTBWMk1YUTJjR3RJZVRSQlMycFZPRE42YWs5dlF5dE9hV3h6ZUdWSVVXSTNNM0ZyTDNObVUwVXdTbEZCVTBadlluaHFjbXQwYVRoSWJrNEtZakIzTkZOQldFbEZOVlpzYmxBeWIxaDRRbEJ6U25KeE1tNXhXamM0Tlc1Q1FrUlpjRVZLUkUwNGFraGhkRGhYU1haWU5EaEJhWGhPYWpKTkNpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwS0NpMHRMUzB0UWtWSFNVNGdRMFZTVkVsR1NVTkJWRVV0TFMwdExRcE5TVWxFVFVSRFEwRm9hV2RCZDBsQ1FXZEpTVWRXTDNKb2RXWTFjVU5aZDBSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGM1NtcEZVMDFDUVVkQk1WVkZDa040VFVwaU0wSnNZbTVPYjJGWFdqQk5Va0YzUkdkWlJGWlJVVVJGZDJSNVlqSTVNRXhYVG1oTlFqUllSRlJGTkUxVVFYaFBWRVY2VFZSamVVNXNiMWdLUkZSSk5FMVVRWGhPYWtWNlRWUmplVTVzYjNkS1ZFVlNUVUU0UjBFeFZVVkRlRTFKV1cwNWRtUkhkREZaYlZWNFJVUkJUMEpuVGxaQ1FVMVVRakowTVFwWmJWVjBXVEpGZDJkblJXbE5RVEJIUTFOeFIxTkpZak5FVVVWQ1FWRlZRVUUwU1VKRWQwRjNaMmRGUzBGdlNVSkJVVU56TkZwR01WTk5hVmh1VnpoWUNuSjVOREpyVld3NVpqQnBlRWhSVEVnMFpuVk5aakJhVFUxU1VIcEdXbVJyVHpaWmVtWTJiamRxVTFwVEx5OWxXRlk0ZFdzd2FUVjRibGN4Y1c5V1Nsa0tPRXBxUVVKSVFWbEJNbWRLY0V0S1VVWTBlRk5rYUhWemVraFpVV2hTTlRSVldVNUtUamhOZUdrMlJXSk5NbEJEWWxsMU1IUk9XbUZyUW1ORlJGcFNlQXBxTm1FNVNta3daVXBwUm5FMlJGSkJURmt4ZEhkMFVHaDNiRlEzV0RKalptdGpZeXRMVlcxM05uazJTWEpJYUdKU1oybEVUQzl6ZW1KeU56SnNTRXRVQ2xKTE56QjRWbTFqZVdScVNtbzRSV0Y1T0hrMlZIVk9jSGRWZFcxUmVsSkZVbkJpUm1WdGRHZHZUek5vZUZOdFpYZHVkSGhWV2s5QmJVWkRialJVUTJVS0wxTnZVM05uTVROV1NFdDJlblZFUjNwRGRYUnJSVVpRZUV0bFIwbDZhWFVyUnpoQk5WbzNRMFl5Ymk5MWJucElNMkpGVFM4cmVWQjNaMUZPV1M5YU5BcG9Obk5vU0ZkU1NrRm5UVUpCUVVkcVdYcENhRTFCTkVkQk1WVmtSSGRGUWk5M1VVVkJkMGxEY0VSQlVFSm5UbFpJVWsxQ1FXWTRSVUpVUVVSQlVVZ3ZDazFDTUVkQk1WVmtSR2RSVjBKQ1VrbHJPV3czTURSaFdsWlBiRVJCVGxCc2FHcG5abE0zVTBaUWFrRm1RbWRPVmtoVFRVVkhSRUZYWjBKU1NXczViRGNLTURSaFdsWlBiRVJCVGxCc2FHcG5abE0zVTBaUWFrRk9RbWRyY1docmFVYzVkekJDUVZGelJrRkJUME5CVVVWQlFtcEthREZwTVV4dmFEaHNSVXRFUndwR1ptbEJPRVJuYUZwMmVsbGFiazh6Tmt0cVlXZzNTalpNYVhwYVN6RllkRms1VEhkR1dXSXlNbmhMY1dsemJraG1XRVZ0UzBGQ2VVTTFOQzlZTmtaQ0NuQlVkRTlaV0RaM1ExUXJaR28yYlVKYVdVZFBUVWt2YjJsRlNVTklhRFZhWlZGTlVHTkhaRmRoUzFsclJqWXpjMkZUYnpWWVdtUTBaMDVHWTB0UGVFd0tWazFzYjBKSlJuRTRibW96TUN0TU56Wm5PVzlXU1hReGNrNTZkbkpyU2tkc1kydGxWM05wWVdOQ2FXUk5XSEpoUTBRNVpHeFBTMnA0TjFscU5tMVJUZ3BWT1RFckwweG9UVTB2WVdOQ1pVTmxUbXB3VEU5Q1ZIVnRVRzVtZUhGelVYZzJTMjh3TXpBeFVHRjFTVTAwYjJSelRFTlFjVUZ0UlhKV1lqVkhWR0ZQQ2tJck1XUXJORWRIY25VMGIySlpiMDQyY25oaE5uUmxNbVZGTkU5ak0xaGtaSFJOYVdSM01IVnZMMDQ1VEdoVE1IbDNTMHRoWkRSVGMyaGljVVJ1UkZjS2Nrd3ZiWEZCUFQwS0xTMHRMUzFGVGtRZ1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFvdExTMHRMVUpGUjBsT0lGSlRRU0JRVWtsV1FWUkZJRXRGV1MwdExTMHRDazFKU1VWdmQwbENRVUZMUTBGUlJVRjZPREZ4ZEZGVlNHcDNRMG96UTBaWlltbFNjMlJpVW1oc05XdDRkV2ROZVZWb09Vc3plV3R3Wkdsb2EzaFFkV3dLVkZobE5pdDFiVlp4UVdKdWNFOXJiQ3Q2UXpOelFVaGhaV1ZCTjJaUVEwaHRRekZRTm1oSVNGVldaWGNyY2xaVE4ycHFUV2t3WVdaVmVYaDJZbGRDWkFwWE9GQkZWV2x4UWpGNk1YQTRReXRRVkRsR1JHWnphVWx0T0RSMFQwYzBXR1lyYldaUVQzazJWMGhwY214UVJtaHJRaTgwWlhkb1YyVm5iV05wTm00ckNuaEViR3hFZUZCRU9VUjJNM2RKV0V4Tk1GbEdaVXN6Y1hoSE5rdHdNRUZITW5wS01UUndURVpZYTJab1pYRlVhakZOYTBVeU0wWndXV1IxUWtoclNra0tNamhWTm5GTVlsUm5kSEJ6VVhWRWNXZEJhVTAxYVdJM1JWcGxVbU0yU0RabmJGaHJjVmwyZDNSRFZGWlViemxKZDBkcFRqSkNTMjFqWW14ellVRkdWQXBUTW1saGR5dGpiMDE0YUZGVWRVMDRWM2R3U2tWVE5FZEpSM0poV0M5akwzTmpUMmMxZDBsRVFWRkJRa0Z2U1VKQlJIUnRjblpCWTBKbVRXTTFhM1ZyQ25oS1EwaHVVRVozY0Uwd1prZzFXR0YzUWtjeGJrVk9ObXR5TWxOQmJYaEZkWGhaVUN0alZYSTNTRzVvY2pKdU1uTTRURUZTUjBoMGVHSlJPVWwzVVhVS1FtSlRPR3A2UjB3M00zZFVTWGxaYm0xNFRUVTNWVFpMTWpWU09VTlZWWE16VFUxVmFsSlJibnB2U0cxeWJHWlpXVXBGYVdOeVlsWlJRMlUxYjJwbFZncFZUMXBvZEVGR1NXTnRVa1EyYkdocVVEZzFhRTVVYVVkUk5rbFRhRmQxV1RaWUwwcHljbFk0Y2l0RVQwbHdVRGhGWWtGUmFYZDZTVFZSYkRac1kzbFFDa0pVUTA1WWJYaEpMMGMwWm1abWFHaFFNR0pLWkhoU1RsWXpNVmhVYkVSTVNuWjRUbTFyV0ROMEswVmpiVzg0TDBWRVUyTktVV1ZGVkhsdFlUaHpiWG9LTm5kdFJuSkJTMmw1Ym5sTVYyUTNOV2xDZHpST1IyNTVWakZ2V1VrMFZqWnVTa3hEYWpRd1IybDNWVmxrTURCSk9HeElTWEJHZEVWNmRFRjZNRFJwVndwTFJVbE1Wa05GUTJkWlJVRTBPRVkxTUZjeU9UWm5aR1JGUlhwR1RVRXlaamhDUXpZcmFIVmhTVGxITWpGTU9FSk5UekJGY0VGS1drTkZURzVuWmtKUUNrTkRXRGRqYTA4NE0ySXJVRVIwYVZwelEyNUhXVTlPV1M5WWNsWTVhMDF5ZFVabmVFTkhSRmRyVERCeUszZHZhMDA0T1RNNFFYZHpabmR1WjBoTlpXZ0tUaTg0TUdVM1RGWXhUMWt6ZEU0MlRtUnhOalpGUVdseVExWkNVMmhRT1VGWlpHNXdZWEZhV0RKUWJGUldXamR3V1VWU2NGTTBhME5uV1VWQk5scEtPQXBOWWs0MFZ6ZEhielpMWkc5MllYSkdiekk1UWxkUVduUk9RWFJaTWpac1owVnZZbVJNZEhSNllrTnlkSEJCUkRGVWJGUnVhMHhZUkUxdWJHMDNkemcxQ21WamNtbHNWMWQyVFhoUlpVNWtVMEpHWTNGclZHMUtOazlLUVdsblNGVkxNRTh5UWpab01tMUhjVVJSWjJjelVIaE9lbUphTVhVMVNuWnFORmsxVjJNS01VTllORFJCSzNVMUt6Um1TVmRvU1hveE9FSTFkWE5PYTNKc01tRllTV2hKVURCNVVFODRRMmRaUVhoRk56TlhVRkp0VWxadGFtUllSVEphV0hwWk5RcHRjMFpRY0RaaU9WWlFSbUYzY0ZoV1NIZ3pRelJoWVdoMWVHbzNlbEJoWVhkUFVpODJUWHBJTURoR1ZqVTJTMjFpVkc5TlNYSkdTVmhpU0VKVlVsRlpDbk40YUU1MkswRTRZa05qVUM4d01YaDRTMFZLYm5aWWRtOW5ZMmszU0d3elFWa3dhbTl3VDJ4UWNqVXJVVkEyYlhSc2RuUnVTa05QWm5wd2J6UnFMMVFLVm1kMVVVdGhkMEZYZVd4Nk5UZDRUMUJESzJOVlVVdENaMUZFVEhjeGQxQkxPR1JFUkhaRlVYcG5UVVVyTjJKb1VtdDVWelZLZDA0dlFuZDJkbFZ2ZGdwMk0wZDZNRUZUV1dnM1lUZEVXVGQ2U1VGVVNEZEtiREpNWjNwTVdIUm1RVlpYZEc0NE9GcHpOVUU0WVROUFJXbzVjREY1VDBaNmVHWlhVbkk1YVRsVENscDJRMmRKWlRsdVlWbFhZeTgxYlZNemVUSlZkRXROU1hsalp5OWpRMVJhZFhGeGMwcFhTbkoxVVU0eFlraHRaMVoyZW1ONU5VRlRkMVJNTkN0SVZFa0tVamR4VGtKM1MwSm5Rbk5uVkZwVk5IQlRUbGxuYkdkM1ZHUjFiM2xUVEVWblJXOXZhWGROVFdZeFIzVnBkemdyYmpaNmVVVkxUblZCYkRCVE1YQXZZZ292VFRVemRqaGxiR2hYZEdKUWNtSjJOazEzU2tWTVdVTlZjRlY0UTFNM01XWjFWU3RrVjIxTE1XWmtSMUZIWVU5UGVpdElaM1E1Vnpkb1VFaHdaMFE1Q2pkUmNUZEViak50WlRocU9ESk9hVlJUZWtsUVJGWnpVR2xhUmpCcFRUTXJOMmcxU21KdlJEY3lUbVJWTVdWaWFEbGpPRkFLTFMwdExTMUZUa1FnVWxOQklGQlNTVlpCVkVVZ1MwVlpMUzB0TFMwSwo="
            },
            {
                "Filename": "tectonic/99_tectonic-system-01-ca-cert.yaml",
                "Data": "CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiB0ZWN0b25pYy1jYS1jZXJ0LXNlY3JldAogIG5hbWVzcGFjZTogdGVjdG9uaWMtc3lzdGVtCnR5cGU6IE9wYXF1ZQpkYXRhOgogIGNhLWNlcnQ6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJOUkVORFFXaHBaMEYzU1VKQlowbEpSMVl2Y21oMVpqVnhRMWwzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkS2FrVlRUVUpCUjBFeFZVVUtRM2hOU21JelFteGliazV2WVZkYU1FMVNRWGRFWjFsRVZsRlJSRVYzWkhsaU1qa3dURmRPYUUxQ05GaEVWRVUwVFZSQmVFOVVSWHBOVkdONVRteHZXQXBFVkVrMFRWUkJlRTVxUlhwTlZHTjVUbXh2ZDBwVVJWSk5RVGhIUVRGVlJVTjRUVWxaYlRsMlpFZDBNVmx0VlhoRlJFRlBRbWRPVmtKQlRWUkNNblF4Q2xsdFZYUlpNa1YzWjJkRmFVMUJNRWREVTNGSFUwbGlNMFJSUlVKQlVWVkJRVFJKUWtSM1FYZG5aMFZMUVc5SlFrRlJRM00wV2tZeFUwMXBXRzVYT0ZnS2NuazBNbXRWYkRsbU1HbDRTRkZNU0RSbWRVMW1NRnBOVFZKUWVrWmFaR3RQTmxsNlpqWnVOMnBUV2xNdkwyVllWamgxYXpCcE5YaHVWekZ4YjFaS1dRbzRTbXBCUWtoQldVRXlaMHB3UzBwUlJqUjRVMlJvZFhONlNGbFJhRkkxTkZWWlRrcE9PRTE0YVRaRllrMHlVRU5pV1hVd2RFNWFZV3RDWTBWRVdsSjRDbW8yWVRsS2FUQmxTbWxHY1RaRVVrRk1XVEYwZDNSUWFIZHNWRGRZTW1ObWEyTmpLMHRWYlhjMmVUWkpja2hvWWxKbmFVUk1MM042WW5JM01teElTMVFLVWtzM01IaFdiV041WkdwS2FqaEZZWGs0ZVRaVWRVNXdkMVYxYlZGNlVrVlNjR0pHWlcxMFoyOVBNMmg0VTIxbGQyNTBlRlZhVDBGdFJrTnVORlJEWlFvdlUyOVRjMmN4TTFaSVMzWjZkVVJIZWtOMWRHdEZSbEI0UzJWSFNYcHBkU3RIT0VFMVdqZERSakp1TDNWdWVrZ3pZa1ZOTHl0NVVIZG5VVTVaTDFvMENtZzJjMmhJVjFKS1FXZE5Ra0ZCUjJwWmVrSm9UVUUwUjBFeFZXUkVkMFZDTDNkUlJVRjNTVU53UkVGUVFtZE9Wa2hTVFVKQlpqaEZRbFJCUkVGUlNDOEtUVUl3UjBFeFZXUkVaMUZYUWtKU1NXczViRGN3TkdGYVZrOXNSRUZPVUd4b2FtZG1VemRUUmxCcVFXWkNaMDVXU0ZOTlJVZEVRVmRuUWxKSmF6bHNOd293TkdGYVZrOXNSRUZPVUd4b2FtZG1VemRUUmxCcVFVNUNaMnR4YUd0cFJ6bDNNRUpCVVhOR1FVRlBRMEZSUlVGQ2FrcG9NV2t4VEc5b09HeEZTMFJIQ2tabWFVRTRSR2RvV25aNldWcHVUek0yUzJwaGFEZEtOa3hwZWxwTE1WaDBXVGxNZDBaWllqSXllRXR4YVhOdVNHWllSVzFMUVVKNVF6VTBMMWcyUmtJS2NGUjBUMWxZTm5kRFZDdGthalp0UWxwWlIwOU5TUzl2YVVWSlEwaG9OVnBsVVUxUVkwZGtWMkZMV1d0R05qTnpZVk52TlZoYVpEUm5Ua1pqUzA5NFRBcFdUV3h2UWtsR2NUaHVhak13SzB3M05tYzViMVpKZERGeVRucDJjbXRLUjJ4amEyVlhjMmxoWTBKcFpFMVljbUZEUkRsa2JFOUxhbmczV1dvMmJWRk9DbFU1TVNzdlRHaE5UUzloWTBKbFEyVk9hbkJNVDBKVWRXMVFibVo0Y1hOUmVEWkxiekF6TURGUVlYVkpUVFJ2WkhOTVExQnhRVzFGY2xaaU5VZFVZVThLUWlzeFpDczBSMGR5ZFRSdllsbHZUalp5ZUdFMmRHVXlaVVUwVDJNeldHUmtkRTFwWkhjd2RXOHZUamxNYUZNd2VYZExTMkZrTkZOemFHSnhSRzVFVndweVRDOXRjVUU5UFFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2c9PQo="
            },
            {
                "Filename": "tectonic/99_kube-addon-00-appversion.yaml",
                "Data": "Ci0tLQphcGlWZXJzaW9uOiB0Y28uY29yZW9zLmNvbS92MQpraW5kOiBBcHBWZXJzaW9uCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtYWRkb24KICBuYW1lc3BhY2U6IHRlY3RvbmljLXN5c3RlbQogIGxhYmVsczoKICAgIG1hbmFnZWQtYnktY2hhbm5lbC1vcGVyYXRvcjogInRydWUiCnNwZWM6CiAgZGVzaXJlZFZlcnNpb246CiAgcGF1c2VkOiBmYWxzZQpzdGF0dXM6CiAgY3VycmVudFZlcnNpb246CiAgcGF1c2VkOiBmYWxzZQp1cGdyYWRlcmVxOiAxCnVwZ3JhZGVjb21wOiAwCg=="
            },
            {
                "Filename": "tectonic/99_role-admin.yaml",
                "Data": "Ci0tLQpraW5kOiBDbHVzdGVyUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxYmV0YTEKbWV0YWRhdGE6CiAgbmFtZTogYWRtaW4KcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiKiJdCiAgICByZXNvdXJjZXM6IFsiKiJdCiAgICB2ZXJiczogWyIqIl0KICAtIG5vblJlc291cmNlVVJMczogWyIqIl0KICAgIHZlcmJzOiBbIioiXQo="
            },
            {
                "Filename": "tectonic/99_tectonic-system-02-pull.json",
                "Data": "CnsKICAiYXBpVmVyc2lvbiI6ICJ2MSIsCiAgImtpbmQiOiAiU2VjcmV0IiwKICAidHlwZSI6ICJrdWJlcm5ldGVzLmlvL2RvY2tlcmNvbmZpZ2pzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lc3BhY2UiOiAidGVjdG9uaWMtc3lzdGVtIiwKICAgICJuYW1lIjogImNvcmVvcy1wdWxsLXNlY3JldCIKICB9LAogICJkYXRhIjogewogICAgIi5kb2NrZXJjb25maWdqc29uIjogImV5SmhkWFJvY3lJNklIc2ljWFZoZVM1cGJ5STZJSHNpWVhWMGFDSTZJQ0paTWpsNVdsYzVla3N6VW14WmVrcG1ZVmRhYVdSWFpITmhia1p3WTFSU01HSllSbmxsUjJReFRXNU5lV0pYZEc1aFZHOTNWV3hrVkU5V2FFeFdWRnBIVGtVNGVGVlZPVkZOVld4YVZGVlNSbFJHY0ZKVlZYTXlUbFpPVmxNd2EzZFZWRTEzVkZWT1YxZEdWVFZTTUd4UFYxVmtSRlJXVVhkT1JGSmFUVlJLVGxaNlNYaFNWa3BTSWl3aVpXMWhhV3dpT2lBaUluMTlmUT09IgogIH0KfQo="
            },
            {
                "Filename": "tectonic/99_openshift-cluster-api_cluster.yaml",
                "Data": "CmFwaVZlcnNpb246ICJjbHVzdGVyLms4cy5pby92MWFscGhhMSIKa2luZDogQ2x1c3RlcgptZXRhZGF0YToKICBuYW1lOiBzb21hbGxleQogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNsdXN0ZXItYXBpCnNwZWM6CiAgY2x1c3Rlck5ldHdvcms6CiAgICBzZXJ2aWNlczoKICAgICAgY2lkckJsb2NrczoKICAgICAgLSAxMC4zLjAuMC8xNgogICAgcG9kczoKICAgICAgY2lkckJsb2NrczoKICAgICAgLSAxMC4yLjAuMC8xNgogICAgc2VydmljZURvbWFpbjogdW51c2VkCg=="
            },
            {
                "Filename": "tectonic/99_openshift-cluster-api_worker-machineset.yaml",
                "Data": "CmFwaVZlcnNpb246IGNsdXN0ZXIuazhzLmlvL3YxYWxwaGExCmtpbmQ6IE1hY2hpbmVTZXQKbWV0YWRhdGE6CiAgbmFtZTogc29tYWxsZXktd29ya2VyLTAKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLWFwaQogIGxhYmVsczoKICAgIHNpZ3MuazhzLmlvL2NsdXN0ZXItYXBpLWNsdXN0ZXI6IHNvbWFsbGV5CiAgICBzaWdzLms4cy5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IHdvcmtlcgogICAgc2lncy5rOHMuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKc3BlYzoKICByZXBsaWNhczogMwogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIHNpZ3MuazhzLmlvL2NsdXN0ZXItYXBpLW1hY2hpbmVzZXQ6IHdvcmtlcgogICAgICBzaWdzLms4cy5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBzb21hbGxleQogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBzaWdzLms4cy5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiB3b3JrZXIKICAgICAgICBzaWdzLms4cy5pby9jbHVzdGVyLWFwaS1jbHVzdGVyOiBzb21hbGxleQogICAgICAgIHNpZ3MuazhzLmlvL2NsdXN0ZXItYXBpLW1hY2hpbmUtcm9sZTogd29ya2VyCiAgICAgICAgc2lncy5rOHMuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiB3b3JrZXIKICAgIHNwZWM6CiAgICAgIHByb3ZpZGVyQ29uZmlnOgogICAgICAgIHZhbHVlOgogICAgICAgICAgYXBpVmVyc2lvbjogYXdzLmNsdXN0ZXIuazhzLmlvL3YxYWxwaGExCiAgICAgICAgICBraW5kOiBBV1NNYWNoaW5lUHJvdmlkZXJDb25maWcKICAgICAgICAgIGFtaToKICAgICAgICAgICAgaWQ6IGFtaS0wMDJjZTI4ZTQzYzExOTA1NAogICAgICAgICAgaW5zdGFuY2VUeXBlOiB0Mi5tZWRpdW0KICAgICAgICAgIHBsYWNlbWVudDoKICAgICAgICAgICAgcmVnaW9uOiB1cy1lYXN0LTIKICAgICAgICAgIHN1Ym5ldDoKICAgICAgICAgICAgZmlsdGVyczoKICAgICAgICAgICAgLSBuYW1lOiAidGFnOk5hbWUiCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gInNvbWFsbGV5LXdvcmtlci0qIgogICAgICAgICAgaWFtSW5zdGFuY2VQcm9maWxlOgogICAgICAgICAgICBpZDogInNvbWFsbGV5LXdvcmtlci1wcm9maWxlIgogICAgICAgICAgdGFnczoKICAgICAgICAgICAgLSBuYW1lOiAidGVjdG9uaWNDbHVzdGVySUQiCiAgICAgICAgICAgICAgdmFsdWU6ICJkMzJlMWFhZS0yMzQwLTQxNmQtOWJhMi00MTQ5YjhlMWRjODUiCiAgICAgICAgICBzZWN1cml0eUdyb3VwczoKICAgICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAgIC0gbmFtZTogInRhZzpOYW1lIgogICAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgICAgLSAic29tYWxsZXlfd29ya2VyX3NnIgogICAgICAgICAgdXNlckRhdGFTZWNyZXQ6CiAgICAgICAgICAgIG5hbWU6IHdvcmtlci11c2VyLWRhdGEKICAgICAgdmVyc2lvbnM6CiAgICAgICAga3ViZWxldDogIiIKICAgICAgICBjb250cm9sUGxhbmU6ICIiCg=="
            },
            {
                "Filename": "tectonic/99_tectonic-ingress-03-pull.json",
                "Data": "CnsKICAiYXBpVmVyc2lvbiI6ICJ2MSIsCiAgImtpbmQiOiAiU2VjcmV0IiwKICAidHlwZSI6ICJrdWJlcm5ldGVzLmlvL2RvY2tlcmNvbmZpZ2pzb24iLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lc3BhY2UiOiAib3BlbnNoaWZ0LWluZ3Jlc3MiLAogICAgIm5hbWUiOiAiY29yZW9zLXB1bGwtc2VjcmV0IgogIH0sCiAgImRhdGEiOiB7CiAgICAiLmRvY2tlcmNvbmZpZ2pzb24iOiAiZXlKaGRYUm9jeUk2SUhzaWNYVmhlUzVwYnlJNklIc2lZWFYwYUNJNklDSlpNamw1V2xjNWVrc3pVbXhaZWtwbVlWZGFhV1JYWkhOaGJrWndZMVJTTUdKWVJubGxSMlF4VFc1TmVXSlhkRzVoVkc5M1ZXeGtWRTlXYUV4V1ZGcEhUa1U0ZUZWVk9WRk5WV3hhVkZWU1JsUkdjRkpWVlhNeVRsWk9WbE13YTNkVlZFMTNWRlZPVjFkR1ZUVlNNR3hQVjFWa1JGUldVWGRPUkZKYVRWUktUbFo2U1hoU1ZrcFNJaXdpWlcxaGFXd2lPaUFpSW4xOWZRPT0iCiAgfQp9Cg=="
            },
            {
                "Filename": "tectonic/99_tectonic-ingress-05-operator.yaml",
                "Data": "CmFwaVZlcnNpb246IGFwcHMvdjFiZXRhMgpraW5kOiBEZXBsb3ltZW50Cm1ldGFkYXRhOgogIG5hbWU6IHRlY3RvbmljLWluZ3Jlc3MtY29udHJvbGxlci1vcGVyYXRvcgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWluZ3Jlc3MKICBsYWJlbHM6CiAgICBrOHMtYXBwOiB0ZWN0b25pYy1pbmdyZXNzLWNvbnRyb2xsZXItb3BlcmF0b3IKICAgIG1hbmFnZWQtYnktY2hhbm5lbC1vcGVyYXRvcjogInRydWUiCnNwZWM6CiAgcmVwbGljYXM6IDEKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBrOHMtYXBwOiB0ZWN0b25pYy1pbmdyZXNzLWNvbnRyb2xsZXItb3BlcmF0b3IKICB0ZW1wbGF0ZToKICAgIG1ldGFkYXRhOgogICAgICBsYWJlbHM6CiAgICAgICAgazhzLWFwcDogdGVjdG9uaWMtaW5ncmVzcy1jb250cm9sbGVyLW9wZXJhdG9yCiAgICAgICAgdGVjdG9uaWMtYXBwLXZlcnNpb24tbmFtZTogdGVjdG9uaWMtaW5ncmVzcwogICAgc3BlYzoKICAgICAgY29udGFpbmVyczoKICAgICAgICAtIG5hbWU6IHRlY3RvbmljLWluZ3Jlc3MtY29udHJvbGxlci1vcGVyYXRvcgogICAgICAgICAgaW1hZ2U6IHF1YXkuaW8vY29yZW9zL3RlY3RvbmljLWluZ3Jlc3MtY29udHJvbGxlci1vcGVyYXRvci1kZXY6Mzc1NDIzYTMzMmYyYzEyYjc5NDM4ZmM2YTZkYTZlNDQ4ZTI4ZWMwZgogICAgICAgICAgcmVzb3VyY2VzOgogICAgICAgICAgICBsaW1pdHM6CiAgICAgICAgICAgICAgY3B1OiAyMG0KICAgICAgICAgICAgICBtZW1vcnk6IDUwTWkKICAgICAgICAgICAgcmVxdWVzdHM6CiAgICAgICAgICAgICAgY3B1OiAyMG0KICAgICAgICAgICAgICBtZW1vcnk6IDUwTWkKICAgICAgICAgIHZvbHVtZU1vdW50czoKICAgICAgICAgICAgLSBuYW1lOiBjbHVzdGVyLWNvbmZpZwogICAgICAgICAgICAgIG1vdW50UGF0aDogL2V0Yy9jbHVzdGVyLWNvbmZpZwogICAgICBpbWFnZVB1bGxTZWNyZXRzOgogICAgICAgIC0gbmFtZTogY29yZW9zLXB1bGwtc2VjcmV0CiAgICAgIG5vZGVTZWxlY3RvcjoKICAgICAgICBub2RlLXJvbGUua3ViZXJuZXRlcy5pby9tYXN0ZXI6ICIiCiAgICAgIHJlc3RhcnRQb2xpY3k6IEFsd2F5cwogICAgICBzZWN1cml0eUNvbnRleHQ6CiAgICAgICAgcnVuQXNOb25Sb290OiB0cnVlCiAgICAgICAgcnVuQXNVc2VyOiA2NTUzNAogICAgICBzZXJ2aWNlQWNjb3VudDogdGVjdG9uaWMtaW5ncmVzcy1jb250cm9sbGVyLW9wZXJhdG9yCiAgICAgIHRvbGVyYXRpb25zOgogICAgICAgIC0ga2V5OiAibm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyIgogICAgICAgICAgb3BlcmF0b3I6ICJFeGlzdHMiCiAgICAgICAgICBlZmZlY3Q6ICJOb1NjaGVkdWxlIgogICAgICB2b2x1bWVzOgogICAgICAgIC0gbmFtZTogY2x1c3Rlci1jb25maWcKICAgICAgICAgIGNvbmZpZ01hcDoKICAgICAgICAgICAgbmFtZTogY2x1c3Rlci1jb25maWctdjEKICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgLSBrZXk6IGluZ3Jlc3MtY29uZmlnCiAgICAgICAgICAgICAgICBwYXRoOiBpbmdyZXNzLWNvbmZpZwo="
            }
        ]
    },
    "*manifests.kubeAddonOperator": {
        "Config": {
            "kind": "KubeAddonOperatorConfig",
            "apiVersion": "v1",
            "clusterConfig": {
                "apiserver_url": "https://somalley-api.devcluster.openshift.com:6443"
            },
            "cloudProvider": "aws",
            "registryHTTPSecret": "whbm2jkq6rjtbb8d"
        },
        "File": {
            "Filename": "kube-addon-operator-config.yml",
            "Data": "YXBpVmVyc2lvbjogdjEKY2xvdWRQcm92aWRlcjogYXdzCmNsdXN0ZXJDb25maWc6CiAgYXBpc2VydmVyX3VybDogaHR0cHM6Ly9zb21hbGxleS1hcGkuZGV2Y2x1c3Rlci5vcGVuc2hpZnQuY29tOjY0NDMKa2luZDogS3ViZUFkZG9uT3BlcmF0b3JDb25maWcKcmVnaXN0cnlIVFRQU2VjcmV0OiB3aGJtMmprcTZyanRiYjhkCg=="
        }
    },
    "*manifests.machineAPIOperator": {
        "Config": {
            "kind": "machineAPIOperatorConfig",
            "apiVersion": "v1",
            "targetNamespace": "openshift-cluster-api",
            "apiServiceCA": "-----BEGIN CERTIFICATE-----\nMIIDMzCCAhugAwIBAgIIdrE1QEtrnA0wDQYJKoZIhvcNAQELBQAwJjESMBAGA1UE\nCxMJb3BlbnNoaWZ0MRAwDgYDVQQDEwdyb290LWNhMB4XDTE4MTAxOTEzMTcyNloX\nDTI4MTAxNjEzMTcyN1owKDERMA8GA1UECxMIYm9vdGt1YmUxEzARBgNVBAMTCmFn\nZ3JlZ2F0b3IwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCVRwwC/F8\nBf5UgYLg8CSp9GstazEtMqC3OHZ72O892BGOPV42iTQ00nE1AMvdO3YeBMpoAZGD\nbociQjvaA7xWbZBQ4M7ckZ0M32P061HyrjIm1m8Lb2YTdYMoz5UftYJ/RIiRb7+C\n1uThYSk+atjKV6kLcsq7ijtJGecxZCWgklt9QdgnjrXfk80gz5xa+UCQa/A2qyXb\nqj+nhGl8MajQ479i57Or08EPcfkOkxY+Dfldx7Gu1EfMeAB7cXg3VLsvtb643Qn0\n4FtnzN4neuOe+kPYH9++KWecEHrYgGkZbDEMU9bJbeH36H1PgmQbT8nE2DWHQglC\nNkAYZ6hDgVUvAgMBAAGjYzBhMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTAD\nAQH/MB0GA1UdDgQWBBRIk9l704aZVOlDANPlhjgfS7SFPjAfBgNVHSMEGDAWgBRI\nk9l704aZVOlDANPlhjgfS7SFPjANBgkqhkiG9w0BAQsFAAOCAQEARIfNPhitfNx1\n1w1l+hf+0p5nOLdYBY2nawepTa9TNfkaLrVNK0YbTCb9aqyty68miWySjXw0ryR7\nI9svadVgxEG6+hMhleCoFpsByShfHGiv5v94ODDoeA7ZGOcYcqRv+Rt7WUylnw1r\n0XB8ZVZRzNmTUG6rDRhrXruDBRxg5E6o4ScaGpep22J7e1XSsMH/Gh2b3Lbx6Wwt\nOtl5o85sPpJzDLuoCbiCn/OMh12Bxs/+06YP9D1P2+/zZqMPUGKb0ftU6WMIls4X\n6C77iit9WbnU9MOm0NMnDqq+cTmSL8AWE1uv0KtlxKy/aLlBFCmcgMtm8Ih4GYmG\nn2YAbQhVsg==\n-----END CERTIFICATE-----\n",
            "provider": "aws",
            "aws": {
                "clusterName": "somalley",
                "clusterID": "d32e1aae-2340-416d-9ba2-4149b8e1dc85",
                "region": "us-east-2",
                "availabilityZone": "",
                "image": "ami-002ce28e43c119054",
                "replicas": 0
            },
            "libvirt": null,
            "openstack": null
        },
        "File": {
            "Filename": "machine-api-operator-config.yml",
            "Data": "YXBpU2VydmljZUNBOiB8CiAgLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCiAgTUlJRE16Q0NBaHVnQXdJQkFnSUlkckUxUUV0cm5BMHdEUVlKS29aSWh2Y05BUUVMQlFBd0pqRVNNQkFHQTFVRQogIEN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNE1UQXhPVEV6TVRjeU5sb1gKICBEVEk0TVRBeE5qRXpNVGN5TjFvd0tERVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFekFSQmdOVkJBTVRDbUZuCiAgWjNKbFoyRjBiM0l3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRENWUnd3Qy9GOAogIEJmNVVnWUxnOENTcDlHc3RhekV0TXFDM09IWjcyTzg5MkJHT1BWNDJpVFEwMG5FMUFNdmRPM1llQk1wb0FaR0QKICBib2NpUWp2YUE3eFdiWkJRNE03Y2taME0zMlAwNjFIeXJqSW0xbThMYjJZVGRZTW96NVVmdFlKL1JJaVJiNytDCiAgMXVUaFlTaythdGpLVjZrTGNzcTdpanRKR2VjeFpDV2drbHQ5UWRnbmpyWGZrODBnejV4YStVQ1FhL0EycXlYYgogIHFqK25oR2w4TWFqUTQ3OWk1N09yMDhFUGNma09reFkrRGZsZHg3R3UxRWZNZUFCN2NYZzNWTHN2dGI2NDNRbjAKICA0RnRuek40bmV1T2Ura1BZSDkrK0tXZWNFSHJZZ0drWmJERU1VOWJKYmVIMzZIMVBnbVFiVDhuRTJEV0hRZ2xDCiAgTmtBWVo2aERnVlV2QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRAogIEFRSC9NQjBHQTFVZERnUVdCQlJJazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBZkJnTlZIU01FR0RBV2dCUkkKICBrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBUklmTlBoaXRmTngxCiAgMXcxbCtoZiswcDVuT0xkWUJZMm5hd2VwVGE5VE5ma2FMclZOSzBZYlRDYjlhcXl0eTY4bWlXeVNqWHcwcnlSNwogIEk5c3ZhZFZneEVHNitoTWhsZUNvRnBzQnlTaGZIR2l2NXY5NE9ERG9lQTdaR09jWWNxUnYrUnQ3V1V5bG53MXIKICAwWEI4WlZaUnpObVRVRzZyRFJoclhydURCUnhnNUU2bzRTY2FHcGVwMjJKN2UxWFNzTUgvR2gyYjNMYng2V3d0CiAgT3RsNW84NXNQcEp6REx1b0NiaUNuL09NaDEyQnhzLyswNllQOUQxUDIrL3pacU1QVUdLYjBmdFU2V01JbHM0WAogIDZDNzdpaXQ5V2JuVTlNT20wTk1uRHFxK2NUbVNMOEFXRTF1djBLdGx4S3kvYUxsQkZDbWNnTXRtOEloNEdZbUcKICBuMllBYlFoVnNnPT0KICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCmFwaVZlcnNpb246IHYxCmF3czoKICBhdmFpbGFiaWxpdHlab25lOiAiIgogIGNsdXN0ZXJJRDogZDMyZTFhYWUtMjM0MC00MTZkLTliYTItNDE0OWI4ZTFkYzg1CiAgY2x1c3Rlck5hbWU6IHNvbWFsbGV5CiAgaW1hZ2U6IGFtaS0wMDJjZTI4ZTQzYzExOTA1NAogIHJlZ2lvbjogdXMtZWFzdC0yCiAgcmVwbGljYXM6IDAKa2luZDogbWFjaGluZUFQSU9wZXJhdG9yQ29uZmlnCmxpYnZpcnQ6IG51bGwKb3BlbnN0YWNrOiBudWxsCnByb3ZpZGVyOiBhd3MKdGFyZ2V0TmFtZXNwYWNlOiBvcGVuc2hpZnQtY2x1c3Rlci1hcGkK"
        }
    },
    "*manifests.networkOperator": {
        "FileList": [
            {
                "Filename": "network-operator-config.yml",
                "Data": "YXBpVmVyc2lvbjogdjEKY2FsaWNvQ29uZmlnOgogIG10dTogIjE0NTAiCmtpbmQ6IFRlY3RvbmljTmV0d29ya09wZXJhdG9yQ29uZmlnCm5ldHdvcmtQcm9maWxlOiBmbGFubmVsCnBvZENJRFI6IDEwLjIuMC4wLzE2Cg=="
            },
            {
                "Filename": "network-operator-manifests.yml",
                "Data": ""
            }
        ]
    },
    "*tls.APIServerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVBekNDQXV1Z0F3SUJBZ0lJS1pYeUVZWjVsdEF3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TURFNU1UTXhOekkyV2hjTgpNamd4TURFMk1UTXhOekk0V2pBdk1SUXdFZ1lEVlFRS0V3dHJkV0psTFcxaGMzUmxjakVYTUJVR0ExVUVBeE1PCmEzVmlaUzFoY0dselpYSjJaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2kKN3dkMk05NEpLTmRsSU92ZThnODNJQTBTTlR0Wm5uQ09TL2Z4UU8vVEVjZzRpYXJLeGF5UW93QUorZUtPUE16Lwo0QXNLVkJ1WWt4aHRoMWtZbXdYUmhxb0RxdkhrZ0g0ZThhUHMzYXl0ZVhCRFdPZkZDQkZqTlFvSGYzbHdQMWhqCk41R2FwbHhuQnMwbk0xWTFFMG9rK0E0Q0FlNUk5QlJDYTNjTmxXODRGR3U0SFVNd0FkU2J4OXY1YnMxUERUVnYKcHJwYnBPRTgzSmpHNkFkMTRsQVZxa3IvS3lsMzZLTWhaYkc1YjFMTFdQSFF4Vk1pK1ZKcGR5cFVIQjIvWW1PTgppWWczaUpiNjBSSXNrYkZrTmM1OTVjYngxRGR5ZGQxMFpIZ1N3Vy9SY3RKWVZjWjRmbGNkTU5iR3pGbnpxMVlSCjZHK2lCNjNzdjJhT0pHQU1JVnZQQWdNQkFBR2pnZ0VyTUlJQkp6QU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwTwpCQllFRktHSm1pSmdMdVBBcnRoS1QyVnRlQ2YvYmptQk1COEdBMVVkSXdRWU1CYUFGRWlUMlh2VGhwbFU2VU1BCjArV0dPQjlMdElVK01JR25CZ05WSFJFRWdaOHdnWnlDSlhOdmJXRnNiR1Y1TFdGd2FTNWtaWFpqYkhWemRHVnkKTG05d1pXNXphR2xtZEM1amIyMkNDbXQxWW1WeWJtVjBaWE9DRW10MVltVnlibVYwWlhNdVpHVm1ZWFZzZElJVwphM1ZpWlhKdVpYUmxjeTVrWldaaGRXeDBMbk4yWTRJa2EzVmlaWEp1WlhSbGN5NWtaV1poZFd4MExuTjJZeTVqCmJIVnpkR1Z5TG14dlkyRnNnZ2xzYjJOaGJHaHZjM1NIQkFvREFBR0hCSDhBQUFFd0RRWUpLb1pJaHZjTkFRRUwKQlFBRGdnRUJBRlNmM201aW0vK1RsM2FZN25hRzZrRHZyZFBGSnJ3eEpwYlZ5cHB4N1ZCSXhGdzRkMlFWaUpTeApNNlVRMmRoMndKcHVpRkhlYjhZM2MrbHZwR0VGVTA5K3RCT3lDL3NubXVxUmVMaVVOc2pSQ21BQm1ZSWp2Z2oxCk5pRk5nYUlZWk51U2VMbSswRDg4VkpOVC9McWR5VUExRDMraWFKdE9sWWlTNkYzYVVQdGdwS1ZHYm5YeGdQL1gKTnVOeEgrTmpKTWtLdDVzWG5lMVY4czRzbklJaHJYSWIzVnp3cjY4bGVHaDBLQVZERFdkaEdBWE51SUJPaEZTYgpGL3V6NW1QLzg3WWEzWHZ5TFJCMmVITFNqd3dNdkxxSkVGaGhlc01FQXQrNVZxbmo4YXpWc1h1OXB5bmtpQk5XCkZCU3dnQ0F0eWZHb2I1Nm9hMUExNVNQbDlDRDMraDg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETURDQ0FoaWdBd0lCQWdJSUdWL3JodWY1cUNZd0RRWUpLb1pJaHZjTkFRRUxCUUF3SmpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNE1UQXhPVEV6TVRjeU5sb1gKRFRJNE1UQXhOakV6TVRjeU5sb3dKVEVSTUE4R0ExVUVDeE1JWW05dmRHdDFZbVV4RURBT0JnTlZCQU1UQjJ0MQpZbVV0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNzNFpGMVNNaVhuVzhYCnJ5NDJrVWw5ZjBpeEhRTEg0ZnVNZjBaTU1SUHpGWmRrTzZZemY2bjdqU1pTLy9lWFY4dWswaTV4blcxcW9WSlkKOEpqQUJIQVlBMmdKcEtKUUY0eFNkaHVzekhZUWhSNTRVWU5KTjhNeGk2RWJNMlBDYll1MHROWmFrQmNFRFpSeApqNmE5SmkwZUppRnE2RFJBTFkxdHd0UGh3bFQ3WDJjZmtjYytLVW13Nnk2SXJIaGJSZ2lETC9zemJyNzJsSEtUClJLNzB4Vm1jeWRqSmo4RWF5OHk2VHVOcHdVdW1RelJFUnBiRmVtdGdvTzNoeFNtZXdudHhVWk9BbUZDbjRUQ2UKL1NvU3NnMTNWSEt2enVER3pDdXRrRUZQeEtlR0l6aXUrRzhBNVo3Q0Yybi91bnpIM2JFTS8reVB3Z1FOWS9aNApoNnNoSFdSSkFnTUJBQUdqWXpCaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvCk1CMEdBMVVkRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFmQmdOVkhTTUVHREFXZ0JSSWs5bDcKMDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBQmpKaDFpMUxvaDhsRUtERwpGZmlBOERnaFp2ellabk8zNktqYWg3SjZMaXpaSzFYdFk5THdGWWIyMnhLcWlzbkhmWEVtS0FCeUM1NC9YNkZCCnBUdE9ZWDZ3Q1QrZGo2bUJaWUdPTUkvb2lFSUNIaDVaZVFNUGNHZFdhS1lrRjYzc2FTbzVYWmQ0Z05GY0tPeEwKVk1sb0JJRnE4bmozMCtMNzZnOW9WSXQxck56dnJrSkdsY2tlV3NpYWNCaWRNWHJhQ0Q5ZGxPS2p4N1lqNm1RTgpVOTErL0xoTU0vYWNCZUNlTmpwTE9CVHVtUG5meHFzUXg2S28wMzAxUGF1SU00b2RzTENQcUFtRXJWYjVHVGFPCkIrMWQrNEdHcnU0b2JZb042cnhhNnRlMmVFNE9jM1hkZHRNaWR3MHVvL045TGhTMHl3S0thZDRTc2hicURuRFcKckwvbXFBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBb3U4SGRqUGVDU2pYWlNEcjN2SVBOeUFORWpVN1daNXdqa3YzOFVEdjB4SElPSW1xCnlzV3NrS01BQ2ZuaWpqek0vK0FMQ2xRYm1KTVliWWRaR0pzRjBZYXFBNnJ4NUlCK0h2R2o3TjJzclhsd1Exam4KeFFnUll6VUtCMzk1Y0Q5WVl6ZVJtcVpjWndiTkp6TldOUk5LSlBnT0FnSHVTUFFVUW10M0RaVnZPQlJydUIxRApNQUhVbThmYitXN05UdzAxYjZhNlc2VGhQTnlZeHVnSGRlSlFGYXBLL3lzcGQraWpJV1d4dVc5U3kxangwTVZUCkl2bFNhWGNxVkJ3ZHYySmpqWW1JTjRpVyt0RVNMSkd4WkRYT2ZlWEc4ZFEzY25YZGRHUjRFc0Z2MFhMU1dGWEcKZUg1WEhURFd4c3haODZ0V0VlaHZvZ2V0N0w5bWppUmdEQ0ZiendJREFRQUJBb0lCQUNwMTdsVGdpWEdMb2k1cAptTzU5MkhjK05BblZzNFRVWkhMQTIzbVV1YXNnekRQbnRJbXBZQ0pGU0VKUlM3aFRvZnpncngvZThWNGVuMVFUCjNLVXI2U1ZFV2RRZzNXNzJDV2daQXVZOGtyNldraW9LNWtPVHFheFg2eWd2RVQrdVVtTnczTklYbnFiK3Y4SUMKZituUEFCaUlTR1kvaUpDY2d4Y1lHR3VDMFB3azg4V2xyVWlDUEcyMTlENVlPaU5Da2o2UFlaYTVNN3BadnJ3Zgp0R2NmUm83WUJ5MjFYMkJidElodFJONXpTQ0VNaGhYaXJ2UmZZRWd0T1V1ZFovdXBzSGFqNFNZYXBUY3ptOUN3Cmw1bUJZUi9iT2lZYmdsTm5vd09vS3lxcy81eDlWM3M0WXhnUkJtTmMyNWRSY1ZvRXFUODdNRjNXeTFqNWxKRlIKRmpwc0JDRUNnWUVBemg3cU1BZWhSakFhY2c5RW84Q0pOUjJhOU4vdDZJMnhRVm5QSTYzUU03eDhIaW03NTQ3cwoxRnRwUS9lRXZhRkN5OS9QU1RIcVBxa0p0bm9CK2ZQY0dYT1NrK0hxUmgzcktVNzYxTTB1UC9aVW9IQ0xSU1p2CjdiVWRBNlR2Q0lsRlJvaFY0WCtyNU04Q2FiVFNoam9HbFFmb1FZTzNCRUtaMmZmWDBaQXJzbDhDZ1lFQXlseXkKVGM2NzhqdjU0NTlOUHFkMlEzd24rcExGYmVCVG9aQ0dhR0RZWEwxeStaNmtFL2pxZDRUN0lwNzViYUlNenRWRAp1dWNsWnJWYm8ybytEMVZ4MzFCTGxpQzFzYlhQR0lxcHdqajVDYTFSeHJCeUxOaVA2NmFXMXc5Zlp2bVBlSWNyClVEWncxSW5oS0ZlZGRDbU5jU0lvSGdqYytUc0lka2ptY1RQbkxKRUNnWUJ4OG5rNGtCOUI4L25Lc0ZJYnpLYU4KYkk1cmJSZlNoZkpGMUdaRXJTUDZWZXF2cWhhc3prQnlyUTRtZXNFeEsrTUhYZlR6MjlwSlJaMk8rU2Y2akN0VApEcWNyaGFyRGxHcWFiWVVRKzFUa0cwTnhab1kzZGlaT1hOOXJVbFNxZldpRXMzMzJxV1BYbS9FVGl0a1BSeWk0ClhxU3hBeVc3L3kyYVovOHhaT2dqTlFLQmdHNHU4dGJ5emRzalZQamZjRXZCR3QrNzVuakZHY0t0OWx0dU9nRHoKV2x1RXUrbTJ1MWcwbkZYZmptNVhhVENNbjdTdTRtWU9IWXREREZaNkxyaGlxZElTQWxZSUVXWmx2QkY4enRuMQo4NE9WWDRWejVYY05vNitIMFhIZjZPNUV6QjJ3VzZFZFEybzJlT1ppYmxVbG11SVMydzBmZmxJbUZvRnhTQ2d6ClBwaEJBb0dBU0hoZGhSaTlHazEwWWxPcm9YTERTUnBoeEVpdzBCQUx2RVlyVkhBYngyQ3N1Y2VDYW15dGhxQmsKSW5xeGZXcnBsbDVRUUNxSDRMLzJ3S01pNlM3WWxTNlJJWCtjbzhiMHlQZTNhRUZQWDFPK1g0Yi9EVUR4SjJKWgpiZGcxVFFVWnU5aVFGV0FOaEpyME5nTStoa0JtMHY5UmhWcE9QcnhjT3dZc25Kek9oeW89Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/apiserver.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBb3U4SGRqUGVDU2pYWlNEcjN2SVBOeUFORWpVN1daNXdqa3YzOFVEdjB4SElPSW1xCnlzV3NrS01BQ2ZuaWpqek0vK0FMQ2xRYm1KTVliWWRaR0pzRjBZYXFBNnJ4NUlCK0h2R2o3TjJzclhsd1Exam4KeFFnUll6VUtCMzk1Y0Q5WVl6ZVJtcVpjWndiTkp6TldOUk5LSlBnT0FnSHVTUFFVUW10M0RaVnZPQlJydUIxRApNQUhVbThmYitXN05UdzAxYjZhNlc2VGhQTnlZeHVnSGRlSlFGYXBLL3lzcGQraWpJV1d4dVc5U3kxangwTVZUCkl2bFNhWGNxVkJ3ZHYySmpqWW1JTjRpVyt0RVNMSkd4WkRYT2ZlWEc4ZFEzY25YZGRHUjRFc0Z2MFhMU1dGWEcKZUg1WEhURFd4c3haODZ0V0VlaHZvZ2V0N0w5bWppUmdEQ0ZiendJREFRQUJBb0lCQUNwMTdsVGdpWEdMb2k1cAptTzU5MkhjK05BblZzNFRVWkhMQTIzbVV1YXNnekRQbnRJbXBZQ0pGU0VKUlM3aFRvZnpncngvZThWNGVuMVFUCjNLVXI2U1ZFV2RRZzNXNzJDV2daQXVZOGtyNldraW9LNWtPVHFheFg2eWd2RVQrdVVtTnczTklYbnFiK3Y4SUMKZituUEFCaUlTR1kvaUpDY2d4Y1lHR3VDMFB3azg4V2xyVWlDUEcyMTlENVlPaU5Da2o2UFlaYTVNN3BadnJ3Zgp0R2NmUm83WUJ5MjFYMkJidElodFJONXpTQ0VNaGhYaXJ2UmZZRWd0T1V1ZFovdXBzSGFqNFNZYXBUY3ptOUN3Cmw1bUJZUi9iT2lZYmdsTm5vd09vS3lxcy81eDlWM3M0WXhnUkJtTmMyNWRSY1ZvRXFUODdNRjNXeTFqNWxKRlIKRmpwc0JDRUNnWUVBemg3cU1BZWhSakFhY2c5RW84Q0pOUjJhOU4vdDZJMnhRVm5QSTYzUU03eDhIaW03NTQ3cwoxRnRwUS9lRXZhRkN5OS9QU1RIcVBxa0p0bm9CK2ZQY0dYT1NrK0hxUmgzcktVNzYxTTB1UC9aVW9IQ0xSU1p2CjdiVWRBNlR2Q0lsRlJvaFY0WCtyNU04Q2FiVFNoam9HbFFmb1FZTzNCRUtaMmZmWDBaQXJzbDhDZ1lFQXlseXkKVGM2NzhqdjU0NTlOUHFkMlEzd24rcExGYmVCVG9aQ0dhR0RZWEwxeStaNmtFL2pxZDRUN0lwNzViYUlNenRWRAp1dWNsWnJWYm8ybytEMVZ4MzFCTGxpQzFzYlhQR0lxcHdqajVDYTFSeHJCeUxOaVA2NmFXMXc5Zlp2bVBlSWNyClVEWncxSW5oS0ZlZGRDbU5jU0lvSGdqYytUc0lka2ptY1RQbkxKRUNnWUJ4OG5rNGtCOUI4L25Lc0ZJYnpLYU4KYkk1cmJSZlNoZkpGMUdaRXJTUDZWZXF2cWhhc3prQnlyUTRtZXNFeEsrTUhYZlR6MjlwSlJaMk8rU2Y2akN0VApEcWNyaGFyRGxHcWFiWVVRKzFUa0cwTnhab1kzZGlaT1hOOXJVbFNxZldpRXMzMzJxV1BYbS9FVGl0a1BSeWk0ClhxU3hBeVc3L3kyYVovOHhaT2dqTlFLQmdHNHU4dGJ5emRzalZQamZjRXZCR3QrNzVuakZHY0t0OWx0dU9nRHoKV2x1RXUrbTJ1MWcwbkZYZmptNVhhVENNbjdTdTRtWU9IWXREREZaNkxyaGlxZElTQWxZSUVXWmx2QkY4enRuMQo4NE9WWDRWejVYY05vNitIMFhIZjZPNUV6QjJ3VzZFZFEybzJlT1ppYmxVbG11SVMydzBmZmxJbUZvRnhTQ2d6ClBwaEJBb0dBU0hoZGhSaTlHazEwWWxPcm9YTERTUnBoeEVpdzBCQUx2RVlyVkhBYngyQ3N1Y2VDYW15dGhxQmsKSW5xeGZXcnBsbDVRUUNxSDRMLzJ3S01pNlM3WWxTNlJJWCtjbzhiMHlQZTNhRUZQWDFPK1g0Yi9EVUR4SjJKWgpiZGcxVFFVWnU5aVFGV0FOaEpyME5nTStoa0JtMHY5UmhWcE9QcnhjT3dZc25Kek9oeW89Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/apiserver.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVBekNDQXV1Z0F3SUJBZ0lJS1pYeUVZWjVsdEF3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TURFNU1UTXhOekkyV2hjTgpNamd4TURFMk1UTXhOekk0V2pBdk1SUXdFZ1lEVlFRS0V3dHJkV0psTFcxaGMzUmxjakVYTUJVR0ExVUVBeE1PCmEzVmlaUzFoY0dselpYSjJaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2kKN3dkMk05NEpLTmRsSU92ZThnODNJQTBTTlR0Wm5uQ09TL2Z4UU8vVEVjZzRpYXJLeGF5UW93QUorZUtPUE16Lwo0QXNLVkJ1WWt4aHRoMWtZbXdYUmhxb0RxdkhrZ0g0ZThhUHMzYXl0ZVhCRFdPZkZDQkZqTlFvSGYzbHdQMWhqCk41R2FwbHhuQnMwbk0xWTFFMG9rK0E0Q0FlNUk5QlJDYTNjTmxXODRGR3U0SFVNd0FkU2J4OXY1YnMxUERUVnYKcHJwYnBPRTgzSmpHNkFkMTRsQVZxa3IvS3lsMzZLTWhaYkc1YjFMTFdQSFF4Vk1pK1ZKcGR5cFVIQjIvWW1PTgppWWczaUpiNjBSSXNrYkZrTmM1OTVjYngxRGR5ZGQxMFpIZ1N3Vy9SY3RKWVZjWjRmbGNkTU5iR3pGbnpxMVlSCjZHK2lCNjNzdjJhT0pHQU1JVnZQQWdNQkFBR2pnZ0VyTUlJQkp6QU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwTwpCQllFRktHSm1pSmdMdVBBcnRoS1QyVnRlQ2YvYmptQk1COEdBMVVkSXdRWU1CYUFGRWlUMlh2VGhwbFU2VU1BCjArV0dPQjlMdElVK01JR25CZ05WSFJFRWdaOHdnWnlDSlhOdmJXRnNiR1Y1TFdGd2FTNWtaWFpqYkhWemRHVnkKTG05d1pXNXphR2xtZEM1amIyMkNDbXQxWW1WeWJtVjBaWE9DRW10MVltVnlibVYwWlhNdVpHVm1ZWFZzZElJVwphM1ZpWlhKdVpYUmxjeTVrWldaaGRXeDBMbk4yWTRJa2EzVmlaWEp1WlhSbGN5NWtaV1poZFd4MExuTjJZeTVqCmJIVnpkR1Z5TG14dlkyRnNnZ2xzYjJOaGJHaHZjM1NIQkFvREFBR0hCSDhBQUFFd0RRWUpLb1pJaHZjTkFRRUwKQlFBRGdnRUJBRlNmM201aW0vK1RsM2FZN25hRzZrRHZyZFBGSnJ3eEpwYlZ5cHB4N1ZCSXhGdzRkMlFWaUpTeApNNlVRMmRoMndKcHVpRkhlYjhZM2MrbHZwR0VGVTA5K3RCT3lDL3NubXVxUmVMaVVOc2pSQ21BQm1ZSWp2Z2oxCk5pRk5nYUlZWk51U2VMbSswRDg4VkpOVC9McWR5VUExRDMraWFKdE9sWWlTNkYzYVVQdGdwS1ZHYm5YeGdQL1gKTnVOeEgrTmpKTWtLdDVzWG5lMVY4czRzbklJaHJYSWIzVnp3cjY4bGVHaDBLQVZERFdkaEdBWE51SUJPaEZTYgpGL3V6NW1QLzg3WWEzWHZ5TFJCMmVITFNqd3dNdkxxSkVGaGhlc01FQXQrNVZxbmo4YXpWc1h1OXB5bmtpQk5XCkZCU3dnQ0F0eWZHb2I1Nm9hMUExNVNQbDlDRDMraDg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETURDQ0FoaWdBd0lCQWdJSUdWL3JodWY1cUNZd0RRWUpLb1pJaHZjTkFRRUxCUUF3SmpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNE1UQXhPVEV6TVRjeU5sb1gKRFRJNE1UQXhOakV6TVRjeU5sb3dKVEVSTUE4R0ExVUVDeE1JWW05dmRHdDFZbVV4RURBT0JnTlZCQU1UQjJ0MQpZbVV0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNzNFpGMVNNaVhuVzhYCnJ5NDJrVWw5ZjBpeEhRTEg0ZnVNZjBaTU1SUHpGWmRrTzZZemY2bjdqU1pTLy9lWFY4dWswaTV4blcxcW9WSlkKOEpqQUJIQVlBMmdKcEtKUUY0eFNkaHVzekhZUWhSNTRVWU5KTjhNeGk2RWJNMlBDYll1MHROWmFrQmNFRFpSeApqNmE5SmkwZUppRnE2RFJBTFkxdHd0UGh3bFQ3WDJjZmtjYytLVW13Nnk2SXJIaGJSZ2lETC9zemJyNzJsSEtUClJLNzB4Vm1jeWRqSmo4RWF5OHk2VHVOcHdVdW1RelJFUnBiRmVtdGdvTzNoeFNtZXdudHhVWk9BbUZDbjRUQ2UKL1NvU3NnMTNWSEt2enVER3pDdXRrRUZQeEtlR0l6aXUrRzhBNVo3Q0Yybi91bnpIM2JFTS8reVB3Z1FOWS9aNApoNnNoSFdSSkFnTUJBQUdqWXpCaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvCk1CMEdBMVVkRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFmQmdOVkhTTUVHREFXZ0JSSWs5bDcKMDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBQmpKaDFpMUxvaDhsRUtERwpGZmlBOERnaFp2ellabk8zNktqYWg3SjZMaXpaSzFYdFk5THdGWWIyMnhLcWlzbkhmWEVtS0FCeUM1NC9YNkZCCnBUdE9ZWDZ3Q1QrZGo2bUJaWUdPTUkvb2lFSUNIaDVaZVFNUGNHZFdhS1lrRjYzc2FTbzVYWmQ0Z05GY0tPeEwKVk1sb0JJRnE4bmozMCtMNzZnOW9WSXQxck56dnJrSkdsY2tlV3NpYWNCaWRNWHJhQ0Q5ZGxPS2p4N1lqNm1RTgpVOTErL0xoTU0vYWNCZUNlTmpwTE9CVHVtUG5meHFzUXg2S28wMzAxUGF1SU00b2RzTENQcUFtRXJWYjVHVGFPCkIrMWQrNEdHcnU0b2JZb042cnhhNnRlMmVFNE9jM1hkZHRNaWR3MHVvL045TGhTMHl3S0thZDRTc2hicURuRFcKckwvbXFBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.APIServerProxyCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWRENDQWp5Z0F3SUJBZ0lJUk14bnpBazhIMHd3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRneE1ERTVNVE14TnpJMgpXaGNOTWpneE1ERTJNVE14TnpJNFdqQTFNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFZE1Cc0dBMVVFCkF4TVVhM1ZpWlMxaGNHbHpaWEoyWlhJdGNISnZlSGt3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUURmYVFCc0tQZ0J4ZUJYWWR4MWg4a0dpZWRwd0wvd01neGtOUHhaVVNiNFR3NDJSRGRXc2ZhRQpGenUrWW5Hc0hPV1pPUUEydll1OTRKY3ZYbVZFVlpuZDJYZVNCUkRuS0kvejdib0dBYlExdmtuemVIaTVMMUJhCjRCc1ROdktZRWszNXlmUFEvY0crMG1aTkc4cG5OUGZyd3pBaWxUT3o5Y1VNbENpQW9qdmdWWW1yR1FrMC9XL04KNkF0YVVCYTJrNFY5RVRiTFZ2TFRtZkFFb3JtZk1mZzFwbGQvcWFIV3FFOE5kcGRRR1NDTTRFV0tpN1BUOWp5WApXR2plcG1iMmpOZ3hCQjBVR3A4aEJRT0IyLytkUkF5RjMrWVRVeXRRWDFnbEd3N2hpUVZYbFgrSjBIaFlHNUNMCkdkVHpKd0ZnLzFxamFHQ0hBM3hiTXBwZmRUWTMzVnloQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUYKb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJUQwpzUFRYVW82QnVKY3hCUTdNOHRmZW9qYXcrREFmQmdOVkhTTUVHREFXZ0JSSWs5bDcwNGFaVk9sREFOUGxoamdmClM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZW5JZEZTY2tWaTNMUjBGdlF5eVVZb3MvVGFoS1pjR2QKNEpvcWY5NmhPcjFVVWtNc2t5TkRLeTFQMzAzS1pZRy8wZTlIVXVWQjhKYTdpV2swM2ZjSytzeFpab0tnZCs1bQpEdkRwS09xSitTczY4eVREaFZGTituemkvUHlVN241OHZ4U3EzZGtvNk5Ndy9kQ1llZWFUZGY2STJIcjFZbGV0Cm1BdVVQcExiVVhMQ1VrdVhWdGFKb29VK0NNckE2RnpCV04rTmpWYkppelVsMkdlWnR6a3gyTUdxK0V6VnZYbUkKVnExUzl4bFUySWRZazFIaU5vV2NUcnVzcnJid3hvZjNaMXNNM2I5em91dzF6TU5GVmtXOGJCZHpqYThUanN5YQpLOE9lc1VnMVRRWmtEVWozYzdmVFF5L1hGSnVUU3Z4T1pXclhSdDY5SVJ0UVBOMGQvQ1Vxcnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMzJrQWJDajRBY1hnVjJIY2RZZkpCb25uYWNDLzhESU1aRFQ4V1ZFbStFOE9Oa1EzClZySDJoQmM3dm1KeHJCemxtVGtBTnIyTHZlQ1hMMTVsUkZXWjNkbDNrZ1VRNXlpUDgrMjZCZ0cwTmI1SjgzaDQKdVM5UVd1QWJFemJ5bUJKTitjbnowUDNCdnRKbVRSdktaelQzNjhNd0lwVXpzL1hGREpRb2dLSTc0RldKcXhrSgpOUDF2emVnTFdsQVd0cE9GZlJFMnkxYnkwNW53QktLNW56SDROYVpYZjZtaDFxaFBEWGFYVUJrZ2pPQkZpb3V6CjAvWThsMWhvM3FabTlvellNUVFkRkJxZklRVURnZHYvblVRTWhkL21FMU1yVUY5WUpSc080WWtGVjVWL2lkQjQKV0J1UWl4blU4eWNCWVA5YW8yaGdod044V3pLYVgzVTJOOTFjb1FJREFRQUJBb0lCQUhTL29vRGpSL2RsT0w5eApYSXZ1MFphaEtsV1JiTHhRNnpqU2w2ejFRN0F2WC9YcjRCOW1FTFVtandvRzEvQmhpWHB3MXpQRUNlcklHem1kCjByM0xIZ1ZaUjZyL0NyNUI3RGhFMnhtWWVsdzdmTm5HOHcrVE1pTExTbHJZTkI1VU1udCtsZk41S0c1WDlTNEcKZjljL1R1L2RxS0hwNW9MOHhHUzJhQlFRczhtZTd6MHppR3F4WXhGQ0hGVUVDb2JkZlI3ck1lcjVtMHVLdmlEeQpodVdFYWpWcE5WZ0JaaGtmKzhhZHRPLytDbC9ieFJudmsrY25HU2FRVlZUWkx0WWtYUUZGa2lheERmb0w5cUJ2ClBJVXN2dldQWnZjVnUrdFJjamFlYkd4L2h1dUVYN0xkU1VRVklMdFV6TVcyM1JDaFJybUppSWR1KzVsR3ZnT1oKTkZOSlpnRUNnWUVBMy9sTXZQNVl3K2dEaHJPT3VXU2NnWjNPMGQ3aXpPeGpCNC9mMmp4WXdlTzI2OHBUeDcwcAovK040cHBOYTVIYTRoVmNFT3ZzTmhPamVVdDR6eVBNalNYRDhJY1VYR2djaTdXcXI5NXdVNUQ2V05qbTYzZXVHCkk1L0tmYlU2TG9hNzk5cG5rSzBSVmJNY3JOU1Zta3N3YmJGd3lxbUE3Y2ZOeUMyaS93blJuNWtDZ1lFQS8xc1IKa0JsRXRleXJ5VzFKSEtmV0dJZVhiQno3OXZ0dzllSWcvMkRac1ZBczd2VlVibEtkcXNsbndoeDFqNlJBZUhXaAp6TUZFRnBtbjNPb25YTWNORmF5eVlqRHBMR1ZWeXVQbFhXeXhqRjFzL282U1hCaStid0Q1ZWhHYnA4cDhoTE53CldWWUVnMUVadld0RFdCUlRZcXNwdmMzSlZoK2E4YytUdWQzOTZra0NnWUF3clBxTGZHK0lMQTFRSWdmYnJNMEMKc213M1dreEtJdm1tdEJML1Yrd21Qem9LNW83c3N1VEUwd2Z1azhuR0t6TVE3NGRnMWh6ckRMejhuNFA3b1RQRApDMFlRaE1mdmhTdUhFNDdLSW1hNzhBb3ZRTDZtNmovZDBDVnV5b3NaZjNpc2RnL1o5bkwxQUJjMFRJTXk1REpqCk5KUUJ4M0xZdW5xempZK0dBL2xGeVFLQmdRRGZmTWJjUlNFN3o4MXgxekliNEZDaTIxa05pRGlGcXY3c1ZHTG8KMzh6blFQSnltVWl4M2FDY2J2VmVrQ1hiOTdkdE5oYkw2NEk1L1hWTEJhdzVxUVNzcVo3ZURVeW1USEpQeGpGaQpHTlV6c2pqSWVlTmlzMDFJUGFRYXovcFpXZ0NzNjVjeXVQUHVNamJDNzNQYlRMN0dKbU83K0xWenFPbWxKVFYzCmdQRFA4UUtCZ0NLTlNYOVZlc083YnMyeC8wU3dWRHNONElZZDZVR0RrSGZIdlZnQUFOcU02OEJtVTB6R0VqeTQKc0dBOWM1UkpMQ09vSTgxNEpHTTBOMlY1WWNzWE9tei9FMjVrV0U1aVlLTVBLQTNPUTVGZnp0Qnh6dFRNNTN0cwozVzVWU3hRTGFSaTdQR3pjak44NlFoN1lYUzVjSjNNenRuNFAwU0dPeUVwOHpDaDMraS9TCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/apiserver-proxy.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMzJrQWJDajRBY1hnVjJIY2RZZkpCb25uYWNDLzhESU1aRFQ4V1ZFbStFOE9Oa1EzClZySDJoQmM3dm1KeHJCemxtVGtBTnIyTHZlQ1hMMTVsUkZXWjNkbDNrZ1VRNXlpUDgrMjZCZ0cwTmI1SjgzaDQKdVM5UVd1QWJFemJ5bUJKTitjbnowUDNCdnRKbVRSdktaelQzNjhNd0lwVXpzL1hGREpRb2dLSTc0RldKcXhrSgpOUDF2emVnTFdsQVd0cE9GZlJFMnkxYnkwNW53QktLNW56SDROYVpYZjZtaDFxaFBEWGFYVUJrZ2pPQkZpb3V6CjAvWThsMWhvM3FabTlvellNUVFkRkJxZklRVURnZHYvblVRTWhkL21FMU1yVUY5WUpSc080WWtGVjVWL2lkQjQKV0J1UWl4blU4eWNCWVA5YW8yaGdod044V3pLYVgzVTJOOTFjb1FJREFRQUJBb0lCQUhTL29vRGpSL2RsT0w5eApYSXZ1MFphaEtsV1JiTHhRNnpqU2w2ejFRN0F2WC9YcjRCOW1FTFVtandvRzEvQmhpWHB3MXpQRUNlcklHem1kCjByM0xIZ1ZaUjZyL0NyNUI3RGhFMnhtWWVsdzdmTm5HOHcrVE1pTExTbHJZTkI1VU1udCtsZk41S0c1WDlTNEcKZjljL1R1L2RxS0hwNW9MOHhHUzJhQlFRczhtZTd6MHppR3F4WXhGQ0hGVUVDb2JkZlI3ck1lcjVtMHVLdmlEeQpodVdFYWpWcE5WZ0JaaGtmKzhhZHRPLytDbC9ieFJudmsrY25HU2FRVlZUWkx0WWtYUUZGa2lheERmb0w5cUJ2ClBJVXN2dldQWnZjVnUrdFJjamFlYkd4L2h1dUVYN0xkU1VRVklMdFV6TVcyM1JDaFJybUppSWR1KzVsR3ZnT1oKTkZOSlpnRUNnWUVBMy9sTXZQNVl3K2dEaHJPT3VXU2NnWjNPMGQ3aXpPeGpCNC9mMmp4WXdlTzI2OHBUeDcwcAovK040cHBOYTVIYTRoVmNFT3ZzTmhPamVVdDR6eVBNalNYRDhJY1VYR2djaTdXcXI5NXdVNUQ2V05qbTYzZXVHCkk1L0tmYlU2TG9hNzk5cG5rSzBSVmJNY3JOU1Zta3N3YmJGd3lxbUE3Y2ZOeUMyaS93blJuNWtDZ1lFQS8xc1IKa0JsRXRleXJ5VzFKSEtmV0dJZVhiQno3OXZ0dzllSWcvMkRac1ZBczd2VlVibEtkcXNsbndoeDFqNlJBZUhXaAp6TUZFRnBtbjNPb25YTWNORmF5eVlqRHBMR1ZWeXVQbFhXeXhqRjFzL282U1hCaStid0Q1ZWhHYnA4cDhoTE53CldWWUVnMUVadld0RFdCUlRZcXNwdmMzSlZoK2E4YytUdWQzOTZra0NnWUF3clBxTGZHK0lMQTFRSWdmYnJNMEMKc213M1dreEtJdm1tdEJML1Yrd21Qem9LNW83c3N1VEUwd2Z1azhuR0t6TVE3NGRnMWh6ckRMejhuNFA3b1RQRApDMFlRaE1mdmhTdUhFNDdLSW1hNzhBb3ZRTDZtNmovZDBDVnV5b3NaZjNpc2RnL1o5bkwxQUJjMFRJTXk1REpqCk5KUUJ4M0xZdW5xempZK0dBL2xGeVFLQmdRRGZmTWJjUlNFN3o4MXgxekliNEZDaTIxa05pRGlGcXY3c1ZHTG8KMzh6blFQSnltVWl4M2FDY2J2VmVrQ1hiOTdkdE5oYkw2NEk1L1hWTEJhdzVxUVNzcVo3ZURVeW1USEpQeGpGaQpHTlV6c2pqSWVlTmlzMDFJUGFRYXovcFpXZ0NzNjVjeXVQUHVNamJDNzNQYlRMN0dKbU83K0xWenFPbWxKVFYzCmdQRFA4UUtCZ0NLTlNYOVZlc083YnMyeC8wU3dWRHNONElZZDZVR0RrSGZIdlZnQUFOcU02OEJtVTB6R0VqeTQKc0dBOWM1UkpMQ09vSTgxNEpHTTBOMlY1WWNzWE9tei9FMjVrV0U1aVlLTVBLQTNPUTVGZnp0Qnh6dFRNNTN0cwozVzVWU3hRTGFSaTdQR3pjak44NlFoN1lYUzVjSjNNenRuNFAwU0dPeUVwOHpDaDMraS9TCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/apiserver-proxy.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWRENDQWp5Z0F3SUJBZ0lJUk14bnpBazhIMHd3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRneE1ERTVNVE14TnpJMgpXaGNOTWpneE1ERTJNVE14TnpJNFdqQTFNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFZE1Cc0dBMVVFCkF4TVVhM1ZpWlMxaGNHbHpaWEoyWlhJdGNISnZlSGt3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUURmYVFCc0tQZ0J4ZUJYWWR4MWg4a0dpZWRwd0wvd01neGtOUHhaVVNiNFR3NDJSRGRXc2ZhRQpGenUrWW5Hc0hPV1pPUUEydll1OTRKY3ZYbVZFVlpuZDJYZVNCUkRuS0kvejdib0dBYlExdmtuemVIaTVMMUJhCjRCc1ROdktZRWszNXlmUFEvY0crMG1aTkc4cG5OUGZyd3pBaWxUT3o5Y1VNbENpQW9qdmdWWW1yR1FrMC9XL04KNkF0YVVCYTJrNFY5RVRiTFZ2TFRtZkFFb3JtZk1mZzFwbGQvcWFIV3FFOE5kcGRRR1NDTTRFV0tpN1BUOWp5WApXR2plcG1iMmpOZ3hCQjBVR3A4aEJRT0IyLytkUkF5RjMrWVRVeXRRWDFnbEd3N2hpUVZYbFgrSjBIaFlHNUNMCkdkVHpKd0ZnLzFxamFHQ0hBM3hiTXBwZmRUWTMzVnloQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUYKb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJUQwpzUFRYVW82QnVKY3hCUTdNOHRmZW9qYXcrREFmQmdOVkhTTUVHREFXZ0JSSWs5bDcwNGFaVk9sREFOUGxoamdmClM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZW5JZEZTY2tWaTNMUjBGdlF5eVVZb3MvVGFoS1pjR2QKNEpvcWY5NmhPcjFVVWtNc2t5TkRLeTFQMzAzS1pZRy8wZTlIVXVWQjhKYTdpV2swM2ZjSytzeFpab0tnZCs1bQpEdkRwS09xSitTczY4eVREaFZGTituemkvUHlVN241OHZ4U3EzZGtvNk5Ndy9kQ1llZWFUZGY2STJIcjFZbGV0Cm1BdVVQcExiVVhMQ1VrdVhWdGFKb29VK0NNckE2RnpCV04rTmpWYkppelVsMkdlWnR6a3gyTUdxK0V6VnZYbUkKVnExUzl4bFUySWRZazFIaU5vV2NUcnVzcnJid3hvZjNaMXNNM2I5em91dzF6TU5GVmtXOGJCZHpqYThUanN5YQpLOE9lc1VnMVRRWmtEVWozYzdmVFF5L1hGSnVUU3Z4T1pXclhSdDY5SVJ0UVBOMGQvQ1Vxcnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.AdminCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lJRFpnU0xGRUk5TEV3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TURFNU1UTXhOekkyV2hjTgpNamd4TURFMk1UTXhOekk0V2pBd01SY3dGUVlEVlFRS0V3NXplWE4wWlcwNmJXRnpkR1Z5Y3pFVk1CTUdBMVVFCkF4TU1jM2x6ZEdWdE9tRmtiV2x1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEKdmc3NEc1MEViWlNBTGVBWkVGdWRsM3pVMUNmaElOcUh2dHlpNnJVdWNjdXplK2dmbmZCT1BieHVUYy82N1NVbgpXT1dJZXRtNFFlVlZEMnYrSXQ4UVRxemxBaUFhKzFETUE5MnpoYktvY1ZRNDMxQkRFUnI0QTErNzRST0dUR2toCnJNQ3hvU3plMGxVaHRIblhPd0dhemZaTkhUeFMwTEgrTko2UTNoOTQwSVZLNGZsWU13RlB0ZUdaZndNNllzQlUKMTNKLzAvb2NJS0VlN2FtdGVTQks4cDdMMXFDMFdHK3lpOElJRW1sTmwxc0dHbDE0SkdCUTloeGdLNHBFRnlMegpGSHpHbFNQRVFlSmV0aDNlZ1pTdm52WHY5d05nZVkvWXFqaTNyZnVueEdmTS9CR21nYkhMRjgzdDJ5ZjJTbXUvCjNNV0hZS0FJVHNEOWV5WmVHVHM5SVFJREFRQUJvMzh3ZlRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRQpGS0dKbWlKZ0x1UEFydGhLVDJWdGVDZi9iam1CTUI4R0ExVWRJd1FZTUJhQUZFaVQyWHZUaHBsVTZVTUEwK1dHCk9COUx0SVUrTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCNVlyeVF4dHNIY3VqZWNXQ3FIQnNLMEl1SDhRWFAKYWRlUUEramtVSWdrSmxmYzFjOHlZME00ZVkrVkNuZTJsN2srYnpRY0kvV2IwY3JrTTMwdXRWZkN1RkZURXdTOQp5c1N1djFJbFJ6T0R2M3NwK2NVMkhLcFNBRHljMm1hd3BBem9vNks2NW12dkdZaUVaMEpNcFlFVWt1aDlEM2lRCjVZZ1NkZWxrZUU0NDlHN0hCTHh6aFpTWkVvOEM4OXVqTzZKTXlXa3MzNzhVbjVpOFByUm5yblFzc3dJQ1Y1LzgKNW45YzVBTE5zdk9pcmtMVW9oSFRoeTlMNS82KzdPS1JlTlM2eGZCeVhyK2pnZ01ub3lsalFCcG5SWTdxWEJ4aAo4TFVUdUFJZElUaDJJQmloV2kzRFY1UjY0SFJrUFgzNFFGZzh0UlVtQUJralFzdkExa245M1E0UwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdmc3NEc1MEViWlNBTGVBWkVGdWRsM3pVMUNmaElOcUh2dHlpNnJVdWNjdXplK2dmCm5mQk9QYnh1VGMvNjdTVW5XT1dJZXRtNFFlVlZEMnYrSXQ4UVRxemxBaUFhKzFETUE5MnpoYktvY1ZRNDMxQkQKRVJyNEExKzc0Uk9HVEdraHJNQ3hvU3plMGxVaHRIblhPd0dhemZaTkhUeFMwTEgrTko2UTNoOTQwSVZLNGZsWQpNd0ZQdGVHWmZ3TTZZc0JVMTNKLzAvb2NJS0VlN2FtdGVTQks4cDdMMXFDMFdHK3lpOElJRW1sTmwxc0dHbDE0CkpHQlE5aHhnSzRwRUZ5THpGSHpHbFNQRVFlSmV0aDNlZ1pTdm52WHY5d05nZVkvWXFqaTNyZnVueEdmTS9CR20KZ2JITEY4M3QyeWYyU211LzNNV0hZS0FJVHNEOWV5WmVHVHM5SVFJREFRQUJBb0lCQVFDSWhMSWRDNTFacFBpcAplellsdE5rdkxtQ2wvL3RMSVEydXdFZFo5a2psUHArdkdoNVQwWUF5QWo3dEw3NmJSenZMTkJ6anVhNEx6MUpaCklJWk13Qk96bjZkajduSFRJY2RaNDQ4SE16eWhJeEV5L3pFZGdWU3kvN294dzFlTlhWcnQvdi9ZdVNWWXlnUEsKNGxZQ3NYVmtDazU3K0krNERwSjljNFMxdUwrTWIyVmpkUWd6NzBsN1VEY2p0ZDFLWDZrcHhxcTI2MUlBQkcrOApabkxuZWFDeC9IUHpBcDhaRHh0NzZ0SjBqSUZuT0tQLzRCZ21pQlNSelpIMmM1cTREWUQ4MlZmRVIxSGgwVWRHCi94dVZHYllvQXAyZ2w5Vklvenk0ZnNtT3JHc3psVmcvTjdGa0RXeHV6UEtYdjFZT1BPeDJDKzNXbTN6eTllNEgKdzhxalZ0NjlBb0dCQU5xcFhtNnJZVmZRVXFjcGJiRXpFRDY2SS90UHlGNGVLNUVLaDhmb0pmemZUaFk4ZDltTgpHY0ZBc1lTOXVCSXoyV012eEk5RjYvN0dLaHl0M0JUTXZVZEw2ZTMxTVIxTkNWaDBGZVJER05LV213U2ZHeTVFCndHamdnVlVHY3ZuMGRsVEVOcHZ3SjJsN0lZeHVwRkRvQUdwdVg5S1ZKaE4venhKZ29ZMnNoOENyQW9HQkFONkQKUEZtMUxXdzRjckZzMlRKMUttaWxpR1gvOWVWaW9WSllsWXJaQytGTjF2SE9JbGJWbDBYMisrRHpvSmpWWlp6TgpGdWsycm0xS3BEQ09KTnd4UVdZQ3BxdVdtQU9UODBTeWNqUHJkVk5NRTlLNnNZOVU2MnkrZW5qN0czTUlFVFViCnpQYk94OFVNQ0loeHNubVBsVU5xTlRMZi9pQ0VnNUxFckdiTWtURmpBb0dBUHpuV0NsNFh5Wko5TThTdzZSb0EKeW9KOFFRQ3l5VFFrR001WXNKOFp6T0tzNjVVVWVwMW9JdzhYeFhBdU4yVXlxSkY1WG93elR2bngxMVVXWEJWUApiYnd2cWhUSjNOVVhyTEgwV29wa05SQkRSclRTNFRBVUNyOVA1a3YxRnYxdThkZkNpcGlJYk9HanM3MlNXYXFiCjVDcUNIcHZ0NUptQ1FLZ2NUcURpcC8wQ2dZRUFtOTRxWkZ5NTJOa2gzbzkxQmhkMUFhRVREd0JoNjdGUGVETjkKYmFuazNJcCtTeHd1aWMxTkRrR1k1MWRCNUUxM3hJTVZ6WC8wWjdLbG1TMjVQRlYwamxURkUrV0Z6dHZReVFxSApYVDlQREc1NlpGOUxDakJlU2VxVU9ETU9ZMkgvUzhpUnAwSHFSbW5MZ0dqRXNNcVhzSVd4aGxYSjJsVjVKVktICndlc0N1aWtDZ1lFQXZCZkxvYnRUN0dWZ21Ya0RUNkhPZUpDcmVXSnRkRGY5eDF6dTZ3YzNIVFFJV2x5NExXUzEKRUpIa3ppVnBLN0xLejJ2cjNGc3J5Tk15UDJnbjErTlFyc0RPVm5vNEhJUGo1S0NRZ3dWZ2pFR2tQaFNhSkp6QQowdjhMVmJOUTZhTG8xSmVMZlZ3OFFCeWUwRFVGb3E1ajlnK0tHRHBXWDBVMEdCWjBPbDhwVmYwPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/admin.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdmc3NEc1MEViWlNBTGVBWkVGdWRsM3pVMUNmaElOcUh2dHlpNnJVdWNjdXplK2dmCm5mQk9QYnh1VGMvNjdTVW5XT1dJZXRtNFFlVlZEMnYrSXQ4UVRxemxBaUFhKzFETUE5MnpoYktvY1ZRNDMxQkQKRVJyNEExKzc0Uk9HVEdraHJNQ3hvU3plMGxVaHRIblhPd0dhemZaTkhUeFMwTEgrTko2UTNoOTQwSVZLNGZsWQpNd0ZQdGVHWmZ3TTZZc0JVMTNKLzAvb2NJS0VlN2FtdGVTQks4cDdMMXFDMFdHK3lpOElJRW1sTmwxc0dHbDE0CkpHQlE5aHhnSzRwRUZ5THpGSHpHbFNQRVFlSmV0aDNlZ1pTdm52WHY5d05nZVkvWXFqaTNyZnVueEdmTS9CR20KZ2JITEY4M3QyeWYyU211LzNNV0hZS0FJVHNEOWV5WmVHVHM5SVFJREFRQUJBb0lCQVFDSWhMSWRDNTFacFBpcAplellsdE5rdkxtQ2wvL3RMSVEydXdFZFo5a2psUHArdkdoNVQwWUF5QWo3dEw3NmJSenZMTkJ6anVhNEx6MUpaCklJWk13Qk96bjZkajduSFRJY2RaNDQ4SE16eWhJeEV5L3pFZGdWU3kvN294dzFlTlhWcnQvdi9ZdVNWWXlnUEsKNGxZQ3NYVmtDazU3K0krNERwSjljNFMxdUwrTWIyVmpkUWd6NzBsN1VEY2p0ZDFLWDZrcHhxcTI2MUlBQkcrOApabkxuZWFDeC9IUHpBcDhaRHh0NzZ0SjBqSUZuT0tQLzRCZ21pQlNSelpIMmM1cTREWUQ4MlZmRVIxSGgwVWRHCi94dVZHYllvQXAyZ2w5Vklvenk0ZnNtT3JHc3psVmcvTjdGa0RXeHV6UEtYdjFZT1BPeDJDKzNXbTN6eTllNEgKdzhxalZ0NjlBb0dCQU5xcFhtNnJZVmZRVXFjcGJiRXpFRDY2SS90UHlGNGVLNUVLaDhmb0pmemZUaFk4ZDltTgpHY0ZBc1lTOXVCSXoyV012eEk5RjYvN0dLaHl0M0JUTXZVZEw2ZTMxTVIxTkNWaDBGZVJER05LV213U2ZHeTVFCndHamdnVlVHY3ZuMGRsVEVOcHZ3SjJsN0lZeHVwRkRvQUdwdVg5S1ZKaE4venhKZ29ZMnNoOENyQW9HQkFONkQKUEZtMUxXdzRjckZzMlRKMUttaWxpR1gvOWVWaW9WSllsWXJaQytGTjF2SE9JbGJWbDBYMisrRHpvSmpWWlp6TgpGdWsycm0xS3BEQ09KTnd4UVdZQ3BxdVdtQU9UODBTeWNqUHJkVk5NRTlLNnNZOVU2MnkrZW5qN0czTUlFVFViCnpQYk94OFVNQ0loeHNubVBsVU5xTlRMZi9pQ0VnNUxFckdiTWtURmpBb0dBUHpuV0NsNFh5Wko5TThTdzZSb0EKeW9KOFFRQ3l5VFFrR001WXNKOFp6T0tzNjVVVWVwMW9JdzhYeFhBdU4yVXlxSkY1WG93elR2bngxMVVXWEJWUApiYnd2cWhUSjNOVVhyTEgwV29wa05SQkRSclRTNFRBVUNyOVA1a3YxRnYxdThkZkNpcGlJYk9HanM3MlNXYXFiCjVDcUNIcHZ0NUptQ1FLZ2NUcURpcC8wQ2dZRUFtOTRxWkZ5NTJOa2gzbzkxQmhkMUFhRVREd0JoNjdGUGVETjkKYmFuazNJcCtTeHd1aWMxTkRrR1k1MWRCNUUxM3hJTVZ6WC8wWjdLbG1TMjVQRlYwamxURkUrV0Z6dHZReVFxSApYVDlQREc1NlpGOUxDakJlU2VxVU9ETU9ZMkgvUzhpUnAwSHFSbW5MZ0dqRXNNcVhzSVd4aGxYSjJsVjVKVktICndlc0N1aWtDZ1lFQXZCZkxvYnRUN0dWZ21Ya0RUNkhPZUpDcmVXSnRkRGY5eDF6dTZ3YzNIVFFJV2x5NExXUzEKRUpIa3ppVnBLN0xLejJ2cjNGc3J5Tk15UDJnbjErTlFyc0RPVm5vNEhJUGo1S0NRZ3dWZ2pFR2tQaFNhSkp6QQowdjhMVmJOUTZhTG8xSmVMZlZ3OFFCeWUwRFVGb3E1ajlnK0tHRHBXWDBVMEdCWjBPbDhwVmYwPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/admin.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lJRFpnU0xGRUk5TEV3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TURFNU1UTXhOekkyV2hjTgpNamd4TURFMk1UTXhOekk0V2pBd01SY3dGUVlEVlFRS0V3NXplWE4wWlcwNmJXRnpkR1Z5Y3pFVk1CTUdBMVVFCkF4TU1jM2x6ZEdWdE9tRmtiV2x1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEKdmc3NEc1MEViWlNBTGVBWkVGdWRsM3pVMUNmaElOcUh2dHlpNnJVdWNjdXplK2dmbmZCT1BieHVUYy82N1NVbgpXT1dJZXRtNFFlVlZEMnYrSXQ4UVRxemxBaUFhKzFETUE5MnpoYktvY1ZRNDMxQkRFUnI0QTErNzRST0dUR2toCnJNQ3hvU3plMGxVaHRIblhPd0dhemZaTkhUeFMwTEgrTko2UTNoOTQwSVZLNGZsWU13RlB0ZUdaZndNNllzQlUKMTNKLzAvb2NJS0VlN2FtdGVTQks4cDdMMXFDMFdHK3lpOElJRW1sTmwxc0dHbDE0SkdCUTloeGdLNHBFRnlMegpGSHpHbFNQRVFlSmV0aDNlZ1pTdm52WHY5d05nZVkvWXFqaTNyZnVueEdmTS9CR21nYkhMRjgzdDJ5ZjJTbXUvCjNNV0hZS0FJVHNEOWV5WmVHVHM5SVFJREFRQUJvMzh3ZlRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRQpGS0dKbWlKZ0x1UEFydGhLVDJWdGVDZi9iam1CTUI4R0ExVWRJd1FZTUJhQUZFaVQyWHZUaHBsVTZVTUEwK1dHCk9COUx0SVUrTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCNVlyeVF4dHNIY3VqZWNXQ3FIQnNLMEl1SDhRWFAKYWRlUUEramtVSWdrSmxmYzFjOHlZME00ZVkrVkNuZTJsN2srYnpRY0kvV2IwY3JrTTMwdXRWZkN1RkZURXdTOQp5c1N1djFJbFJ6T0R2M3NwK2NVMkhLcFNBRHljMm1hd3BBem9vNks2NW12dkdZaUVaMEpNcFlFVWt1aDlEM2lRCjVZZ1NkZWxrZUU0NDlHN0hCTHh6aFpTWkVvOEM4OXVqTzZKTXlXa3MzNzhVbjVpOFByUm5yblFzc3dJQ1Y1LzgKNW45YzVBTE5zdk9pcmtMVW9oSFRoeTlMNS82KzdPS1JlTlM2eGZCeVhyK2pnZ01ub3lsalFCcG5SWTdxWEJ4aAo4TFVUdUFJZElUaDJJQmloV2kzRFY1UjY0SFJrUFgzNFFGZzh0UlVtQUJralFzdkExa245M1E0UwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.AggregatorCA": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNekNDQWh1Z0F3SUJBZ0lJZHJFMVFFdHJuQTB3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5TjFvd0tERVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFekFSQmdOVkJBTVRDbUZuClozSmxaMkYwYjNJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURDVlJ3d0MvRjgKQmY1VWdZTGc4Q1NwOUdzdGF6RXRNcUMzT0haNzJPODkyQkdPUFY0MmlUUTAwbkUxQU12ZE8zWWVCTXBvQVpHRApib2NpUWp2YUE3eFdiWkJRNE03Y2taME0zMlAwNjFIeXJqSW0xbThMYjJZVGRZTW96NVVmdFlKL1JJaVJiNytDCjF1VGhZU2srYXRqS1Y2a0xjc3E3aWp0SkdlY3haQ1dna2x0OVFkZ25qclhmazgwZ3o1eGErVUNRYS9BMnF5WGIKcWorbmhHbDhNYWpRNDc5aTU3T3IwOEVQY2ZrT2t4WStEZmxkeDdHdTFFZk1lQUI3Y1hnM1ZMc3Z0YjY0M1FuMAo0RnRuek40bmV1T2Ura1BZSDkrK0tXZWNFSHJZZ0drWmJERU1VOWJKYmVIMzZIMVBnbVFiVDhuRTJEV0hRZ2xDCk5rQVlaNmhEZ1ZVdkFnTUJBQUdqWXpCaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQUQKQVFIL01CMEdBMVVkRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFmQmdOVkhTTUVHREFXZ0JSSQprOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBUklmTlBoaXRmTngxCjF3MWwraGYrMHA1bk9MZFlCWTJuYXdlcFRhOVROZmthTHJWTkswWWJUQ2I5YXF5dHk2OG1pV3lTalh3MHJ5UjcKSTlzdmFkVmd4RUc2K2hNaGxlQ29GcHNCeVNoZkhHaXY1djk0T0REb2VBN1pHT2NZY3FSditSdDdXVXlsbncxcgowWEI4WlZaUnpObVRVRzZyRFJoclhydURCUnhnNUU2bzRTY2FHcGVwMjJKN2UxWFNzTUgvR2gyYjNMYng2V3d0Ck90bDVvODVzUHBKekRMdW9DYmlDbi9PTWgxMkJ4cy8rMDZZUDlEMVAyKy96WnFNUFVHS2IwZnRVNldNSWxzNFgKNkM3N2lpdDlXYm5VOU1PbTBOTW5EcXErY1RtU0w4QVdFMXV2MEt0bHhLeS9hTGxCRkNtY2dNdG04SWg0R1ltRwpuMllBYlFoVnNnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd2xVY01BdnhmQVgrVklHQzRQQWtxZlJyTFdzeExUS2d0emgyZTlqdlBkZ1JqajFlCk5vazBOTkp4TlFETDNUdDJIZ1RLYUFHUmcyNkhJa0k3MmdPOFZtMlFVT0RPM0pHZEROOWo5T3RSOHE0eUp0WnYKQzI5bUUzV0RLTStWSDdXQ2YwU0lrVysvZ3RiazRXRXBQbXJZeWxlcEMzTEt1NG83U1Jubk1XUWxvSkpiZlVIWQpKNDYxMzVQTklNK2NXdmxBa0d2d05xc2wyNm8vcDRScGZER28wT08vWXVlenE5UEJEM0g1RHBNV1BnMzVYY2V4CnJ0Ukh6SGdBZTNGNE4xUzdMN1crdU4wSjlPQmJaOHplSjNyam52cEQyQi9mdmlsbm5CQjYySUJwR1d3eERGUFcKeVczaDkraDlUNEprRzAvSnhOZzFoMElKUWpaQUdHZW9RNEZWTHdJREFRQUJBb0lCQURvaUpjV0Z2UjZoMkZ4RgpSZmF1UC9tTGdZaGJ1YUZRdE4wNmljOHdyUmp1Q3dwbTkwa1BNRXZnN0RhejMwaDJJamFHcmxvQXBod1FNMktmCk43SlhUYjc1RmFQc0xGVzFSYXIxSkx5K3JJd1JhalZPRG5mNFFpdnVDbWRwK2EwN3FpY1NSRnhsZG4vWWN5MnMKMkI2dzdkdFI3K0xaMnlYUkN6MHAvNHc1N2p1akp4L2FzV0tLYnhRcHR1L2toQmRrY1NxY2tsZTFFUDMxcnBtOQpaZTBYOTBvYVhvMkIybVdnS2VKQWxoTnM2ZWpURGpjdkJkUGxZS252Mlc4bEMvM3o3ZElLY2lLcmdlaWZHRFZwClJoOGVQNkJmMkorR0dSV2cwa0R2YVM1cjIvRmxrVFErdDVROC8vQmcrZnJ4enZHZ291eng4NklnTUplcitZb0IKd2luU3lqa0NnWUVBMVM3dGFXdkZNWm5VZGFnc0V1R3V2cmtlK0lxdkNLSTVmVUJQN3E4QUZkSXVDMWNxWEVRNApNYlErbG9zZG1QdXNmZ1A2TmtKMHBPTXN4SEJRT2taNlhVS2QvUEJ1LzR3bHpmTy9TRDdJWm5WRmpzVFRGMWJDClU0OHVQdC9xYkFNWEVqdG5UeU1ob1Ntdkd6cVdLd1JXWU9kUHk5MkRyckVuL1RYTGVWTzJJcDBDZ1lFQTZWengKcU5hTzU1OUdhVVkzWkVrK2ZKUDI2cUxxMUZXNlpnb0dIWS9QVmF5WDJDcGs3WHhqZE9WQmRQb3JHMjdYNTBJUwp4N3dXM3RmS0k2MXlQUUFyd254QmpaQWFUazczS0ExY0I4dDRCTjJQSThuWEFYaHh4amNrdVRsN3JCWDEwT2J3CnlmOVJxM3ZOeUFudVJra2I1cis1S2RKdkxLVFJaVXNCQ2xDVVZ6c0NnWUJ2UGR1WkJTbVRKbWhkTlBJNnNCVlYKWkpncXJZT0VoOUpqNzJsR2JYOG40OU12Qzc4SkFuZ29SNXZaUnFLZEw4Ymt3d0tQeWNIQVFPTWRabFlXOHF2cgplbFdpcFh2bVVhVndnTjZ4dmtFb1pjMTBJSFRlV3VGd1pPaUcycVVpMDhINE81TS9FbC84RHhwV3BRMnpTTUlpCk10SEsyYjViTEFwbjhPaEtXVXBUYVFLQmdRQ2x1c05KQSsrRFlXTXcrcFAySGVwSnNRK0hmV0pHb0FkNzFoeVgKdS8wa1BDbXVkQlV2YjhwMlJ5WmdmQlpIS2tZY3o1amt6cGh6ZEU3elhZZW0rTXNiR1FHNUZxRUlBaDZYREQzUwpyMWF5SmVNMUtIQVFkRWhnMitLeHhMZ204NFdhOFpnSjdOQkVkKzBoNXFPWXVPMGV5QVFwUm5COEJTVk15YUtZCmY3ZUo1d0tCZ0Fmdy9PTWhiTGlXTVhFNWcvckxIeXpxZDEvaUJLUlk0WUtuSDB6VHhVNSt4am1IcWZidXljUXMKWGJFYnZ2ME1FTGRpQkovNk5PK1JFdElkSFRqZXEzdCtiRitvU1dlZm53MnFCU3hLbGN2U005azVvNEI3QVR0SApRTk5ETDJKSnN3K0VxcjA0VlM2aHBUV1pxS0JrMUFuemtnQittaUw0aWZ3K3VjL1lxR1ZJCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/aggregator-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd2xVY01BdnhmQVgrVklHQzRQQWtxZlJyTFdzeExUS2d0emgyZTlqdlBkZ1JqajFlCk5vazBOTkp4TlFETDNUdDJIZ1RLYUFHUmcyNkhJa0k3MmdPOFZtMlFVT0RPM0pHZEROOWo5T3RSOHE0eUp0WnYKQzI5bUUzV0RLTStWSDdXQ2YwU0lrVysvZ3RiazRXRXBQbXJZeWxlcEMzTEt1NG83U1Jubk1XUWxvSkpiZlVIWQpKNDYxMzVQTklNK2NXdmxBa0d2d05xc2wyNm8vcDRScGZER28wT08vWXVlenE5UEJEM0g1RHBNV1BnMzVYY2V4CnJ0Ukh6SGdBZTNGNE4xUzdMN1crdU4wSjlPQmJaOHplSjNyam52cEQyQi9mdmlsbm5CQjYySUJwR1d3eERGUFcKeVczaDkraDlUNEprRzAvSnhOZzFoMElKUWpaQUdHZW9RNEZWTHdJREFRQUJBb0lCQURvaUpjV0Z2UjZoMkZ4RgpSZmF1UC9tTGdZaGJ1YUZRdE4wNmljOHdyUmp1Q3dwbTkwa1BNRXZnN0RhejMwaDJJamFHcmxvQXBod1FNMktmCk43SlhUYjc1RmFQc0xGVzFSYXIxSkx5K3JJd1JhalZPRG5mNFFpdnVDbWRwK2EwN3FpY1NSRnhsZG4vWWN5MnMKMkI2dzdkdFI3K0xaMnlYUkN6MHAvNHc1N2p1akp4L2FzV0tLYnhRcHR1L2toQmRrY1NxY2tsZTFFUDMxcnBtOQpaZTBYOTBvYVhvMkIybVdnS2VKQWxoTnM2ZWpURGpjdkJkUGxZS252Mlc4bEMvM3o3ZElLY2lLcmdlaWZHRFZwClJoOGVQNkJmMkorR0dSV2cwa0R2YVM1cjIvRmxrVFErdDVROC8vQmcrZnJ4enZHZ291eng4NklnTUplcitZb0IKd2luU3lqa0NnWUVBMVM3dGFXdkZNWm5VZGFnc0V1R3V2cmtlK0lxdkNLSTVmVUJQN3E4QUZkSXVDMWNxWEVRNApNYlErbG9zZG1QdXNmZ1A2TmtKMHBPTXN4SEJRT2taNlhVS2QvUEJ1LzR3bHpmTy9TRDdJWm5WRmpzVFRGMWJDClU0OHVQdC9xYkFNWEVqdG5UeU1ob1Ntdkd6cVdLd1JXWU9kUHk5MkRyckVuL1RYTGVWTzJJcDBDZ1lFQTZWengKcU5hTzU1OUdhVVkzWkVrK2ZKUDI2cUxxMUZXNlpnb0dIWS9QVmF5WDJDcGs3WHhqZE9WQmRQb3JHMjdYNTBJUwp4N3dXM3RmS0k2MXlQUUFyd254QmpaQWFUazczS0ExY0I4dDRCTjJQSThuWEFYaHh4amNrdVRsN3JCWDEwT2J3CnlmOVJxM3ZOeUFudVJra2I1cis1S2RKdkxLVFJaVXNCQ2xDVVZ6c0NnWUJ2UGR1WkJTbVRKbWhkTlBJNnNCVlYKWkpncXJZT0VoOUpqNzJsR2JYOG40OU12Qzc4SkFuZ29SNXZaUnFLZEw4Ymt3d0tQeWNIQVFPTWRabFlXOHF2cgplbFdpcFh2bVVhVndnTjZ4dmtFb1pjMTBJSFRlV3VGd1pPaUcycVVpMDhINE81TS9FbC84RHhwV3BRMnpTTUlpCk10SEsyYjViTEFwbjhPaEtXVXBUYVFLQmdRQ2x1c05KQSsrRFlXTXcrcFAySGVwSnNRK0hmV0pHb0FkNzFoeVgKdS8wa1BDbXVkQlV2YjhwMlJ5WmdmQlpIS2tZY3o1amt6cGh6ZEU3elhZZW0rTXNiR1FHNUZxRUlBaDZYREQzUwpyMWF5SmVNMUtIQVFkRWhnMitLeHhMZ204NFdhOFpnSjdOQkVkKzBoNXFPWXVPMGV5QVFwUm5COEJTVk15YUtZCmY3ZUo1d0tCZ0Fmdy9PTWhiTGlXTVhFNWcvckxIeXpxZDEvaUJLUlk0WUtuSDB6VHhVNSt4am1IcWZidXljUXMKWGJFYnZ2ME1FTGRpQkovNk5PK1JFdElkSFRqZXEzdCtiRitvU1dlZm53MnFCU3hLbGN2U005azVvNEI3QVR0SApRTk5ETDJKSnN3K0VxcjA0VlM2aHBUV1pxS0JrMUFuemtnQittaUw0aWZ3K3VjL1lxR1ZJCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/aggregator-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNekNDQWh1Z0F3SUJBZ0lJZHJFMVFFdHJuQTB3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5TjFvd0tERVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFekFSQmdOVkJBTVRDbUZuClozSmxaMkYwYjNJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURDVlJ3d0MvRjgKQmY1VWdZTGc4Q1NwOUdzdGF6RXRNcUMzT0haNzJPODkyQkdPUFY0MmlUUTAwbkUxQU12ZE8zWWVCTXBvQVpHRApib2NpUWp2YUE3eFdiWkJRNE03Y2taME0zMlAwNjFIeXJqSW0xbThMYjJZVGRZTW96NVVmdFlKL1JJaVJiNytDCjF1VGhZU2srYXRqS1Y2a0xjc3E3aWp0SkdlY3haQ1dna2x0OVFkZ25qclhmazgwZ3o1eGErVUNRYS9BMnF5WGIKcWorbmhHbDhNYWpRNDc5aTU3T3IwOEVQY2ZrT2t4WStEZmxkeDdHdTFFZk1lQUI3Y1hnM1ZMc3Z0YjY0M1FuMAo0RnRuek40bmV1T2Ura1BZSDkrK0tXZWNFSHJZZ0drWmJERU1VOWJKYmVIMzZIMVBnbVFiVDhuRTJEV0hRZ2xDCk5rQVlaNmhEZ1ZVdkFnTUJBQUdqWXpCaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQUQKQVFIL01CMEdBMVVkRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFmQmdOVkhTTUVHREFXZ0JSSQprOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBUklmTlBoaXRmTngxCjF3MWwraGYrMHA1bk9MZFlCWTJuYXdlcFRhOVROZmthTHJWTkswWWJUQ2I5YXF5dHk2OG1pV3lTalh3MHJ5UjcKSTlzdmFkVmd4RUc2K2hNaGxlQ29GcHNCeVNoZkhHaXY1djk0T0REb2VBN1pHT2NZY3FSditSdDdXVXlsbncxcgowWEI4WlZaUnpObVRVRzZyRFJoclhydURCUnhnNUU2bzRTY2FHcGVwMjJKN2UxWFNzTUgvR2gyYjNMYng2V3d0Ck90bDVvODVzUHBKekRMdW9DYmlDbi9PTWgxMkJ4cy8rMDZZUDlEMVAyKy96WnFNUFVHS2IwZnRVNldNSWxzNFgKNkM3N2lpdDlXYm5VOU1PbTBOTW5EcXErY1RtU0w4QVdFMXV2MEt0bHhLeS9hTGxCRkNtY2dNdG04SWg0R1ltRwpuMllBYlFoVnNnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.ClusterAPIServerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lJYVpaam9jVjFGckl3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRneE1ERTVNVE14TnpJMgpXaGNOTWpneE1ERTJNVE14TnpJM1dqQkNNUkV3RHdZRFZRUUxFd2hpYjI5MGEzVmlaVEV0TUNzR0ExVUVBeE1rClkyeDFjM1JsY21Gd2FTNXZjR1Z1YzJocFpuUXRZMngxYzNSbGNpMWhjR2t1YzNaak1JSUJJakFOQmdrcWhraUcKOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTVHWWhqM0VIT291SktBTlhWZ0ZscXAzSzNZc0g2UVB5Z3AvOAo1WDJUNjlEN1VwenRDVEVKMXI3UVlHQUtLS3FkbUtObmY1U3V6QXh0QWZ6YmN6UzJPaHdSd1FybUVzZWhUSU1QCkpaWkx1NC9BS0g2V2NYL1JpUDNzVHBQaFFha0syK0hieFFKZmNTOENUdWJrNG9QNlpWbHl5NG5VZGZMYy9HSW0KTEZsZzlhOUlCcHp4SHZndXIxdnk3YWo5ZTJGaFZhUzZ5dWY2RHRyZ2VJRHp3eVpucTdwSVB3ZFlUVzNNN0xubApSblZRa2hUb2t3c3IzRnJXeEJCb1B0RWNSYXQ1TTBIcWlWOXZGek5LYndQaExGdlFmOHBqRHpSTjVkR3RFdEpCClhNY3gvT3lreUZlbXI0TkkybTczTDB6RTc0QWxPWFVOc2pkUTRxb2VmYnRxMTRjVzlRSURBUUFCbzJNd1lUQU8KQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV3ckQwMTFLTwpnYmlYTVFVT3pQTFgzcUkyc1Bnd0h3WURWUjBqQkJnd0ZvQVVTSlBaZTlPR21WVHBRd0RUNVlZNEgwdTBoVDR3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFIWGcwbEI1RVhKYzdlTWlFQ2QvVk5oVWFwN2oyTW0xQVFrN1I2SmgKTVRHeFFnRE82RjRBLzhPRVI2Nks1MWUwWFNzbndDWG05SUJ0Vmp1bjNPRUxlMThURk9icEl1S2tHOERhd0Q4YwppZ1VYZTNSR0dsZnpqcDhIVm52alg2bG0ydEh5NU5STWtHeWQ0eEhYOWpnWk1oUnh2eXRtblVGSUI3UXRDdTArCnJMZ0F3Sks0dkpoVldYcTFjTVo5dHFBYkpseGZUcDBiQUtoTDNTSWljZmI3ZEs2ZkRmMkovMVhGNmlBUnZpSjEKQ1dUVU5PVW81eGRTcURybC83cXlpL1puaW53TUJ0dEdIeVdvcWdBOFRDNS9qMmhHUWJhdE9wekRIT2N0OTZyWgpjSHl4UVV6bW8zZkVLdnhOS1M0TUtqaW5QVGdZZEM0SmI5T1Q0TTY4bVVTMXQrZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNekNDQWh1Z0F3SUJBZ0lJZHJFMVFFdHJuQTB3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5TjFvd0tERVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFekFSQmdOVkJBTVRDbUZuClozSmxaMkYwYjNJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURDVlJ3d0MvRjgKQmY1VWdZTGc4Q1NwOUdzdGF6RXRNcUMzT0haNzJPODkyQkdPUFY0MmlUUTAwbkUxQU12ZE8zWWVCTXBvQVpHRApib2NpUWp2YUE3eFdiWkJRNE03Y2taME0zMlAwNjFIeXJqSW0xbThMYjJZVGRZTW96NVVmdFlKL1JJaVJiNytDCjF1VGhZU2srYXRqS1Y2a0xjc3E3aWp0SkdlY3haQ1dna2x0OVFkZ25qclhmazgwZ3o1eGErVUNRYS9BMnF5WGIKcWorbmhHbDhNYWpRNDc5aTU3T3IwOEVQY2ZrT2t4WStEZmxkeDdHdTFFZk1lQUI3Y1hnM1ZMc3Z0YjY0M1FuMAo0RnRuek40bmV1T2Ura1BZSDkrK0tXZWNFSHJZZ0drWmJERU1VOWJKYmVIMzZIMVBnbVFiVDhuRTJEV0hRZ2xDCk5rQVlaNmhEZ1ZVdkFnTUJBQUdqWXpCaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQUQKQVFIL01CMEdBMVVkRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFmQmdOVkhTTUVHREFXZ0JSSQprOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBUklmTlBoaXRmTngxCjF3MWwraGYrMHA1bk9MZFlCWTJuYXdlcFRhOVROZmthTHJWTkswWWJUQ2I5YXF5dHk2OG1pV3lTalh3MHJ5UjcKSTlzdmFkVmd4RUc2K2hNaGxlQ29GcHNCeVNoZkhHaXY1djk0T0REb2VBN1pHT2NZY3FSditSdDdXVXlsbncxcgowWEI4WlZaUnpObVRVRzZyRFJoclhydURCUnhnNUU2bzRTY2FHcGVwMjJKN2UxWFNzTUgvR2gyYjNMYng2V3d0Ck90bDVvODVzUHBKekRMdW9DYmlDbi9PTWgxMkJ4cy8rMDZZUDlEMVAyKy96WnFNUFVHS2IwZnRVNldNSWxzNFgKNkM3N2lpdDlXYm5VOU1PbTBOTW5EcXErY1RtU0w4QVdFMXV2MEt0bHhLeS9hTGxCRkNtY2dNdG04SWg0R1ltRwpuMllBYlFoVnNnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNUdZaGozRUhPb3VKS0FOWFZnRmxxcDNLM1lzSDZRUHlncC84NVgyVDY5RDdVcHp0CkNURUoxcjdRWUdBS0tLcWRtS05uZjVTdXpBeHRBZnpiY3pTMk9od1J3UXJtRXNlaFRJTVBKWlpMdTQvQUtINlcKY1gvUmlQM3NUcFBoUWFrSzIrSGJ4UUpmY1M4Q1R1Yms0b1A2WlZseXk0blVkZkxjL0dJbUxGbGc5YTlJQnB6eApIdmd1cjF2eTdhajllMkZoVmFTNnl1ZjZEdHJnZUlEend5Wm5xN3BJUHdkWVRXM003TG5sUm5WUWtoVG9rd3NyCjNGcld4QkJvUHRFY1JhdDVNMEhxaVY5dkZ6Tktid1BoTEZ2UWY4cGpEelJONWRHdEV0SkJYTWN4L095a3lGZW0KcjROSTJtNzNMMHpFNzRBbE9YVU5zamRRNHFvZWZidHExNGNXOVFJREFRQUJBb0lCQUFHbTQzTkFKQWMrWHgyVQorSnE4bzltYURvK1BvOTBCbEUxeGpzaXlJZEhBenpDSHhnY2MvYTg1N2hQa1hlNXhYWFp2S0I1Nkd0R0svWGJZCk4xWWIrWDF1R29yRTQya2JYSVZMSlY3bU9XSC81aW5rMEgyOXFPeE91ZGpQcFA5dWs0K0hrS2xhSFFxYWhtKy8KcDhRanBEbjdiYU1mT2hRb1Q0VGJ5TjdsUHBoSVNzTjRWMnFoOXMyNktZTWZYNzFpdklCNjJ0d1BlZGJFblNTUAo5alExN3hWeXllVFhkMnpPWlZQREdWQWJhNkVTUEk1ZzY3MVpvd0RqdFQ3Tml0R0o4clA0clMvbjV4ZzJmS1BXClhlODBFSjQ1bGxzMkUwTzdNRmdzaHMxZjAvbkxaZzhaWkd0SWJnY0dDQ3VObmplZmZOZ2RON0R6L25JVmg3TGEKNXFrMTN6a0NnWUVBOW0xSk1yN2JaeVRBWHZXeGlibHQvNTVjQ1NRaXJNbUNOU0F2dU9wZEdwaWhKNU00ZS9megpHQjNjL2ExVXJKZHBQVWlXbUgyUUJja0toRFJiRFFMQWcxZUpnQ1VOMjNsQlRLR2RoMVBrNkd1MXZYWTM5MXVoCksydFZReEdZT2lKYkt6TVRhSUh5cEVMamJpdWJtS0VZME1melh0NTBuYjdXb24wcjZuWW1uek1DZ1lFQTdVV08KckpFTjlpZktiNkVURWlIVUhoYXZxcTBTREZRNVpIK3YzdkI1ditmMTFsYlI5UWZOenFXV0hQU0x1RHlpSmhrTQowTXNsWEFuQzJQYVh2OU0vRlRvSHVPMzkzUUdML3JVWG56VmIvNitEbHgvR0VwZjhuaFV4N3ptUGRFYnNTY2xwCk9wS2tkVndhalk4bDlJd2g4bHp6TkswTFpWTmQzUUpsb3VLMWtUY0NnWUJiUjlnWmFBRTFqN09DZVZndVAvV3kKL2lIeGNPVTNROTFyZUdTMUJucytZdE12S2FWK3BqWHg5UDNyS2MxM3NRNVdtUkRQbzVNNTBXS0gzaXpzQU56Mgp5Zkl3K1lqTWgzbmN2UER4TSs1UytiTDBYMW9UMG1rOUFDRXhHczljbVdWVDl6TjFQczEyY3lCenFzdVVHZmhyClBlVzBlb3FQOUNUbFE2Q0UxUWN4YVFLQmdRRGhJZWJHaHJ3Z25KRFFhcDJWenROZDJWakZNWUsyZ0JRVTc3TUkKYmxTWGFwa3d6eUJZeHhiWXhQVXlkRGMra1FtcDdJcmtjbHo0ZjZxS0F6RHBxcDlvbks5SElVcUhzVGdNYmZnRAo4TFZpWGo4VjNlZ3JMRnRlQSs1bGR0QlBIQnlIeHJ3NS8zcGNnUkFRMFlyS0IwME9rbk9SdjcvWVhNbnJNcU1OCmN0K2s4UUtCZ1FEWXFITzByZG9sNkxLcFdqcFBJbnp3Um00bGVIOHBXYjZ5dnBBWjB6dld0d2N5bmhsaW40RDcKWStrV3N1Z3NBeTdEbm9ibG83K3FnWDlLa0VEU2Fad0s3MExja3NVL2IyUTdtbWlCSlZtRUVCa1dXd2JrTnl0cQpXdGo4bnJQeUJwRkt3cEpzM05TYU9MNTN2b21UcmNTRDlOWEp3NURzNmhmTTNwVlZYek05U1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/cluster-apiserver-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNUdZaGozRUhPb3VKS0FOWFZnRmxxcDNLM1lzSDZRUHlncC84NVgyVDY5RDdVcHp0CkNURUoxcjdRWUdBS0tLcWRtS05uZjVTdXpBeHRBZnpiY3pTMk9od1J3UXJtRXNlaFRJTVBKWlpMdTQvQUtINlcKY1gvUmlQM3NUcFBoUWFrSzIrSGJ4UUpmY1M4Q1R1Yms0b1A2WlZseXk0blVkZkxjL0dJbUxGbGc5YTlJQnB6eApIdmd1cjF2eTdhajllMkZoVmFTNnl1ZjZEdHJnZUlEend5Wm5xN3BJUHdkWVRXM003TG5sUm5WUWtoVG9rd3NyCjNGcld4QkJvUHRFY1JhdDVNMEhxaVY5dkZ6Tktid1BoTEZ2UWY4cGpEelJONWRHdEV0SkJYTWN4L095a3lGZW0KcjROSTJtNzNMMHpFNzRBbE9YVU5zamRRNHFvZWZidHExNGNXOVFJREFRQUJBb0lCQUFHbTQzTkFKQWMrWHgyVQorSnE4bzltYURvK1BvOTBCbEUxeGpzaXlJZEhBenpDSHhnY2MvYTg1N2hQa1hlNXhYWFp2S0I1Nkd0R0svWGJZCk4xWWIrWDF1R29yRTQya2JYSVZMSlY3bU9XSC81aW5rMEgyOXFPeE91ZGpQcFA5dWs0K0hrS2xhSFFxYWhtKy8KcDhRanBEbjdiYU1mT2hRb1Q0VGJ5TjdsUHBoSVNzTjRWMnFoOXMyNktZTWZYNzFpdklCNjJ0d1BlZGJFblNTUAo5alExN3hWeXllVFhkMnpPWlZQREdWQWJhNkVTUEk1ZzY3MVpvd0RqdFQ3Tml0R0o4clA0clMvbjV4ZzJmS1BXClhlODBFSjQ1bGxzMkUwTzdNRmdzaHMxZjAvbkxaZzhaWkd0SWJnY0dDQ3VObmplZmZOZ2RON0R6L25JVmg3TGEKNXFrMTN6a0NnWUVBOW0xSk1yN2JaeVRBWHZXeGlibHQvNTVjQ1NRaXJNbUNOU0F2dU9wZEdwaWhKNU00ZS9megpHQjNjL2ExVXJKZHBQVWlXbUgyUUJja0toRFJiRFFMQWcxZUpnQ1VOMjNsQlRLR2RoMVBrNkd1MXZYWTM5MXVoCksydFZReEdZT2lKYkt6TVRhSUh5cEVMamJpdWJtS0VZME1melh0NTBuYjdXb24wcjZuWW1uek1DZ1lFQTdVV08KckpFTjlpZktiNkVURWlIVUhoYXZxcTBTREZRNVpIK3YzdkI1ditmMTFsYlI5UWZOenFXV0hQU0x1RHlpSmhrTQowTXNsWEFuQzJQYVh2OU0vRlRvSHVPMzkzUUdML3JVWG56VmIvNitEbHgvR0VwZjhuaFV4N3ptUGRFYnNTY2xwCk9wS2tkVndhalk4bDlJd2g4bHp6TkswTFpWTmQzUUpsb3VLMWtUY0NnWUJiUjlnWmFBRTFqN09DZVZndVAvV3kKL2lIeGNPVTNROTFyZUdTMUJucytZdE12S2FWK3BqWHg5UDNyS2MxM3NRNVdtUkRQbzVNNTBXS0gzaXpzQU56Mgp5Zkl3K1lqTWgzbmN2UER4TSs1UytiTDBYMW9UMG1rOUFDRXhHczljbVdWVDl6TjFQczEyY3lCenFzdVVHZmhyClBlVzBlb3FQOUNUbFE2Q0UxUWN4YVFLQmdRRGhJZWJHaHJ3Z25KRFFhcDJWenROZDJWakZNWUsyZ0JRVTc3TUkKYmxTWGFwa3d6eUJZeHhiWXhQVXlkRGMra1FtcDdJcmtjbHo0ZjZxS0F6RHBxcDlvbks5SElVcUhzVGdNYmZnRAo4TFZpWGo4VjNlZ3JMRnRlQSs1bGR0QlBIQnlIeHJ3NS8zcGNnUkFRMFlyS0IwME9rbk9SdjcvWVhNbnJNcU1OCmN0K2s4UUtCZ1FEWXFITzByZG9sNkxLcFdqcFBJbnp3Um00bGVIOHBXYjZ5dnBBWjB6dld0d2N5bmhsaW40RDcKWStrV3N1Z3NBeTdEbm9ibG83K3FnWDlLa0VEU2Fad0s3MExja3NVL2IyUTdtbWlCSlZtRUVCa1dXd2JrTnl0cQpXdGo4bnJQeUJwRkt3cEpzM05TYU9MNTN2b21UcmNTRDlOWEp3NURzNmhmTTNwVlZYek05U1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/cluster-apiserver-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lJYVpaam9jVjFGckl3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRneE1ERTVNVE14TnpJMgpXaGNOTWpneE1ERTJNVE14TnpJM1dqQkNNUkV3RHdZRFZRUUxFd2hpYjI5MGEzVmlaVEV0TUNzR0ExVUVBeE1rClkyeDFjM1JsY21Gd2FTNXZjR1Z1YzJocFpuUXRZMngxYzNSbGNpMWhjR2t1YzNaak1JSUJJakFOQmdrcWhraUcKOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTVHWWhqM0VIT291SktBTlhWZ0ZscXAzSzNZc0g2UVB5Z3AvOAo1WDJUNjlEN1VwenRDVEVKMXI3UVlHQUtLS3FkbUtObmY1U3V6QXh0QWZ6YmN6UzJPaHdSd1FybUVzZWhUSU1QCkpaWkx1NC9BS0g2V2NYL1JpUDNzVHBQaFFha0syK0hieFFKZmNTOENUdWJrNG9QNlpWbHl5NG5VZGZMYy9HSW0KTEZsZzlhOUlCcHp4SHZndXIxdnk3YWo5ZTJGaFZhUzZ5dWY2RHRyZ2VJRHp3eVpucTdwSVB3ZFlUVzNNN0xubApSblZRa2hUb2t3c3IzRnJXeEJCb1B0RWNSYXQ1TTBIcWlWOXZGek5LYndQaExGdlFmOHBqRHpSTjVkR3RFdEpCClhNY3gvT3lreUZlbXI0TkkybTczTDB6RTc0QWxPWFVOc2pkUTRxb2VmYnRxMTRjVzlRSURBUUFCbzJNd1lUQU8KQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVV3ckQwMTFLTwpnYmlYTVFVT3pQTFgzcUkyc1Bnd0h3WURWUjBqQkJnd0ZvQVVTSlBaZTlPR21WVHBRd0RUNVlZNEgwdTBoVDR3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFIWGcwbEI1RVhKYzdlTWlFQ2QvVk5oVWFwN2oyTW0xQVFrN1I2SmgKTVRHeFFnRE82RjRBLzhPRVI2Nks1MWUwWFNzbndDWG05SUJ0Vmp1bjNPRUxlMThURk9icEl1S2tHOERhd0Q4YwppZ1VYZTNSR0dsZnpqcDhIVm52alg2bG0ydEh5NU5STWtHeWQ0eEhYOWpnWk1oUnh2eXRtblVGSUI3UXRDdTArCnJMZ0F3Sks0dkpoVldYcTFjTVo5dHFBYkpseGZUcDBiQUtoTDNTSWljZmI3ZEs2ZkRmMkovMVhGNmlBUnZpSjEKQ1dUVU5PVW81eGRTcURybC83cXlpL1puaW53TUJ0dEdIeVdvcWdBOFRDNS9qMmhHUWJhdE9wekRIT2N0OTZyWgpjSHl4UVV6bW8zZkVLdnhOS1M0TUtqaW5QVGdZZEM0SmI5T1Q0TTY4bVVTMXQrZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNekNDQWh1Z0F3SUJBZ0lJZHJFMVFFdHJuQTB3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5TjFvd0tERVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFekFSQmdOVkJBTVRDbUZuClozSmxaMkYwYjNJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURDVlJ3d0MvRjgKQmY1VWdZTGc4Q1NwOUdzdGF6RXRNcUMzT0haNzJPODkyQkdPUFY0MmlUUTAwbkUxQU12ZE8zWWVCTXBvQVpHRApib2NpUWp2YUE3eFdiWkJRNE03Y2taME0zMlAwNjFIeXJqSW0xbThMYjJZVGRZTW96NVVmdFlKL1JJaVJiNytDCjF1VGhZU2srYXRqS1Y2a0xjc3E3aWp0SkdlY3haQ1dna2x0OVFkZ25qclhmazgwZ3o1eGErVUNRYS9BMnF5WGIKcWorbmhHbDhNYWpRNDc5aTU3T3IwOEVQY2ZrT2t4WStEZmxkeDdHdTFFZk1lQUI3Y1hnM1ZMc3Z0YjY0M1FuMAo0RnRuek40bmV1T2Ura1BZSDkrK0tXZWNFSHJZZ0drWmJERU1VOWJKYmVIMzZIMVBnbVFiVDhuRTJEV0hRZ2xDCk5rQVlaNmhEZ1ZVdkFnTUJBQUdqWXpCaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQUQKQVFIL01CMEdBMVVkRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFmQmdOVkhTTUVHREFXZ0JSSQprOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBUklmTlBoaXRmTngxCjF3MWwraGYrMHA1bk9MZFlCWTJuYXdlcFRhOVROZmthTHJWTkswWWJUQ2I5YXF5dHk2OG1pV3lTalh3MHJ5UjcKSTlzdmFkVmd4RUc2K2hNaGxlQ29GcHNCeVNoZkhHaXY1djk0T0REb2VBN1pHT2NZY3FSditSdDdXVXlsbncxcgowWEI4WlZaUnpObVRVRzZyRFJoclhydURCUnhnNUU2bzRTY2FHcGVwMjJKN2UxWFNzTUgvR2gyYjNMYng2V3d0Ck90bDVvODVzUHBKekRMdW9DYmlDbi9PTWgxMkJ4cy8rMDZZUDlEMVAyKy96WnFNUFVHS2IwZnRVNldNSWxzNFgKNkM3N2lpdDlXYm5VOU1PbTBOTW5EcXErY1RtU0w4QVdFMXV2MEt0bHhLeS9hTGxCRkNtY2dNdG04SWg0R1ltRwpuMllBYlFoVnNnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.EtcdCA": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lJRlQ2M0tmVm5tSjh3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5Tmxvd0hqRU5NQXNHQTFVRUN4TUVaWFJqWkRFTk1Bc0dBMVVFQXhNRVpYUmpaRENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDY2RzMraUVsYjhnRlNZTUNMczZXbVkKbWFZRGdhM1M4eWtwcGR4YnJPTi9Ud0dLMmNvYWJZRHlySmJTVFZia0dZUzR1WHU0T3JoYzYxRG5TV3F0eFRHSwoySkpaS2pHaVBZWWIyQ0hvYlVoRnBnSUs4cVZta2hlU09tMDVmdEFQRjd2L1NhaGc4WlF5cGtiMFdwZkZJeU5ZClRFY0JPT1hvTHRvM0xoRUtxOVpUOS9Ga0pnUEVpSEZsemRiNkxQVkZkYUZrMjQ3VnNhSWxPUno2Ykd5Q1l1SWgKdi84eFU4S28rcWNDbFNTY2tydmFCMWFuVG8vT084WDZkd0ZSMHpwVzdjSFhyeGxYdVZvbFVTYTE5ZzkzM0h2Zwp1Nnk1OVBENk5vZjNNY28vaC9JUzdnR292Q1I0NEZKNkdKQlhEYUpEMTUwVzlYUjFTUUd2Mlk2aVJNL2RlTk1DCkF3RUFBYU5qTUdFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME8KQkJZRUZFaVQyWHZUaHBsVTZVTUEwK1dHT0I5THRJVStNQjhHQTFVZEl3UVlNQmFBRkVpVDJYdlRocGxVNlVNQQowK1dHT0I5THRJVStNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNwd1pnWXcvLzEzRWdDaHpvSlhqVlBWdTJuCmJabWFUdWtobUhBUCtUR0lHMkJRb24xRk0wQ3BsSkhPbEphMmxMb0JvUTNINEk0WjhqNmR3MHhKeTZOUW9BcGMKRUQ0WTBiZU5vSUN6L2twNDg2NDFDSDQvZTJxcGNEU1B2QlNyQU9tWWpiY0tqSjJONDIxRHR6ZTM4eWVadEVkSQpWQzljNWdHQ2hYOTlkYkRjV3ZneXRsNlVjcm5DZmhjYkNjT0M5bHk1cTZZc2RoamdaNnFObXVRY2k3eVBpbytwCnhhQzBVRFlOVWJxdDJOeWtJZjNjZGtBRk5XUmlyTHdyWCt1SUtGS3hpOVZOOUhUZmZYRXBMYSsveDRzVEcrRHEKRkgxbzdUS0xFSlBHMVA3OEZpZnVmOU1aRjMreW55SDVYK3VqU1ljVmp3Wk14VndtOTJvMFc0NWZ5MGx3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdnJvYmY2SVNWdnlBVkpnd0l1enBhWmlacGdPQnJkTHpLU21sM0Z1czQzOVBBWXJaCnlocHRnUEtzbHRKTlZ1UVpoTGk1ZTdnNnVGenJVT2RKYXEzRk1ZcllrbGtxTWFJOWhodllJZWh0U0VXbUFncnkKcFdhU0Y1STZiVGwrMEE4WHUvOUpxR0R4bERLbVJ2UmFsOFVqSTFoTVJ3RTQ1ZWd1MmpjdUVRcXIxbFAzOFdRbQpBOFNJY1dYTjF2b3M5VVYxb1dUYmp0V3hvaVU1SFBwc2JJSmk0aUcvL3pGVHdxajZwd0tWSkp5U3U5b0hWcWRPCmo4NDd4ZnAzQVZIVE9sYnR3ZGV2R1ZlNVdpVlJKclgyRDNmY2UrQzdyTG4wOFBvMmgvY3h5aitIOGhMdUFhaTgKSkhqZ1Vub1lrRmNOb2tQWG5SYjFkSFZKQWEvWmpxSkV6OTE0MHdJREFRQUJBb0lCQUd0OTZGR2V2a2RZTjl0MQppbXVrcWtoaFFQZFhzcGFNOVk2VmNtMG5IZUY1dHNWZnhDOHJoZHZPNllaM01DOXdqeEZHS3dPWGFVRE8zYkRUCktZVitPazBadThWL2kxQTk1LzdWWXBKNXRGMnZJMGl6Y3QzVldURC9zUDR1RVZLaHJ2YTlnbjNyWlR2bzc5MjkKaWZGUG9lWWh0WnV2REtwR21XRlRDQnVDc0NZeVk5QlZkVGhxQWlPUGV0aXVxTStmMnRXM2dnYUhzSTJKWGlHWgprN1pDN0VvZ3VoeWw1VDNiN1IyTC9CQWZaUVJna05nSzRYLzdHaldLamR5UkNDSWh5ZUJMZkc0UTdnQWVwRVlvClpNR3lIblJXc0YyL3lnZWF1aFF3RzYwbFIwQllWSmJGN1lKZEs1clczQjhZdE92QzhlcE8zYzhoSDVGV0t5MjAKZEdnQnVJRUNnWUVBM1lhT1oya1B0K29zcUJMbFhONXdvengrTE5UN3ZQcUc0R3NZT0tlWUkyY0VlQUdsVEFOdgo5VmhyTTYrNWJHaEluVWxlZUFKUlNISHFGeE43b2J2eVZKUHFETFV2cXc0MktBMVh2YTNFNHpDSVZnYWJmTXVHCjl0bTBUbEI3dUFDaGZQcTcvTDVSVGlOWWNqSGx0elp2NGI0Yzl3VWFMb0hmdmxtN3ViOG9MTnNDZ1lFQTNHaU4KZzRNbGhXbjl4a2pkOXhTYjNFZlVtOGJRYk5RRXUyMEZKeEtwVzJRdURXYWVsNDBYSHpETys2Nng0SDRBZnBBcgpjTHRQb29tSm5VS0RKLzJGTEc3UjRNSTJuRHY5R2xFZG1wNmt1UXFvZkZuOUphVWN2VWE1NFJ4R01ab3NDdlJ4Cmc1LzNyYjNIdUx4eW8vWUE0NGw0c0tnSHhuckliRnJHQ1ZmY0tXa0NnWUErMFNFZ2dkSkxQTVJkQkw2MWp2NHgKeTcyYnlPbDV0VEQ2QW1SajdHSmY1NTZFeVRLdVUyczBEMWFXMllXakVBOUhTcjdYR1JFamtlbm5rVWJGbmg0aApqYkFZMm1naUFXMnAvZDZia3VMNTZaRS9rN0FUdTBNU1RMbXNXM1k1dnpRTDFLM3FCYTNZa24xS0pJd1hZQUJwCjZ4Y2JsUDdQb1ZScERka0Yyd2J4Y1FLQmdRQzFnQ09JdU9hZEJydEVIWjByYW4wdTJMZnJ6N3l5NGFWRDhuTGIKeWpKTVlDTE1Sa1V5NTZ5eXNxNi84d3Zub2RzbVhmSm4wdGV4TVRGeG51UUNlbkxBTkVJQW8rMzBtakhEQ2lrbQp1cDFMQTh2Ykd2K3JrRndxUWFPd0RHaUJVRVFVZ1ZjNDNQSkkwSTgzUVhmbUxSNXVRVFp4d3Uwa05OZjI0b2xTCkNGZjBnUUtCZ1FERm5Ua25iVDJRNko4bVZMZlFMN1dJeUx5RHRGTWo4V1ZzVnp5WjZsQjNLRHJLZEtOVERqSmEKY1VCS09naUk2MjJZU3hLRWtNWTZjdVh0dm5XMTV4Vzd5QUF0czVLTzdvbDc1Zm0reXE3YjhZTTFWd2NieTY3YwpYRXR0TDFWdkdhTGdmZ0xuKzFhOHNsQmxxRnFIQUJmMW5SdXJSVnBiTk5ya1U3ZG5vaTVUMnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/etcd-client-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdnJvYmY2SVNWdnlBVkpnd0l1enBhWmlacGdPQnJkTHpLU21sM0Z1czQzOVBBWXJaCnlocHRnUEtzbHRKTlZ1UVpoTGk1ZTdnNnVGenJVT2RKYXEzRk1ZcllrbGtxTWFJOWhodllJZWh0U0VXbUFncnkKcFdhU0Y1STZiVGwrMEE4WHUvOUpxR0R4bERLbVJ2UmFsOFVqSTFoTVJ3RTQ1ZWd1MmpjdUVRcXIxbFAzOFdRbQpBOFNJY1dYTjF2b3M5VVYxb1dUYmp0V3hvaVU1SFBwc2JJSmk0aUcvL3pGVHdxajZwd0tWSkp5U3U5b0hWcWRPCmo4NDd4ZnAzQVZIVE9sYnR3ZGV2R1ZlNVdpVlJKclgyRDNmY2UrQzdyTG4wOFBvMmgvY3h5aitIOGhMdUFhaTgKSkhqZ1Vub1lrRmNOb2tQWG5SYjFkSFZKQWEvWmpxSkV6OTE0MHdJREFRQUJBb0lCQUd0OTZGR2V2a2RZTjl0MQppbXVrcWtoaFFQZFhzcGFNOVk2VmNtMG5IZUY1dHNWZnhDOHJoZHZPNllaM01DOXdqeEZHS3dPWGFVRE8zYkRUCktZVitPazBadThWL2kxQTk1LzdWWXBKNXRGMnZJMGl6Y3QzVldURC9zUDR1RVZLaHJ2YTlnbjNyWlR2bzc5MjkKaWZGUG9lWWh0WnV2REtwR21XRlRDQnVDc0NZeVk5QlZkVGhxQWlPUGV0aXVxTStmMnRXM2dnYUhzSTJKWGlHWgprN1pDN0VvZ3VoeWw1VDNiN1IyTC9CQWZaUVJna05nSzRYLzdHaldLamR5UkNDSWh5ZUJMZkc0UTdnQWVwRVlvClpNR3lIblJXc0YyL3lnZWF1aFF3RzYwbFIwQllWSmJGN1lKZEs1clczQjhZdE92QzhlcE8zYzhoSDVGV0t5MjAKZEdnQnVJRUNnWUVBM1lhT1oya1B0K29zcUJMbFhONXdvengrTE5UN3ZQcUc0R3NZT0tlWUkyY0VlQUdsVEFOdgo5VmhyTTYrNWJHaEluVWxlZUFKUlNISHFGeE43b2J2eVZKUHFETFV2cXc0MktBMVh2YTNFNHpDSVZnYWJmTXVHCjl0bTBUbEI3dUFDaGZQcTcvTDVSVGlOWWNqSGx0elp2NGI0Yzl3VWFMb0hmdmxtN3ViOG9MTnNDZ1lFQTNHaU4KZzRNbGhXbjl4a2pkOXhTYjNFZlVtOGJRYk5RRXUyMEZKeEtwVzJRdURXYWVsNDBYSHpETys2Nng0SDRBZnBBcgpjTHRQb29tSm5VS0RKLzJGTEc3UjRNSTJuRHY5R2xFZG1wNmt1UXFvZkZuOUphVWN2VWE1NFJ4R01ab3NDdlJ4Cmc1LzNyYjNIdUx4eW8vWUE0NGw0c0tnSHhuckliRnJHQ1ZmY0tXa0NnWUErMFNFZ2dkSkxQTVJkQkw2MWp2NHgKeTcyYnlPbDV0VEQ2QW1SajdHSmY1NTZFeVRLdVUyczBEMWFXMllXakVBOUhTcjdYR1JFamtlbm5rVWJGbmg0aApqYkFZMm1naUFXMnAvZDZia3VMNTZaRS9rN0FUdTBNU1RMbXNXM1k1dnpRTDFLM3FCYTNZa24xS0pJd1hZQUJwCjZ4Y2JsUDdQb1ZScERka0Yyd2J4Y1FLQmdRQzFnQ09JdU9hZEJydEVIWjByYW4wdTJMZnJ6N3l5NGFWRDhuTGIKeWpKTVlDTE1Sa1V5NTZ5eXNxNi84d3Zub2RzbVhmSm4wdGV4TVRGeG51UUNlbkxBTkVJQW8rMzBtakhEQ2lrbQp1cDFMQTh2Ykd2K3JrRndxUWFPd0RHaUJVRVFVZ1ZjNDNQSkkwSTgzUVhmbUxSNXVRVFp4d3Uwa05OZjI0b2xTCkNGZjBnUUtCZ1FERm5Ua25iVDJRNko4bVZMZlFMN1dJeUx5RHRGTWo4V1ZzVnp5WjZsQjNLRHJLZEtOVERqSmEKY1VCS09naUk2MjJZU3hLRWtNWTZjdVh0dm5XMTV4Vzd5QUF0czVLTzdvbDc1Zm0reXE3YjhZTTFWd2NieTY3YwpYRXR0TDFWdkdhTGdmZ0xuKzFhOHNsQmxxRnFIQUJmMW5SdXJSVnBiTk5ya1U3ZG5vaTVUMnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/etcd-client-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lJRlQ2M0tmVm5tSjh3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5Tmxvd0hqRU5NQXNHQTFVRUN4TUVaWFJqWkRFTk1Bc0dBMVVFQXhNRVpYUmpaRENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDY2RzMraUVsYjhnRlNZTUNMczZXbVkKbWFZRGdhM1M4eWtwcGR4YnJPTi9Ud0dLMmNvYWJZRHlySmJTVFZia0dZUzR1WHU0T3JoYzYxRG5TV3F0eFRHSwoySkpaS2pHaVBZWWIyQ0hvYlVoRnBnSUs4cVZta2hlU09tMDVmdEFQRjd2L1NhaGc4WlF5cGtiMFdwZkZJeU5ZClRFY0JPT1hvTHRvM0xoRUtxOVpUOS9Ga0pnUEVpSEZsemRiNkxQVkZkYUZrMjQ3VnNhSWxPUno2Ykd5Q1l1SWgKdi84eFU4S28rcWNDbFNTY2tydmFCMWFuVG8vT084WDZkd0ZSMHpwVzdjSFhyeGxYdVZvbFVTYTE5ZzkzM0h2Zwp1Nnk1OVBENk5vZjNNY28vaC9JUzdnR292Q1I0NEZKNkdKQlhEYUpEMTUwVzlYUjFTUUd2Mlk2aVJNL2RlTk1DCkF3RUFBYU5qTUdFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME8KQkJZRUZFaVQyWHZUaHBsVTZVTUEwK1dHT0I5THRJVStNQjhHQTFVZEl3UVlNQmFBRkVpVDJYdlRocGxVNlVNQQowK1dHT0I5THRJVStNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNwd1pnWXcvLzEzRWdDaHpvSlhqVlBWdTJuCmJabWFUdWtobUhBUCtUR0lHMkJRb24xRk0wQ3BsSkhPbEphMmxMb0JvUTNINEk0WjhqNmR3MHhKeTZOUW9BcGMKRUQ0WTBiZU5vSUN6L2twNDg2NDFDSDQvZTJxcGNEU1B2QlNyQU9tWWpiY0tqSjJONDIxRHR6ZTM4eWVadEVkSQpWQzljNWdHQ2hYOTlkYkRjV3ZneXRsNlVjcm5DZmhjYkNjT0M5bHk1cTZZc2RoamdaNnFObXVRY2k3eVBpbytwCnhhQzBVRFlOVWJxdDJOeWtJZjNjZGtBRk5XUmlyTHdyWCt1SUtGS3hpOVZOOUhUZmZYRXBMYSsveDRzVEcrRHEKRkgxbzdUS0xFSlBHMVA3OEZpZnVmOU1aRjMreW55SDVYK3VqU1ljVmp3Wk14VndtOTJvMFc0NWZ5MGx3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.EtcdClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFakNDQWZxZ0F3SUJBZ0lJUnRDWEcwaGJwSlF3RFFZSktvWklodmNOQVFFTEJRQXdIakVOTUFzR0ExVUUKQ3hNRVpYUmpaREVOTUFzR0ExVUVBeE1FWlhSalpEQWVGdzB4T0RFd01Ua3hNekUzTWpaYUZ3MHlPREV3TVRZeApNekUzTWpoYU1CNHhEVEFMQmdOVkJBc1RCR1YwWTJReERUQUxCZ05WQkFNVEJHVjBZMlF3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURlNTE3cGFxbUFwT0lDTkRmZnMyMTFVYXlzTzVOdGgxVTkKUGlFZ0ZucmhtbHd0TGl0N3l3TGNZNjJBak5MRjlJeGtFcHJidnpZaWp3aXFQYlRpZGMyaFVBVGJDUEdSSUowSwpFQTJNZjFIelFYSWN6VWY0VTZTMFBMcHhtODdNWk04Zk41LzRBU3dxeThTQ3pJVUl5NWlIdjdGb2ZvUTIybGZECk1VS2trV3kzY0JFTXRQV3JDc21ZY3Y1V0MvajRaTXNiWnA4NHp2M1dVVWpQWDhtaUVPTUpJNnJJdWRGemtzc3cKOWxzNkEvMm9RajN4TFJyRi9GU0dycWRKS1B4cFh2RzBrcnZCMHpLVS9nQkV2QlcxWGEzMWRsSmNBZGtsV2FhZQpkd1MyaXAzYnFESXhMZ25FOWRHUU95WEo5eUtlNitOSnZpRFdIV3c2TGMrbWtlMXB1bTVaQWdNQkFBR2pWREJTCk1BNEdBMVVkRHdFQi93UUVBd0lGSURBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEUKQWpBQU1CMEdBMVVkRGdRV0JCVDN5Mlhwa2lLLzhQSk0zQ29nS3VESzhweXkzekFOQmdrcWhraUc5dzBCQVFzRgpBQU9DQVFFQXVBbEkrTEVKMG5kbnBjdHZQUzdxdExJTW1RVHhMUXEySzlkV21jWFhaTEM2eGRzcXl0RnZkczdQCjBEUWZlNUNWeEdLVit5b0pGcFY5djlFNElyb2dRbEg4bk1LdUNtd0ZHSngrZ296UFZvNWxZMGMrbU9aeUJqQzYKaXg5TFFHSGg2bGJvUjA2ZzZhK25zbUJ3eERvNml0em5XODEyL2QxTWFPUXJvYUp5T1F3MFRqbkFnM1Y5OFNtUQovNlg3cDUyYzVRZnU5WGpYWXhIMUhZVjVkUEVYRDdPQ201REszYUFlV0g0VFRJTzBmc3h5TUFBbzFUc0l5a3hKCjA5U0YyUnRzQXp4QWd6ZzRIMW5mUnpoRkFQNDdYSGxSOUw4RHZIdVl4ZkIvNnNRVDdraFFtcHFYbStHSjMvVVQKRkJyM0pEMXVaMDhocGV2QTE0bXVzVDVxYytTSmNRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM3VkZTZXcXBnS1RpQWpRMzM3TnRkVkdzckR1VGJZZFZQVDRoSUJaNjRacGNMUzRyCmU4c0MzR090Z0l6U3hmU01aQkthMjc4MklvOElxajIwNG5YTm9WQUUyd2p4a1NDZENoQU5qSDlSODBGeUhNMUgKK0ZPa3REeTZjWnZPekdUUEh6ZWYrQUVzS3N2RWdzeUZDTXVZaDcreGFINkVOdHBYd3pGQ3BKRnN0M0FSRExUMQpxd3JKbUhMK1ZndjQrR1RMRzJhZk9NNzkxbEZJejEvSm9oRGpDU09xeUxuUmM1TExNUFpiT2dQOXFFSTk4UzBhCnhmeFVocTZuU1NqOGFWN3h0Sks3d2RNeWxQNEFSTHdWdFYydDlYWlNYQUhaSlZtbW5uY0V0b3FkMjZneU1TNEoKeFBYUmtEc2x5ZmNpbnV2alNiNGcxaDFzT2kzUHBwSHRhYnB1V1FJREFRQUJBb0lCQUZiVzFNY2k0cjVYZmlWVgpxcDdnRERpMGhRemtlTjhtNWpKaHpnM3VOQmxJUmJqa1Q5Uitscks5c281dVRuOEljdGxaMWpMZUgzei9OR1QrCmZVWHNseHZOVE5iNGVRUU5MS0VLOS94UWJlRFRFbDNlSzdlMi9tZXBjUWxwcGZ0REd0NFNrYVBROFNBTEdwZksKamRtTFYvVXEzVGJVY3pYYmdtMXM5NFdka2prMEdZc0NhQ1JoaEszbDJNaXJTNnJieWEwN2JxanhuWnhWRk52ZQpCVlRSa2lpb0tJTG9ndXlmbERicmpQUlptbTJHY1pjdkk0SFhWWTdYWTgwYUk0eDZLc3A5OGQvN3FPWFlTN0VwClJuODlOcGVFb0pWR3JESzc5OUlVdVhMKzkxTmx2ejdZcnlYSy9rbjVBeHNYMHRkK3lFc3NrZ3RJZXdmZ044dDYKKzNuS2NBRUNnWUVBOGlEM0ozRjNzYktzMEl0V2l4b2lSNS9qckczUGk4OGtIQ1VGRmZXT1RZWmhobFppQzZpMwpXeWZ1dzRpOFliQ3dQdlh1TXFHOVBGK1NKblFhQUdxNjU3OU0zUFUrNlFqcURjS1J4U0xkblpQRUF3UFl2SlVoCkpUak8wbysvMHo4c1ZKSm1HYTJ1RjREODN2RVRoNEhCUitoRkE1MzV6OGZxUEE0MzJKV2ViTmtDZ1lFQTY2eDAKTGJETGJyR21nZ2ZLUi94czVwMlhTSk82YjhNMWdUTlVVQm5aL0lXcHRLM1p4NVg0djBLK3pPbzBraVpUWmduMQpIN2dyeE42cllGZE9Hd0xMYmt4TDludVd1WmI1bFBjbGR4d0hTT3lzYWN1c3hEd1RWMWhMeTQvVHRrRG83ZEU4CldOMU9CYytrTFRmVS9OeEIvYjRTQnpQSVErMTZrTjd6bnFCNUhZRUNnWUVBd0xCQllJOXBQTzQvbjFzMERWRkgKOUk0bXh1TkE1emQ2dWpjdjIvRG1SWVhxK05pb0FEVk5iZXJTbGFPc24yWFliTktVdEpDSW81SS9JZ0VGYkUyRAozc2diNkQvM3g4YURWVjRCV2N4TVo0bmYxTEpyK25BSHg3SjB6WmIraHFQZ3FKRTFWYndsTHFsRkZEcndXc2VGClJLOXd0TmMwcGdtbnZCRm9taUUveWNrQ2dZQkRHdzdWdDhLbFdWWmxMaHl1RkxWWmtVUHplWVVicjhUN2JnY3kKNjdtRFN2Z0FwNFFjYlpxdnN5eXJJb0Vub0Z3YzhQYm9Pa1BVUWVjZ2ZwdVIyMkRibmtQL0FqL3Z4b3A0blVzQQp1RzFtbVdXYWxsRXlhenpDb1RTcjJOOWF4TzdPVU1iVE11aTFoT05sc01FbjR2dXphYnl1YWxNNjdGTDdEMURsCk9TSmpnUUtCZ1FDeG8yZ1hLbDh5ZWw1U3RsVVZoMHFjeW43OGRWeG41Vmh2N1dwaUhCREJ6K0V5VnpSWXBQS3cKY2JqWElUYVZzOTQyWlhPb3BJMDZBNm9la0Y5Ty9saWNyUFd4anlYbDVsM3ZZclNOQmpDYlJBY0FsUmF4UGxDRwpFby96TFpabFpJYlRwS210Y0h0bDgyV3JrRFI0d3dKcFM0U3hkZHU4dzgvUUdaUHZvMXBEb3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/etcd-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM3VkZTZXcXBnS1RpQWpRMzM3TnRkVkdzckR1VGJZZFZQVDRoSUJaNjRacGNMUzRyCmU4c0MzR090Z0l6U3hmU01aQkthMjc4MklvOElxajIwNG5YTm9WQUUyd2p4a1NDZENoQU5qSDlSODBGeUhNMUgKK0ZPa3REeTZjWnZPekdUUEh6ZWYrQUVzS3N2RWdzeUZDTXVZaDcreGFINkVOdHBYd3pGQ3BKRnN0M0FSRExUMQpxd3JKbUhMK1ZndjQrR1RMRzJhZk9NNzkxbEZJejEvSm9oRGpDU09xeUxuUmM1TExNUFpiT2dQOXFFSTk4UzBhCnhmeFVocTZuU1NqOGFWN3h0Sks3d2RNeWxQNEFSTHdWdFYydDlYWlNYQUhaSlZtbW5uY0V0b3FkMjZneU1TNEoKeFBYUmtEc2x5ZmNpbnV2alNiNGcxaDFzT2kzUHBwSHRhYnB1V1FJREFRQUJBb0lCQUZiVzFNY2k0cjVYZmlWVgpxcDdnRERpMGhRemtlTjhtNWpKaHpnM3VOQmxJUmJqa1Q5Uitscks5c281dVRuOEljdGxaMWpMZUgzei9OR1QrCmZVWHNseHZOVE5iNGVRUU5MS0VLOS94UWJlRFRFbDNlSzdlMi9tZXBjUWxwcGZ0REd0NFNrYVBROFNBTEdwZksKamRtTFYvVXEzVGJVY3pYYmdtMXM5NFdka2prMEdZc0NhQ1JoaEszbDJNaXJTNnJieWEwN2JxanhuWnhWRk52ZQpCVlRSa2lpb0tJTG9ndXlmbERicmpQUlptbTJHY1pjdkk0SFhWWTdYWTgwYUk0eDZLc3A5OGQvN3FPWFlTN0VwClJuODlOcGVFb0pWR3JESzc5OUlVdVhMKzkxTmx2ejdZcnlYSy9rbjVBeHNYMHRkK3lFc3NrZ3RJZXdmZ044dDYKKzNuS2NBRUNnWUVBOGlEM0ozRjNzYktzMEl0V2l4b2lSNS9qckczUGk4OGtIQ1VGRmZXT1RZWmhobFppQzZpMwpXeWZ1dzRpOFliQ3dQdlh1TXFHOVBGK1NKblFhQUdxNjU3OU0zUFUrNlFqcURjS1J4U0xkblpQRUF3UFl2SlVoCkpUak8wbysvMHo4c1ZKSm1HYTJ1RjREODN2RVRoNEhCUitoRkE1MzV6OGZxUEE0MzJKV2ViTmtDZ1lFQTY2eDAKTGJETGJyR21nZ2ZLUi94czVwMlhTSk82YjhNMWdUTlVVQm5aL0lXcHRLM1p4NVg0djBLK3pPbzBraVpUWmduMQpIN2dyeE42cllGZE9Hd0xMYmt4TDludVd1WmI1bFBjbGR4d0hTT3lzYWN1c3hEd1RWMWhMeTQvVHRrRG83ZEU4CldOMU9CYytrTFRmVS9OeEIvYjRTQnpQSVErMTZrTjd6bnFCNUhZRUNnWUVBd0xCQllJOXBQTzQvbjFzMERWRkgKOUk0bXh1TkE1emQ2dWpjdjIvRG1SWVhxK05pb0FEVk5iZXJTbGFPc24yWFliTktVdEpDSW81SS9JZ0VGYkUyRAozc2diNkQvM3g4YURWVjRCV2N4TVo0bmYxTEpyK25BSHg3SjB6WmIraHFQZ3FKRTFWYndsTHFsRkZEcndXc2VGClJLOXd0TmMwcGdtbnZCRm9taUUveWNrQ2dZQkRHdzdWdDhLbFdWWmxMaHl1RkxWWmtVUHplWVVicjhUN2JnY3kKNjdtRFN2Z0FwNFFjYlpxdnN5eXJJb0Vub0Z3YzhQYm9Pa1BVUWVjZ2ZwdVIyMkRibmtQL0FqL3Z4b3A0blVzQQp1RzFtbVdXYWxsRXlhenpDb1RTcjJOOWF4TzdPVU1iVE11aTFoT05sc01FbjR2dXphYnl1YWxNNjdGTDdEMURsCk9TSmpnUUtCZ1FDeG8yZ1hLbDh5ZWw1U3RsVVZoMHFjeW43OGRWeG41Vmh2N1dwaUhCREJ6K0V5VnpSWXBQS3cKY2JqWElUYVZzOTQyWlhPb3BJMDZBNm9la0Y5Ty9saWNyUFd4anlYbDVsM3ZZclNOQmpDYlJBY0FsUmF4UGxDRwpFby96TFpabFpJYlRwS210Y0h0bDgyV3JrRFI0d3dKcFM0U3hkZHU4dzgvUUdaUHZvMXBEb3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/etcd-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFakNDQWZxZ0F3SUJBZ0lJUnRDWEcwaGJwSlF3RFFZSktvWklodmNOQVFFTEJRQXdIakVOTUFzR0ExVUUKQ3hNRVpYUmpaREVOTUFzR0ExVUVBeE1FWlhSalpEQWVGdzB4T0RFd01Ua3hNekUzTWpaYUZ3MHlPREV3TVRZeApNekUzTWpoYU1CNHhEVEFMQmdOVkJBc1RCR1YwWTJReERUQUxCZ05WQkFNVEJHVjBZMlF3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURlNTE3cGFxbUFwT0lDTkRmZnMyMTFVYXlzTzVOdGgxVTkKUGlFZ0ZucmhtbHd0TGl0N3l3TGNZNjJBak5MRjlJeGtFcHJidnpZaWp3aXFQYlRpZGMyaFVBVGJDUEdSSUowSwpFQTJNZjFIelFYSWN6VWY0VTZTMFBMcHhtODdNWk04Zk41LzRBU3dxeThTQ3pJVUl5NWlIdjdGb2ZvUTIybGZECk1VS2trV3kzY0JFTXRQV3JDc21ZY3Y1V0MvajRaTXNiWnA4NHp2M1dVVWpQWDhtaUVPTUpJNnJJdWRGemtzc3cKOWxzNkEvMm9RajN4TFJyRi9GU0dycWRKS1B4cFh2RzBrcnZCMHpLVS9nQkV2QlcxWGEzMWRsSmNBZGtsV2FhZQpkd1MyaXAzYnFESXhMZ25FOWRHUU95WEo5eUtlNitOSnZpRFdIV3c2TGMrbWtlMXB1bTVaQWdNQkFBR2pWREJTCk1BNEdBMVVkRHdFQi93UUVBd0lGSURBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEUKQWpBQU1CMEdBMVVkRGdRV0JCVDN5Mlhwa2lLLzhQSk0zQ29nS3VESzhweXkzekFOQmdrcWhraUc5dzBCQVFzRgpBQU9DQVFFQXVBbEkrTEVKMG5kbnBjdHZQUzdxdExJTW1RVHhMUXEySzlkV21jWFhaTEM2eGRzcXl0RnZkczdQCjBEUWZlNUNWeEdLVit5b0pGcFY5djlFNElyb2dRbEg4bk1LdUNtd0ZHSngrZ296UFZvNWxZMGMrbU9aeUJqQzYKaXg5TFFHSGg2bGJvUjA2ZzZhK25zbUJ3eERvNml0em5XODEyL2QxTWFPUXJvYUp5T1F3MFRqbkFnM1Y5OFNtUQovNlg3cDUyYzVRZnU5WGpYWXhIMUhZVjVkUEVYRDdPQ201REszYUFlV0g0VFRJTzBmc3h5TUFBbzFUc0l5a3hKCjA5U0YyUnRzQXp4QWd6ZzRIMW5mUnpoRkFQNDdYSGxSOUw4RHZIdVl4ZkIvNnNRVDdraFFtcHFYbStHSjMvVVQKRkJyM0pEMXVaMDhocGV2QTE0bXVzVDVxYytTSmNRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.IngressCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR1VENDQXFHZ0F3SUJBZ0lJWmxLNnZ1SnhTU3d3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TURFNU1UTXhOekkyV2hjTgpNamd4TURFMk1UTXhOekkyV2pBK01SQXdEZ1lEVlFRS0V3ZHBibWR5WlhOek1Tb3dLQVlEVlFRREV5RnpiMjFoCmJHeGxlUzVrWlhaamJIVnpkR1Z5TG05d1pXNXphR2xtZEM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRFB6V3ExQlFlUEFJbmNJVmh1Skd4MXRHR1htVEc2QXpKU0gwcmZLU2wyS0dURQorNlZOZDdyNjZaV29CdWVrNlNYN01MZXdBZHA1NER0ODhJZVlMVS9xRWNkUlY3RDZ0Vkx1T015TFJwOVRMRzl0CllGMWJ3OFJTS29IWFBXbndMNDlQMFVOK3lJaWJ6aTA0YmhkLzZaODg3THBZZUt1VThXR1FIL2g3Q0ZaNkNaeUwKcWY3RU9XVVBFOFAwTy9mQWhjc3pSZ1Y0cmVyRWJvcW5RQWJiTW5YaWtzVmVSK0Y2cE9QVXlRVGJjV2xoMjRFZQpRa2pieFRxb3R0T0MybXhDNE9xQUNJem1KdnNSbDVGem9mcUNWZVNwaS9DMEpOVk9qMGpBYUkzWUVxWnh1V3hvCkFWTkxhSnJENXlnekdGQk80enhiQ2trUkxnWWdhdHBmOXoreHc2RG5BZ01CQUFHamdkTXdnZEF3RGdZRFZSMFAKQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCU2hpWm9pWUM3andLN1lTazlsYlhnbi8yNDVnVEFmQmdOVkhTTUVHREFXCmdCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakJSQmdOVkhSRUVTakJJZ2lGemIyMWhiR3hsZVM1a1pYWmoKYkhWemRHVnlMbTl3Wlc1emFHbG1kQzVqYjIyQ0l5b3VjMjl0WVd4c1pYa3VaR1YyWTJ4MWMzUmxjaTV2Y0dWdQpjMmhwWm5RdVkyOXRNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJSSlJmWlMvaUFtNjdDZVpjKzJ3ZjdDdWZqCm0xRlNYL0ZyNmRmVjNtWEJ1Y090VFVWYzgrOHpKUVdrMnFGMGdEb3dYaEs0UFFKVDNaMy9UTjhackFnWFZBbmoKK2txT0J3MzExQUV0Z0NMN3ByYjlwYnJRYWE0bzlQcFRvaUpkMFgvUzRTL0VaUExtTjlvZDVsajY5am9JVjJkWgpadzBPcVNCamIxOHh2L3dHOG56MXl5THpKQjZ2Z3BQaEdLYXBUdmk2UHM0THVyYWw3QjY3NDB1UkZvZmFpYU5rCkxXZFk4M0V2MXQ2cGtIeTRBS2pVODN6ak9vQytOaWxzeGVIUWI3M3FrL3NmU0UwSlFBU0ZvYnhqcmt0aThIbk4KYjB3NFNBWElFNVZsblAyb1h4QlBzSnJxMm5xWjc4NW5CQkRZcEVKRE04akhhdDhXSXZYNDhBaXhOajJNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETURDQ0FoaWdBd0lCQWdJSUdWL3JodWY1cUNZd0RRWUpLb1pJaHZjTkFRRUxCUUF3SmpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNE1UQXhPVEV6TVRjeU5sb1gKRFRJNE1UQXhOakV6TVRjeU5sb3dKVEVSTUE4R0ExVUVDeE1JWW05dmRHdDFZbVV4RURBT0JnTlZCQU1UQjJ0MQpZbVV0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNzNFpGMVNNaVhuVzhYCnJ5NDJrVWw5ZjBpeEhRTEg0ZnVNZjBaTU1SUHpGWmRrTzZZemY2bjdqU1pTLy9lWFY4dWswaTV4blcxcW9WSlkKOEpqQUJIQVlBMmdKcEtKUUY0eFNkaHVzekhZUWhSNTRVWU5KTjhNeGk2RWJNMlBDYll1MHROWmFrQmNFRFpSeApqNmE5SmkwZUppRnE2RFJBTFkxdHd0UGh3bFQ3WDJjZmtjYytLVW13Nnk2SXJIaGJSZ2lETC9zemJyNzJsSEtUClJLNzB4Vm1jeWRqSmo4RWF5OHk2VHVOcHdVdW1RelJFUnBiRmVtdGdvTzNoeFNtZXdudHhVWk9BbUZDbjRUQ2UKL1NvU3NnMTNWSEt2enVER3pDdXRrRUZQeEtlR0l6aXUrRzhBNVo3Q0Yybi91bnpIM2JFTS8reVB3Z1FOWS9aNApoNnNoSFdSSkFnTUJBQUdqWXpCaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvCk1CMEdBMVVkRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFmQmdOVkhTTUVHREFXZ0JSSWs5bDcKMDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBQmpKaDFpMUxvaDhsRUtERwpGZmlBOERnaFp2ellabk8zNktqYWg3SjZMaXpaSzFYdFk5THdGWWIyMnhLcWlzbkhmWEVtS0FCeUM1NC9YNkZCCnBUdE9ZWDZ3Q1QrZGo2bUJaWUdPTUkvb2lFSUNIaDVaZVFNUGNHZFdhS1lrRjYzc2FTbzVYWmQ0Z05GY0tPeEwKVk1sb0JJRnE4bmozMCtMNzZnOW9WSXQxck56dnJrSkdsY2tlV3NpYWNCaWRNWHJhQ0Q5ZGxPS2p4N1lqNm1RTgpVOTErL0xoTU0vYWNCZUNlTmpwTE9CVHVtUG5meHFzUXg2S28wMzAxUGF1SU00b2RzTENQcUFtRXJWYjVHVGFPCkIrMWQrNEdHcnU0b2JZb042cnhhNnRlMmVFNE9jM1hkZHRNaWR3MHVvL045TGhTMHl3S0thZDRTc2hicURuRFcKckwvbXFBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBejgxcXRRVUhqd0NKM0NGWWJpUnNkYlJobDVreHVnTXlVaDlLM3lrcGRpaGt4UHVsClRYZTYrdW1WcUFibnBPa2wrekMzc0FIYWVlQTdmUENIbUMxUDZoSEhVVmV3K3JWUzdqak1pMGFmVXl4dmJXQmQKVzhQRVVpcUIxejFwOEMrUFQ5RkRmc2lJbTg0dE9HNFhmK21mUE95NldIaXJsUEZoa0IvNGV3aFdlZ21jaTZuKwp4RGxsRHhQRDlEdjN3SVhMTTBZRmVLM3F4RzZLcDBBRzJ6SjE0cExGWGtmaGVxVGoxTWtFMjNGcFlkdUJIa0pJCjI4VTZxTGJUZ3Rwc1F1RHFnQWlNNWliN0VaZVJjNkg2Z2xYa3FZdnd0Q1RWVG85SXdHaU4yQkttY2Jsc2FBRlQKUzJpYXcrY29NeGhRVHVNOFd3cEpFUzRHSUdyYVgvYy9zY09nNXdJREFRQUJBb0lCQUR0bXJ2QWNCZk1jNWt1awp4SkNIblBGd3BNMGZINVhhd0JHMW5FTjZrcjJTQW14RXV4WVArY1VyN0huaHIybjJzOExBUkdIdHhiUTlJd1F1CkJiUzhqekdMNzN3VEl5WW5teE01N1U2SzI1UjlDVVVzM01NVWpSUW56b0htcmxmWVlKRWljcmJWUUNlNW9qZVYKVU9aaHRBRkljbVJENmxoalA4NWhOVGlHUTZJU2hXdVk2WC9KcnJWOHIrRE9JcFA4RWJBUWl3ekk1UWw2bGN5UApCVENOWG14SS9HNGZmZmhoUDBiSmR4Uk5WMzFYVGxETEp2eE5ta1gzdCtFY21vOC9FRFNjSlFlRVR5bWE4c216CjZ3bUZyQUtpeW55TFdkNzVpQnc0TkdueVYxb1lJNFY2bkpMQ2o0MEdpd1VZZDAwSThsSElwRnRFenRBejA0aVcKS0VJTFZDRUNnWUVBNDhGNTBXMjk2Z2RkRUV6Rk1BMmY4QkM2K2h1YUk5RzIxTDhCTU8wRXBBSlpDRUxuZ2ZCUApDQ1g3Y2tPODNiK1BEdGlac0NuR1lPTlkvWHJWOWtNcnVGZ3hDR0RXa0wwcit3b2tNODkzOEF3c2Z3bmdITWVoCk4vODBlN0xWMU9ZM3RONk5kcTY2RUFpckNWQlNoUDlBWWRucGFxWlgyUGxUVlo3cFlFUnBTNGtDZ1lFQTZaSjgKTWJONFc3R282S2RvdmFyRm8yOUJXUFp0TkF0WTI2bGdFb2JkTHR0emJDcnRwQUQxVGxUbmtMWERNbmxtN3c4NQplY3JpbFdXdk14UWVOZFNCRmNxa1RtSjZPSkFpZ0hVSzBPMkI2aDJtR3FEUWdnM1B4TnpiWjF1NUp2ajRZNVdjCjFDWDQ0QSt1NSs0ZklXaEl6MThCNXVzTmtybDJhWEloSVAweVBPOENnWUF4RTczV1BSbVJWbWpkWEUyWlh6WTUKbXNGUHA2YjlWUEZhd3BYVkh4M0M0YWFodXhqN3pQYWF3T1IvNk16SDA4RlY1NkttYlRvTUlyRklYYkhCVVJRWQpzeGhOditBOGJDY1AvMDF4eEtFSm52WHZvZ2NpN0hsM0FZMGpvcE9sUHI1K1FQNm10bHZ0bkpDT2Z6cG80ai9UClZndVFLYXdBV3lsejU3eE9QQytjVVFLQmdRREx3MXdQSzhkRER2RVF6Z01FKzdiaFJreVc1SndOL0J3dnZVb3YKdjNHejBBU1loN2E3RFk3eklBVEg3SmwyTGd6TFh0ZkFWV3RuODhaczVBOGEzT0VqOXAxeU9GenhmV1JyOWk5UwpadkNnSWU5bmFZV2MvNW1TM3kyVXRLTUl5Y2cvY0NUWnVxcXNKV0pydVFOMWJIbWdWdnpjeTVBU3dUTDQrSFRJClI3cU5Cd0tCZ0JzZ1RaVTRwU05ZZ2xnd1RkdW95U0xFZ0Vvb2l3TU1mMUd1aXc4K242enlFS051QWwwUzFwL2IKL001M3Y4ZWxoV3RiUHJidjZNd0pFTFlDVXBVeENTNzFmdVUrZFdtSzFmZEdRR2FPT3orSGd0OVc3aFBIcGdEOQo3UXE3RG4zbWU4ajgyTmlUU3pJUERWc1BpWkYwaU0zKzdoNUpib0Q3Mk5kVTFlYmg5YzhQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/ingress.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBejgxcXRRVUhqd0NKM0NGWWJpUnNkYlJobDVreHVnTXlVaDlLM3lrcGRpaGt4UHVsClRYZTYrdW1WcUFibnBPa2wrekMzc0FIYWVlQTdmUENIbUMxUDZoSEhVVmV3K3JWUzdqak1pMGFmVXl4dmJXQmQKVzhQRVVpcUIxejFwOEMrUFQ5RkRmc2lJbTg0dE9HNFhmK21mUE95NldIaXJsUEZoa0IvNGV3aFdlZ21jaTZuKwp4RGxsRHhQRDlEdjN3SVhMTTBZRmVLM3F4RzZLcDBBRzJ6SjE0cExGWGtmaGVxVGoxTWtFMjNGcFlkdUJIa0pJCjI4VTZxTGJUZ3Rwc1F1RHFnQWlNNWliN0VaZVJjNkg2Z2xYa3FZdnd0Q1RWVG85SXdHaU4yQkttY2Jsc2FBRlQKUzJpYXcrY29NeGhRVHVNOFd3cEpFUzRHSUdyYVgvYy9zY09nNXdJREFRQUJBb0lCQUR0bXJ2QWNCZk1jNWt1awp4SkNIblBGd3BNMGZINVhhd0JHMW5FTjZrcjJTQW14RXV4WVArY1VyN0huaHIybjJzOExBUkdIdHhiUTlJd1F1CkJiUzhqekdMNzN3VEl5WW5teE01N1U2SzI1UjlDVVVzM01NVWpSUW56b0htcmxmWVlKRWljcmJWUUNlNW9qZVYKVU9aaHRBRkljbVJENmxoalA4NWhOVGlHUTZJU2hXdVk2WC9KcnJWOHIrRE9JcFA4RWJBUWl3ekk1UWw2bGN5UApCVENOWG14SS9HNGZmZmhoUDBiSmR4Uk5WMzFYVGxETEp2eE5ta1gzdCtFY21vOC9FRFNjSlFlRVR5bWE4c216CjZ3bUZyQUtpeW55TFdkNzVpQnc0TkdueVYxb1lJNFY2bkpMQ2o0MEdpd1VZZDAwSThsSElwRnRFenRBejA0aVcKS0VJTFZDRUNnWUVBNDhGNTBXMjk2Z2RkRUV6Rk1BMmY4QkM2K2h1YUk5RzIxTDhCTU8wRXBBSlpDRUxuZ2ZCUApDQ1g3Y2tPODNiK1BEdGlac0NuR1lPTlkvWHJWOWtNcnVGZ3hDR0RXa0wwcit3b2tNODkzOEF3c2Z3bmdITWVoCk4vODBlN0xWMU9ZM3RONk5kcTY2RUFpckNWQlNoUDlBWWRucGFxWlgyUGxUVlo3cFlFUnBTNGtDZ1lFQTZaSjgKTWJONFc3R282S2RvdmFyRm8yOUJXUFp0TkF0WTI2bGdFb2JkTHR0emJDcnRwQUQxVGxUbmtMWERNbmxtN3c4NQplY3JpbFdXdk14UWVOZFNCRmNxa1RtSjZPSkFpZ0hVSzBPMkI2aDJtR3FEUWdnM1B4TnpiWjF1NUp2ajRZNVdjCjFDWDQ0QSt1NSs0ZklXaEl6MThCNXVzTmtybDJhWEloSVAweVBPOENnWUF4RTczV1BSbVJWbWpkWEUyWlh6WTUKbXNGUHA2YjlWUEZhd3BYVkh4M0M0YWFodXhqN3pQYWF3T1IvNk16SDA4RlY1NkttYlRvTUlyRklYYkhCVVJRWQpzeGhOditBOGJDY1AvMDF4eEtFSm52WHZvZ2NpN0hsM0FZMGpvcE9sUHI1K1FQNm10bHZ0bkpDT2Z6cG80ai9UClZndVFLYXdBV3lsejU3eE9QQytjVVFLQmdRREx3MXdQSzhkRER2RVF6Z01FKzdiaFJreVc1SndOL0J3dnZVb3YKdjNHejBBU1loN2E3RFk3eklBVEg3SmwyTGd6TFh0ZkFWV3RuODhaczVBOGEzT0VqOXAxeU9GenhmV1JyOWk5UwpadkNnSWU5bmFZV2MvNW1TM3kyVXRLTUl5Y2cvY0NUWnVxcXNKV0pydVFOMWJIbWdWdnpjeTVBU3dUTDQrSFRJClI3cU5Cd0tCZ0JzZ1RaVTRwU05ZZ2xnd1RkdW95U0xFZ0Vvb2l3TU1mMUd1aXc4K242enlFS051QWwwUzFwL2IKL001M3Y4ZWxoV3RiUHJidjZNd0pFTFlDVXBVeENTNzFmdVUrZFdtSzFmZEdRR2FPT3orSGd0OVc3aFBIcGdEOQo3UXE3RG4zbWU4ajgyTmlUU3pJUERWc1BpWkYwaU0zKzdoNUpib0Q3Mk5kVTFlYmg5YzhQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/ingress.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR1VENDQXFHZ0F3SUJBZ0lJWmxLNnZ1SnhTU3d3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TURFNU1UTXhOekkyV2hjTgpNamd4TURFMk1UTXhOekkyV2pBK01SQXdEZ1lEVlFRS0V3ZHBibWR5WlhOek1Tb3dLQVlEVlFRREV5RnpiMjFoCmJHeGxlUzVrWlhaamJIVnpkR1Z5TG05d1pXNXphR2xtZEM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRFB6V3ExQlFlUEFJbmNJVmh1Skd4MXRHR1htVEc2QXpKU0gwcmZLU2wyS0dURQorNlZOZDdyNjZaV29CdWVrNlNYN01MZXdBZHA1NER0ODhJZVlMVS9xRWNkUlY3RDZ0Vkx1T015TFJwOVRMRzl0CllGMWJ3OFJTS29IWFBXbndMNDlQMFVOK3lJaWJ6aTA0YmhkLzZaODg3THBZZUt1VThXR1FIL2g3Q0ZaNkNaeUwKcWY3RU9XVVBFOFAwTy9mQWhjc3pSZ1Y0cmVyRWJvcW5RQWJiTW5YaWtzVmVSK0Y2cE9QVXlRVGJjV2xoMjRFZQpRa2pieFRxb3R0T0MybXhDNE9xQUNJem1KdnNSbDVGem9mcUNWZVNwaS9DMEpOVk9qMGpBYUkzWUVxWnh1V3hvCkFWTkxhSnJENXlnekdGQk80enhiQ2trUkxnWWdhdHBmOXoreHc2RG5BZ01CQUFHamdkTXdnZEF3RGdZRFZSMFAKQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCU2hpWm9pWUM3andLN1lTazlsYlhnbi8yNDVnVEFmQmdOVkhTTUVHREFXCmdCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakJSQmdOVkhSRUVTakJJZ2lGemIyMWhiR3hsZVM1a1pYWmoKYkhWemRHVnlMbTl3Wlc1emFHbG1kQzVqYjIyQ0l5b3VjMjl0WVd4c1pYa3VaR1YyWTJ4MWMzUmxjaTV2Y0dWdQpjMmhwWm5RdVkyOXRNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJSSlJmWlMvaUFtNjdDZVpjKzJ3ZjdDdWZqCm0xRlNYL0ZyNmRmVjNtWEJ1Y090VFVWYzgrOHpKUVdrMnFGMGdEb3dYaEs0UFFKVDNaMy9UTjhackFnWFZBbmoKK2txT0J3MzExQUV0Z0NMN3ByYjlwYnJRYWE0bzlQcFRvaUpkMFgvUzRTL0VaUExtTjlvZDVsajY5am9JVjJkWgpadzBPcVNCamIxOHh2L3dHOG56MXl5THpKQjZ2Z3BQaEdLYXBUdmk2UHM0THVyYWw3QjY3NDB1UkZvZmFpYU5rCkxXZFk4M0V2MXQ2cGtIeTRBS2pVODN6ak9vQytOaWxzeGVIUWI3M3FrL3NmU0UwSlFBU0ZvYnhqcmt0aThIbk4KYjB3NFNBWElFNVZsblAyb1h4QlBzSnJxMm5xWjc4NW5CQkRZcEVKRE04akhhdDhXSXZYNDhBaXhOajJNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETURDQ0FoaWdBd0lCQWdJSUdWL3JodWY1cUNZd0RRWUpLb1pJaHZjTkFRRUxCUUF3SmpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNE1UQXhPVEV6TVRjeU5sb1gKRFRJNE1UQXhOakV6TVRjeU5sb3dKVEVSTUE4R0ExVUVDeE1JWW05dmRHdDFZbVV4RURBT0JnTlZCQU1UQjJ0MQpZbVV0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNzNFpGMVNNaVhuVzhYCnJ5NDJrVWw5ZjBpeEhRTEg0ZnVNZjBaTU1SUHpGWmRrTzZZemY2bjdqU1pTLy9lWFY4dWswaTV4blcxcW9WSlkKOEpqQUJIQVlBMmdKcEtKUUY0eFNkaHVzekhZUWhSNTRVWU5KTjhNeGk2RWJNMlBDYll1MHROWmFrQmNFRFpSeApqNmE5SmkwZUppRnE2RFJBTFkxdHd0UGh3bFQ3WDJjZmtjYytLVW13Nnk2SXJIaGJSZ2lETC9zemJyNzJsSEtUClJLNzB4Vm1jeWRqSmo4RWF5OHk2VHVOcHdVdW1RelJFUnBiRmVtdGdvTzNoeFNtZXdudHhVWk9BbUZDbjRUQ2UKL1NvU3NnMTNWSEt2enVER3pDdXRrRUZQeEtlR0l6aXUrRzhBNVo3Q0Yybi91bnpIM2JFTS8reVB3Z1FOWS9aNApoNnNoSFdSSkFnTUJBQUdqWXpCaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvCk1CMEdBMVVkRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFmQmdOVkhTTUVHREFXZ0JSSWs5bDcKMDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBQmpKaDFpMUxvaDhsRUtERwpGZmlBOERnaFp2ellabk8zNktqYWg3SjZMaXpaSzFYdFk5THdGWWIyMnhLcWlzbkhmWEVtS0FCeUM1NC9YNkZCCnBUdE9ZWDZ3Q1QrZGo2bUJaWUdPTUkvb2lFSUNIaDVaZVFNUGNHZFdhS1lrRjYzc2FTbzVYWmQ0Z05GY0tPeEwKVk1sb0JJRnE4bmozMCtMNzZnOW9WSXQxck56dnJrSkdsY2tlV3NpYWNCaWRNWHJhQ0Q5ZGxPS2p4N1lqNm1RTgpVOTErL0xoTU0vYWNCZUNlTmpwTE9CVHVtUG5meHFzUXg2S28wMzAxUGF1SU00b2RzTENQcUFtRXJWYjVHVGFPCkIrMWQrNEdHcnU0b2JZb042cnhhNnRlMmVFNE9jM1hkZHRNaWR3MHVvL045TGhTMHl3S0thZDRTc2hicURuRFcKckwvbXFBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.KubeCA": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJR1Yvcmh1ZjVxQ1l3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5Tmxvd0pURVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFREFPQmdOVkJBTVRCMnQxClltVXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3M0WkYxU01pWG5XOFgKcnk0MmtVbDlmMGl4SFFMSDRmdU1mMFpNTVJQekZaZGtPNll6ZjZuN2pTWlMvL2VYVjh1azBpNXhuVzFxb1ZKWQo4SmpBQkhBWUEyZ0pwS0pRRjR4U2RodXN6SFlRaFI1NFVZTkpOOE14aTZFYk0yUENiWXUwdE5aYWtCY0VEWlJ4Cmo2YTlKaTBlSmlGcTZEUkFMWTF0d3RQaHdsVDdYMmNma2NjK0tVbXc2eTZJckhoYlJnaURML3N6YnI3MmxIS1QKUks3MHhWbWN5ZGpKajhFYXk4eTZUdU5wd1V1bVF6UkVScGJGZW10Z29PM2h4U21ld250eFVaT0FtRkNuNFRDZQovU29Tc2cxM1ZIS3Z6dURHekN1dGtFRlB4S2VHSXppdStHOEE1WjdDRjJuL3VuekgzYkVNLyt5UHdnUU5ZL1o0Cmg2c2hIV1JKQWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJSSWs5bDcwNGFaVk9sREFOUGxoamdmUzdTRlBqQWZCZ05WSFNNRUdEQVdnQlJJazlsNwowNGFaVk9sREFOUGxoamdmUzdTRlBqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFCakpoMWkxTG9oOGxFS0RHCkZmaUE4RGdoWnZ6WVpuTzM2S2phaDdKNkxpelpLMVh0WTlMd0ZZYjIyeEtxaXNuSGZYRW1LQUJ5QzU0L1g2RkIKcFR0T1lYNndDVCtkajZtQlpZR09NSS9vaUVJQ0hoNVplUU1QY0dkV2FLWWtGNjNzYVNvNVhaZDRnTkZjS094TApWTWxvQklGcThuajMwK0w3Nmc5b1ZJdDFyTnp2cmtKR2xja2VXc2lhY0JpZE1YcmFDRDlkbE9Lang3WWo2bVFOClU5MSsvTGhNTS9hY0JlQ2VOanBMT0JUdW1QbmZ4cXNReDZLbzAzMDFQYXVJTTRvZHNMQ1BxQW1FclZiNUdUYU8KQisxZCs0R0dydTRvYllvTjZyeGE2dGUyZUU0T2MzWGRkdE1pZHcwdW8vTjlMaFMweXdLS2FkNFNzaGJxRG5EVwpyTC9tcUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBck9HUmRVaklsNTF2RjY4dU5wRkpmWDlJc1IwQ3grSDdqSDlHVERFVDh4V1haRHVtCk0zK3ArNDBtVXYvM2wxZkxwTkl1Y1oxdGFxRlNXUENZd0FSd0dBTm9DYVNpVUJlTVVuWWJyTXgyRUlVZWVGR0QKU1RmRE1ZdWhHek5qd20yTHRMVFdXcEFYQkEyVWNZK212U1l0SGlZaGF1ZzBRQzJOYmNMVDRjSlUrMTluSDVISApQaWxKc09zdWlLeDRXMFlJZ3kvN00yNis5cFJ5azBTdTlNVlpuTW5ZeVkvQkdzdk11azdqYWNGTHBrTTBSRWFXCnhYcHJZS0R0NGNVcG5zSjdjVkdUZ0poUXArRXdudjBxRXJJTmQxUnlyODdneHN3cnJaQkJUOFNuaGlNNHJ2aHYKQU9XZXdoZHAvN3A4eDkyeERQL3NqOElFRFdQMmVJZXJJUjFrU1FJREFRQUJBb0lCQVFDSDQ3NXNURXV3TVVXegpmalY3R3ZTRE90dXVyRGtWV0tKYnEyZGNXRzl2OFpiUWFMcVpYRTRHdHNwYkQyeFVmK1JJcUJWdHBPcnVsK09jCm1YSFg3U1VYR3daYUhoaWZrQUx5aG5mMmViaUwvN2NWcUN6a0RuclZwUVY3MWdjaU91MUhtNldxQmZ5eGFPTTMKNkV5Ti9VWVZucTlCMDBmTzhuOXF1V3ZHMXZQcHFhYTBEWmdOdWE5T0ZKamZvK2FsN0U2eC9FWGxUNlV1UmhOcwoxbUJreUtzdE9iT2F1MnBCQU1udCtPcytjTkZNSzZTZ0toY2NQZVVoYkRxNFpURjEwSENUM0paVE5PZXVSVDdGCi9oNGlPTzFKOER4MWpMNEdpMyt2L1BXMzNYQU9Lc2ppWEQrN3BJRWp3Lzloc1VEM1ZtVXdaTWJwanJiTFVXZkcKMjNvblVWVUJBb0dCQU1jN0JBZXlHNkJVNFJjWHZ1UXBKQ3V3RmFBU3FWSzB5TncyeEZNeDVEZVRzVmhzZXZBNgpjVFhidTVLR25BUTc5OWN4VENvbEd6dmkwdVFVOW1XaGtLK2JTa3NlcFpMZTVjbFVvdzlqZkt6d2FSM2pxdkUwCjlxVzZYTk1FWFlvbzRWazBOcCtjRm45cFQxWGtyYVdFTGFqWVU1OEtXMEFybG4waW9RYmFraU9aQW9HQkFONGsKZXV4VGJBY1YvVkN0elFSamZxa1BoSUZzMjFzYzBOWXZjdDF6T1A2TE1ZWVlwVnJFeEpDVEFUSXR4eEZyNFVVdQpmdkg2RzBGWWFFcWpwb2gxaHV3V05ZSWhKa0xOcmJtQ2tCS1hvMFA4Mjd3aWZxbGFsZFVxci9meU85N015Z05HCk5yRmVVOS9ZU3pwOTVwZVhpVjNXTHNhdnREQkc4UDJjN2RldEpiUXhBb0dBTGkrdlFuMTJ6QmVCU3hJMUxiMmYKNWdUZkxvbkUrU2h4L0NNeUpqdEZ0ZUNtVjJKbXFiUlN0SEtwTEZIS2IyemJpdWFoeW85cG5kdDZtbWVGcTQvbAo4OS9qUEVEeGozZmUrMnFFbHJld21vTHRTNEdSQ25RRnpldkRReVFhNzBHRTVHSW5XNThhMUJTODBLTy80Y1FmCnRhblkwT0Rjd0thYUw0NU1tRU1wWjlrQ2dZRUFxcUp3L2JreXdOcW1RMlBObUxKb1o2cHd5UTM2RFNtOFROb1QKcklGR1pWZzhTVm9ESWc4RlFseDVUYmNXTTQ2ZmNvbTluMWZUdWNVVUQwbFhzWGc5bEhtV3pvZHlJVnhtTnBwUQoyc2M1OVE1MUp6V0QvOGlDVVVUQitINU1lTjdyeWNvVVZ2Z3pDejNVdzNCVVFWdDRlK2o2ODBtaDZuZUR3L3ZZClFwUlE0dkVDZ1lFQWo0VWZNSmV2dlJqTkZNOTdZaDhoVUdURVQyZWpFVktqcFlWQWo3M2NmSWpVQ2hpTzNYbCsKNE9EbTFmV2NPUncxK1NYYmx0WmZrWVVGOFF1Nk12aHQ2cjZFZnZ5cFdaeGFYM1R5eXFxcXl0TmxRcHBBaVBMMAo2RklIdE5PeElmRUJWdUFsMWVsRWNpQXEzRzJDRmlpZVhmVVdxaUZhUVpLWmpNUUdaK0VsVmpnPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBck9HUmRVaklsNTF2RjY4dU5wRkpmWDlJc1IwQ3grSDdqSDlHVERFVDh4V1haRHVtCk0zK3ArNDBtVXYvM2wxZkxwTkl1Y1oxdGFxRlNXUENZd0FSd0dBTm9DYVNpVUJlTVVuWWJyTXgyRUlVZWVGR0QKU1RmRE1ZdWhHek5qd20yTHRMVFdXcEFYQkEyVWNZK212U1l0SGlZaGF1ZzBRQzJOYmNMVDRjSlUrMTluSDVISApQaWxKc09zdWlLeDRXMFlJZ3kvN00yNis5cFJ5azBTdTlNVlpuTW5ZeVkvQkdzdk11azdqYWNGTHBrTTBSRWFXCnhYcHJZS0R0NGNVcG5zSjdjVkdUZ0poUXArRXdudjBxRXJJTmQxUnlyODdneHN3cnJaQkJUOFNuaGlNNHJ2aHYKQU9XZXdoZHAvN3A4eDkyeERQL3NqOElFRFdQMmVJZXJJUjFrU1FJREFRQUJBb0lCQVFDSDQ3NXNURXV3TVVXegpmalY3R3ZTRE90dXVyRGtWV0tKYnEyZGNXRzl2OFpiUWFMcVpYRTRHdHNwYkQyeFVmK1JJcUJWdHBPcnVsK09jCm1YSFg3U1VYR3daYUhoaWZrQUx5aG5mMmViaUwvN2NWcUN6a0RuclZwUVY3MWdjaU91MUhtNldxQmZ5eGFPTTMKNkV5Ti9VWVZucTlCMDBmTzhuOXF1V3ZHMXZQcHFhYTBEWmdOdWE5T0ZKamZvK2FsN0U2eC9FWGxUNlV1UmhOcwoxbUJreUtzdE9iT2F1MnBCQU1udCtPcytjTkZNSzZTZ0toY2NQZVVoYkRxNFpURjEwSENUM0paVE5PZXVSVDdGCi9oNGlPTzFKOER4MWpMNEdpMyt2L1BXMzNYQU9Lc2ppWEQrN3BJRWp3Lzloc1VEM1ZtVXdaTWJwanJiTFVXZkcKMjNvblVWVUJBb0dCQU1jN0JBZXlHNkJVNFJjWHZ1UXBKQ3V3RmFBU3FWSzB5TncyeEZNeDVEZVRzVmhzZXZBNgpjVFhidTVLR25BUTc5OWN4VENvbEd6dmkwdVFVOW1XaGtLK2JTa3NlcFpMZTVjbFVvdzlqZkt6d2FSM2pxdkUwCjlxVzZYTk1FWFlvbzRWazBOcCtjRm45cFQxWGtyYVdFTGFqWVU1OEtXMEFybG4waW9RYmFraU9aQW9HQkFONGsKZXV4VGJBY1YvVkN0elFSamZxa1BoSUZzMjFzYzBOWXZjdDF6T1A2TE1ZWVlwVnJFeEpDVEFUSXR4eEZyNFVVdQpmdkg2RzBGWWFFcWpwb2gxaHV3V05ZSWhKa0xOcmJtQ2tCS1hvMFA4Mjd3aWZxbGFsZFVxci9meU85N015Z05HCk5yRmVVOS9ZU3pwOTVwZVhpVjNXTHNhdnREQkc4UDJjN2RldEpiUXhBb0dBTGkrdlFuMTJ6QmVCU3hJMUxiMmYKNWdUZkxvbkUrU2h4L0NNeUpqdEZ0ZUNtVjJKbXFiUlN0SEtwTEZIS2IyemJpdWFoeW85cG5kdDZtbWVGcTQvbAo4OS9qUEVEeGozZmUrMnFFbHJld21vTHRTNEdSQ25RRnpldkRReVFhNzBHRTVHSW5XNThhMUJTODBLTy80Y1FmCnRhblkwT0Rjd0thYUw0NU1tRU1wWjlrQ2dZRUFxcUp3L2JreXdOcW1RMlBObUxKb1o2cHd5UTM2RFNtOFROb1QKcklGR1pWZzhTVm9ESWc4RlFseDVUYmNXTTQ2ZmNvbTluMWZUdWNVVUQwbFhzWGc5bEhtV3pvZHlJVnhtTnBwUQoyc2M1OVE1MUp6V0QvOGlDVVVUQitINU1lTjdyeWNvVVZ2Z3pDejNVdzNCVVFWdDRlK2o2ODBtaDZuZUR3L3ZZClFwUlE0dkVDZ1lFQWo0VWZNSmV2dlJqTkZNOTdZaDhoVUdURVQyZWpFVktqcFlWQWo3M2NmSWpVQ2hpTzNYbCsKNE9EbTFmV2NPUncxK1NYYmx0WmZrWVVGOFF1Nk12aHQ2cjZFZnZ5cFdaeGFYM1R5eXFxcXl0TmxRcHBBaVBMMAo2RklIdE5PeElmRUJWdUFsMWVsRWNpQXEzRzJDRmlpZVhmVVdxaUZhUVpLWmpNUUdaK0VsVmpnPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJR1Yvcmh1ZjVxQ1l3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5Tmxvd0pURVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhFREFPQmdOVkJBTVRCMnQxClltVXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3M0WkYxU01pWG5XOFgKcnk0MmtVbDlmMGl4SFFMSDRmdU1mMFpNTVJQekZaZGtPNll6ZjZuN2pTWlMvL2VYVjh1azBpNXhuVzFxb1ZKWQo4SmpBQkhBWUEyZ0pwS0pRRjR4U2RodXN6SFlRaFI1NFVZTkpOOE14aTZFYk0yUENiWXUwdE5aYWtCY0VEWlJ4Cmo2YTlKaTBlSmlGcTZEUkFMWTF0d3RQaHdsVDdYMmNma2NjK0tVbXc2eTZJckhoYlJnaURML3N6YnI3MmxIS1QKUks3MHhWbWN5ZGpKajhFYXk4eTZUdU5wd1V1bVF6UkVScGJGZW10Z29PM2h4U21ld250eFVaT0FtRkNuNFRDZQovU29Tc2cxM1ZIS3Z6dURHekN1dGtFRlB4S2VHSXppdStHOEE1WjdDRjJuL3VuekgzYkVNLyt5UHdnUU5ZL1o0Cmg2c2hIV1JKQWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJSSWs5bDcwNGFaVk9sREFOUGxoamdmUzdTRlBqQWZCZ05WSFNNRUdEQVdnQlJJazlsNwowNGFaVk9sREFOUGxoamdmUzdTRlBqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFCakpoMWkxTG9oOGxFS0RHCkZmaUE4RGdoWnZ6WVpuTzM2S2phaDdKNkxpelpLMVh0WTlMd0ZZYjIyeEtxaXNuSGZYRW1LQUJ5QzU0L1g2RkIKcFR0T1lYNndDVCtkajZtQlpZR09NSS9vaUVJQ0hoNVplUU1QY0dkV2FLWWtGNjNzYVNvNVhaZDRnTkZjS094TApWTWxvQklGcThuajMwK0w3Nmc5b1ZJdDFyTnp2cmtKR2xja2VXc2lhY0JpZE1YcmFDRDlkbE9Lang3WWo2bVFOClU5MSsvTGhNTS9hY0JlQ2VOanBMT0JUdW1QbmZ4cXNReDZLbzAzMDFQYXVJTTRvZHNMQ1BxQW1FclZiNUdUYU8KQisxZCs0R0dydTRvYllvTjZyeGE2dGUyZUU0T2MzWGRkdE1pZHcwdW8vTjlMaFMweXdLS2FkNFNzaGJxRG5EVwpyTC9tcUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeletCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsRENDQW55Z0F3SUJBZ0lJQWN5WmkrMGpXMTh3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TURFNU1UTXhOekkyV2hjTgpNVGd4TURFNU1UTTBOekk0V2pCNE1VSXdLUVlEVlFRS0V5SnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblJ6Ck9tdDFZbVV0YzNsemRHVnRNQlVHQTFVRUNoTU9jM2x6ZEdWdE9tMWhjM1JsY25NeE1qQXdCZ05WQkFNVEtYTjUKYzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwcmRXSmxMWE41YzNSbGJUcGtaV1poZFd4ME1JSUJJakFOQmdrcQpoa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXo4MzVkc3pxQ2hoSExITjNJK3RmQnlWRk9WN1o4djlYCkFYVGljRVBnbU1EdmJndXVaVGVUdTkvWE4yMU9NSlVCVGZpaEdZd29wVmFWQVowbVdTWWtyVnRMTFp3TTQ3VW4KOXAwUklXR1ZmNlJGNms5ZHByckx4MTBYL3paYWZ2ZG0xMGZyMXlXSTJ4OWIyRFJ5a0crdDA4YnM1dHJxUVZnMQpRaUxRbEc0ZUlNUkh5Z0pmU2dxWFQ0OU9PdGw5bjVoM0JFZU5tc2t0eDNLeGJIUjlyRnNMamtRcEV5WE9VYk5kClU3TGVFVHpHL3Ntd1YvL1Brd0R4c0FEOXVrRnhrNXpZYzd0UFJkUFFGK1VJZkN1Q3ZIandrSUloazhXbitVVWMKemRKYUxvYXY0ckJic2s0YTlKOSswaWdnZjc5Q2hoQTlLRHBUc0Jxa0E2RlRXVGtvOUcwaWp3SURBUUFCbzNVdwpjekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVb1ltYUltQXU0OEN1MkVwUFpXMTRKLzl1T1lFd0h3WURWUjBqQkJnd0ZvQVUKU0pQWmU5T0dtVlRwUXdEVDVZWTRIMHUwaFQ0d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHekh6dlhuamh6WQo1dDFJZFA2U3ZsNnlQaU9RY2kvMWhxanJseit5eis2VTgyellQZlc3bEU3ZVduUzlINXdJU0pDWGM5N24xTW0vCnEzeVdSbHdCUlh3dm1GYyt3TmxCVUc4TVdCMlRLaW5ZWjByRlF0dVpDaklvQUdQUG43dVp4S1pyTUJBWEVVWHEKQW1qcG5CU0NvUlMrV3paUFZPRjNmcndUZGsxUGRWVk9UK0prbkp4d2ZuL2huejFiNlh0QTFnaGlyTFpJTVdKTApKdkFhc1g5d3ozUlZJVU40cGN1NHNKUVRNL1JBMUhlRThVNGMrM3ZuV0RTNVVJaU5qSEN6QzgzSWIzUGdCQVhPCmk4U1BZcXc4QWVWeWdBSnhJd2lzT1RTd3ZUTkU4QW5sbDNrSXExUDhMcTM1QUxSNmlwUG1qU0wwdmxnU2dEdDQKTmhCNE03cllqSWM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBejgzNWRzenFDaGhITEhOM0krdGZCeVZGT1Y3Wjh2OVhBWFRpY0VQZ21NRHZiZ3V1ClpUZVR1OS9YTjIxT01KVUJUZmloR1l3b3BWYVZBWjBtV1NZa3JWdExMWndNNDdVbjlwMFJJV0dWZjZSRjZrOWQKcHJyTHgxMFgvelphZnZkbTEwZnIxeVdJMng5YjJEUnlrRyt0MDhiczV0cnFRVmcxUWlMUWxHNGVJTVJIeWdKZgpTZ3FYVDQ5T090bDluNWgzQkVlTm1za3R4M0t4YkhSOXJGc0xqa1FwRXlYT1ViTmRVN0xlRVR6Ry9zbXdWLy9QCmt3RHhzQUQ5dWtGeGs1elljN3RQUmRQUUYrVUlmQ3VDdkhqd2tJSWhrOFduK1VVY3pkSmFMb2F2NHJCYnNrNGEKOUo5KzBpZ2dmNzlDaGhBOUtEcFRzQnFrQTZGVFdUa285RzBpandJREFRQUJBb0lCQUJ1NXQ1Y0tNQSs0dllaSQp3WlNoU3NTQlRJTWpES0ZIUUN5Sms4eTJ3YmlmeFZKQmJMdEVkd21TQy96eE1JVjYyL216T290V0QvWS9YeElnCkRZWEhlUTFJS1BlazRuTmZNRDNQSndIMUt5VWtuYzl0VjJsdmN0RGVzdHp5TzVERklZdUhwUWZIa2tMcUpDN3MKa0h5RTZnUmZmaXd1K1NKT3lveFFhTlBrL1ZBUm9vQkIrZVVxZ1lOanJsUHFpbnNDdWxkelpBWFFCc2JJeit6Rgo4dEN2OTlYMjA5YVlWaCtpYWtobHRHTEZDNC92S0Y5UDlZbFVSdHoxODN3K0E1ck5zMDAwbFp1Ym5BaHU2WW9DCk1UeE9QV1FHS1EraHhpSlIraGNKalN4MTZ2RXpUei9oK0cvajkzODR1SFV2ZXdDZW5PNU1oVE91T2d4bzdPdFIKL3lOR1RRRUNnWUVBMnNDak1VQUR2R1VFYlFwd0NUN2xjV1R2TzlWbHFkbWpuT3o0ei9KN050QlIrTk1mMjlXUApWN0MwNXVoaVhDYzMwMy9Md1hZL3dNNjhia25nSnVqMGxYVmJBaXlxTmtDWjV5dU5zKzdnbFJacEtLcGpJTHlNCkk1VFJpOFRzaHp0K2NueGVvKzZqeFZzK1R6UE9pb2dKRUtBVS9jd3VXYno2NzZteG9TRmt5LzhDZ1lFQTh6QWUKOE83MmY2SUVZMjBNaEdCUUJuN2E2VVpTL0ZvSGtIaEkzWXZpM0V3bnhZV3lxV2pyU1FKUnJPWVBLa2xSNllsLwpHTmsvTWNmVTAweEVRTTQ0WEhBMWwxYjEyVzRMSVlXc3MrbDdmN2JqNCtXTjdJaWJHVWZpNy9hK3R0bGVaakNEClB6bWQwaksvNXVmdVh2eVRUdEZwMjl0a0Nybk1TelBrNlZhODZYRUNnWUJkTVZSVTF3REFjZ2pBcTRHdmJxd3cKOHQ4NGptRVJTemI0MDd2c1cxRkN1TjB6TkQ2T1dSMElMcS9pNzMxMzVQMVRqVTR3elQrNzFGZFNaUWFwalBVbAo5eWtlZEFqUHRCWGM5aUVZVnR3MnA2V0ZQWkdka0xYak1yTlM2RUljR3F4eithZ1lEc0tXZ1ppNkJVZ29uR3ZBCk9YSzM3UlNTQm9DaE9ab0RHMGJsNFFLQmdRRGNIMDJTZGlxbklzYm9IRmY5SnBTcEhJQVlNUENDdlJjbHZNcnYKeG1RRlZlV1dFOHZCTGxmeWtPZlBJYnJPWXVtREExTUk4ZlFTb2pmUlBySjFHblRIcjBYREJCS3F5Y0hIaVJEbgpGTXNWc2owYkZyamRSbFZsajcwcHllV2M2cXBZdzBhNW52UnN4RVVSeEJQdTVKNk45RjNtaFBKTUJ4dVZZcGFzCll6ZkI4UUtCZ0NwMDNteDUyMkZWM1h0OHpJSkVMWnJhQnN6VmhiMDEzSjl5VFduVVU1bk56TkQwUER5MFJnankKMUxQcmpjTmpQL0pBcUk5cXFEWUlpSjQrK1BIU1k3UStDaFQxOEtIMFlNYkxwemdRbkFOOFRiZit4VXBnMVZISAp2b0pwMDI2dFlhR2Z0Wi85Y1RRSVlZWFg1OCsxYUc2K0FMdUNDV2tiQkxRYnJnRnRLa0NDCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kubelet.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBejgzNWRzenFDaGhITEhOM0krdGZCeVZGT1Y3Wjh2OVhBWFRpY0VQZ21NRHZiZ3V1ClpUZVR1OS9YTjIxT01KVUJUZmloR1l3b3BWYVZBWjBtV1NZa3JWdExMWndNNDdVbjlwMFJJV0dWZjZSRjZrOWQKcHJyTHgxMFgvelphZnZkbTEwZnIxeVdJMng5YjJEUnlrRyt0MDhiczV0cnFRVmcxUWlMUWxHNGVJTVJIeWdKZgpTZ3FYVDQ5T090bDluNWgzQkVlTm1za3R4M0t4YkhSOXJGc0xqa1FwRXlYT1ViTmRVN0xlRVR6Ry9zbXdWLy9QCmt3RHhzQUQ5dWtGeGs1elljN3RQUmRQUUYrVUlmQ3VDdkhqd2tJSWhrOFduK1VVY3pkSmFMb2F2NHJCYnNrNGEKOUo5KzBpZ2dmNzlDaGhBOUtEcFRzQnFrQTZGVFdUa285RzBpandJREFRQUJBb0lCQUJ1NXQ1Y0tNQSs0dllaSQp3WlNoU3NTQlRJTWpES0ZIUUN5Sms4eTJ3YmlmeFZKQmJMdEVkd21TQy96eE1JVjYyL216T290V0QvWS9YeElnCkRZWEhlUTFJS1BlazRuTmZNRDNQSndIMUt5VWtuYzl0VjJsdmN0RGVzdHp5TzVERklZdUhwUWZIa2tMcUpDN3MKa0h5RTZnUmZmaXd1K1NKT3lveFFhTlBrL1ZBUm9vQkIrZVVxZ1lOanJsUHFpbnNDdWxkelpBWFFCc2JJeit6Rgo4dEN2OTlYMjA5YVlWaCtpYWtobHRHTEZDNC92S0Y5UDlZbFVSdHoxODN3K0E1ck5zMDAwbFp1Ym5BaHU2WW9DCk1UeE9QV1FHS1EraHhpSlIraGNKalN4MTZ2RXpUei9oK0cvajkzODR1SFV2ZXdDZW5PNU1oVE91T2d4bzdPdFIKL3lOR1RRRUNnWUVBMnNDak1VQUR2R1VFYlFwd0NUN2xjV1R2TzlWbHFkbWpuT3o0ei9KN050QlIrTk1mMjlXUApWN0MwNXVoaVhDYzMwMy9Md1hZL3dNNjhia25nSnVqMGxYVmJBaXlxTmtDWjV5dU5zKzdnbFJacEtLcGpJTHlNCkk1VFJpOFRzaHp0K2NueGVvKzZqeFZzK1R6UE9pb2dKRUtBVS9jd3VXYno2NzZteG9TRmt5LzhDZ1lFQTh6QWUKOE83MmY2SUVZMjBNaEdCUUJuN2E2VVpTL0ZvSGtIaEkzWXZpM0V3bnhZV3lxV2pyU1FKUnJPWVBLa2xSNllsLwpHTmsvTWNmVTAweEVRTTQ0WEhBMWwxYjEyVzRMSVlXc3MrbDdmN2JqNCtXTjdJaWJHVWZpNy9hK3R0bGVaakNEClB6bWQwaksvNXVmdVh2eVRUdEZwMjl0a0Nybk1TelBrNlZhODZYRUNnWUJkTVZSVTF3REFjZ2pBcTRHdmJxd3cKOHQ4NGptRVJTemI0MDd2c1cxRkN1TjB6TkQ2T1dSMElMcS9pNzMxMzVQMVRqVTR3elQrNzFGZFNaUWFwalBVbAo5eWtlZEFqUHRCWGM5aUVZVnR3MnA2V0ZQWkdka0xYak1yTlM2RUljR3F4eithZ1lEc0tXZ1ppNkJVZ29uR3ZBCk9YSzM3UlNTQm9DaE9ab0RHMGJsNFFLQmdRRGNIMDJTZGlxbklzYm9IRmY5SnBTcEhJQVlNUENDdlJjbHZNcnYKeG1RRlZlV1dFOHZCTGxmeWtPZlBJYnJPWXVtREExTUk4ZlFTb2pmUlBySjFHblRIcjBYREJCS3F5Y0hIaVJEbgpGTXNWc2owYkZyamRSbFZsajcwcHllV2M2cXBZdzBhNW52UnN4RVVSeEJQdTVKNk45RjNtaFBKTUJ4dVZZcGFzCll6ZkI4UUtCZ0NwMDNteDUyMkZWM1h0OHpJSkVMWnJhQnN6VmhiMDEzSjl5VFduVVU1bk56TkQwUER5MFJnankKMUxQcmpjTmpQL0pBcUk5cXFEWUlpSjQrK1BIU1k3UStDaFQxOEtIMFlNYkxwemdRbkFOOFRiZit4VXBnMVZISAp2b0pwMDI2dFlhR2Z0Wi85Y1RRSVlZWFg1OCsxYUc2K0FMdUNDV2tiQkxRYnJnRnRLa0NDCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kubelet.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsRENDQW55Z0F3SUJBZ0lJQWN5WmkrMGpXMTh3RFFZSktvWklodmNOQVFFTEJRQXdKVEVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEVEQU9CZ05WQkFNVEIydDFZbVV0WTJFd0hoY05NVGd4TURFNU1UTXhOekkyV2hjTgpNVGd4TURFNU1UTTBOekk0V2pCNE1VSXdLUVlEVlFRS0V5SnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblJ6Ck9tdDFZbVV0YzNsemRHVnRNQlVHQTFVRUNoTU9jM2x6ZEdWdE9tMWhjM1JsY25NeE1qQXdCZ05WQkFNVEtYTjUKYzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwcmRXSmxMWE41YzNSbGJUcGtaV1poZFd4ME1JSUJJakFOQmdrcQpoa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXo4MzVkc3pxQ2hoSExITjNJK3RmQnlWRk9WN1o4djlYCkFYVGljRVBnbU1EdmJndXVaVGVUdTkvWE4yMU9NSlVCVGZpaEdZd29wVmFWQVowbVdTWWtyVnRMTFp3TTQ3VW4KOXAwUklXR1ZmNlJGNms5ZHByckx4MTBYL3paYWZ2ZG0xMGZyMXlXSTJ4OWIyRFJ5a0crdDA4YnM1dHJxUVZnMQpRaUxRbEc0ZUlNUkh5Z0pmU2dxWFQ0OU9PdGw5bjVoM0JFZU5tc2t0eDNLeGJIUjlyRnNMamtRcEV5WE9VYk5kClU3TGVFVHpHL3Ntd1YvL1Brd0R4c0FEOXVrRnhrNXpZYzd0UFJkUFFGK1VJZkN1Q3ZIandrSUloazhXbitVVWMKemRKYUxvYXY0ckJic2s0YTlKOSswaWdnZjc5Q2hoQTlLRHBUc0Jxa0E2RlRXVGtvOUcwaWp3SURBUUFCbzNVdwpjekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvCkJBSXdBREFkQmdOVkhRNEVGZ1FVb1ltYUltQXU0OEN1MkVwUFpXMTRKLzl1T1lFd0h3WURWUjBqQkJnd0ZvQVUKU0pQWmU5T0dtVlRwUXdEVDVZWTRIMHUwaFQ0d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHekh6dlhuamh6WQo1dDFJZFA2U3ZsNnlQaU9RY2kvMWhxanJseit5eis2VTgyellQZlc3bEU3ZVduUzlINXdJU0pDWGM5N24xTW0vCnEzeVdSbHdCUlh3dm1GYyt3TmxCVUc4TVdCMlRLaW5ZWjByRlF0dVpDaklvQUdQUG43dVp4S1pyTUJBWEVVWHEKQW1qcG5CU0NvUlMrV3paUFZPRjNmcndUZGsxUGRWVk9UK0prbkp4d2ZuL2huejFiNlh0QTFnaGlyTFpJTVdKTApKdkFhc1g5d3ozUlZJVU40cGN1NHNKUVRNL1JBMUhlRThVNGMrM3ZuV0RTNVVJaU5qSEN6QzgzSWIzUGdCQVhPCmk4U1BZcXc4QWVWeWdBSnhJd2lzT1RTd3ZUTkU4QW5sbDNrSXExUDhMcTM1QUxSNmlwUG1qU0wwdmxnU2dEdDQKTmhCNE03cllqSWM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.MCSCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjVENDQWxtZ0F3SUJBZ0lJWklsbzJHRHFXaGd3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5T1Zvd01ERXVNQ3dHQTFVRUF4TWxjMjl0WVd4c1pYa3RZWEJwTG1SbGRtTnNkWE4wClpYSXViM0JsYm5Ob2FXWjBMbU52YlRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQUtGNUVpUGgzcnVGUGdld3RxSmc1dEtzUkJ3Q3dwb3lTMHF2SFgyZ3JIdE5ZMFNGbXdkV250MHZxR0xaZmgxaQpWeHl6QVEyRjBTRXhVeks0YU9QbG5CNFpzMHgzQUF4M2tOZkQ5bTc1M3ZKSUU0MjFtRWdMZzJGaWhEd290WGh4Ci9oS2ZPRzFjTy9sME5OMDQzeEhKLzdBZDVTZ0t5aXY1WUs1WDhqaisvcnhPZjUxeXNLT0ZuNFhFNHNDNFJxU1QKUUVxWjBzVmQ4cm9EdFQwT3gweklWSGxqRlMwOGZDY1JEUGduU0lvRVduSTVGb3c3OXpBaEpoSVhVMys3RGNmWApqYnErSDh3VlZ1YVltdktaRk9nL1F2U1ZRZThEcXVXRFNMbklFeXIxSFFWUTRSWEZ2U2NHUHMwK1hYdzlVcnRyCks0NmtOYklEZkFsaGlmWm1ac1J4d1BVQ0F3RUFBYU9CbURDQmxUQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlJJazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBZgpCZ05WSFNNRUdEQVdnQlJJazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBd0JnTlZIUkVFS1RBbmdpVnpiMjFoCmJHeGxlUzFoY0drdVpHVjJZMngxYzNSbGNpNXZjR1Z1YzJocFpuUXVZMjl0TUEwR0NTcUdTSWIzRFFFQkN3VUEKQTRJQkFRQ2VTU1FwVmNjbFF4bGlXSDBwZk0vdmRHejErSWJaSXA1L0NsaGhnQVRkc2Q5OExxQ0Y0U2RnS2dFQgpsbktQdnZ3Q2xFNFAvZUdLYXMrSFNGZGllZDI5U0QxR3N1QnN0V1gxczhJc1l5YzNlMlpOdWdrdVZPS1owZUtwCmI2RzE0UHAzbEp4RlBtZW1vMUt6WkdSWWd2L2N1d1ExdUlEQ1A1eEZEOExXdFE2ZzltZjV6QW1KTE1NODlXa2sKQ01VTHVCb1NPRXNHU1lRL05tR2FZS3Bsd21lUFliVmNOWjhtL0xQalhxS0NFRHI2MXdLQnB3aUtNMzAxbWNWUApYWlNCeTMrNjBJbUJ2Tkd5NXZJWk90ZHFZSnV1VC9Kd2xEQ2RPMDBsaDVETG53dHc4Q1hsOXh5NDR5QzVCeG1iCm1VWEk2SkpWNXJRS3J1R1VWM0RudCtIQjF5LzEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBb1hrU0krSGV1NFUrQjdDMm9tRG0wcXhFSEFMQ21qSkxTcThkZmFDc2UwMWpSSVdiCkIxYWUzUytvWXRsK0hXSlhITE1CRFlYUklURlRNcmhvNCtXY0hobXpUSGNBREhlUTE4UDJidm5lOGtnVGpiV1kKU0F1RFlXS0VQQ2kxZUhIK0VwODRiVnc3K1hRMDNUamZFY24vc0IzbEtBcktLL2xncmxmeU9QNyt2RTUvblhLdwpvNFdmaGNUaXdMaEdwSk5BU3BuU3hWM3l1Z08xUFE3SFRNaFVlV01WTFR4OEp4RU0rQ2RJaWdSYWNqa1dqRHYzCk1DRW1FaGRUZjdzTng5ZU51cjRmekJWVzVwaWE4cGtVNkQ5QzlKVkI3d09xNVlOSXVjZ1RLdlVkQlZEaEZjVzkKSndZK3pUNWRmRDFTdTJzcmpxUTFzZ044Q1dHSjltWm14SEhBOVFJREFRQUJBb0lCQUhZSEtWdFJIcDJ6SjBRMwp4MGVwelE3eEhGZmRMS0hKWVgrVndOaXpPV0Jua01mbFlReGNKSU5JOHF4T2pnQ3NnVUJaRjh2cXBKSyttekhYCjJkTzdZZ0llaHhDOWF5dXh1ZzM5RDRUTzRFZjRwMUpPQ3FHZXlNbkdXU0lnSDRXS3pVeVBWWSthZTd3N1ZPamYKU1M2WG1HNERiQjE0eFk2ZkdpeFYzSmdNeSthWDBNU0FDUDBPY2pXNkt5RS9DT1Vpa3dtS3lDQVV5bWI1NzRlUwozWTRCbVFFRzFyZTBKTjY5MzU5Ny91S0h4VWJSZzRpaVNjYnJXREZUd0MwM080WlJEV2lvTmwxeHo1WXBYYlNXCkdRMXpnRlo5cDI2d3c2RE0zZnRlYWJTeEJsa1lOQUcweVdkekYxU2NadDlQS1JFbWFQM2NmYUVpVld1cjhRT1YKTjlSQmtZRUNnWUVBMXJMQmdnelhaeEFYdnE3WVRKTkVhUXRKamRKTXVQYldDSk51dDlKUHpRSlBUdTNDTWxhVApwMDhSeVBLcE9tMFZMTGg4RWkzR1JEOWdua2xBTk8rN2xDd2RlMXRSTFJMeHRBelVNMjdoWkRQNndmVkFBVzE0ClFxS25WZTc3aUNzdDRyTmh2dVI4aWh4SG04OXZ1aHJBZ0pmZUZXcXJlRHlOQ2xKaUhrNkhBaXNDZ1lFQXdJa2cKbTRsalBMWnNKeXduNnROWGJ0NEZjYkladUZUYXlUYUdDaXduUXpmNTAwQ2Q0RjlFZGIvWi93QW1FaGNsT2VQMgozR2pZNjVhZ05sRzNWbUN0a1o0UzRhR2hqTXhXRkdXVDVqNU5OV1orSDZHOGpZQXB6OVlwOGxEZHU4bTZSREE4CjhhQVpNRW9WREptSVN2enR2QXJBcll0bnpGR0dpVTRqRnRGRldWOENnWUFZVGZZZi9jb29yYWF5ZkdLYUVKWE8KK21zaU5ldGZpUG5qMEtUWkJHTHFSMWVwREx0T0xZVGJqTlRybGFUWXExNlpTRzByTmFsYk1uMkNqYkpLQzlXRgpTWlV3MEw2WXhxczhBYlBIK3NaakxJczNoOGJ1SW5GWndjWUZzVjhpSkJrMnI2M2lDVVdiOE9XZVd0WkFFQ1U0CnFYaUhuaUs1SXNtb29IamhDMnkzTHdLQmdDTXI2YTBBR0FUTFBrNlpubUVqWW1GNlpYd3prTWMvbVFnUTBjT2gKOVRvdVM1RHZ5T2RuLzlXU3ludnV4d1dlL01ucWZ2b2NuU1BNVEZBZjlXSHVIMGJ1blh4aVRtU3VIenR5b3VYNAprNW9oc3dDTVJ5bUNOQ0VuZWxvdHM1UE9jaHhxdzNkUVM4bXFmdFhpWmlkc3RQRVk5Y0crS2FRRmNKSThsK1JmCkxrLzVBb0dBRkRhdWhWWWhjMlVCZnk2bFB3cVJRQ2tyekJ2ZURoOU1WZ1gvak5TUGJJdFh5N0FVcHZmdGN6NXUKT3licjBLTStuU3pSaGRNZHhsZlI2R1ZGTnZJMWxTUk9ybEJaR3dTYnNDeFQ0YlJWb0hGUi9vTDJQUFE1OUEwWQo1NjVTUGllU3NMbDl1ZWJJRDJ2V3RaVEY2VUFPUlo0MFZqdHFrRjVWS1hqMVlqMi8xNWM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/machine-config-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBb1hrU0krSGV1NFUrQjdDMm9tRG0wcXhFSEFMQ21qSkxTcThkZmFDc2UwMWpSSVdiCkIxYWUzUytvWXRsK0hXSlhITE1CRFlYUklURlRNcmhvNCtXY0hobXpUSGNBREhlUTE4UDJidm5lOGtnVGpiV1kKU0F1RFlXS0VQQ2kxZUhIK0VwODRiVnc3K1hRMDNUamZFY24vc0IzbEtBcktLL2xncmxmeU9QNyt2RTUvblhLdwpvNFdmaGNUaXdMaEdwSk5BU3BuU3hWM3l1Z08xUFE3SFRNaFVlV01WTFR4OEp4RU0rQ2RJaWdSYWNqa1dqRHYzCk1DRW1FaGRUZjdzTng5ZU51cjRmekJWVzVwaWE4cGtVNkQ5QzlKVkI3d09xNVlOSXVjZ1RLdlVkQlZEaEZjVzkKSndZK3pUNWRmRDFTdTJzcmpxUTFzZ044Q1dHSjltWm14SEhBOVFJREFRQUJBb0lCQUhZSEtWdFJIcDJ6SjBRMwp4MGVwelE3eEhGZmRMS0hKWVgrVndOaXpPV0Jua01mbFlReGNKSU5JOHF4T2pnQ3NnVUJaRjh2cXBKSyttekhYCjJkTzdZZ0llaHhDOWF5dXh1ZzM5RDRUTzRFZjRwMUpPQ3FHZXlNbkdXU0lnSDRXS3pVeVBWWSthZTd3N1ZPamYKU1M2WG1HNERiQjE0eFk2ZkdpeFYzSmdNeSthWDBNU0FDUDBPY2pXNkt5RS9DT1Vpa3dtS3lDQVV5bWI1NzRlUwozWTRCbVFFRzFyZTBKTjY5MzU5Ny91S0h4VWJSZzRpaVNjYnJXREZUd0MwM080WlJEV2lvTmwxeHo1WXBYYlNXCkdRMXpnRlo5cDI2d3c2RE0zZnRlYWJTeEJsa1lOQUcweVdkekYxU2NadDlQS1JFbWFQM2NmYUVpVld1cjhRT1YKTjlSQmtZRUNnWUVBMXJMQmdnelhaeEFYdnE3WVRKTkVhUXRKamRKTXVQYldDSk51dDlKUHpRSlBUdTNDTWxhVApwMDhSeVBLcE9tMFZMTGg4RWkzR1JEOWdua2xBTk8rN2xDd2RlMXRSTFJMeHRBelVNMjdoWkRQNndmVkFBVzE0ClFxS25WZTc3aUNzdDRyTmh2dVI4aWh4SG04OXZ1aHJBZ0pmZUZXcXJlRHlOQ2xKaUhrNkhBaXNDZ1lFQXdJa2cKbTRsalBMWnNKeXduNnROWGJ0NEZjYkladUZUYXlUYUdDaXduUXpmNTAwQ2Q0RjlFZGIvWi93QW1FaGNsT2VQMgozR2pZNjVhZ05sRzNWbUN0a1o0UzRhR2hqTXhXRkdXVDVqNU5OV1orSDZHOGpZQXB6OVlwOGxEZHU4bTZSREE4CjhhQVpNRW9WREptSVN2enR2QXJBcll0bnpGR0dpVTRqRnRGRldWOENnWUFZVGZZZi9jb29yYWF5ZkdLYUVKWE8KK21zaU5ldGZpUG5qMEtUWkJHTHFSMWVwREx0T0xZVGJqTlRybGFUWXExNlpTRzByTmFsYk1uMkNqYkpLQzlXRgpTWlV3MEw2WXhxczhBYlBIK3NaakxJczNoOGJ1SW5GWndjWUZzVjhpSkJrMnI2M2lDVVdiOE9XZVd0WkFFQ1U0CnFYaUhuaUs1SXNtb29IamhDMnkzTHdLQmdDTXI2YTBBR0FUTFBrNlpubUVqWW1GNlpYd3prTWMvbVFnUTBjT2gKOVRvdVM1RHZ5T2RuLzlXU3ludnV4d1dlL01ucWZ2b2NuU1BNVEZBZjlXSHVIMGJ1blh4aVRtU3VIenR5b3VYNAprNW9oc3dDTVJ5bUNOQ0VuZWxvdHM1UE9jaHhxdzNkUVM4bXFmdFhpWmlkc3RQRVk5Y0crS2FRRmNKSThsK1JmCkxrLzVBb0dBRkRhdWhWWWhjMlVCZnk2bFB3cVJRQ2tyekJ2ZURoOU1WZ1gvak5TUGJJdFh5N0FVcHZmdGN6NXUKT3licjBLTStuU3pSaGRNZHhsZlI2R1ZGTnZJMWxTUk9ybEJaR3dTYnNDeFQ0YlJWb0hGUi9vTDJQUFE1OUEwWQo1NjVTUGllU3NMbDl1ZWJJRDJ2V3RaVEY2VUFPUlo0MFZqdHFrRjVWS1hqMVlqMi8xNWM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/machine-config-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjVENDQWxtZ0F3SUJBZ0lJWklsbzJHRHFXaGd3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5T1Zvd01ERXVNQ3dHQTFVRUF4TWxjMjl0WVd4c1pYa3RZWEJwTG1SbGRtTnNkWE4wClpYSXViM0JsYm5Ob2FXWjBMbU52YlRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQUtGNUVpUGgzcnVGUGdld3RxSmc1dEtzUkJ3Q3dwb3lTMHF2SFgyZ3JIdE5ZMFNGbXdkV250MHZxR0xaZmgxaQpWeHl6QVEyRjBTRXhVeks0YU9QbG5CNFpzMHgzQUF4M2tOZkQ5bTc1M3ZKSUU0MjFtRWdMZzJGaWhEd290WGh4Ci9oS2ZPRzFjTy9sME5OMDQzeEhKLzdBZDVTZ0t5aXY1WUs1WDhqaisvcnhPZjUxeXNLT0ZuNFhFNHNDNFJxU1QKUUVxWjBzVmQ4cm9EdFQwT3gweklWSGxqRlMwOGZDY1JEUGduU0lvRVduSTVGb3c3OXpBaEpoSVhVMys3RGNmWApqYnErSDh3VlZ1YVltdktaRk9nL1F2U1ZRZThEcXVXRFNMbklFeXIxSFFWUTRSWEZ2U2NHUHMwK1hYdzlVcnRyCks0NmtOYklEZkFsaGlmWm1ac1J4d1BVQ0F3RUFBYU9CbURDQmxUQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlJJazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBZgpCZ05WSFNNRUdEQVdnQlJJazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBd0JnTlZIUkVFS1RBbmdpVnpiMjFoCmJHeGxlUzFoY0drdVpHVjJZMngxYzNSbGNpNXZjR1Z1YzJocFpuUXVZMjl0TUEwR0NTcUdTSWIzRFFFQkN3VUEKQTRJQkFRQ2VTU1FwVmNjbFF4bGlXSDBwZk0vdmRHejErSWJaSXA1L0NsaGhnQVRkc2Q5OExxQ0Y0U2RnS2dFQgpsbktQdnZ3Q2xFNFAvZUdLYXMrSFNGZGllZDI5U0QxR3N1QnN0V1gxczhJc1l5YzNlMlpOdWdrdVZPS1owZUtwCmI2RzE0UHAzbEp4RlBtZW1vMUt6WkdSWWd2L2N1d1ExdUlEQ1A1eEZEOExXdFE2ZzltZjV6QW1KTE1NODlXa2sKQ01VTHVCb1NPRXNHU1lRL05tR2FZS3Bsd21lUFliVmNOWjhtL0xQalhxS0NFRHI2MXdLQnB3aUtNMzAxbWNWUApYWlNCeTMrNjBJbUJ2Tkd5NXZJWk90ZHFZSnV1VC9Kd2xEQ2RPMDBsaDVETG53dHc4Q1hsOXh5NDR5QzVCeG1iCm1VWEk2SkpWNXJRS3J1R1VWM0RudCtIQjF5LzEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.OpenshiftAPIServerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVRRENDQXlpZ0F3SUJBZ0lJV2dhbStzZndTcE13RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRneE1ERTVNVE14TnpJMgpXaGNOTWpneE1ERTJNVE14TnpJNFdqQTBNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFY01Cb0dBMVVFCkF4TVRiM0JsYm5Ob2FXWjBMV0Z3YVhObGNuWmxjakNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0MKQVFvQ2dnRUJBUFltdTVOQUdwTUFGQm5kWElXWmFPU1FkSUg0NVk4ZUp5eXdoNkYxOEU3ZFcvWFVuRENRUGZKbQpUV1EyOW5VWlBjZjg4bGpLY0svaHNZbWNnaEduNUVLZU5YZzYyUUVyUTZEM3M4aGtXWEFIMkpzUDNaanhUcWc1CmVsT1pEMHZ0MFcvUjh2c01KOWpuZXIrNXZObGVOR01ZdEtsbVg2U2pRdHltdnhZTDcvcjRDVlY0T3JjK1NvUGsKVXRyU1BxL1kzTmFSbWY0ZWpvaGErZWxPd2Y0WUVCYzFrdDNCN0h4U2t2RDZJRkdZSHZpVlM1VTVYbHBUMmtmRQpsRG5pZ0U5OHhhUXdGdE1PaWgrTmhRUTZsMHo4ZEo1OWpoTlFDMSszU3l5RU5Zbnl4OGcweHFOTlhHRjB3bjVKCko0NzdnZlRobGJVOTZYZ2hNMEJoeXNRb2Jod1BzUk1DQXdFQUFhT0NBV0F3Z2dGY01BNEdBMVVkRHdFQi93UUUKQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJdwpBREFkQmdOVkhRNEVGZ1FVd3JEMDExS09nYmlYTVFVT3pQTFgzcUkyc1Bnd0h3WURWUjBqQkJnd0ZvQVVTSlBaCmU5T0dtVlRwUXdEVDVZWTRIMHUwaFQ0d2dkd0dBMVVkRVFTQjFEQ0IwWUlsYzI5dFlXeHNaWGt0WVhCcExtUmwKZG1Oc2RYTjBaWEl1YjNCbGJuTm9hV1owTG1OdmJZSVRiM0JsYm5Ob2FXWjBMV0Z3YVhObGNuWmxjb0lmYjNCbApibk5vYVdaMExXRndhWE5sY25abGNpNXJkV0psTFhONWMzUmxiWUlqYjNCbGJuTm9hV1owTFdGd2FYTmxjblpsCmNpNXJkV0psTFhONWMzUmxiUzV6ZG1PQ01XOXdaVzV6YUdsbWRDMWhjR2x6WlhKMlpYSXVhM1ZpWlMxemVYTjAKWlcwdWMzWmpMbU5zZFhOMFpYSXViRzlqWVd5Q0NXeHZZMkZzYUc5emRJSUpNVEkzTGpBdU1DNHhod1FLQXdBQgpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNGUjdmWUs2TXNOT29wV3A4eGJjNDN6QUg2eXV1RzJuQWdlTFQrCm1NeUdiYXI1MXlrYjBlNXo4UTNvc21ISmJTdElJMWlBYis0cDNEeDFYN3hWQmpROE5EVFFsQ05CYXBjRzBqY1YKd1E1S1JXOGo1ZmVkaVVWdCtLVzdReFZUbnFpVHhxZC9YM1JsTGxBazBqZGwvVm5RUDg1Witwbzh6dlFaVHZncgowWUliZ0NoM3VDcmhIcXFYUndaZDhUaGRtZjF2NC9BSEdPZytkWkhnSkdmekFTRVJ0R1lsV1JpaDhzSDFJcTdaCjBCZWI5dUxYT0pSdmZnNkhHNVdKTGhTQWl5cG9ON01iT2ZwMURJcDRaMGFudEFQSnQySnZWRS9DLzVtSHoyT0YKM1RjMnZIN0Q3NXowc0Q1dWU1OGNCUU5HQmE3V2dTM2dwS2MwNldEUmtib1poaDF0Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETXpDQ0FodWdBd0lCQWdJSWRyRTFRRXRybkEwd0RRWUpLb1pJaHZjTkFRRUxCUUF3SmpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNE1UQXhPVEV6TVRjeU5sb1gKRFRJNE1UQXhOakV6TVRjeU4xb3dLREVSTUE4R0ExVUVDeE1JWW05dmRHdDFZbVV4RXpBUkJnTlZCQU1UQ21GbgpaM0psWjJGMGIzSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQ1ZSd3dDL0Y4CkJmNVVnWUxnOENTcDlHc3RhekV0TXFDM09IWjcyTzg5MkJHT1BWNDJpVFEwMG5FMUFNdmRPM1llQk1wb0FaR0QKYm9jaVFqdmFBN3hXYlpCUTRNN2NrWjBNMzJQMDYxSHlyakltMW04TGIyWVRkWU1vejVVZnRZSi9SSWlSYjcrQwoxdVRoWVNrK2F0aktWNmtMY3NxN2lqdEpHZWN4WkNXZ2tsdDlRZGduanJYZms4MGd6NXhhK1VDUWEvQTJxeVhiCnFqK25oR2w4TWFqUTQ3OWk1N09yMDhFUGNma09reFkrRGZsZHg3R3UxRWZNZUFCN2NYZzNWTHN2dGI2NDNRbjAKNEZ0bnpONG5ldU9lK2tQWUg5KytLV2VjRUhyWWdHa1piREVNVTliSmJlSDM2SDFQZ21RYlQ4bkUyRFdIUWdsQwpOa0FZWjZoRGdWVXZBZ01CQUFHall6QmhNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFECkFRSC9NQjBHQTFVZERnUVdCQlJJazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBZkJnTlZIU01FR0RBV2dCUkkKazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVJJZk5QaGl0Zk54MQoxdzFsK2hmKzBwNW5PTGRZQlkybmF3ZXBUYTlUTmZrYUxyVk5LMFliVENiOWFxeXR5NjhtaVd5U2pYdzByeVI3Ckk5c3ZhZFZneEVHNitoTWhsZUNvRnBzQnlTaGZIR2l2NXY5NE9ERG9lQTdaR09jWWNxUnYrUnQ3V1V5bG53MXIKMFhCOFpWWlJ6Tm1UVUc2ckRSaHJYcnVEQlJ4ZzVFNm80U2NhR3BlcDIySjdlMVhTc01IL0doMmIzTGJ4Nld3dApPdGw1bzg1c1BwSnpETHVvQ2JpQ24vT01oMTJCeHMvKzA2WVA5RDFQMisvelpxTVBVR0tiMGZ0VTZXTUlsczRYCjZDNzdpaXQ5V2JuVTlNT20wTk1uRHFxK2NUbVNMOEFXRTF1djBLdGx4S3kvYUxsQkZDbWNnTXRtOEloNEdZbUcKbjJZQWJRaFZzZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBOWlhN2swQWFrd0FVR2QxY2habG81SkIwZ2ZqbGp4NG5MTENIb1hYd1R0MWI5ZFNjCk1KQTk4bVpOWkRiMmRSazl4L3p5V01wd3IrR3hpWnlDRWFma1FwNDFlRHJaQVN0RG9QZXp5R1JaY0FmWW13L2QKbVBGT3FEbDZVNWtQUyszUmI5SHkrd3duMk9kNnY3bTgyVjQwWXhpMHFXWmZwS05DM0thL0ZndnYrdmdKVlhnNgp0ejVLZytSUzJ0SStyOWpjMXBHWi9oNk9pRnI1NlU3Qi9oZ1FGeldTM2NIc2ZGS1M4UG9nVVpnZStKVkxsVGxlCldsUGFSOFNVT2VLQVQzekZwREFXMHc2S0g0MkZCRHFYVFB4MG5uMk9FMUFMWDdkTExJUTFpZkxIeURUR28wMWMKWVhUQ2Zra25qdnVCOU9HVnRUM3BlQ0V6UUdIS3hDaHVIQSt4RXdJREFRQUJBb0lCQVFEUXg2dUR5dlIvU0tyRQpBV2l2Zko1bWQwd0t6YlRQL2xCVjdHa3QvdDNUMXBkZ1hIUWFFTTRxSXJGejFkYVhIZEMwSnd6YldPSFpuSUc4CmFiNDlBWDF2TDhmRWNZMk1HMGtpWjliYW1wcnRsZ29ZQTQzK1luWkg0M0NwSllLKzhUa2FNaVo0M3llUkowMksKL3h4NTloaFRFU3B6SUh6eEpQVGFPS2lOSjVUbDlRQUVuOGxwQTJNK1pBSzBzcEtvR3YzamYwUHZGTEd4UnpySQp1SGlHNVpJdE56RjZXOU1GNyt4aTdZN3BJc3QzT1ZmOFdiTjVCNmM3WVlHRHVFVW14RW1YdzA1RVJQaEF1bStpCk8yUGM0WElmZmpvUlpUdDhRb3cveTJoVGFLNHdNUE1NYVR2cWprbjNsSVliVnNiTHhTYU9DNjlURzQ4UkVkZ0IKTFVORGQvcUpBb0dCQVBsTnFuYS9xbC9mZ1BzZzF2ZUtiTEZ2QjZVNlovY3AvalhCMWRTQXFDYzJNcG02TFNpWApBbWRkKzBocnREVlZkVFVRdm83V0dySEZ5bWxOZURlNzZoZS9FNDNDTVZxYWFSc3pwaUNHYXR4c3dQaHg3QmxSCnF5bkg5ZnBQYWxvamExcmRtc2J2VXFBWDQvbGo5UVZXd0xNaCtkQ1QxaWtzRTZzdWFnZFoyMldGQW9HQkFQekQKWkR6RFRGMng4ZlpKYzd3bHpuQ0FZNDNxVHVOWk4rL0ZxRUdWTVBvRmJlcWNiTnpCdTIybkw0OVlsc1l1SVh5dQpLMUFwQWg0ellOQXJKOHFhM3RpaC9qQzZLRHpBdGJkb2NDVTQyLzZmaExiQkVKN2x5cDc0bVBoNFBzTWt0dndICnFmaGR0Unp6MEwyaG5XQ1ZCMGc5Q0pSODE3dTc3R2tRVzBTdUVGTzNBb0dBS2Vlc0o1bkFBYTJIK0s1a2MrZUkKcmFxRUZubml6K0QzSWdJYTkwVkkvbzVWb3hGd1ZjcE1WU092QVZWWlRUMjRIZHRhckpmQWxQRXlQTkVRekEyQwpJOHV5ZGJtV29pd2lUcmczekcvTHRwRnhQbEduNWZtY1U4R1F6eXBhTGh5V0J3Z0k1RGVHSS9MZ0Z5TitKQStaCkJJTkpnbzNYQ2NTbTZiYzdpMURIV0NFQ2dZQjdadmw5SU93Ym9sQzdLVWt6eGxGdlkzODNQZm1keldVZHpxWkMKdm8vV3dPZlU3dUhITlY1SVBxTmRuS2Fmd3MzZWpUbmdQT1VuMFhXbXJDc1ZJMTlBN0hXcFhIbGdqOFVuOGZrdQpjd0FVNDlSclZQN0VWUFFEZ09OT0M0YTR4eWYvQzg3VHp3d3BRbS9hNVJoc210V2ZVd3pwVWJvUmtjSHQyV3AxCnNYV1BLUUtCZ1FEUzFyei9pMklyL1I1V200WWlOMWt1YU9ZYnd2b1RpN09zakJtVUtFRWw1cDZGdzc2cS9yNE0KUUVRdk0zTm5adEFjODcvSUVybFZ2ejlwWUFOdVhPMFJpTGpGRThnYWEvMXdIcjlYOEI4czNva2RQYTJ0V0FZVwpmdkVpdFY5RkdqR3Z6WlYzdnl2Zm5rVlc0dldRUVBrRWFCTHU1R1dpa1JSMXk5SForYXFROUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/openshift-apiserver.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBOWlhN2swQWFrd0FVR2QxY2habG81SkIwZ2ZqbGp4NG5MTENIb1hYd1R0MWI5ZFNjCk1KQTk4bVpOWkRiMmRSazl4L3p5V01wd3IrR3hpWnlDRWFma1FwNDFlRHJaQVN0RG9QZXp5R1JaY0FmWW13L2QKbVBGT3FEbDZVNWtQUyszUmI5SHkrd3duMk9kNnY3bTgyVjQwWXhpMHFXWmZwS05DM0thL0ZndnYrdmdKVlhnNgp0ejVLZytSUzJ0SStyOWpjMXBHWi9oNk9pRnI1NlU3Qi9oZ1FGeldTM2NIc2ZGS1M4UG9nVVpnZStKVkxsVGxlCldsUGFSOFNVT2VLQVQzekZwREFXMHc2S0g0MkZCRHFYVFB4MG5uMk9FMUFMWDdkTExJUTFpZkxIeURUR28wMWMKWVhUQ2Zra25qdnVCOU9HVnRUM3BlQ0V6UUdIS3hDaHVIQSt4RXdJREFRQUJBb0lCQVFEUXg2dUR5dlIvU0tyRQpBV2l2Zko1bWQwd0t6YlRQL2xCVjdHa3QvdDNUMXBkZ1hIUWFFTTRxSXJGejFkYVhIZEMwSnd6YldPSFpuSUc4CmFiNDlBWDF2TDhmRWNZMk1HMGtpWjliYW1wcnRsZ29ZQTQzK1luWkg0M0NwSllLKzhUa2FNaVo0M3llUkowMksKL3h4NTloaFRFU3B6SUh6eEpQVGFPS2lOSjVUbDlRQUVuOGxwQTJNK1pBSzBzcEtvR3YzamYwUHZGTEd4UnpySQp1SGlHNVpJdE56RjZXOU1GNyt4aTdZN3BJc3QzT1ZmOFdiTjVCNmM3WVlHRHVFVW14RW1YdzA1RVJQaEF1bStpCk8yUGM0WElmZmpvUlpUdDhRb3cveTJoVGFLNHdNUE1NYVR2cWprbjNsSVliVnNiTHhTYU9DNjlURzQ4UkVkZ0IKTFVORGQvcUpBb0dCQVBsTnFuYS9xbC9mZ1BzZzF2ZUtiTEZ2QjZVNlovY3AvalhCMWRTQXFDYzJNcG02TFNpWApBbWRkKzBocnREVlZkVFVRdm83V0dySEZ5bWxOZURlNzZoZS9FNDNDTVZxYWFSc3pwaUNHYXR4c3dQaHg3QmxSCnF5bkg5ZnBQYWxvamExcmRtc2J2VXFBWDQvbGo5UVZXd0xNaCtkQ1QxaWtzRTZzdWFnZFoyMldGQW9HQkFQekQKWkR6RFRGMng4ZlpKYzd3bHpuQ0FZNDNxVHVOWk4rL0ZxRUdWTVBvRmJlcWNiTnpCdTIybkw0OVlsc1l1SVh5dQpLMUFwQWg0ellOQXJKOHFhM3RpaC9qQzZLRHpBdGJkb2NDVTQyLzZmaExiQkVKN2x5cDc0bVBoNFBzTWt0dndICnFmaGR0Unp6MEwyaG5XQ1ZCMGc5Q0pSODE3dTc3R2tRVzBTdUVGTzNBb0dBS2Vlc0o1bkFBYTJIK0s1a2MrZUkKcmFxRUZubml6K0QzSWdJYTkwVkkvbzVWb3hGd1ZjcE1WU092QVZWWlRUMjRIZHRhckpmQWxQRXlQTkVRekEyQwpJOHV5ZGJtV29pd2lUcmczekcvTHRwRnhQbEduNWZtY1U4R1F6eXBhTGh5V0J3Z0k1RGVHSS9MZ0Z5TitKQStaCkJJTkpnbzNYQ2NTbTZiYzdpMURIV0NFQ2dZQjdadmw5SU93Ym9sQzdLVWt6eGxGdlkzODNQZm1keldVZHpxWkMKdm8vV3dPZlU3dUhITlY1SVBxTmRuS2Fmd3MzZWpUbmdQT1VuMFhXbXJDc1ZJMTlBN0hXcFhIbGdqOFVuOGZrdQpjd0FVNDlSclZQN0VWUFFEZ09OT0M0YTR4eWYvQzg3VHp3d3BRbS9hNVJoc210V2ZVd3pwVWJvUmtjSHQyV3AxCnNYV1BLUUtCZ1FEUzFyei9pMklyL1I1V200WWlOMWt1YU9ZYnd2b1RpN09zakJtVUtFRWw1cDZGdzc2cS9yNE0KUUVRdk0zTm5adEFjODcvSUVybFZ2ejlwWUFOdVhPMFJpTGpGRThnYWEvMXdIcjlYOEI4czNva2RQYTJ0V0FZVwpmdkVpdFY5RkdqR3Z6WlYzdnl2Zm5rVlc0dldRUVBrRWFCTHU1R1dpa1JSMXk5SForYXFROUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/openshift-apiserver.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVRRENDQXlpZ0F3SUJBZ0lJV2dhbStzZndTcE13RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRneE1ERTVNVE14TnpJMgpXaGNOTWpneE1ERTJNVE14TnpJNFdqQTBNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFY01Cb0dBMVVFCkF4TVRiM0JsYm5Ob2FXWjBMV0Z3YVhObGNuWmxjakNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0MKQVFvQ2dnRUJBUFltdTVOQUdwTUFGQm5kWElXWmFPU1FkSUg0NVk4ZUp5eXdoNkYxOEU3ZFcvWFVuRENRUGZKbQpUV1EyOW5VWlBjZjg4bGpLY0svaHNZbWNnaEduNUVLZU5YZzYyUUVyUTZEM3M4aGtXWEFIMkpzUDNaanhUcWc1CmVsT1pEMHZ0MFcvUjh2c01KOWpuZXIrNXZObGVOR01ZdEtsbVg2U2pRdHltdnhZTDcvcjRDVlY0T3JjK1NvUGsKVXRyU1BxL1kzTmFSbWY0ZWpvaGErZWxPd2Y0WUVCYzFrdDNCN0h4U2t2RDZJRkdZSHZpVlM1VTVYbHBUMmtmRQpsRG5pZ0U5OHhhUXdGdE1PaWgrTmhRUTZsMHo4ZEo1OWpoTlFDMSszU3l5RU5Zbnl4OGcweHFOTlhHRjB3bjVKCko0NzdnZlRobGJVOTZYZ2hNMEJoeXNRb2Jod1BzUk1DQXdFQUFhT0NBV0F3Z2dGY01BNEdBMVVkRHdFQi93UUUKQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJdwpBREFkQmdOVkhRNEVGZ1FVd3JEMDExS09nYmlYTVFVT3pQTFgzcUkyc1Bnd0h3WURWUjBqQkJnd0ZvQVVTSlBaCmU5T0dtVlRwUXdEVDVZWTRIMHUwaFQ0d2dkd0dBMVVkRVFTQjFEQ0IwWUlsYzI5dFlXeHNaWGt0WVhCcExtUmwKZG1Oc2RYTjBaWEl1YjNCbGJuTm9hV1owTG1OdmJZSVRiM0JsYm5Ob2FXWjBMV0Z3YVhObGNuWmxjb0lmYjNCbApibk5vYVdaMExXRndhWE5sY25abGNpNXJkV0psTFhONWMzUmxiWUlqYjNCbGJuTm9hV1owTFdGd2FYTmxjblpsCmNpNXJkV0psTFhONWMzUmxiUzV6ZG1PQ01XOXdaVzV6YUdsbWRDMWhjR2x6WlhKMlpYSXVhM1ZpWlMxemVYTjAKWlcwdWMzWmpMbU5zZFhOMFpYSXViRzlqWVd5Q0NXeHZZMkZzYUc5emRJSUpNVEkzTGpBdU1DNHhod1FLQXdBQgpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNGUjdmWUs2TXNOT29wV3A4eGJjNDN6QUg2eXV1RzJuQWdlTFQrCm1NeUdiYXI1MXlrYjBlNXo4UTNvc21ISmJTdElJMWlBYis0cDNEeDFYN3hWQmpROE5EVFFsQ05CYXBjRzBqY1YKd1E1S1JXOGo1ZmVkaVVWdCtLVzdReFZUbnFpVHhxZC9YM1JsTGxBazBqZGwvVm5RUDg1Witwbzh6dlFaVHZncgowWUliZ0NoM3VDcmhIcXFYUndaZDhUaGRtZjF2NC9BSEdPZytkWkhnSkdmekFTRVJ0R1lsV1JpaDhzSDFJcTdaCjBCZWI5dUxYT0pSdmZnNkhHNVdKTGhTQWl5cG9ON01iT2ZwMURJcDRaMGFudEFQSnQySnZWRS9DLzVtSHoyT0YKM1RjMnZIN0Q3NXowc0Q1dWU1OGNCUU5HQmE3V2dTM2dwS2MwNldEUmtib1poaDF0Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETXpDQ0FodWdBd0lCQWdJSWRyRTFRRXRybkEwd0RRWUpLb1pJaHZjTkFRRUxCUUF3SmpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNE1UQXhPVEV6TVRjeU5sb1gKRFRJNE1UQXhOakV6TVRjeU4xb3dLREVSTUE4R0ExVUVDeE1JWW05dmRHdDFZbVV4RXpBUkJnTlZCQU1UQ21GbgpaM0psWjJGMGIzSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQ1ZSd3dDL0Y4CkJmNVVnWUxnOENTcDlHc3RhekV0TXFDM09IWjcyTzg5MkJHT1BWNDJpVFEwMG5FMUFNdmRPM1llQk1wb0FaR0QKYm9jaVFqdmFBN3hXYlpCUTRNN2NrWjBNMzJQMDYxSHlyakltMW04TGIyWVRkWU1vejVVZnRZSi9SSWlSYjcrQwoxdVRoWVNrK2F0aktWNmtMY3NxN2lqdEpHZWN4WkNXZ2tsdDlRZGduanJYZms4MGd6NXhhK1VDUWEvQTJxeVhiCnFqK25oR2w4TWFqUTQ3OWk1N09yMDhFUGNma09reFkrRGZsZHg3R3UxRWZNZUFCN2NYZzNWTHN2dGI2NDNRbjAKNEZ0bnpONG5ldU9lK2tQWUg5KytLV2VjRUhyWWdHa1piREVNVTliSmJlSDM2SDFQZ21RYlQ4bkUyRFdIUWdsQwpOa0FZWjZoRGdWVXZBZ01CQUFHall6QmhNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFECkFRSC9NQjBHQTFVZERnUVdCQlJJazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBZkJnTlZIU01FR0RBV2dCUkkKazlsNzA0YVpWT2xEQU5QbGhqZ2ZTN1NGUGpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVJJZk5QaGl0Zk54MQoxdzFsK2hmKzBwNW5PTGRZQlkybmF3ZXBUYTlUTmZrYUxyVk5LMFliVENiOWFxeXR5NjhtaVd5U2pYdzByeVI3Ckk5c3ZhZFZneEVHNitoTWhsZUNvRnBzQnlTaGZIR2l2NXY5NE9ERG9lQTdaR09jWWNxUnYrUnQ3V1V5bG53MXIKMFhCOFpWWlJ6Tm1UVUc2ckRSaHJYcnVEQlJ4ZzVFNm80U2NhR3BlcDIySjdlMVhTc01IL0doMmIzTGJ4Nld3dApPdGw1bzg1c1BwSnpETHVvQ2JpQ24vT01oMTJCeHMvKzA2WVA5RDFQMisvelpxTVBVR0tiMGZ0VTZXTUlsczRYCjZDNzdpaXQ5V2JuVTlNT20wTk1uRHFxK2NUbVNMOEFXRTF1djBLdGx4S3kvYUxsQkZDbWNnTXRtOEloNEdZbUcKbjJZQWJRaFZzZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.RootCA": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXdIaGNOTVRneE1ERTVNVE14TnpJMldoY05Namd4TURFMgpNVE14TnpJMldqQW1NUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN3RFNPclpVdDQzcWNmKzFoSlRHczQKQS9JcFY2LzR2dGZDOEUzZnQ5VWcvQjNqdzFVMjZoYTN1Nzdtd0lRRFpNQ2V1UmVzTGtLc29jaWNvaC9lL2RLSQpTQWtOMUJkVHVMRzlUMVVYaThad1NNWjdUTEhCY1JKQU0xdzdTckUyUkJlK1BsakNHSlphdURCZUpBdlhud1pXCmxkQWFHb1FZb0Z6LzFSQlVTeGg0Q25EQ1VWdWZDdGROWXdhY1F3WjBmTHBiVlpoUHFZT3pmNGlWdHFiK3hrR1cKdkgyVGNJV3dDc3JYeUkzNlEwRi82UjY3MVJ5RWNVVFNMWC84aFE1YmxRT0tLMCs3MDRybWhHOHA0eVlWQThPVQpJQzdnSXI5Nkd6NllDT0JyMmUzVWVzMVpQRGZmMjh6bEVPWXVEM2x0RzhMS2creTQxV0NTbDVhTW9zNWpTQ1BECkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVXNyRQo1K1ZVR1ZJcWU1UmdsaUUvQnJnVzNieU5USU5aOC9RV0RTY0VzeU1vVjkrK2ZXbkljKytENXBsNG9EZTZ4bWdKCnVQZzVUcFRLZVRFVVNZbHhxcGZtZkNHVDF5STBKQXZRUmw5cEoyTnN4UHpoRS9FQno3RVYzV0ErYTlBWHoxSC8KOGdveDlCejE2VHlRbXZUU2JrOEFJU1NmUmtTSWFCcytpeTJUZWwzUkx2UkwwL25ueFFzTExFaThpWkZaYXVCdwpUdWZWellMRWlBZCsvMVRHTmRFZFhrWTJiOTZ0b1FJK1E2SE5hMmc5TkMwZmRHVlBidFRuNU84TkZpa21rVHdYCmt1a084Ni9MYWk2K0NDMmVFamdqeHN2TEZnV1YyRTlYVVA3OFNLdysvRE1vdFU4MHY3OFpCQ3lqRnBTY2NvNTcKVFcwV3lCb2x4WldTbnU3UG1nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc0EwanEyVkxlTjZuSC90WVNVeHJPQVB5S1ZlditMN1h3dkJOMzdmVklQd2Q0OE5WCk51b1d0N3UrNXNDRUEyVEFucmtYckM1Q3JLSEluS0lmM3YzU2lFZ0pEZFFYVTdpeHZVOVZGNHZHY0VqR2UweXgKd1hFU1FETmNPMHF4TmtRWHZqNVl3aGlXV3Jnd1hpUUwxNThHVnBYUUdocUVHS0JjLzlVUVZFc1llQXB3d2xGYgpud3JYVFdNR25FTUdkSHk2VzFXWVQ2bURzMytJbGJhbS9zWkJscng5azNDRnNBcksxOGlOK2tOQmYra2V1OVVjCmhIRkUwaTEvL0lVT1c1VURpaXRQdTlPSzVvUnZLZU1tRlFQRGxDQXU0Q0svZWhzK21BamdhOW50MUhyTldUdzMKMzl2TTVSRG1MZzk1YlJ2Q3lvUHN1TlZna3BlV2pLTE9ZMGdqd3dJREFRQUJBb0lCQUZudjNIRUs1bXR4RTErNwpQM2J5bXpPYWtIT2VZRDlxL3o2UEZMbGRhSHZaVUV1eTFpMmZtTXQwRmlvNzN6VDhtNHA2ZENWNTNJWGtnRi9FClV4UFFCMlducHpoeFNSbDBHUmpsRmt0WkZKNzREcTJlbUpDQit4amhKQlVHSzFIVnAydUEza2NKMklXdjRzVzEKRkhlcXZjb3Q3b25uVWVSaXlCL0o4UFdmQjNrS3duc2RUWHNmb0lOSVJDNDVxVVI3M3RoT3c2dnlVdVBuR2N3UApRbG9XMmJ0UjNyTCtwQklvY01leWRIa1ZpU3I4dW90S21uWXJEcThvYXRwQ0VQN2tEQi95VDNZaThKQ0QwNHBxClpjeWZ5U2ZXUU04akhDVmJGTDJtNCtKQ1hQZ0htL1EyWnFtU0ZJMjBFVkR4NXdnbTEvRE5OUWo2bDA4MFJQTHEKZDhmZzU0RUNnWUVBNllkaU5ZTE0wMXBUd0czd0U4U3FoRWhqNVYrdDlQaXI2N0VjYWtrckI1V28zL0JIeVlWVgpRN2RaT2Z5dUlnMXhDM0xDSlBmZnZ2THczd2FKZFd4ME5wdi9FUFBsSGdqTGNDWHFMSnlRbnFBaTVidk1CdFFoCjZWbDhvNjFpcW5ocVJ0QnZJS0RMV1NXRG5xTkNGa3lGY3NSMDB6MHZ2WVZQclk1NWhrZm40THNDZ1lFQXdQM2oKSjZMbXdndlQ4VW1Qd1hWZEd0SXV0NURRN2l0ODg0eERnaysvYVJiVGJwNzFhM256dDFRSjBGTG1oaVlrMXpjcwpQMnMvMHAvZTVrN2pPZjFYcGMvSWF6K3ZmWW9SaW1CTGpiSG9YVnNCY0wxTURXMTFQOFNMblNQMk10TkFaRStHCjk0OWdPN2VuOVJ0VEM3TE5Qa2x1RGFFMWNvZVlZUlBSK0dJbFBKa0NnWUFjaEdiT3lBbEJLZitlT1E2ZksxM3oKUjIvRGU5cWZWcHFQN3BIY3ZOQ2ZYWHhBMUhPL3ZTTjdZSEZwN2x4SlZrRGV1QVhUUTkyejBMRHZXem4vOTkxOQpLYkdOSFd0MkxuYkJYQy9yZ0xiOFYrdkxDQkxUSnFaNWUyOElBYzFScWVDNGd3MSsrNE81Z0NaQmdnZzQ5dUU0CjhacWVqUk0rWG9BclhvR2lqemRXcndLQmdCa2p1V2hiWHdYZDlwRFN6VWdkR3JDNHVsOHRIUm81VGdDSHYrK0UKcGVGeG1MOHJNN3I1V3RjQnVubUpvdi9NampYK3VPUFYrNjFiSi9VR1I3RXhJQzY0UDFwQkpJSU03ellBVHpjNAorcFRXbXZ4dG5DK1BsNXRqNWUvbFZGZlFqdTNDTWttalFwemswcHNxSVFwQUUxNU93R2hFSEtzN29JemN3UmhDCjZLalpBb0dCQUwzaEw2bXdkNEhVNnhaa2EvQWpkM2phRWZjM25GK081VnVRSnh5RFIvcmdTZDZJa2JJT3YrUkUKOTd1Y1ErVGNaS3RTemtLKzFhOGtFSEZrWEZWRml6VjUvY2d3SnNrS3ZmR1RSWnd0ZDMxdDJJcnF1QTBwemJ3NQpreUdzMWo3WDZJcFc0blpUcFE5NlE4SVYyQ09rb0puQjFoUXg2YS9JOUFRVjcxK2hlelZvCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/root-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc0EwanEyVkxlTjZuSC90WVNVeHJPQVB5S1ZlditMN1h3dkJOMzdmVklQd2Q0OE5WCk51b1d0N3UrNXNDRUEyVEFucmtYckM1Q3JLSEluS0lmM3YzU2lFZ0pEZFFYVTdpeHZVOVZGNHZHY0VqR2UweXgKd1hFU1FETmNPMHF4TmtRWHZqNVl3aGlXV3Jnd1hpUUwxNThHVnBYUUdocUVHS0JjLzlVUVZFc1llQXB3d2xGYgpud3JYVFdNR25FTUdkSHk2VzFXWVQ2bURzMytJbGJhbS9zWkJscng5azNDRnNBcksxOGlOK2tOQmYra2V1OVVjCmhIRkUwaTEvL0lVT1c1VURpaXRQdTlPSzVvUnZLZU1tRlFQRGxDQXU0Q0svZWhzK21BamdhOW50MUhyTldUdzMKMzl2TTVSRG1MZzk1YlJ2Q3lvUHN1TlZna3BlV2pLTE9ZMGdqd3dJREFRQUJBb0lCQUZudjNIRUs1bXR4RTErNwpQM2J5bXpPYWtIT2VZRDlxL3o2UEZMbGRhSHZaVUV1eTFpMmZtTXQwRmlvNzN6VDhtNHA2ZENWNTNJWGtnRi9FClV4UFFCMlducHpoeFNSbDBHUmpsRmt0WkZKNzREcTJlbUpDQit4amhKQlVHSzFIVnAydUEza2NKMklXdjRzVzEKRkhlcXZjb3Q3b25uVWVSaXlCL0o4UFdmQjNrS3duc2RUWHNmb0lOSVJDNDVxVVI3M3RoT3c2dnlVdVBuR2N3UApRbG9XMmJ0UjNyTCtwQklvY01leWRIa1ZpU3I4dW90S21uWXJEcThvYXRwQ0VQN2tEQi95VDNZaThKQ0QwNHBxClpjeWZ5U2ZXUU04akhDVmJGTDJtNCtKQ1hQZ0htL1EyWnFtU0ZJMjBFVkR4NXdnbTEvRE5OUWo2bDA4MFJQTHEKZDhmZzU0RUNnWUVBNllkaU5ZTE0wMXBUd0czd0U4U3FoRWhqNVYrdDlQaXI2N0VjYWtrckI1V28zL0JIeVlWVgpRN2RaT2Z5dUlnMXhDM0xDSlBmZnZ2THczd2FKZFd4ME5wdi9FUFBsSGdqTGNDWHFMSnlRbnFBaTVidk1CdFFoCjZWbDhvNjFpcW5ocVJ0QnZJS0RMV1NXRG5xTkNGa3lGY3NSMDB6MHZ2WVZQclk1NWhrZm40THNDZ1lFQXdQM2oKSjZMbXdndlQ4VW1Qd1hWZEd0SXV0NURRN2l0ODg0eERnaysvYVJiVGJwNzFhM256dDFRSjBGTG1oaVlrMXpjcwpQMnMvMHAvZTVrN2pPZjFYcGMvSWF6K3ZmWW9SaW1CTGpiSG9YVnNCY0wxTURXMTFQOFNMblNQMk10TkFaRStHCjk0OWdPN2VuOVJ0VEM3TE5Qa2x1RGFFMWNvZVlZUlBSK0dJbFBKa0NnWUFjaEdiT3lBbEJLZitlT1E2ZksxM3oKUjIvRGU5cWZWcHFQN3BIY3ZOQ2ZYWHhBMUhPL3ZTTjdZSEZwN2x4SlZrRGV1QVhUUTkyejBMRHZXem4vOTkxOQpLYkdOSFd0MkxuYkJYQy9yZ0xiOFYrdkxDQkxUSnFaNWUyOElBYzFScWVDNGd3MSsrNE81Z0NaQmdnZzQ5dUU0CjhacWVqUk0rWG9BclhvR2lqemRXcndLQmdCa2p1V2hiWHdYZDlwRFN6VWdkR3JDNHVsOHRIUm81VGdDSHYrK0UKcGVGeG1MOHJNN3I1V3RjQnVubUpvdi9NampYK3VPUFYrNjFiSi9VR1I3RXhJQzY0UDFwQkpJSU03ellBVHpjNAorcFRXbXZ4dG5DK1BsNXRqNWUvbFZGZlFqdTNDTWttalFwemswcHNxSVFwQUUxNU93R2hFSEtzN29JemN3UmhDCjZLalpBb0dCQUwzaEw2bXdkNEhVNnhaa2EvQWpkM2phRWZjM25GK081VnVRSnh5RFIvcmdTZDZJa2JJT3YrUkUKOTd1Y1ErVGNaS3RTemtLKzFhOGtFSEZrWEZWRml6VjUvY2d3SnNrS3ZmR1RSWnd0ZDMxdDJJcnF1QTBwemJ3NQpreUdzMWo3WDZJcFc0blpUcFE5NlE4SVYyQ09rb0puQjFoUXg2YS9JOUFRVjcxK2hlelZvCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/root-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhFREFPQmdOVkJBTVRCM0p2YjNRdFkyRXdIaGNOTVRneE1ERTVNVE14TnpJMldoY05Namd4TURFMgpNVE14TnpJMldqQW1NUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4RURBT0JnTlZCQU1UQjNKdmIzUXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN3RFNPclpVdDQzcWNmKzFoSlRHczQKQS9JcFY2LzR2dGZDOEUzZnQ5VWcvQjNqdzFVMjZoYTN1Nzdtd0lRRFpNQ2V1UmVzTGtLc29jaWNvaC9lL2RLSQpTQWtOMUJkVHVMRzlUMVVYaThad1NNWjdUTEhCY1JKQU0xdzdTckUyUkJlK1BsakNHSlphdURCZUpBdlhud1pXCmxkQWFHb1FZb0Z6LzFSQlVTeGg0Q25EQ1VWdWZDdGROWXdhY1F3WjBmTHBiVlpoUHFZT3pmNGlWdHFiK3hrR1cKdkgyVGNJV3dDc3JYeUkzNlEwRi82UjY3MVJ5RWNVVFNMWC84aFE1YmxRT0tLMCs3MDRybWhHOHA0eVlWQThPVQpJQzdnSXI5Nkd6NllDT0JyMmUzVWVzMVpQRGZmMjh6bEVPWXVEM2x0RzhMS2creTQxV0NTbDVhTW9zNWpTQ1BECkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWQKRGdRV0JCUklrOWw3MDRhWlZPbERBTlBsaGpnZlM3U0ZQakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVXNyRQo1K1ZVR1ZJcWU1UmdsaUUvQnJnVzNieU5USU5aOC9RV0RTY0VzeU1vVjkrK2ZXbkljKytENXBsNG9EZTZ4bWdKCnVQZzVUcFRLZVRFVVNZbHhxcGZtZkNHVDF5STBKQXZRUmw5cEoyTnN4UHpoRS9FQno3RVYzV0ErYTlBWHoxSC8KOGdveDlCejE2VHlRbXZUU2JrOEFJU1NmUmtTSWFCcytpeTJUZWwzUkx2UkwwL25ueFFzTExFaThpWkZaYXVCdwpUdWZWellMRWlBZCsvMVRHTmRFZFhrWTJiOTZ0b1FJK1E2SE5hMmc5TkMwZmRHVlBidFRuNU84TkZpa21rVHdYCmt1a084Ni9MYWk2K0NDMmVFamdqeHN2TEZnV1YyRTlYVVA3OFNLdysvRE1vdFU4MHY3OFpCQ3lqRnBTY2NvNTcKVFcwV3lCb2x4WldTbnU3UG1nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.ServiceAccountKeyPair": {
        "Pvt": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb01nY3FnWFdGeUlwUlY2ZEJoUWNraU51MHI2NmQ1NTZKN1MwYWhSNGJ0MnFkVXR0CmlLeWJDazJoaktyS1kxUHh3VFdYWkIzQVFNVUYzZGdjZHJRWmJERXdpRjdLR1NlZFNTZHVjblorRWl1dDBwUHUKQXRBckJDLzN6Vk0zcGZNdmd6dFlsbHRwVXE4bzdBcE8zYTFQME9kbnFPSDVKZWtFb1dxMFJ5T3hqY0llZWFyTApQMG4wL2Frbkt5T2J4TkJzSllXTjNEVTVMVEhNZVRkMEw1N1pqaEJRNE0rR21ON3ZUWGV1aDQ3REg0d2xSK3hJCmR0UEdja0N4NmdSeFFhUDI3YzNVUEpCQUJsSjd5SUdpcktyL3pQV1BrMmF2TzN3WFhtTW5ZT0t6bXpIdUJ6OXIKaGRybFZlOHJtUlJ3WXU2dlFyN0FsdWNLMlh6aDEvMlVZeitOcVFJREFRQUJBb0lCQUZUb21VcW8vbUVGSjJwOQpCc3ZZL3lXbUZMYXpCdUo1RE9XL0pyQUcwM3NwRVFZVXFXbk9UYXBwU1BGeW1LTlFCNUlUYlRud0JFR3dTdUxYCmFHQy94OVU5UFBZbnFPOFQzcHB0ZW9SMFV5dmhhVkNWMHRJbGdUSWE2dkRDQzlkVjBEZXJ0YUxoNzRNOUFZMTEKL0NSUmpKODBOYWdZZm0wbzI4c3JBTDI0K2VGMFZqaWZpWFEyOXFINFdSaldMZFJTeEo4MVBjSzkxcThLRGFqbQp3ODc1RjNtQkJ0UEZoVElHcTMyb20yVHJQZFVnTHF6ZXN1M0FROHhuU2Q3T2doeisvVk4vdkJBV2tmeXRnK2hECjhqeVh6SEtZRzVrejJ6MkdxOCtwVXpxYW5YZmR0b3VlT1JwU2d4c2s0cmNOVUtxbHhxNWxnanJWUGFsWjliTTAKRlhHMFVNa0NnWUVBemdJZitXN0ZPQkVtQXRaYWVmblhzSVhFRHlBTjREZU1iZWNuOXJxZVFySVFyNm5EaHhLWQpiaENWcnFrUTVMTk5ZZjZTNjB3U2R4ZmhmSzZmRWltcWpLNWw2dWpPT0trN3N0dERrQ1g3S1U5MloxRXBnR0FvClV3bVFYd0NScmszMUhOZzc4S0hEYW1oOUtZR3orVEVDa0tEdmw1REhqbWZjZ3pUTks3R0pZNnNDZ1lFQXg4eGUKbGpMcjA3YXZ4QWc0WnpNb1BncitpbEYvQkh1UXRtKzFBaUJWTytBZlNRTERya2hPaW80a2JjMXVINExaY2JqLwo1UlhuQWNWN280dTRybUFON2wweEprTTIxa1VWUGZXRFdLRE1Cc0lhdlBlY09qai84QU9LT3E5NktTQzNKOVZuCmVtbmZFNzc2czBtS2dyUmVESGJvSzlqUWowRzJvRUNmUitKTGYvc0NnWUJlaC9rV0kyOWFaL3dTUnp4alJuTmsKTEMyb1p5UVc1RWFMVkF3eG1yYnVrZms0TW1WbndPK3phZWJWcS96MWhSV1lSeEl4Nk1sOFhyZjQxOFJrdUR2cgpyRWRXUVJnSVJoZi8zYittRU5lc3dDcnNCQUZRU0UrWXN3WE5vbHczS015MlBMOWNqMDQxc05ibVNmOUU5T2xoClpvZ3ErNk9teENBYkVRcW81eUhOV3dLQmdRQ2loRDQ3OWxlVThuaXQvL0hCSC8rUDErbU1JUllzVTBZMjMwNWcKMkdQOFBDVzJnYVVoMG5id2hRWmt1a0RsS000dWpzaTNVc1dBejEzdWZleFBDcHJLVk10eDBDSit6OXFqZDF6TApicUFHcjBTSWlQQnUrNFpUZU0yclJxa2JZeDBZTGFIcUZNdjdoOURzbk5rcDBBVGdKcWhiWWhUak1oU1c3WG1pClF4UWVtUUtCZ0Z3UEt3VHR0eE9BdnVKdjlyc3dRS0JZTFhjMHdWQld5Y2V0R0Y0R1JsTC85Zm9YY1NJUVkxTFAKUVA4eFAzTWVWbmE5Y0p5VVR4WXhWM01xQ1pQQUJIQ09Wdzg2Z1lDVk1mVllSZ0hOZGUySEd5YWhzWmFNWEZ2UApzeHZhL1NHSEtoeUcyaU96ZkpzWkRsaVoyQ3FnVitMU2FBN3N6ckEzbURSdnRyRytuTm1zCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "Pub": "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBb01nY3FnWFdGeUlwUlY2ZEJoUWMKa2lOdTByNjZkNTU2SjdTMGFoUjRidDJxZFV0dGlLeWJDazJoaktyS1kxUHh3VFdYWkIzQVFNVUYzZGdjZHJRWgpiREV3aUY3S0dTZWRTU2R1Y25aK0VpdXQwcFB1QXRBckJDLzN6Vk0zcGZNdmd6dFlsbHRwVXE4bzdBcE8zYTFQCjBPZG5xT0g1SmVrRW9XcTBSeU94amNJZWVhckxQMG4wL2Frbkt5T2J4TkJzSllXTjNEVTVMVEhNZVRkMEw1N1oKamhCUTRNK0dtTjd2VFhldWg0N0RINHdsUit4SWR0UEdja0N4NmdSeFFhUDI3YzNVUEpCQUJsSjd5SUdpcktyLwp6UFdQazJhdk8zd1hYbU1uWU9Lem16SHVCejlyaGRybFZlOHJtUlJ3WXU2dlFyN0FsdWNLMlh6aDEvMlVZeitOCnFRSURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/service-account.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb01nY3FnWFdGeUlwUlY2ZEJoUWNraU51MHI2NmQ1NTZKN1MwYWhSNGJ0MnFkVXR0CmlLeWJDazJoaktyS1kxUHh3VFdYWkIzQVFNVUYzZGdjZHJRWmJERXdpRjdLR1NlZFNTZHVjblorRWl1dDBwUHUKQXRBckJDLzN6Vk0zcGZNdmd6dFlsbHRwVXE4bzdBcE8zYTFQME9kbnFPSDVKZWtFb1dxMFJ5T3hqY0llZWFyTApQMG4wL2Frbkt5T2J4TkJzSllXTjNEVTVMVEhNZVRkMEw1N1pqaEJRNE0rR21ON3ZUWGV1aDQ3REg0d2xSK3hJCmR0UEdja0N4NmdSeFFhUDI3YzNVUEpCQUJsSjd5SUdpcktyL3pQV1BrMmF2TzN3WFhtTW5ZT0t6bXpIdUJ6OXIKaGRybFZlOHJtUlJ3WXU2dlFyN0FsdWNLMlh6aDEvMlVZeitOcVFJREFRQUJBb0lCQUZUb21VcW8vbUVGSjJwOQpCc3ZZL3lXbUZMYXpCdUo1RE9XL0pyQUcwM3NwRVFZVXFXbk9UYXBwU1BGeW1LTlFCNUlUYlRud0JFR3dTdUxYCmFHQy94OVU5UFBZbnFPOFQzcHB0ZW9SMFV5dmhhVkNWMHRJbGdUSWE2dkRDQzlkVjBEZXJ0YUxoNzRNOUFZMTEKL0NSUmpKODBOYWdZZm0wbzI4c3JBTDI0K2VGMFZqaWZpWFEyOXFINFdSaldMZFJTeEo4MVBjSzkxcThLRGFqbQp3ODc1RjNtQkJ0UEZoVElHcTMyb20yVHJQZFVnTHF6ZXN1M0FROHhuU2Q3T2doeisvVk4vdkJBV2tmeXRnK2hECjhqeVh6SEtZRzVrejJ6MkdxOCtwVXpxYW5YZmR0b3VlT1JwU2d4c2s0cmNOVUtxbHhxNWxnanJWUGFsWjliTTAKRlhHMFVNa0NnWUVBemdJZitXN0ZPQkVtQXRaYWVmblhzSVhFRHlBTjREZU1iZWNuOXJxZVFySVFyNm5EaHhLWQpiaENWcnFrUTVMTk5ZZjZTNjB3U2R4ZmhmSzZmRWltcWpLNWw2dWpPT0trN3N0dERrQ1g3S1U5MloxRXBnR0FvClV3bVFYd0NScmszMUhOZzc4S0hEYW1oOUtZR3orVEVDa0tEdmw1REhqbWZjZ3pUTks3R0pZNnNDZ1lFQXg4eGUKbGpMcjA3YXZ4QWc0WnpNb1BncitpbEYvQkh1UXRtKzFBaUJWTytBZlNRTERya2hPaW80a2JjMXVINExaY2JqLwo1UlhuQWNWN280dTRybUFON2wweEprTTIxa1VWUGZXRFdLRE1Cc0lhdlBlY09qai84QU9LT3E5NktTQzNKOVZuCmVtbmZFNzc2czBtS2dyUmVESGJvSzlqUWowRzJvRUNmUitKTGYvc0NnWUJlaC9rV0kyOWFaL3dTUnp4alJuTmsKTEMyb1p5UVc1RWFMVkF3eG1yYnVrZms0TW1WbndPK3phZWJWcS96MWhSV1lSeEl4Nk1sOFhyZjQxOFJrdUR2cgpyRWRXUVJnSVJoZi8zYittRU5lc3dDcnNCQUZRU0UrWXN3WE5vbHczS015MlBMOWNqMDQxc05ibVNmOUU5T2xoClpvZ3ErNk9teENBYkVRcW81eUhOV3dLQmdRQ2loRDQ3OWxlVThuaXQvL0hCSC8rUDErbU1JUllzVTBZMjMwNWcKMkdQOFBDVzJnYVVoMG5id2hRWmt1a0RsS000dWpzaTNVc1dBejEzdWZleFBDcHJLVk10eDBDSit6OXFqZDF6TApicUFHcjBTSWlQQnUrNFpUZU0yclJxa2JZeDBZTGFIcUZNdjdoOURzbk5rcDBBVGdKcWhiWWhUak1oU1c3WG1pClF4UWVtUUtCZ0Z3UEt3VHR0eE9BdnVKdjlyc3dRS0JZTFhjMHdWQld5Y2V0R0Y0R1JsTC85Zm9YY1NJUVkxTFAKUVA4eFAzTWVWbmE5Y0p5VVR4WXhWM01xQ1pQQUJIQ09Wdzg2Z1lDVk1mVllSZ0hOZGUySEd5YWhzWmFNWEZ2UApzeHZhL1NHSEtoeUcyaU96ZkpzWkRsaVoyQ3FnVitMU2FBN3N6ckEzbURSdnRyRytuTm1zCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/service-account.pub",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBb01nY3FnWFdGeUlwUlY2ZEJoUWMKa2lOdTByNjZkNTU2SjdTMGFoUjRidDJxZFV0dGlLeWJDazJoaktyS1kxUHh3VFdYWkIzQVFNVUYzZGdjZHJRWgpiREV3aUY3S0dTZWRTU2R1Y25aK0VpdXQwcFB1QXRBckJDLzN6Vk0zcGZNdmd6dFlsbHRwVXE4bzdBcE8zYTFQCjBPZG5xT0g1SmVrRW9XcTBSeU94amNJZWVhckxQMG4wL2Frbkt5T2J4TkJzSllXTjNEVTVMVEhNZVRkMEw1N1oKamhCUTRNK0dtTjd2VFhldWg0N0RINHdsUit4SWR0UEdja0N4NmdSeFFhUDI3YzNVUEpCQUJsSjd5SUdpcktyLwp6UFdQazJhdk8zd1hYbU1uWU9Lem16SHVCejlyaGRybFZlOHJtUlJ3WXU2dlFyN0FsdWNLMlh6aDEvMlVZeitOCnFRSURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K"
            }
        ]
    },
    "*tls.ServiceServingCA": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPRENDQWlDZ0F3SUJBZ0lJVnJSSnhHek1lNXd3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5TjFvd0xURVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhHREFXQmdOVkJBTVREM05sCmNuWnBZMlV0YzJWeWRtbHVaekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOSmwKRUFtQkxtRTZ2eEM3ZmN1L3VyUER6VWZSOEx3MkozSVdzMkdFWWoxSmxDZzJ5Wlc0UWp0cEt0MUV2UkpmUG9ORAo2YzdhcWRObm4rM0NCWWt4a29YRnV2ZkZGQjlOcjMybHE1cWZPWlUxanBxNWNHeXdGQkx6L1BUZStiaDg0L3Z4CnBxbGIyYS9YS2g4YTZjTzFJLytXRzAvTnZ1clRYZmlLbmRrL2JUcXFyNTVPQmpOaWZpQXBoNU5yUHJLNE9XTFMKQnB4bVJUN0JsbG5yYnpMTXdLWFJXREdZMDB1NDNteTlJSUJwN3ZPblZEWTUydVdJV3JHWDUyRFk3bGVZTEpwOQoxaERud29oV3R1aFFNM2kvSXcxY3k0WXlLUVlzVXhGdjN0U3B0VmFSSDh3b0pWczhmUmJhcE9DL240N2NhMHc4CnBuSzhEVmRLZ2VRWkJ5ZzJSTHNDQXdFQUFhTmpNR0V3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkVpVDJYdlRocGxVNlVNQTArV0dPQjlMdElVK01COEdBMVVkSXdRWQpNQmFBRkVpVDJYdlRocGxVNlVNQTArV0dPQjlMdElVK01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnJtM2NOCkp3a0dNM3Z1SUdSSmpETUVXdkVnUlc3czNXV25uZFY0R0ZaOHR2Y3o5Nk1McHN6NFE0WXV6a1NYKzV4NktrcWwKaDYwTXozbmlpb3NjN2xkcktpUFZNYlhYU01KaVlUQmxLQ09kMTBtZEhRUEJmMFhRYjcraGswSkdYUlUzRndiUgp2VWpoVm9CemhFL3NwVkRzTWtFUnVVY2h4dnd1c1JjTldncUZVQ3gxRk4zOGFUZGp6Tk9RTTJkZ2tkbEdkaGpXCnMwWWlXa0JuOTdSeDhhZDFYMnhzb3JoaEcvbkVuclJQbnRna2VDcjhrcGcyZTErK28rb1VFQXJWOHJxdGNqeC8KanRxMzN5K1p3bVcrMHlIWmF2Z2NydkxwVkNEdTFha3VIR2VyMWEySTdxY0FQNWF6R2lHUU5pTDRXQm1LeGk2YwpJMzNzQTRoSHJ1UEt0VXpyCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMG1VUUNZRXVZVHEvRUx0OXk3KzZzOFBOUjlId3ZEWW5jaGF6WVlSaVBVbVVLRGJKCmxiaENPMmtxM1VTOUVsOCtnMFBwenRxcDAyZWY3Y0lGaVRHU2hjVzY5OFVVSDAydmZhV3JtcDg1bFRXT21ybHcKYkxBVUV2UDg5Tjc1dUh6aisvR21xVnZacjljcUh4cnB3N1VqLzVZYlQ4Mis2dE5kK0lxZDJUOXRPcXF2bms0RwpNMkorSUNtSGsycytzcmc1WXRJR25HWkZQc0dXV2V0dk1zekFwZEZZTVpqVFM3amViTDBnZ0dudTg2ZFVOam5hCjVZaGFzWmZuWU5qdVY1Z3NtbjNXRU9mQ2lGYTI2RkF6ZUw4akRWekxoaklwQml4VEVXL2UxS20xVnBFZnpDZ2wKV3p4OUZ0cWs0TCtmanR4clREeW1jcndOVjBxQjVCa0hLRFpFdXdJREFRQUJBb0lCQUhCUTkxQzduN0RVRmErdgpCNmEvZ2NINW94cldIbmU3U1MrRW90cEtPOCtQK2dIRnpiT1ptL0h2WUt5aXgzU0pWK3ZuVTJmVUg1ajExdENzCkpSeHFWRmdKaUpoQW8wOWF2M2FKL0tRY29EYmhVbkdTMFV1VWJBTDZNVzNmb3R3ei85azkxY1RQZmRSN1BzZEEKTE04SFltSk5GZU55YUpzZm55alJoeGEwMzNEVE9laVdMVUpzdG5OZmtDTEpOdmRzOU9KR240VDV0Um1CQTMzVwpubFNRVit0ZkZ6eFpBS29vd0x3RXY0NUswWkdPYXdxYlY5ditQc1MwKzU0bkxlQklSVzQwcC84c3lCcGhSZC96CnNKS3REdGpBRzlqQUdRbTR6a0tJVkZ5anp1TU9SQzBObXc2amE4L0VxMXA0bHBTUVZpQUZjRllLWkhnOXFXaG8KbmdHcFNwRUNnWUVBNFBFbFVVaXAxbDZtcDJwTDRRdDNaZzJXSFR3YTZ2Y2Vob2x6TDlka1pQajYvaWdaeGtXawpZdDlidzlkRStrRWZwRU1UV0FwZXRzczUvd056T1VjVCtFa085S3FtdlJGWXM4c2pqZFJSZ290N1VnMFdhUFpUCkhtQmZnZmZsZzJyWUdjazFRVlFMbDdibmFVRHZwT2Y0SFJSWjVHMjhqSE9RdjBhSjYvTzVxbGNDZ1lFQTczRzYKWFVDVTZXQkQ3OElsRXpmTVNoRlJ1NmxBcTBJRU9pRi83ZWhueUtqb2E3ZzNCd2VlOG0vTEZZdGdEUGtnYUdVRQpvUW1DVlh0Tm5mKys2eVNGUmxnZTFDUlIrU25VV0psc2dnRTZVbnBkeG1LbEhFb1VlYktqM3dkSzg4YlY1eCtMCnlsZkhmdDNZdU1UL3VUcEV0a3UwTjhIZFY4NWJ3RkU5aEN6OEFqMENnWUVBeU44UFVCTHZkM3QybnpJUktKb3cKdVhXUWcvTFVwdGFlNzgxMmkxWnhWS255bVZ2K0NFelFpMnFpYTdTazZFV1hsL3crSGZURXQ3K3J2c3E1N29CRwptUVhFMFVCRFBidHIxc0trc1ZiVW94c2p1Ulh1MlRSKzdUVnFsSWxtNzRCT0VsalhzY3IzdnplYVZ5ZWgyVVU5CkQ5ckltM0JUVzZrbnJXZTBhbnh2WkdrQ2dZRUF6NEUwcTduYkV3Q3MvMnUxcTVqd2ZzUFJuQnNLZ3gvNy85Q20KU0N2ZlBTTThBSll0Z2ZjVnhTNGl4akg1OUdRMXRLTE94eXd4ZWhrWVk3T041Y1BKaC9PNEM4cktDMjgzcWV5VAovM3BHNjlGRjBUWU50cDF3YnlMa0p0VHdIS0VWSUczVFBIQ2ozNHNzVkx2TWpkNDBTL01CWkV5cW9IeWlRT0ZtCnVWUXV0VlVDZ1lBdTBHOENpZE9sVkpGbWFYMnUrRTdOSVBOVy9FMXVtbUkvTXlWQWRYUzdMTDBTa2pkeFR1QlMKYXNlU2RnUytOeTRnemViZkhDRFVtNUtacEx1N3RCMUtrNFNnM1JsQVhWSFN2TGVvRnREU0FYSUZwMG5aUUdxVApQejZXUTN6SG1wS2VmMVc2azRtd3RDZW84WitZSTAxVFl1NVd3OU9pWCt5NHBhT0FURFBlZGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/service-serving-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMG1VUUNZRXVZVHEvRUx0OXk3KzZzOFBOUjlId3ZEWW5jaGF6WVlSaVBVbVVLRGJKCmxiaENPMmtxM1VTOUVsOCtnMFBwenRxcDAyZWY3Y0lGaVRHU2hjVzY5OFVVSDAydmZhV3JtcDg1bFRXT21ybHcKYkxBVUV2UDg5Tjc1dUh6aisvR21xVnZacjljcUh4cnB3N1VqLzVZYlQ4Mis2dE5kK0lxZDJUOXRPcXF2bms0RwpNMkorSUNtSGsycytzcmc1WXRJR25HWkZQc0dXV2V0dk1zekFwZEZZTVpqVFM3amViTDBnZ0dudTg2ZFVOam5hCjVZaGFzWmZuWU5qdVY1Z3NtbjNXRU9mQ2lGYTI2RkF6ZUw4akRWekxoaklwQml4VEVXL2UxS20xVnBFZnpDZ2wKV3p4OUZ0cWs0TCtmanR4clREeW1jcndOVjBxQjVCa0hLRFpFdXdJREFRQUJBb0lCQUhCUTkxQzduN0RVRmErdgpCNmEvZ2NINW94cldIbmU3U1MrRW90cEtPOCtQK2dIRnpiT1ptL0h2WUt5aXgzU0pWK3ZuVTJmVUg1ajExdENzCkpSeHFWRmdKaUpoQW8wOWF2M2FKL0tRY29EYmhVbkdTMFV1VWJBTDZNVzNmb3R3ei85azkxY1RQZmRSN1BzZEEKTE04SFltSk5GZU55YUpzZm55alJoeGEwMzNEVE9laVdMVUpzdG5OZmtDTEpOdmRzOU9KR240VDV0Um1CQTMzVwpubFNRVit0ZkZ6eFpBS29vd0x3RXY0NUswWkdPYXdxYlY5ditQc1MwKzU0bkxlQklSVzQwcC84c3lCcGhSZC96CnNKS3REdGpBRzlqQUdRbTR6a0tJVkZ5anp1TU9SQzBObXc2amE4L0VxMXA0bHBTUVZpQUZjRllLWkhnOXFXaG8KbmdHcFNwRUNnWUVBNFBFbFVVaXAxbDZtcDJwTDRRdDNaZzJXSFR3YTZ2Y2Vob2x6TDlka1pQajYvaWdaeGtXawpZdDlidzlkRStrRWZwRU1UV0FwZXRzczUvd056T1VjVCtFa085S3FtdlJGWXM4c2pqZFJSZ290N1VnMFdhUFpUCkhtQmZnZmZsZzJyWUdjazFRVlFMbDdibmFVRHZwT2Y0SFJSWjVHMjhqSE9RdjBhSjYvTzVxbGNDZ1lFQTczRzYKWFVDVTZXQkQ3OElsRXpmTVNoRlJ1NmxBcTBJRU9pRi83ZWhueUtqb2E3ZzNCd2VlOG0vTEZZdGdEUGtnYUdVRQpvUW1DVlh0Tm5mKys2eVNGUmxnZTFDUlIrU25VV0psc2dnRTZVbnBkeG1LbEhFb1VlYktqM3dkSzg4YlY1eCtMCnlsZkhmdDNZdU1UL3VUcEV0a3UwTjhIZFY4NWJ3RkU5aEN6OEFqMENnWUVBeU44UFVCTHZkM3QybnpJUktKb3cKdVhXUWcvTFVwdGFlNzgxMmkxWnhWS255bVZ2K0NFelFpMnFpYTdTazZFV1hsL3crSGZURXQ3K3J2c3E1N29CRwptUVhFMFVCRFBidHIxc0trc1ZiVW94c2p1Ulh1MlRSKzdUVnFsSWxtNzRCT0VsalhzY3IzdnplYVZ5ZWgyVVU5CkQ5ckltM0JUVzZrbnJXZTBhbnh2WkdrQ2dZRUF6NEUwcTduYkV3Q3MvMnUxcTVqd2ZzUFJuQnNLZ3gvNy85Q20KU0N2ZlBTTThBSll0Z2ZjVnhTNGl4akg1OUdRMXRLTE94eXd4ZWhrWVk3T041Y1BKaC9PNEM4cktDMjgzcWV5VAovM3BHNjlGRjBUWU50cDF3YnlMa0p0VHdIS0VWSUczVFBIQ2ozNHNzVkx2TWpkNDBTL01CWkV5cW9IeWlRT0ZtCnVWUXV0VlVDZ1lBdTBHOENpZE9sVkpGbWFYMnUrRTdOSVBOVy9FMXVtbUkvTXlWQWRYUzdMTDBTa2pkeFR1QlMKYXNlU2RnUytOeTRnemViZkhDRFVtNUtacEx1N3RCMUtrNFNnM1JsQVhWSFN2TGVvRnREU0FYSUZwMG5aUUdxVApQejZXUTN6SG1wS2VmMVc2azRtd3RDZW84WitZSTAxVFl1NVd3OU9pWCt5NHBhT0FURFBlZGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/service-serving-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPRENDQWlDZ0F3SUJBZ0lJVnJSSnhHek1lNXd3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU0TVRBeE9URXpNVGN5TmxvWApEVEk0TVRBeE5qRXpNVGN5TjFvd0xURVJNQThHQTFVRUN4TUlZbTl2ZEd0MVltVXhHREFXQmdOVkJBTVREM05sCmNuWnBZMlV0YzJWeWRtbHVaekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOSmwKRUFtQkxtRTZ2eEM3ZmN1L3VyUER6VWZSOEx3MkozSVdzMkdFWWoxSmxDZzJ5Wlc0UWp0cEt0MUV2UkpmUG9ORAo2YzdhcWRObm4rM0NCWWt4a29YRnV2ZkZGQjlOcjMybHE1cWZPWlUxanBxNWNHeXdGQkx6L1BUZStiaDg0L3Z4CnBxbGIyYS9YS2g4YTZjTzFJLytXRzAvTnZ1clRYZmlLbmRrL2JUcXFyNTVPQmpOaWZpQXBoNU5yUHJLNE9XTFMKQnB4bVJUN0JsbG5yYnpMTXdLWFJXREdZMDB1NDNteTlJSUJwN3ZPblZEWTUydVdJV3JHWDUyRFk3bGVZTEpwOQoxaERud29oV3R1aFFNM2kvSXcxY3k0WXlLUVlzVXhGdjN0U3B0VmFSSDh3b0pWczhmUmJhcE9DL240N2NhMHc4CnBuSzhEVmRLZ2VRWkJ5ZzJSTHNDQXdFQUFhTmpNR0V3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkVpVDJYdlRocGxVNlVNQTArV0dPQjlMdElVK01COEdBMVVkSXdRWQpNQmFBRkVpVDJYdlRocGxVNlVNQTArV0dPQjlMdElVK01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnJtM2NOCkp3a0dNM3Z1SUdSSmpETUVXdkVnUlc3czNXV25uZFY0R0ZaOHR2Y3o5Nk1McHN6NFE0WXV6a1NYKzV4NktrcWwKaDYwTXozbmlpb3NjN2xkcktpUFZNYlhYU01KaVlUQmxLQ09kMTBtZEhRUEJmMFhRYjcraGswSkdYUlUzRndiUgp2VWpoVm9CemhFL3NwVkRzTWtFUnVVY2h4dnd1c1JjTldncUZVQ3gxRk4zOGFUZGp6Tk9RTTJkZ2tkbEdkaGpXCnMwWWlXa0JuOTdSeDhhZDFYMnhzb3JoaEcvbkVuclJQbnRna2VDcjhrcGcyZTErK28rb1VFQXJWOHJxdGNqeC8KanRxMzN5K1p3bVcrMHlIWmF2Z2NydkxwVkNEdTFha3VIR2VyMWEySTdxY0FQNWF6R2lHUU5pTDRXQm1LeGk2YwpJMzNzQTRoSHJ1UEt0VXpyCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    }
}