[Unit]
Description=HTTP Server for Ironic
BindsTo=ironic-volume.service
Requires=build-ironic-env.service wait-iptables-init.service
PartOf=ironic.service
Wants=network-online.target
After=network-online.target ironic-volume.service build-ironic-env.service extract-machine-os.service provisioning-interface.service wait-iptables-init.service

[Container]
ContainerName=httpd
Image=$IRONIC_IMAGE
Exec=/bin/runhttpd
Network=host
# Apache is configured to log to stderr, but cannot handle /dev/stderr being a
# socket, as is the default when run under a systemd service. To work around
# this, do not use the default 'passthrough' log driver, but instead have
# podman (rather than systemd) redirect the logs to journald.
PodmanArgs=--log-driver=journald
Volume=ironic.volume:/shared:z
{{ if not .PlatformData.BareMetal.DisableIronicVirtualMediaTLS }}
Volume=/opt/openshift/tls/ironic/:/certs/vmedia/:z
{{ end }}
Environment="IRONIC_RAMDISK_SSH_KEY=${IRONIC_RAMDISK_SSH_KEY}"
Environment="PROVISIONING_INTERFACE=${PROVISIONING_INTERFACE}"
Environment="HTTP_PORT=${HTTP_PORT}"
Environment="USE_IRONIC_INSPECTOR=false"
Environment="VMEDIA_TLS_PORT=6183"

[Service]
EnvironmentFile=/etc/ironic.env
# Add firewall rules to ensure the IPA ramdisk can reach httpd
ExecStartPre=/usr/local/bin/prov-iptables.sh --enable-port $HTTP_PORT
ExecStopPost=/usr/local/bin/prov-iptables.sh --disable-port $HTTP_PORT
Restart=on-failure

[Install]
WantedBy=multi-user.target
