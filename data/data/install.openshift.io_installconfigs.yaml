
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: installconfigs.install.openshift.io
spec:
  group: install.openshift.io
  names:
    kind: InstallConfig
    listKind: InstallConfigList
    plural: installconfigs
    singular: installconfig
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: InstallConfig is the configuration for an OpenShift install.
        properties:
          additionalTrustBundle:
            description: AdditionalTrustBundle is a PEM-encoded X.509 certificate
              bundle that will be added to the nodes' trusted certificate store.
            type: string
          additionalTrustBundlePolicy:
            description: 'AdditionalTrustBundlePolicy determines when to add the AdditionalTrustBundle
              to the nodes'' trusted certificate store. "Proxyonly" is the default.
              The field can be set to following specified values. "Proxyonly" : adds
              the AdditionalTrustBundle to nodes when http/https proxy is configured.
              "Always" : always adds AdditionalTrustBundle.'
            enum:
            - ""
            - Proxyonly
            - Always
            type: string
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          baseDomain:
            description: BaseDomain is the base domain to which the cluster should
              belong.
            type: string
          bootstrapInPlace:
            description: BootstrapInPlace is the configuration for installing a single
              node with bootstrap in place installation.
            properties:
              installationDisk:
                description: InstallationDisk is the target disk drive for coreos-installer
                type: string
            required:
            - installationDisk
            type: object
          capabilities:
            description: Capabilities configures the installation of optional core
              cluster components.
            properties:
              additionalEnabledCapabilities:
                description: additionalEnabledCapabilities extends the set of managed
                  capabilities beyond the baseline defined in baselineCapabilitySet.
                  The default is an empty set.
                items:
                  description: ClusterVersionCapability enumerates optional, core
                    cluster components.
                  enum:
                  - openshift-samples
                  - baremetal
                  - marketplace
                  - Console
                  - Insights
                  - Storage
                  - CSISnapshot
                  - NodeTuning
                  - MachineAPI
                  - Build
                  - DeploymentConfig
                  - ImageRegistry
                  - OperatorLifecycleManager
                  - CloudCredential
                  type: string
                type: array
              baselineCapabilitySet:
                description: baselineCapabilitySet selects an initial set of optional
                  capabilities to enable, which can be extended via additionalEnabledCapabilities.
                  The default is vCurrent.
                enum:
                - None
                - v4.11
                - v4.12
                - v4.13
                - v4.14
                - v4.15
                - vCurrent
                type: string
            type: object
          compute:
            description: Compute is the configuration for the machines that comprise
              the compute nodes.
            items:
              description: MachinePool is a pool of machines to be installed.
              properties:
                architecture:
                  default: amd64
                  description: Architecture is the instruction set architecture of
                    the machine pool. Defaults to amd64.
                  enum:
                  - ""
                  - amd64
                  type: string
                hyperthreading:
                  default: Enabled
                  description: Hyperthreading determines the mode of hyperthreading
                    that machines in the pool will utilize. Default is for hyperthreading
                    to be enabled.
                  enum:
                  - ""
                  - Enabled
                  - Disabled
                  type: string
                name:
                  description: Name is the name of the machine pool. For the control
                    plane machine pool, the name will always be "master". For the
                    compute machine pools, the only valid name is "worker".
                  type: string
                platform:
                  description: Platform is configuration for machine pool specific
                    to the platform.
                  properties:
                    alibabacloud:
                      description: AlibabaCloud is the configuration used when installing
                        on Alibaba Cloud.
                      properties:
                        imageID:
                          description: ImageID is the Image ID that should be used
                            to create ECS instance. If set, the ImageID should belong
                            to the same region as the cluster.
                          type: string
                        instanceType:
                          description: InstanceType defines the ECS instance type.
                            eg. ecs.g6.large
                          type: string
                        systemDiskCategory:
                          description: SystemDiskCategory defines the category of
                            the system disk.
                          enum:
                          - ""
                          - cloud_efficiency
                          - cloud_essd
                          type: string
                        systemDiskSize:
                          description: SystemDiskSize defines the size of the system
                            disk in gibibytes (GiB).
                          minimum: 120
                          type: integer
                        zones:
                          description: Zones is list of availability zones that can
                            be used. eg. ["cn-hangzhou-i", "cn-hangzhou-h", "cn-hangzhou-j"]
                          items:
                            type: string
                          type: array
                      type: object
                    aws:
                      description: AWS is the configuration used when installing on
                        AWS.
                      properties:
                        additionalSecurityGroupIDs:
                          description: AdditionalSecurityGroupIDs contains IDs of
                            additional security groups for machines, where each ID
                            is presented in the format sg-xxxx.
                          items:
                            type: string
                          type: array
                        amiID:
                          description: AMIID is the AMI that should be used to boot
                            the ec2 instance. If set, the AMI should belong to the
                            same region as the cluster.
                          type: string
                        iamRole:
                          description: IAMRole is the name of the IAM Role to use
                            for the instance profile of the machine. Leave unset to
                            have the installer create the IAM Role on your behalf.
                          type: string
                        metadataService:
                          description: EC2MetadataOptions defines metadata service
                            interaction options for EC2 instances in the machine pool.
                          properties:
                            authentication:
                              description: Authentication determines whether or not
                                the host requires the use of authentication when interacting
                                with the metadata service. When using authentication,
                                this enforces v2 interaction method (IMDSv2) with
                                the metadata service. When omitted, this means the
                                user has no opinion and the value is left to the platform
                                to choose a good default, which is subject to change
                                over time. The current default is optional. At this
                                point this field represents `HttpTokens` parameter
                                from `InstanceMetadataOptionsRequest` structure in
                                AWS EC2 API https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_InstanceMetadataOptionsRequest.html
                              enum:
                              - Required
                              - Optional
                              type: string
                          type: object
                        rootVolume:
                          description: EC2RootVolume defines the root volume for EC2
                            instances in the machine pool.
                          properties:
                            iops:
                              description: IOPS defines the amount of provisioned
                                IOPS. (KiB/s). IOPS may only be set for io1, io2,
                                & gp3 volume types.
                              minimum: 0
                              type: integer
                            kmsKeyARN:
                              description: The KMS key that will be used to encrypt
                                the EBS volume. If no key is provided the default
                                KMS key for the account will be used. https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetEbsDefaultKmsKeyId.html
                              type: string
                            size:
                              description: Size defines the size of the volume in
                                gibibytes (GiB).
                              minimum: 0
                              type: integer
                            type:
                              description: Type defines the type of the volume.
                              type: string
                          required:
                          - size
                          - type
                          type: object
                        type:
                          description: InstanceType defines the ec2 instance type.
                            eg. m4-large
                          type: string
                        zones:
                          description: Zones is list of availability zones that can
                            be used.
                          items:
                            type: string
                          type: array
                      type: object
                    azure:
                      description: Azure is the configuration used when installing
                        on Azure.
                      properties:
                        encryptionAtHost:
                          description: EncryptionAtHost enables encryption at the
                            VM host.
                          type: boolean
                        osDisk:
                          description: OSDisk defines the storage for instance.
                          properties:
                            diskEncryptionSet:
                              description: DiskEncryptionSet defines a disk encryption
                                set.
                              properties:
                                name:
                                  description: Name is the name of the disk encryption
                                    set.
                                  type: string
                                resourceGroup:
                                  description: ResourceGroup defines the Azure resource
                                    group used by the disk encryption set.
                                  type: string
                                subscriptionId:
                                  description: SubscriptionID defines the Azure subscription
                                    the disk encryption set is in.
                                  type: string
                              required:
                              - name
                              - resourceGroup
                              - subscriptionId
                              type: object
                            diskSizeGB:
                              description: DiskSizeGB defines the size of disk in
                                GB.
                              format: int32
                              minimum: 0
                              type: integer
                            diskType:
                              description: DiskType defines the type of disk. For
                                control plane nodes, the valid values are Premium_LRS
                                and StandardSSD_LRS. Default is Premium_LRS.
                              enum:
                              - Standard_LRS
                              - Premium_LRS
                              - StandardSSD_LRS
                              type: string
                            securityProfile:
                              description: SecurityProfile specifies the security
                                profile for the managed disk.
                              properties:
                                diskEncryptionSet:
                                  description: DiskEncryptionSet specifies the customer
                                    managed disk encryption set resource id for the
                                    managed disk that is used for Customer Managed
                                    Key encrypted ConfidentialVM OS Disk and VMGuestState
                                    blob.
                                  properties:
                                    name:
                                      description: Name is the name of the disk encryption
                                        set.
                                      type: string
                                    resourceGroup:
                                      description: ResourceGroup defines the Azure
                                        resource group used by the disk encryption
                                        set.
                                      type: string
                                    subscriptionId:
                                      description: SubscriptionID defines the Azure
                                        subscription the disk encryption set is in.
                                      type: string
                                  required:
                                  - name
                                  - resourceGroup
                                  - subscriptionId
                                  type: object
                                securityEncryptionType:
                                  description: SecurityEncryptionType specifies the
                                    encryption type of the managed disk. It is set
                                    to DiskWithVMGuestState to encrypt the managed
                                    disk along with the VMGuestState blob, and to
                                    VMGuestStateOnly to encrypt the VMGuestState blob
                                    only. When set to VMGuestStateOnly, the VTpmEnabled
                                    should be set to true. When set to DiskWithVMGuestState,
                                    both SecureBootEnabled and VTpmEnabled should
                                    be set to true. It can be set only for Confidential
                                    VMs.
                                  enum:
                                  - VMGuestStateOnly
                                  - DiskWithVMGuestState
                                  type: string
                              type: object
                          required:
                          - diskSizeGB
                          type: object
                        osImage:
                          description: OSImage defines the image to use for the OS.
                          properties:
                            offer:
                              description: Offer is the offer of the image.
                              type: string
                            plan:
                              description: Plan is the purchase plan of the image.
                                If omitted, it defaults to "WithPurchasePlan".
                              enum:
                              - WithPurchasePlan
                              - NoPurchasePlan
                              type: string
                            publisher:
                              description: Publisher is the publisher of the image.
                              type: string
                            sku:
                              description: SKU is the SKU of the image.
                              type: string
                            version:
                              description: Version is the version of the image.
                              type: string
                          required:
                          - offer
                          - publisher
                          - sku
                          - version
                          type: object
                        settings:
                          description: Settings specify the security type and the
                            UEFI settings of the virtual machine. This field can be
                            set for Confidential VMs and Trusted Launch for VMs.
                          properties:
                            confidentialVM:
                              description: 'ConfidentialVM specifies the security
                                configuration of the virtual machine. For more information
                                regarding Confidential VMs, please refer to: https://learn.microsoft.com/azure/confidential-computing/confidential-vm-overview'
                              properties:
                                uefiSettings:
                                  description: UEFISettings specifies the security
                                    settings like secure boot and vTPM used while
                                    creating the virtual machine.
                                  properties:
                                    secureBoot:
                                      description: SecureBoot specifies whether secure
                                        boot should be enabled on the virtual machine.
                                        Secure Boot verifies the digital signature
                                        of all boot components and halts the boot
                                        process if signature verification fails. If
                                        omitted, the platform chooses a default, which
                                        is subject to change over time, currently
                                        that default is disabled.
                                      enum:
                                      - Enabled
                                      - Disabled
                                      type: string
                                    virtualizedTrustedPlatformModule:
                                      description: VirtualizedTrustedPlatformModule
                                        specifies whether vTPM should be enabled on
                                        the virtual machine. When enabled the virtualized
                                        trusted platform module measurements are used
                                        to create a known good boot integrity policy
                                        baseline. The integrity policy baseline is
                                        used for comparison with measurements from
                                        subsequent VM boots to determine if anything
                                        has changed. This is required to be set to
                                        enabled if the SecurityEncryptionType is defined.
                                        If omitted, the platform chooses a default,
                                        which is subject to change over time, currently
                                        that default is disabled.
                                      enum:
                                      - Enabled
                                      - Disabled
                                      type: string
                                  type: object
                              type: object
                            securityType:
                              description: 'SecurityType specifies the SecurityType
                                of the virtual machine. It has to be set to any specified
                                value to enable secure boot and vTPM. The default
                                behavior is: secure boot and vTPM will not be enabled
                                unless this property is set.'
                              enum:
                              - ConfidentialVM
                              - TrustedLaunch
                              type: string
                            trustedLaunch:
                              description: 'TrustedLaunch specifies the security configuration
                                of the virtual machine. For more information regarding
                                TrustedLaunch for VMs, please refer to: https://learn.microsoft.com/azure/virtual-machines/trusted-launch'
                              properties:
                                uefiSettings:
                                  description: UEFISettings specifies the security
                                    settings like secure boot and vTPM used while
                                    creating the virtual machine.
                                  properties:
                                    secureBoot:
                                      description: SecureBoot specifies whether secure
                                        boot should be enabled on the virtual machine.
                                        Secure Boot verifies the digital signature
                                        of all boot components and halts the boot
                                        process if signature verification fails. If
                                        omitted, the platform chooses a default, which
                                        is subject to change over time, currently
                                        that default is disabled.
                                      enum:
                                      - Enabled
                                      - Disabled
                                      type: string
                                    virtualizedTrustedPlatformModule:
                                      description: VirtualizedTrustedPlatformModule
                                        specifies whether vTPM should be enabled on
                                        the virtual machine. When enabled the virtualized
                                        trusted platform module measurements are used
                                        to create a known good boot integrity policy
                                        baseline. The integrity policy baseline is
                                        used for comparison with measurements from
                                        subsequent VM boots to determine if anything
                                        has changed. This is required to be set to
                                        enabled if the SecurityEncryptionType is defined.
                                        If omitted, the platform chooses a default,
                                        which is subject to change over time, currently
                                        that default is disabled.
                                      enum:
                                      - Enabled
                                      - Disabled
                                      type: string
                                  type: object
                              type: object
                          type: object
                        type:
                          description: InstanceType defines the azure instance type.
                            eg. Standard_DS_V2
                          type: string
                        ultraSSDCapability:
                          description: ultraSSDCapability defines if the instance
                            should use Ultra SSD disks.
                          enum:
                          - Enabled
                          - Disabled
                          type: string
                        vmNetworkingType:
                          description: 'VMNetworkingType specifies whether to enable
                            accelerated networking. Accelerated networking enables
                            single root I/O virtualization (SR-IOV) to a VM, greatly
                            improving its networking performance. eg. values: "Accelerated",
                            "Basic"'
                          enum:
                          - Accelerated
                          - Basic
                          type: string
                        zones:
                          description: Zones is list of availability zones that can
                            be used. eg. ["1", "2", "3"]
                          items:
                            type: string
                          type: array
                      type: object
                    baremetal:
                      description: BareMetal is the configuration used when installing
                        on bare metal.
                      type: object
                    gcp:
                      description: GCP is the configuration used when installing on
                        GCP
                      properties:
                        confidentialCompute:
                          description: ConfidentialCompute Defines whether the instance
                            should have confidential compute enabled. If enabled OnHostMaintenance
                            is required to be set to "Terminate". If omitted, the
                            platform chooses a default, which is subject to change
                            over time, currently that default is false.
                          enum:
                          - Enabled
                          - Disabled
                          type: string
                        onHostMaintenance:
                          description: OnHostMaintenance determines the behavior when
                            a maintenance event occurs that might cause the instance
                            to reboot. Allowed values are "Migrate" and "Terminate".
                            If omitted, the platform chooses a default, which is subject
                            to change over time, currently that default is "Migrate".
                          enum:
                          - Migrate
                          - Terminate
                          type: string
                        osDisk:
                          description: OSDisk defines the storage for instance.
                          properties:
                            DiskSizeGB:
                              description: DiskSizeGB defines the size of disk in
                                GB.
                              format: int64
                              maximum: 65536
                              minimum: 16
                              type: integer
                            diskType:
                              description: DiskType defines the type of disk. For
                                control plane nodes, the valid value is pd-ssd.
                              enum:
                              - pd-balanced
                              - pd-ssd
                              - pd-standard
                              type: string
                            encryptionKey:
                              description: EncryptionKey defines the KMS key to be
                                used to encrypt the disk.
                              properties:
                                kmsKey:
                                  description: KMSKey is a reference to a KMS Key
                                    to use for the encryption.
                                  properties:
                                    keyRing:
                                      description: KeyRing is the name of the KMS
                                        Key Ring which the KMS Key belongs to.
                                      type: string
                                    location:
                                      description: Location is the GCP location in
                                        which the Key Ring exists.
                                      type: string
                                    name:
                                      description: Name is the name of the customer
                                        managed encryption key to be used for the
                                        disk encryption.
                                      type: string
                                    projectID:
                                      description: ProjectID is the ID of the Project
                                        in which the KMS Key Ring exists. Defaults
                                        to the VM ProjectID if not set.
                                      type: string
                                  required:
                                  - keyRing
                                  - location
                                  - name
                                  type: object
                                kmsKeyServiceAccount:
                                  description: KMSKeyServiceAccount is the service
                                    account being used for the encryption request
                                    for the given KMS key. If absent, the Compute
                                    Engine default service account is used. See https://cloud.google.com/compute/docs/access/service-accounts#compute_engine_service_account
                                    for details on the default service account.
                                  type: string
                              type: object
                          required:
                          - DiskSizeGB
                          type: object
                        osImage:
                          description: OSImage defines a custom image for instance.
                          properties:
                            name:
                              description: Name defines the name of the image.
                              type: string
                            project:
                              description: Project defines the name of the project
                                containing the image.
                              type: string
                          required:
                          - name
                          - project
                          type: object
                        secureBoot:
                          description: SecureBoot Defines whether the instance should
                            have secure boot enabled. secure boot Verify the digital
                            signature of all boot components, and halt the boot process
                            if signature verification fails. If omitted, the platform
                            chooses a default, which is subject to change over time,
                            currently that default is false.
                          enum:
                          - Enabled
                          - Disabled
                          type: string
                        serviceAccount:
                          description: ServiceAccount is the email of a gcp service
                            account to be used for shared vpc installations. The provided
                            service account will be attached to control-plane nodes
                            in order to provide the permissions required by the cloud
                            provider in the host project. This field is only supported
                            in the control-plane machinepool.
                          type: string
                        tags:
                          description: Tags defines a set of network tags which will
                            be added to instances in the machineset
                          items:
                            type: string
                          type: array
                        type:
                          description: InstanceType defines the GCP instance type.
                            eg. n1-standard-4
                          type: string
                        zones:
                          description: Zones is list of availability zones that can
                            be used.
                          items:
                            type: string
                          type: array
                      type: object
                    ibmcloud:
                      description: IBMCloud is the configuration used when installing
                        on IBM Cloud.
                      properties:
                        bootVolume:
                          description: BootVolume is the configuration for the machine's
                            boot volume.
                          properties:
                            encryptionKey:
                              description: EncryptionKey is the CRN referencing a
                                Key Protect or Hyper Protect Crypto Services key to
                                use for volume encryption. If not specified, a provider
                                managed encryption key will be used.
                              type: string
                          type: object
                        dedicatedHosts:
                          description: DedicatedHosts is the configuration for the
                            machine's dedicated host and profile.
                          items:
                            description: DedicatedHost stores the configuration for
                              the machine's dedicated host platform.
                            properties:
                              name:
                                description: Name is the name of the dedicated host
                                  to provision the machine on. If specified, machines
                                  will be created on pre-existing dedicated host.
                                type: string
                              profile:
                                description: Profile is the profile ID for the dedicated
                                  host. If specified, new dedicated host will be created
                                  for machines.
                                type: string
                            type: object
                          type: array
                        type:
                          description: InstanceType is the VSI machine profile.
                          type: string
                        zones:
                          description: Zones is the list of availability zones used
                            for machines in the pool.
                          items:
                            type: string
                          type: array
                      type: object
                    libvirt:
                      description: Libvirt is the configuration used when installing
                        on libvirt.
                      type: object
                    nutanix:
                      description: Nutanix is the configuration used when installing
                        on Nutanix.
                      properties:
                        bootType:
                          description: BootType indicates the boot type (Legacy, UEFI
                            or SecureBoot) the Machine's VM uses to boot. If this
                            field is empty or omitted, the VM will use the default
                            boot type "Legacy" to boot. "SecureBoot" depends on "UEFI"
                            boot, i.e., enabling "SecureBoot" means that "UEFI" boot
                            is also enabled.
                          enum:
                          - ""
                          - Legacy
                          - UEFI
                          - SecureBoot
                          type: string
                        categories:
                          description: Categories optionally adds one or more prism
                            categories (each with key and value) for the Machine's
                            VM to associate with. All the category key and value pairs
                            specified must already exist in the prism central.
                          items:
                            description: NutanixCategory identifies a pair of prism
                              category key and value
                            properties:
                              key:
                                description: key is the prism category key name
                                maxLength: 64
                                minLength: 1
                                type: string
                              value:
                                description: value is the prism category value associated
                                  with the key
                                maxLength: 64
                                minLength: 1
                                type: string
                            required:
                            - key
                            - value
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - key
                          x-kubernetes-list-type: map
                        coresPerSocket:
                          description: 'NumCoresPerSocket is the number of cores per
                            socket in a vm. The number of vCPUs on the vm will be
                            NumCPUs times NumCoresPerSocket. For example: 4 CPUs and
                            4 Cores per socket will result in 16 VPUs. The AHV scheduler
                            treats socket and core allocation exactly the same so
                            there is no benefit to configuring cores over CPUs.'
                          format: int64
                          type: integer
                        cpus:
                          description: NumCPUs is the total number of virtual processor
                            cores to assign a vm.
                          format: int64
                          type: integer
                        failureDomains:
                          description: FailureDomains optionally configures a list
                            of failure domain names that will be applied to the MachinePool
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        memoryMiB:
                          description: Memory is the size of a VM's memory in MiB.
                          format: int64
                          type: integer
                        osDisk:
                          description: OSDisk defines the storage for instance.
                          properties:
                            diskSizeGiB:
                              description: DiskSizeGiB defines the size of disk in
                                GiB.
                              format: int64
                              type: integer
                          type: object
                        project:
                          description: Project optionally identifies a Prism project
                            for the Machine's VM to associate with.
                          properties:
                            name:
                              description: name is the resource name in the PC
                              type: string
                            type:
                              description: Type is the identifier type to use for
                                this resource.
                              enum:
                              - uuid
                              - name
                              type: string
                            uuid:
                              description: uuid is the UUID of the resource in the
                                PC.
                              type: string
                          required:
                          - type
                          type: object
                      type: object
                    openstack:
                      description: OpenStack is the configuration used when installing
                        on OpenStack.
                      properties:
                        additionalNetworkIDs:
                          description: AdditionalNetworkIDs contains IDs of additional
                            networks for machines, where each ID is presented in UUID
                            v4 format. Allowed address pairs won't be created for
                            the additional networks.
                          items:
                            type: string
                          type: array
                        additionalSecurityGroupIDs:
                          description: AdditionalSecurityGroupIDs contains IDs of
                            additional security groups for machines, where each ID
                            is presented in UUID v4 format.
                          items:
                            type: string
                          type: array
                        rootVolume:
                          description: RootVolume defines the root volume for instances
                            in the machine pool. The instances use ephemeral disks
                            if not set.
                          properties:
                            size:
                              description: Size defines the size of the volume in
                                gibibytes (GiB). Required
                              type: integer
                            type:
                              description: 'Type defines the type of the volume. Deprecated:
                                Use Types instead.'
                              type: string
                            types:
                              description: Types is the list of the volume types of
                                the root volumes. This is mutually exclusive with
                                Type.
                              items:
                                type: string
                              type: array
                            zones:
                              description: Zones is the list of availability zones
                                where the root volumes should be deployed. If no zones
                                are provided, all instances will be deployed on OpenStack
                                Cinder default availability zone
                              items:
                                type: string
                              type: array
                          required:
                          - size
                          - types
                          type: object
                        serverGroupPolicy:
                          description: ServerGroupPolicy will be used to create the
                            Server Group that will contain all the machines of this
                            MachinePool. Defaults to "soft-anti-affinity".
                          enum:
                          - ""
                          - affinity
                          - soft-affinity
                          - anti-affinity
                          - soft-anti-affinity
                          type: string
                        type:
                          description: FlavorName defines the OpenStack Nova flavor.
                            eg. m1.large
                          type: string
                        zones:
                          description: Zones is the list of availability zones where
                            the instances should be deployed. If no zones are provided,
                            all instances will be deployed on OpenStack Nova default
                            availability zone
                          items:
                            type: string
                          type: array
                      required:
                      - type
                      type: object
                    ovirt:
                      description: Ovirt is the configuration used when installing
                        on oVirt.
                      properties:
                        affinityGroupsNames:
                          description: AffinityGroupsNames contains a list of oVirt
                            affinity group names that the newly created machines will
                            join. The affinity groups should exist on the oVirt cluster
                            or created by the OpenShift installer.
                          items:
                            type: string
                          type: array
                        autoPinningPolicy:
                          description: AutoPinningPolicy defines the policy to automatically
                            set the CPU and NUMA including pinning to the host for
                            the instance. When the field is omitted the default will
                            be "none".
                          enum:
                          - none
                          - resize_and_pin
                          type: string
                        clone:
                          description: "Clone makes sure that the disks are cloned
                            from the template and are not linked. Defaults to true
                            for high performance and server VM types, false for desktop
                            types. \n Note: this option is not documented in the OpenShift
                            documentation. This is intentional as it has sane defaults
                            that shouldn't be changed unless needed for debugging
                            or resolving issues in cooperation with Red Hat support."
                          type: boolean
                        cpu:
                          description: CPU defines the VM CPU.
                          properties:
                            cores:
                              description: Cores is the number of cores per socket.
                                Total CPUs is (Sockets * Cores)
                              format: int32
                              type: integer
                            sockets:
                              description: Sockets is the number of sockets for a
                                VM. Total CPUs is (Sockets * Cores)
                              format: int32
                              type: integer
                            threads:
                              description: Threads is the number of CPU threads.
                              format: int32
                              type: integer
                          required:
                          - cores
                          - sockets
                          - threads
                          type: object
                        format:
                          description: Format is the disk format that the disks are
                            in. Can be "cow" or "raw". "raw" disables several features
                            that may be needed, such as incremental backups.
                          enum:
                          - ""
                          - raw
                          - cow
                          type: string
                        hugepages:
                          description: Hugepages is the size of a VM's hugepages to
                            use in KiBs.
                          enum:
                          - 2048
                          - 1048576
                          format: int32
                          type: integer
                        instanceTypeID:
                          description: InstanceTypeID defines the VM instance type
                            and overrides the hardware parameters of the created VM,
                            including cpu and memory. If InstanceTypeID is passed,
                            all memory and cpu variables will be ignored.
                          type: string
                        memoryMB:
                          description: MemoryMB is the size of a VM's memory in MiBs.
                          format: int32
                          type: integer
                        osDisk:
                          description: OSDisk is the the root disk of the node.
                          properties:
                            sizeGB:
                              description: SizeGB size of the bootable disk in GiB.
                              format: int64
                              type: integer
                          required:
                          - sizeGB
                          type: object
                        sparse:
                          description: Sparse indicates that sparse provisioning should
                            be used and disks should be not preallocated.
                          type: boolean
                        vmType:
                          description: VMType defines the workload type of the VM.
                          enum:
                          - ""
                          - desktop
                          - server
                          - high_performance
                          type: string
                      type: object
                    powervs:
                      description: PowerVS is the configuration used when installing
                        on IBM Power VS.
                      properties:
                        memoryGiB:
                          description: memoryGiB is the size of a virtual machine's
                            memory, in GiB.
                          format: int32
                          type: integer
                        procType:
                          description: ProcType defines the processor sharing model
                            for the instance. Must be one of {Capped, Dedicated, Shared}.
                          enum:
                          - Dedicated
                          - Shared
                          - Capped
                          - ""
                          type: string
                        processors:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Processors defines the processing units for
                            the instance.
                          x-kubernetes-int-or-string: true
                        smtLevel:
                          description: SMTLevel specifies the level of SMT to set
                            the control plane and worker nodes to.
                          type: string
                        sysType:
                          description: SysType defines the system type for instance.
                          type: string
                        volumeIDs:
                          description: VolumeIDs is the list of volumes attached to
                            the instance.
                          items:
                            type: string
                          type: array
                      type: object
                    vsphere:
                      description: VSphere is the configuration used when installing
                        on vSphere.
                      properties:
                        coresPerSocket:
                          description: NumCoresPerSocket is the number of cores per
                            socket in a vm. The number of vCPUs on the vm will be
                            NumCPUs/NumCoresPerSocket.
                          format: int32
                          type: integer
                        cpus:
                          description: NumCPUs is the total number of virtual processor
                            cores to assign a vm.
                          format: int32
                          type: integer
                        memoryMB:
                          description: Memory is the size of a VM's memory in MB.
                          format: int64
                          type: integer
                        osDisk:
                          description: OSDisk defines the storage for instance.
                          properties:
                            diskSizeGB:
                              description: DiskSizeGB defines the size of disk in
                                GB.
                              format: int32
                              type: integer
                          type: object
                        zones:
                          description: Zones defines available zones Zones is available
                            in TechPreview.
                          items:
                            type: string
                          type: array
                      type: object
                  type: object
                replicas:
                  description: Replicas is the machine count for the machine pool.
                  format: int64
                  type: integer
              required:
              - name
              - platform
              type: object
            type: array
          controlPlane:
            description: ControlPlane is the configuration for the machines that comprise
              the control plane.
            properties:
              architecture:
                default: amd64
                description: Architecture is the instruction set architecture of the
                  machine pool. Defaults to amd64.
                enum:
                - ""
                - amd64
                type: string
              hyperthreading:
                default: Enabled
                description: Hyperthreading determines the mode of hyperthreading
                  that machines in the pool will utilize. Default is for hyperthreading
                  to be enabled.
                enum:
                - ""
                - Enabled
                - Disabled
                type: string
              name:
                description: Name is the name of the machine pool. For the control
                  plane machine pool, the name will always be "master". For the compute
                  machine pools, the only valid name is "worker".
                type: string
              platform:
                description: Platform is configuration for machine pool specific to
                  the platform.
                properties:
                  alibabacloud:
                    description: AlibabaCloud is the configuration used when installing
                      on Alibaba Cloud.
                    properties:
                      imageID:
                        description: ImageID is the Image ID that should be used to
                          create ECS instance. If set, the ImageID should belong to
                          the same region as the cluster.
                        type: string
                      instanceType:
                        description: InstanceType defines the ECS instance type. eg.
                          ecs.g6.large
                        type: string
                      systemDiskCategory:
                        description: SystemDiskCategory defines the category of the
                          system disk.
                        enum:
                        - ""
                        - cloud_efficiency
                        - cloud_essd
                        type: string
                      systemDiskSize:
                        description: SystemDiskSize defines the size of the system
                          disk in gibibytes (GiB).
                        minimum: 120
                        type: integer
                      zones:
                        description: Zones is list of availability zones that can
                          be used. eg. ["cn-hangzhou-i", "cn-hangzhou-h", "cn-hangzhou-j"]
                        items:
                          type: string
                        type: array
                    type: object
                  aws:
                    description: AWS is the configuration used when installing on
                      AWS.
                    properties:
                      additionalSecurityGroupIDs:
                        description: AdditionalSecurityGroupIDs contains IDs of additional
                          security groups for machines, where each ID is presented
                          in the format sg-xxxx.
                        items:
                          type: string
                        type: array
                      amiID:
                        description: AMIID is the AMI that should be used to boot
                          the ec2 instance. If set, the AMI should belong to the same
                          region as the cluster.
                        type: string
                      iamRole:
                        description: IAMRole is the name of the IAM Role to use for
                          the instance profile of the machine. Leave unset to have
                          the installer create the IAM Role on your behalf.
                        type: string
                      metadataService:
                        description: EC2MetadataOptions defines metadata service interaction
                          options for EC2 instances in the machine pool.
                        properties:
                          authentication:
                            description: Authentication determines whether or not
                              the host requires the use of authentication when interacting
                              with the metadata service. When using authentication,
                              this enforces v2 interaction method (IMDSv2) with the
                              metadata service. When omitted, this means the user
                              has no opinion and the value is left to the platform
                              to choose a good default, which is subject to change
                              over time. The current default is optional. At this
                              point this field represents `HttpTokens` parameter from
                              `InstanceMetadataOptionsRequest` structure in AWS EC2
                              API https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_InstanceMetadataOptionsRequest.html
                            enum:
                            - Required
                            - Optional
                            type: string
                        type: object
                      rootVolume:
                        description: EC2RootVolume defines the root volume for EC2
                          instances in the machine pool.
                        properties:
                          iops:
                            description: IOPS defines the amount of provisioned IOPS.
                              (KiB/s). IOPS may only be set for io1, io2, & gp3 volume
                              types.
                            minimum: 0
                            type: integer
                          kmsKeyARN:
                            description: The KMS key that will be used to encrypt
                              the EBS volume. If no key is provided the default KMS
                              key for the account will be used. https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetEbsDefaultKmsKeyId.html
                            type: string
                          size:
                            description: Size defines the size of the volume in gibibytes
                              (GiB).
                            minimum: 0
                            type: integer
                          type:
                            description: Type defines the type of the volume.
                            type: string
                        required:
                        - size
                        - type
                        type: object
                      type:
                        description: InstanceType defines the ec2 instance type. eg.
                          m4-large
                        type: string
                      zones:
                        description: Zones is list of availability zones that can
                          be used.
                        items:
                          type: string
                        type: array
                    type: object
                  azure:
                    description: Azure is the configuration used when installing on
                      Azure.
                    properties:
                      encryptionAtHost:
                        description: EncryptionAtHost enables encryption at the VM
                          host.
                        type: boolean
                      osDisk:
                        description: OSDisk defines the storage for instance.
                        properties:
                          diskEncryptionSet:
                            description: DiskEncryptionSet defines a disk encryption
                              set.
                            properties:
                              name:
                                description: Name is the name of the disk encryption
                                  set.
                                type: string
                              resourceGroup:
                                description: ResourceGroup defines the Azure resource
                                  group used by the disk encryption set.
                                type: string
                              subscriptionId:
                                description: SubscriptionID defines the Azure subscription
                                  the disk encryption set is in.
                                type: string
                            required:
                            - name
                            - resourceGroup
                            - subscriptionId
                            type: object
                          diskSizeGB:
                            description: DiskSizeGB defines the size of disk in GB.
                            format: int32
                            minimum: 0
                            type: integer
                          diskType:
                            description: DiskType defines the type of disk. For control
                              plane nodes, the valid values are Premium_LRS and StandardSSD_LRS.
                              Default is Premium_LRS.
                            enum:
                            - Standard_LRS
                            - Premium_LRS
                            - StandardSSD_LRS
                            type: string
                          securityProfile:
                            description: SecurityProfile specifies the security profile
                              for the managed disk.
                            properties:
                              diskEncryptionSet:
                                description: DiskEncryptionSet specifies the customer
                                  managed disk encryption set resource id for the
                                  managed disk that is used for Customer Managed Key
                                  encrypted ConfidentialVM OS Disk and VMGuestState
                                  blob.
                                properties:
                                  name:
                                    description: Name is the name of the disk encryption
                                      set.
                                    type: string
                                  resourceGroup:
                                    description: ResourceGroup defines the Azure resource
                                      group used by the disk encryption set.
                                    type: string
                                  subscriptionId:
                                    description: SubscriptionID defines the Azure
                                      subscription the disk encryption set is in.
                                    type: string
                                required:
                                - name
                                - resourceGroup
                                - subscriptionId
                                type: object
                              securityEncryptionType:
                                description: SecurityEncryptionType specifies the
                                  encryption type of the managed disk. It is set to
                                  DiskWithVMGuestState to encrypt the managed disk
                                  along with the VMGuestState blob, and to VMGuestStateOnly
                                  to encrypt the VMGuestState blob only. When set
                                  to VMGuestStateOnly, the VTpmEnabled should be set
                                  to true. When set to DiskWithVMGuestState, both
                                  SecureBootEnabled and VTpmEnabled should be set
                                  to true. It can be set only for Confidential VMs.
                                enum:
                                - VMGuestStateOnly
                                - DiskWithVMGuestState
                                type: string
                            type: object
                        required:
                        - diskSizeGB
                        type: object
                      osImage:
                        description: OSImage defines the image to use for the OS.
                        properties:
                          offer:
                            description: Offer is the offer of the image.
                            type: string
                          plan:
                            description: Plan is the purchase plan of the image. If
                              omitted, it defaults to "WithPurchasePlan".
                            enum:
                            - WithPurchasePlan
                            - NoPurchasePlan
                            type: string
                          publisher:
                            description: Publisher is the publisher of the image.
                            type: string
                          sku:
                            description: SKU is the SKU of the image.
                            type: string
                          version:
                            description: Version is the version of the image.
                            type: string
                        required:
                        - offer
                        - publisher
                        - sku
                        - version
                        type: object
                      settings:
                        description: Settings specify the security type and the UEFI
                          settings of the virtual machine. This field can be set for
                          Confidential VMs and Trusted Launch for VMs.
                        properties:
                          confidentialVM:
                            description: 'ConfidentialVM specifies the security configuration
                              of the virtual machine. For more information regarding
                              Confidential VMs, please refer to: https://learn.microsoft.com/azure/confidential-computing/confidential-vm-overview'
                            properties:
                              uefiSettings:
                                description: UEFISettings specifies the security settings
                                  like secure boot and vTPM used while creating the
                                  virtual machine.
                                properties:
                                  secureBoot:
                                    description: SecureBoot specifies whether secure
                                      boot should be enabled on the virtual machine.
                                      Secure Boot verifies the digital signature of
                                      all boot components and halts the boot process
                                      if signature verification fails. If omitted,
                                      the platform chooses a default, which is subject
                                      to change over time, currently that default
                                      is disabled.
                                    enum:
                                    - Enabled
                                    - Disabled
                                    type: string
                                  virtualizedTrustedPlatformModule:
                                    description: VirtualizedTrustedPlatformModule
                                      specifies whether vTPM should be enabled on
                                      the virtual machine. When enabled the virtualized
                                      trusted platform module measurements are used
                                      to create a known good boot integrity policy
                                      baseline. The integrity policy baseline is used
                                      for comparison with measurements from subsequent
                                      VM boots to determine if anything has changed.
                                      This is required to be set to enabled if the
                                      SecurityEncryptionType is defined. If omitted,
                                      the platform chooses a default, which is subject
                                      to change over time, currently that default
                                      is disabled.
                                    enum:
                                    - Enabled
                                    - Disabled
                                    type: string
                                type: object
                            type: object
                          securityType:
                            description: 'SecurityType specifies the SecurityType
                              of the virtual machine. It has to be set to any specified
                              value to enable secure boot and vTPM. The default behavior
                              is: secure boot and vTPM will not be enabled unless
                              this property is set.'
                            enum:
                            - ConfidentialVM
                            - TrustedLaunch
                            type: string
                          trustedLaunch:
                            description: 'TrustedLaunch specifies the security configuration
                              of the virtual machine. For more information regarding
                              TrustedLaunch for VMs, please refer to: https://learn.microsoft.com/azure/virtual-machines/trusted-launch'
                            properties:
                              uefiSettings:
                                description: UEFISettings specifies the security settings
                                  like secure boot and vTPM used while creating the
                                  virtual machine.
                                properties:
                                  secureBoot:
                                    description: SecureBoot specifies whether secure
                                      boot should be enabled on the virtual machine.
                                      Secure Boot verifies the digital signature of
                                      all boot components and halts the boot process
                                      if signature verification fails. If omitted,
                                      the platform chooses a default, which is subject
                                      to change over time, currently that default
                                      is disabled.
                                    enum:
                                    - Enabled
                                    - Disabled
                                    type: string
                                  virtualizedTrustedPlatformModule:
                                    description: VirtualizedTrustedPlatformModule
                                      specifies whether vTPM should be enabled on
                                      the virtual machine. When enabled the virtualized
                                      trusted platform module measurements are used
                                      to create a known good boot integrity policy
                                      baseline. The integrity policy baseline is used
                                      for comparison with measurements from subsequent
                                      VM boots to determine if anything has changed.
                                      This is required to be set to enabled if the
                                      SecurityEncryptionType is defined. If omitted,
                                      the platform chooses a default, which is subject
                                      to change over time, currently that default
                                      is disabled.
                                    enum:
                                    - Enabled
                                    - Disabled
                                    type: string
                                type: object
                            type: object
                        type: object
                      type:
                        description: InstanceType defines the azure instance type.
                          eg. Standard_DS_V2
                        type: string
                      ultraSSDCapability:
                        description: ultraSSDCapability defines if the instance should
                          use Ultra SSD disks.
                        enum:
                        - Enabled
                        - Disabled
                        type: string
                      vmNetworkingType:
                        description: 'VMNetworkingType specifies whether to enable
                          accelerated networking. Accelerated networking enables single
                          root I/O virtualization (SR-IOV) to a VM, greatly improving
                          its networking performance. eg. values: "Accelerated", "Basic"'
                        enum:
                        - Accelerated
                        - Basic
                        type: string
                      zones:
                        description: Zones is list of availability zones that can
                          be used. eg. ["1", "2", "3"]
                        items:
                          type: string
                        type: array
                    type: object
                  baremetal:
                    description: BareMetal is the configuration used when installing
                      on bare metal.
                    type: object
                  gcp:
                    description: GCP is the configuration used when installing on
                      GCP
                    properties:
                      confidentialCompute:
                        description: ConfidentialCompute Defines whether the instance
                          should have confidential compute enabled. If enabled OnHostMaintenance
                          is required to be set to "Terminate". If omitted, the platform
                          chooses a default, which is subject to change over time,
                          currently that default is false.
                        enum:
                        - Enabled
                        - Disabled
                        type: string
                      onHostMaintenance:
                        description: OnHostMaintenance determines the behavior when
                          a maintenance event occurs that might cause the instance
                          to reboot. Allowed values are "Migrate" and "Terminate".
                          If omitted, the platform chooses a default, which is subject
                          to change over time, currently that default is "Migrate".
                        enum:
                        - Migrate
                        - Terminate
                        type: string
                      osDisk:
                        description: OSDisk defines the storage for instance.
                        properties:
                          DiskSizeGB:
                            description: DiskSizeGB defines the size of disk in GB.
                            format: int64
                            maximum: 65536
                            minimum: 16
                            type: integer
                          diskType:
                            description: DiskType defines the type of disk. For control
                              plane nodes, the valid value is pd-ssd.
                            enum:
                            - pd-balanced
                            - pd-ssd
                            - pd-standard
                            type: string
                          encryptionKey:
                            description: EncryptionKey defines the KMS key to be used
                              to encrypt the disk.
                            properties:
                              kmsKey:
                                description: KMSKey is a reference to a KMS Key to
                                  use for the encryption.
                                properties:
                                  keyRing:
                                    description: KeyRing is the name of the KMS Key
                                      Ring which the KMS Key belongs to.
                                    type: string
                                  location:
                                    description: Location is the GCP location in which
                                      the Key Ring exists.
                                    type: string
                                  name:
                                    description: Name is the name of the customer
                                      managed encryption key to be used for the disk
                                      encryption.
                                    type: string
                                  projectID:
                                    description: ProjectID is the ID of the Project
                                      in which the KMS Key Ring exists. Defaults to
                                      the VM ProjectID if not set.
                                    type: string
                                required:
                                - keyRing
                                - location
                                - name
                                type: object
                              kmsKeyServiceAccount:
                                description: KMSKeyServiceAccount is the service account
                                  being used for the encryption request for the given
                                  KMS key. If absent, the Compute Engine default service
                                  account is used. See https://cloud.google.com/compute/docs/access/service-accounts#compute_engine_service_account
                                  for details on the default service account.
                                type: string
                            type: object
                        required:
                        - DiskSizeGB
                        type: object
                      osImage:
                        description: OSImage defines a custom image for instance.
                        properties:
                          name:
                            description: Name defines the name of the image.
                            type: string
                          project:
                            description: Project defines the name of the project containing
                              the image.
                            type: string
                        required:
                        - name
                        - project
                        type: object
                      secureBoot:
                        description: SecureBoot Defines whether the instance should
                          have secure boot enabled. secure boot Verify the digital
                          signature of all boot components, and halt the boot process
                          if signature verification fails. If omitted, the platform
                          chooses a default, which is subject to change over time,
                          currently that default is false.
                        enum:
                        - Enabled
                        - Disabled
                        type: string
                      serviceAccount:
                        description: ServiceAccount is the email of a gcp service
                          account to be used for shared vpc installations. The provided
                          service account will be attached to control-plane nodes
                          in order to provide the permissions required by the cloud
                          provider in the host project. This field is only supported
                          in the control-plane machinepool.
                        type: string
                      tags:
                        description: Tags defines a set of network tags which will
                          be added to instances in the machineset
                        items:
                          type: string
                        type: array
                      type:
                        description: InstanceType defines the GCP instance type. eg.
                          n1-standard-4
                        type: string
                      zones:
                        description: Zones is list of availability zones that can
                          be used.
                        items:
                          type: string
                        type: array
                    type: object
                  ibmcloud:
                    description: IBMCloud is the configuration used when installing
                      on IBM Cloud.
                    properties:
                      bootVolume:
                        description: BootVolume is the configuration for the machine's
                          boot volume.
                        properties:
                          encryptionKey:
                            description: EncryptionKey is the CRN referencing a Key
                              Protect or Hyper Protect Crypto Services key to use
                              for volume encryption. If not specified, a provider
                              managed encryption key will be used.
                            type: string
                        type: object
                      dedicatedHosts:
                        description: DedicatedHosts is the configuration for the machine's
                          dedicated host and profile.
                        items:
                          description: DedicatedHost stores the configuration for
                            the machine's dedicated host platform.
                          properties:
                            name:
                              description: Name is the name of the dedicated host
                                to provision the machine on. If specified, machines
                                will be created on pre-existing dedicated host.
                              type: string
                            profile:
                              description: Profile is the profile ID for the dedicated
                                host. If specified, new dedicated host will be created
                                for machines.
                              type: string
                          type: object
                        type: array
                      type:
                        description: InstanceType is the VSI machine profile.
                        type: string
                      zones:
                        description: Zones is the list of availability zones used
                          for machines in the pool.
                        items:
                          type: string
                        type: array
                    type: object
                  libvirt:
                    description: Libvirt is the configuration used when installing
                      on libvirt.
                    type: object
                  nutanix:
                    description: Nutanix is the configuration used when installing
                      on Nutanix.
                    properties:
                      bootType:
                        description: BootType indicates the boot type (Legacy, UEFI
                          or SecureBoot) the Machine's VM uses to boot. If this field
                          is empty or omitted, the VM will use the default boot type
                          "Legacy" to boot. "SecureBoot" depends on "UEFI" boot, i.e.,
                          enabling "SecureBoot" means that "UEFI" boot is also enabled.
                        enum:
                        - ""
                        - Legacy
                        - UEFI
                        - SecureBoot
                        type: string
                      categories:
                        description: Categories optionally adds one or more prism
                          categories (each with key and value) for the Machine's VM
                          to associate with. All the category key and value pairs
                          specified must already exist in the prism central.
                        items:
                          description: NutanixCategory identifies a pair of prism
                            category key and value
                          properties:
                            key:
                              description: key is the prism category key name
                              maxLength: 64
                              minLength: 1
                              type: string
                            value:
                              description: value is the prism category value associated
                                with the key
                              maxLength: 64
                              minLength: 1
                              type: string
                          required:
                          - key
                          - value
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - key
                        x-kubernetes-list-type: map
                      coresPerSocket:
                        description: 'NumCoresPerSocket is the number of cores per
                          socket in a vm. The number of vCPUs on the vm will be NumCPUs
                          times NumCoresPerSocket. For example: 4 CPUs and 4 Cores
                          per socket will result in 16 VPUs. The AHV scheduler treats
                          socket and core allocation exactly the same so there is
                          no benefit to configuring cores over CPUs.'
                        format: int64
                        type: integer
                      cpus:
                        description: NumCPUs is the total number of virtual processor
                          cores to assign a vm.
                        format: int64
                        type: integer
                      failureDomains:
                        description: FailureDomains optionally configures a list of
                          failure domain names that will be applied to the MachinePool
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                      memoryMiB:
                        description: Memory is the size of a VM's memory in MiB.
                        format: int64
                        type: integer
                      osDisk:
                        description: OSDisk defines the storage for instance.
                        properties:
                          diskSizeGiB:
                            description: DiskSizeGiB defines the size of disk in GiB.
                            format: int64
                            type: integer
                        type: object
                      project:
                        description: Project optionally identifies a Prism project
                          for the Machine's VM to associate with.
                        properties:
                          name:
                            description: name is the resource name in the PC
                            type: string
                          type:
                            description: Type is the identifier type to use for this
                              resource.
                            enum:
                            - uuid
                            - name
                            type: string
                          uuid:
                            description: uuid is the UUID of the resource in the PC.
                            type: string
                        required:
                        - type
                        type: object
                    type: object
                  openstack:
                    description: OpenStack is the configuration used when installing
                      on OpenStack.
                    properties:
                      additionalNetworkIDs:
                        description: AdditionalNetworkIDs contains IDs of additional
                          networks for machines, where each ID is presented in UUID
                          v4 format. Allowed address pairs won't be created for the
                          additional networks.
                        items:
                          type: string
                        type: array
                      additionalSecurityGroupIDs:
                        description: AdditionalSecurityGroupIDs contains IDs of additional
                          security groups for machines, where each ID is presented
                          in UUID v4 format.
                        items:
                          type: string
                        type: array
                      rootVolume:
                        description: RootVolume defines the root volume for instances
                          in the machine pool. The instances use ephemeral disks if
                          not set.
                        properties:
                          size:
                            description: Size defines the size of the volume in gibibytes
                              (GiB). Required
                            type: integer
                          type:
                            description: 'Type defines the type of the volume. Deprecated:
                              Use Types instead.'
                            type: string
                          types:
                            description: Types is the list of the volume types of
                              the root volumes. This is mutually exclusive with Type.
                            items:
                              type: string
                            type: array
                          zones:
                            description: Zones is the list of availability zones where
                              the root volumes should be deployed. If no zones are
                              provided, all instances will be deployed on OpenStack
                              Cinder default availability zone
                            items:
                              type: string
                            type: array
                        required:
                        - size
                        - types
                        type: object
                      serverGroupPolicy:
                        description: ServerGroupPolicy will be used to create the
                          Server Group that will contain all the machines of this
                          MachinePool. Defaults to "soft-anti-affinity".
                        enum:
                        - ""
                        - affinity
                        - soft-affinity
                        - anti-affinity
                        - soft-anti-affinity
                        type: string
                      type:
                        description: FlavorName defines the OpenStack Nova flavor.
                          eg. m1.large
                        type: string
                      zones:
                        description: Zones is the list of availability zones where
                          the instances should be deployed. If no zones are provided,
                          all instances will be deployed on OpenStack Nova default
                          availability zone
                        items:
                          type: string
                        type: array
                    required:
                    - type
                    type: object
                  ovirt:
                    description: Ovirt is the configuration used when installing on
                      oVirt.
                    properties:
                      affinityGroupsNames:
                        description: AffinityGroupsNames contains a list of oVirt
                          affinity group names that the newly created machines will
                          join. The affinity groups should exist on the oVirt cluster
                          or created by the OpenShift installer.
                        items:
                          type: string
                        type: array
                      autoPinningPolicy:
                        description: AutoPinningPolicy defines the policy to automatically
                          set the CPU and NUMA including pinning to the host for the
                          instance. When the field is omitted the default will be
                          "none".
                        enum:
                        - none
                        - resize_and_pin
                        type: string
                      clone:
                        description: "Clone makes sure that the disks are cloned from
                          the template and are not linked. Defaults to true for high
                          performance and server VM types, false for desktop types.
                          \n Note: this option is not documented in the OpenShift
                          documentation. This is intentional as it has sane defaults
                          that shouldn't be changed unless needed for debugging or
                          resolving issues in cooperation with Red Hat support."
                        type: boolean
                      cpu:
                        description: CPU defines the VM CPU.
                        properties:
                          cores:
                            description: Cores is the number of cores per socket.
                              Total CPUs is (Sockets * Cores)
                            format: int32
                            type: integer
                          sockets:
                            description: Sockets is the number of sockets for a VM.
                              Total CPUs is (Sockets * Cores)
                            format: int32
                            type: integer
                          threads:
                            description: Threads is the number of CPU threads.
                            format: int32
                            type: integer
                        required:
                        - cores
                        - sockets
                        - threads
                        type: object
                      format:
                        description: Format is the disk format that the disks are
                          in. Can be "cow" or "raw". "raw" disables several features
                          that may be needed, such as incremental backups.
                        enum:
                        - ""
                        - raw
                        - cow
                        type: string
                      hugepages:
                        description: Hugepages is the size of a VM's hugepages to
                          use in KiBs.
                        enum:
                        - 2048
                        - 1048576
                        format: int32
                        type: integer
                      instanceTypeID:
                        description: InstanceTypeID defines the VM instance type and
                          overrides the hardware parameters of the created VM, including
                          cpu and memory. If InstanceTypeID is passed, all memory
                          and cpu variables will be ignored.
                        type: string
                      memoryMB:
                        description: MemoryMB is the size of a VM's memory in MiBs.
                        format: int32
                        type: integer
                      osDisk:
                        description: OSDisk is the the root disk of the node.
                        properties:
                          sizeGB:
                            description: SizeGB size of the bootable disk in GiB.
                            format: int64
                            type: integer
                        required:
                        - sizeGB
                        type: object
                      sparse:
                        description: Sparse indicates that sparse provisioning should
                          be used and disks should be not preallocated.
                        type: boolean
                      vmType:
                        description: VMType defines the workload type of the VM.
                        enum:
                        - ""
                        - desktop
                        - server
                        - high_performance
                        type: string
                    type: object
                  powervs:
                    description: PowerVS is the configuration used when installing
                      on IBM Power VS.
                    properties:
                      memoryGiB:
                        description: memoryGiB is the size of a virtual machine's
                          memory, in GiB.
                        format: int32
                        type: integer
                      procType:
                        description: ProcType defines the processor sharing model
                          for the instance. Must be one of {Capped, Dedicated, Shared}.
                        enum:
                        - Dedicated
                        - Shared
                        - Capped
                        - ""
                        type: string
                      processors:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Processors defines the processing units for the
                          instance.
                        x-kubernetes-int-or-string: true
                      smtLevel:
                        description: SMTLevel specifies the level of SMT to set the
                          control plane and worker nodes to.
                        type: string
                      sysType:
                        description: SysType defines the system type for instance.
                        type: string
                      volumeIDs:
                        description: VolumeIDs is the list of volumes attached to
                          the instance.
                        items:
                          type: string
                        type: array
                    type: object
                  vsphere:
                    description: VSphere is the configuration used when installing
                      on vSphere.
                    properties:
                      coresPerSocket:
                        description: NumCoresPerSocket is the number of cores per
                          socket in a vm. The number of vCPUs on the vm will be NumCPUs/NumCoresPerSocket.
                        format: int32
                        type: integer
                      cpus:
                        description: NumCPUs is the total number of virtual processor
                          cores to assign a vm.
                        format: int32
                        type: integer
                      memoryMB:
                        description: Memory is the size of a VM's memory in MB.
                        format: int64
                        type: integer
                      osDisk:
                        description: OSDisk defines the storage for instance.
                        properties:
                          diskSizeGB:
                            description: DiskSizeGB defines the size of disk in GB.
                            format: int32
                            type: integer
                        type: object
                      zones:
                        description: Zones defines available zones Zones is available
                          in TechPreview.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              replicas:
                description: Replicas is the machine count for the machine pool.
                format: int64
                type: integer
            required:
            - name
            - platform
            type: object
          cpuPartitioningMode:
            default: None
            description: CPUPartitioning determines if a cluster should be setup for
              CPU workload partitioning at install time. When this field is set the
              cluster will be flagged for CPU Partitioning allowing users to segregate
              workloads to specific CPU Sets. This does not make any decisions on
              workloads it only configures the nodes to allow CPU Partitioning. The
              "AllNodes" value will setup all nodes for CPU Partitioning, the default
              is "None".
            enum:
            - None
            - AllNodes
            type: string
          credentialsMode:
            description: "CredentialsMode is used to explicitly set the mode with
              which CredentialRequests are satisfied. \n If this field is set, then
              the installer will not attempt to query the cloud permissions before
              attempting installation. If the field is not set or empty, then the
              installer will perform its normal verification that the credentials
              provided are sufficient to perform an installation. \n There are three
              possible values for this field, but the valid values are dependent upon
              the platform being used. \"Mint\": create new credentials with a subset
              of the overall permissions for each CredentialsRequest \"Passthrough\":
              copy the credentials with all of the overall permissions for each CredentialsRequest
              \"Manual\": CredentialsRequests must be handled manually by the user
              \n For each of the following platforms, the field can set to the specified
              values. For all other platforms, the field must not be set. AWS: \"Mint\",
              \"Passthrough\", \"Manual\" Azure: \"Passthrough\", \"Manual\" AzureStack:
              \"Manual\" GCP: \"Mint\", \"Passthrough\", \"Manual\" IBMCloud: \"Manual\"
              AlibabaCloud: \"Manual\" PowerVS: \"Manual\" Nutanix: \"Manual\""
            enum:
            - ""
            - Mint
            - Passthrough
            - Manual
            type: string
          featureGates:
            description: 'FeatureGates enables a set of custom feature gates. May
              only be used in conjunction with FeatureSet "CustomNoUpgrade". Features
              may be enabled or disabled by providing a true or false value for the
              feature gate. E.g. "featureGates": ["FeatureGate1=true", "FeatureGate2=false"].'
            items:
              type: string
            type: array
          featureSet:
            description: FeatureSet enables features that are not part of the default
              feature set. Valid values are "Default", "TechPreviewNoUpgrade" and
              "CustomNoUpgrade". When omitted, the "Default" feature set is used.
            type: string
          fips:
            default: false
            description: FIPS configures https://www.nist.gov/itl/fips-general-information
            type: boolean
          imageContentSources:
            description: ImageContentSources lists sources/repositories for the release-image
              content. The field is deprecated. Please use imageDigestSources.
            items:
              description: ImageContentSource defines a list of sources/repositories
                that can be used to pull content. The field is deprecated. Please
                use imageDigestSources.
              properties:
                mirrors:
                  description: Mirrors is one or more repositories that may also contain
                    the same images.
                  items:
                    type: string
                  type: array
                source:
                  description: Source is the repository that users refer to, e.g.
                    in image pull specifications.
                  type: string
              required:
              - source
              type: object
            type: array
          imageDigestSources:
            description: ImageDigestSources lists sources/repositories for the release-image
              content.
            items:
              description: ImageDigestSource defines a list of sources/repositories
                that can be used to pull content.
              properties:
                mirrors:
                  description: Mirrors is one or more repositories that may also contain
                    the same images.
                  items:
                    type: string
                  type: array
                source:
                  description: Source is the repository that users refer to, e.g.
                    in image pull specifications.
                  type: string
              required:
              - source
              type: object
            type: array
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          networking:
            description: Networking is the configuration for the pod network provider
              in the cluster.
            properties:
              clusterNetwork:
                description: ClusterNetwork is the list of IP address pools for pods.
                  Default is 10.128.0.0/14 and a host prefix of /23.
                items:
                  description: ClusterNetworkEntry is a single IP address block for
                    pod IP blocks. IP blocks are allocated with size 2^HostSubnetLength.
                  properties:
                    cidr:
                      description: CIDR is the IP block address pool.
                      type: Any
                    hostPrefix:
                      description: HostPrefix is the prefix size to allocate to each
                        node from the CIDR. For example, 24 would allocate 2^8=256
                        adresses to each node. If this field is not used by the plugin,
                        it can be left unset.
                      format: int32
                      type: integer
                    hostSubnetLength:
                      description: The size of blocks to allocate from the larger
                        pool. This is the length in bits - so a 9 here will allocate
                        a /23.
                      format: int32
                      type: integer
                  required:
                  - cidr
                  type: object
                type: array
              clusterNetworkMTU:
                description: ClusterNetworkMTU is the Maximum Transmit (MTU) Unit
                  size in bytes to allocate to the cluster network. For example, 1200
                  would set the MTU of the entire overlay network. If the deployment
                  does not require changes in the network plugin, leave it unset and
                  the MTU will be calculated automatically based on the host network
                  MTU.
                format: int32
                type: integer
              clusterNetworks:
                description: Deprecated name for ClusterNetwork
                items:
                  description: ClusterNetworkEntry is a single IP address block for
                    pod IP blocks. IP blocks are allocated with size 2^HostSubnetLength.
                  properties:
                    cidr:
                      description: CIDR is the IP block address pool.
                      type: Any
                    hostPrefix:
                      description: HostPrefix is the prefix size to allocate to each
                        node from the CIDR. For example, 24 would allocate 2^8=256
                        adresses to each node. If this field is not used by the plugin,
                        it can be left unset.
                      format: int32
                      type: integer
                    hostSubnetLength:
                      description: The size of blocks to allocate from the larger
                        pool. This is the length in bits - so a 9 here will allocate
                        a /23.
                      format: int32
                      type: integer
                  required:
                  - cidr
                  type: object
                type: array
              machineCIDR:
                description: Deprecated way to configure an IP address pool for machines.
                  Replaced by MachineNetwork which allows for multiple pools.
                type: Any
              machineNetwork:
                description: MachineNetwork is the list of IP address pools for machines.
                  This field replaces MachineCIDR, and if set MachineCIDR must be
                  empty or match the first entry in the list. Default is 10.0.0.0/16
                  for all platforms other than libvirt and Power VS. For libvirt,
                  the default is 192.168.126.0/24. For Power VS, the default is 192.168.0.0/24.
                items:
                  description: MachineNetworkEntry is a single IP address block for
                    node IP blocks.
                  properties:
                    cidr:
                      description: CIDR is the IP block address pool for machines
                        within the cluster.
                      type: Any
                  required:
                  - cidr
                  type: object
                type: array
              networkType:
                default: OVNKubernetes
                description: NetworkType is the type of network to install. The default
                  value is OVNKubernetes.
                type: string
              serviceCIDR:
                description: Deprecated way to configure an IP address pool for services.
                  Replaced by ServiceNetwork which allows for multiple pools.
                type: Any
              serviceNetwork:
                description: 'ServiceNetwork is the list of IP address pools for services.
                  Default is 172.30.0.0/16. NOTE: currently only one entry is supported.'
                items:
                  type: Any
                maxItems: 1
                type: array
              type:
                description: Deprecated name for NetworkType
                type: string
            type: object
          operatorPublishingStrategy:
            description: OperatorPublishingStrategy controls the visibility of ingress
              and apiserver. Defaults to public.
            properties:
              apiserver:
                default: External
                description: APIServer sets the visibility of the load balancers servicing
                  the APIserver.
                enum:
                - ""
                - External
                - Internal
                type: string
              ingress:
                default: External
                description: Ingress sets the visibility of the created dns resources.
                enum:
                - ""
                - External
                - Internal
                type: string
            type: object
          platform:
            description: Platform is the configuration for the specific platform upon
              which to perform the installation.
            properties:
              alibabacloud:
                description: AlibabaCloud is the configuration used when installing
                  on Alibaba Cloud.
                properties:
                  defaultMachinePlatform:
                    description: DefaultMachinePlatform is the default configuration
                      used when installing on Alibaba Cloud for machine pools which
                      do not define their own platform configuration.
                    properties:
                      imageID:
                        description: ImageID is the Image ID that should be used to
                          create ECS instance. If set, the ImageID should belong to
                          the same region as the cluster.
                        type: string
                      instanceType:
                        description: InstanceType defines the ECS instance type. eg.
                          ecs.g6.large
                        type: string
                      systemDiskCategory:
                        description: SystemDiskCategory defines the category of the
                          system disk.
                        enum:
                        - ""
                        - cloud_efficiency
                        - cloud_essd
                        type: string
                      systemDiskSize:
                        description: SystemDiskSize defines the size of the system
                          disk in gibibytes (GiB).
                        minimum: 120
                        type: integer
                      zones:
                        description: Zones is list of availability zones that can
                          be used. eg. ["cn-hangzhou-i", "cn-hangzhou-h", "cn-hangzhou-j"]
                        items:
                          type: string
                        type: array
                    type: object
                  privateZoneID:
                    description: PrivateZoneID is the ID of an existing private zone
                      into which to add DNS records for the cluster's internal API.
                      An existing private zone can only be used when also using existing
                      VPC. The private zone must be associated with the VPC containing
                      the subnets. Leave the private zone unset to have the installer
                      create the private zone on your behalf.
                    type: string
                  region:
                    description: Region specifies the Alibaba Cloud region where the
                      cluster will be created.
                    type: string
                  resourceGroupID:
                    description: ResourceGroupID is the ID of an already existing
                      resource group where the cluster should be installed. If empty,
                      the installer will create a new resource group for the cluster.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags additional keys and values that the installer
                      will add as tags to all resources that it creates. Resources
                      created by the cluster itself may not include these tags.
                    type: object
                  vpcID:
                    description: VpcID is the ID of an already existing VPC where
                      the cluster should be installed. If empty, the installer will
                      create a new VPC for the cluster.
                    type: string
                  vswitchIDs:
                    description: VSwitchIDs is the ID list of already existing VSwitches
                      where cluster resources will be created. The existing VSwitches
                      can only be used when also using existing VPC. If empty, the
                      installer will create new VSwitches for the cluster.
                    items:
                      type: string
                    type: array
                required:
                - region
                type: object
              aws:
                description: AWS is the configuration used when installing on AWS.
                properties:
                  amiID:
                    description: AMIID is the AMI that should be used to boot machines
                      for the cluster. If set, the AMI should belong to the same region
                      as the cluster.
                    type: string
                  defaultMachinePlatform:
                    description: DefaultMachinePlatform is the default configuration
                      used when installing on AWS for machine pools which do not define
                      their own platform configuration.
                    properties:
                      additionalSecurityGroupIDs:
                        description: AdditionalSecurityGroupIDs contains IDs of additional
                          security groups for machines, where each ID is presented
                          in the format sg-xxxx.
                        items:
                          type: string
                        type: array
                      amiID:
                        description: AMIID is the AMI that should be used to boot
                          the ec2 instance. If set, the AMI should belong to the same
                          region as the cluster.
                        type: string
                      iamRole:
                        description: IAMRole is the name of the IAM Role to use for
                          the instance profile of the machine. Leave unset to have
                          the installer create the IAM Role on your behalf.
                        type: string
                      metadataService:
                        description: EC2MetadataOptions defines metadata service interaction
                          options for EC2 instances in the machine pool.
                        properties:
                          authentication:
                            description: Authentication determines whether or not
                              the host requires the use of authentication when interacting
                              with the metadata service. When using authentication,
                              this enforces v2 interaction method (IMDSv2) with the
                              metadata service. When omitted, this means the user
                              has no opinion and the value is left to the platform
                              to choose a good default, which is subject to change
                              over time. The current default is optional. At this
                              point this field represents `HttpTokens` parameter from
                              `InstanceMetadataOptionsRequest` structure in AWS EC2
                              API https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_InstanceMetadataOptionsRequest.html
                            enum:
                            - Required
                            - Optional
                            type: string
                        type: object
                      rootVolume:
                        description: EC2RootVolume defines the root volume for EC2
                          instances in the machine pool.
                        properties:
                          iops:
                            description: IOPS defines the amount of provisioned IOPS.
                              (KiB/s). IOPS may only be set for io1, io2, & gp3 volume
                              types.
                            minimum: 0
                            type: integer
                          kmsKeyARN:
                            description: The KMS key that will be used to encrypt
                              the EBS volume. If no key is provided the default KMS
                              key for the account will be used. https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetEbsDefaultKmsKeyId.html
                            type: string
                          size:
                            description: Size defines the size of the volume in gibibytes
                              (GiB).
                            minimum: 0
                            type: integer
                          type:
                            description: Type defines the type of the volume.
                            type: string
                        required:
                        - size
                        - type
                        type: object
                      type:
                        description: InstanceType defines the ec2 instance type. eg.
                          m4-large
                        type: string
                      zones:
                        description: Zones is list of availability zones that can
                          be used.
                        items:
                          type: string
                        type: array
                    type: object
                  experimentalPropagateUserTags:
                    description: The field is deprecated. ExperimentalPropagateUserTags
                      is an experimental flag that directs in-cluster operators to
                      include the specified user tags in the tags of the AWS resources
                      that the operators create.
                    type: boolean
                  hostedZone:
                    description: HostedZone is the ID of an existing hosted zone into
                      which to add DNS records for the cluster's internal API. An
                      existing hosted zone can only be used when also using existing
                      subnets. The hosted zone must be associated with the VPC containing
                      the subnets. Leave the hosted zone unset to have the installer
                      create the hosted zone on your behalf.
                    type: string
                  hostedZoneRole:
                    description: HostedZoneRole is the ARN of an IAM role to be assumed
                      when performing operations on the provided HostedZone. HostedZoneRole
                      can be used in a shared VPC scenario when the private hosted
                      zone belongs to a different account than the rest of the cluster
                      resources. If HostedZoneRole is set, HostedZone must also be
                      set.
                    type: string
                  lbType:
                    description: "LBType is an optional field to specify a load balancer
                      type. \n When this field is specified, the default ingresscontroller
                      will be created using the specified load-balancer type. \n Following
                      are the accepted values: \n * \"Classic\": A Classic Load Balancer
                      that makes routing decisions at either the transport layer (TCP/SSL)
                      or the application layer (HTTP/HTTPS). See the following for
                      additional details: https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#clb
                      \n * \"NLB\": A Network Load Balancer that makes routing decisions
                      at the transport layer (TCP/SSL). See the following for additional
                      details: https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#nlb
                      \n If this field is not set explicitly, it defaults to \"Classic\".
                      \ This default is subject to change over time."
                    type: string
                  preserveBootstrapIgnition:
                    description: PreserveBootstrapIgnition is an optional field that
                      can be used to make the S3 deletion optional during bootstrap
                      destroy.
                    type: boolean
                  propagateUserTags:
                    description: PropagateUserTags is a flag that directs in-cluster
                      operators to include the specified user tags in the tags of
                      the AWS resources that the operators create.
                    type: boolean
                  region:
                    description: Region specifies the AWS region where the cluster
                      will be created.
                    type: string
                  serviceEndpoints:
                    description: ServiceEndpoints list contains custom endpoints which
                      will override default service endpoint of AWS Services. There
                      must be only one ServiceEndpoint for a service.
                    items:
                      description: ServiceEndpoint store the configuration for services
                        to override existing defaults of AWS Services.
                      properties:
                        name:
                          description: Name is the name of the AWS service. This must
                            be provided and cannot be empty.
                          type: string
                        url:
                          description: URL is fully qualified URI with scheme https,
                            that overrides the default generated endpoint for a client.
                            This must be provided and cannot be empty.
                          pattern: ^https://
                          type: string
                      required:
                      - name
                      - url
                      type: object
                    type: array
                  subnets:
                    description: Subnets specifies existing subnets (by ID) where
                      cluster resources will be created.  Leave unset to have the
                      installer create subnets in a new VPC on your behalf.
                    items:
                      type: string
                    type: array
                  userTags:
                    additionalProperties:
                      type: string
                    description: UserTags additional keys and values that the installer
                      will add as tags to all resources that it creates. Resources
                      created by the cluster itself may not include these tags.
                    type: object
                required:
                - region
                type: object
              azure:
                description: Azure is the configuration used when installing on Azure.
                properties:
                  armEndpoint:
                    description: ARMEndpoint is the endpoint for the Azure API when
                      installing on Azure Stack.
                    type: string
                  baseDomainResourceGroupName:
                    description: BaseDomainResourceGroupName specifies the resource
                      group where the Azure DNS zone for the base domain is found.
                      This field is optional when creating a private cluster, otherwise
                      required.
                    type: string
                  cloudName:
                    description: cloudName is the name of the Azure cloud environment
                      which can be used to configure the Azure SDK with the appropriate
                      Azure API endpoints. If empty, the value is equal to "AzurePublicCloud".
                    enum:
                    - ""
                    - AzurePublicCloud
                    - AzureUSGovernmentCloud
                    - AzureChinaCloud
                    - AzureGermanCloud
                    - AzureStackCloud
                    type: string
                  clusterOSImage:
                    description: ClusterOSImage is the url of a storage blob in the
                      Azure Stack environment containing an RHCOS VHD. This field
                      is required for Azure Stack and not applicable to Azure.
                    type: string
                  computeSubnet:
                    description: ComputeSubnet specifies an existing subnet for use
                      by compute nodes
                    type: string
                  controlPlaneSubnet:
                    description: ControlPlaneSubnet specifies an existing subnet for
                      use by the control plane nodes
                    type: string
                  customerManagedKey:
                    description: CustomerManagedKey has the keys needed to encrypt
                      the storage account.
                    properties:
                      keyVault:
                        description: KeyVault is the keyvault used for the customer
                          created key required for encryption.
                        properties:
                          keyName:
                            description: KeyName is the name of the key vault key.
                            type: string
                          name:
                            description: Name is the name of the key vault.
                            type: string
                          resourceGroup:
                            description: ResourceGroup defines the Azure resource
                              group used by the key vault.
                            type: string
                        required:
                        - keyName
                        - name
                        - resourceGroup
                        type: object
                      userAssignedIdentityKey:
                        description: UserAssignedIdentityKey is the name of the user
                          identity that has access to the managed key.
                        type: string
                    type: object
                  defaultMachinePlatform:
                    description: DefaultMachinePlatform is the default configuration
                      used when installing on Azure for machine pools which do not
                      define their own platform configuration.
                    properties:
                      encryptionAtHost:
                        description: EncryptionAtHost enables encryption at the VM
                          host.
                        type: boolean
                      osDisk:
                        description: OSDisk defines the storage for instance.
                        properties:
                          diskEncryptionSet:
                            description: DiskEncryptionSet defines a disk encryption
                              set.
                            properties:
                              name:
                                description: Name is the name of the disk encryption
                                  set.
                                type: string
                              resourceGroup:
                                description: ResourceGroup defines the Azure resource
                                  group used by the disk encryption set.
                                type: string
                              subscriptionId:
                                description: SubscriptionID defines the Azure subscription
                                  the disk encryption set is in.
                                type: string
                            required:
                            - name
                            - resourceGroup
                            - subscriptionId
                            type: object
                          diskSizeGB:
                            description: DiskSizeGB defines the size of disk in GB.
                            format: int32
                            minimum: 0
                            type: integer
                          diskType:
                            description: DiskType defines the type of disk. For control
                              plane nodes, the valid values are Premium_LRS and StandardSSD_LRS.
                              Default is Premium_LRS.
                            enum:
                            - Standard_LRS
                            - Premium_LRS
                            - StandardSSD_LRS
                            type: string
                          securityProfile:
                            description: SecurityProfile specifies the security profile
                              for the managed disk.
                            properties:
                              diskEncryptionSet:
                                description: DiskEncryptionSet specifies the customer
                                  managed disk encryption set resource id for the
                                  managed disk that is used for Customer Managed Key
                                  encrypted ConfidentialVM OS Disk and VMGuestState
                                  blob.
                                properties:
                                  name:
                                    description: Name is the name of the disk encryption
                                      set.
                                    type: string
                                  resourceGroup:
                                    description: ResourceGroup defines the Azure resource
                                      group used by the disk encryption set.
                                    type: string
                                  subscriptionId:
                                    description: SubscriptionID defines the Azure
                                      subscription the disk encryption set is in.
                                    type: string
                                required:
                                - name
                                - resourceGroup
                                - subscriptionId
                                type: object
                              securityEncryptionType:
                                description: SecurityEncryptionType specifies the
                                  encryption type of the managed disk. It is set to
                                  DiskWithVMGuestState to encrypt the managed disk
                                  along with the VMGuestState blob, and to VMGuestStateOnly
                                  to encrypt the VMGuestState blob only. When set
                                  to VMGuestStateOnly, the VTpmEnabled should be set
                                  to true. When set to DiskWithVMGuestState, both
                                  SecureBootEnabled and VTpmEnabled should be set
                                  to true. It can be set only for Confidential VMs.
                                enum:
                                - VMGuestStateOnly
                                - DiskWithVMGuestState
                                type: string
                            type: object
                        required:
                        - diskSizeGB
                        type: object
                      osImage:
                        description: OSImage defines the image to use for the OS.
                        properties:
                          offer:
                            description: Offer is the offer of the image.
                            type: string
                          plan:
                            description: Plan is the purchase plan of the image. If
                              omitted, it defaults to "WithPurchasePlan".
                            enum:
                            - WithPurchasePlan
                            - NoPurchasePlan
                            type: string
                          publisher:
                            description: Publisher is the publisher of the image.
                            type: string
                          sku:
                            description: SKU is the SKU of the image.
                            type: string
                          version:
                            description: Version is the version of the image.
                            type: string
                        required:
                        - offer
                        - publisher
                        - sku
                        - version
                        type: object
                      settings:
                        description: Settings specify the security type and the UEFI
                          settings of the virtual machine. This field can be set for
                          Confidential VMs and Trusted Launch for VMs.
                        properties:
                          confidentialVM:
                            description: 'ConfidentialVM specifies the security configuration
                              of the virtual machine. For more information regarding
                              Confidential VMs, please refer to: https://learn.microsoft.com/azure/confidential-computing/confidential-vm-overview'
                            properties:
                              uefiSettings:
                                description: UEFISettings specifies the security settings
                                  like secure boot and vTPM used while creating the
                                  virtual machine.
                                properties:
                                  secureBoot:
                                    description: SecureBoot specifies whether secure
                                      boot should be enabled on the virtual machine.
                                      Secure Boot verifies the digital signature of
                                      all boot components and halts the boot process
                                      if signature verification fails. If omitted,
                                      the platform chooses a default, which is subject
                                      to change over time, currently that default
                                      is disabled.
                                    enum:
                                    - Enabled
                                    - Disabled
                                    type: string
                                  virtualizedTrustedPlatformModule:
                                    description: VirtualizedTrustedPlatformModule
                                      specifies whether vTPM should be enabled on
                                      the virtual machine. When enabled the virtualized
                                      trusted platform module measurements are used
                                      to create a known good boot integrity policy
                                      baseline. The integrity policy baseline is used
                                      for comparison with measurements from subsequent
                                      VM boots to determine if anything has changed.
                                      This is required to be set to enabled if the
                                      SecurityEncryptionType is defined. If omitted,
                                      the platform chooses a default, which is subject
                                      to change over time, currently that default
                                      is disabled.
                                    enum:
                                    - Enabled
                                    - Disabled
                                    type: string
                                type: object
                            type: object
                          securityType:
                            description: 'SecurityType specifies the SecurityType
                              of the virtual machine. It has to be set to any specified
                              value to enable secure boot and vTPM. The default behavior
                              is: secure boot and vTPM will not be enabled unless
                              this property is set.'
                            enum:
                            - ConfidentialVM
                            - TrustedLaunch
                            type: string
                          trustedLaunch:
                            description: 'TrustedLaunch specifies the security configuration
                              of the virtual machine. For more information regarding
                              TrustedLaunch for VMs, please refer to: https://learn.microsoft.com/azure/virtual-machines/trusted-launch'
                            properties:
                              uefiSettings:
                                description: UEFISettings specifies the security settings
                                  like secure boot and vTPM used while creating the
                                  virtual machine.
                                properties:
                                  secureBoot:
                                    description: SecureBoot specifies whether secure
                                      boot should be enabled on the virtual machine.
                                      Secure Boot verifies the digital signature of
                                      all boot components and halts the boot process
                                      if signature verification fails. If omitted,
                                      the platform chooses a default, which is subject
                                      to change over time, currently that default
                                      is disabled.
                                    enum:
                                    - Enabled
                                    - Disabled
                                    type: string
                                  virtualizedTrustedPlatformModule:
                                    description: VirtualizedTrustedPlatformModule
                                      specifies whether vTPM should be enabled on
                                      the virtual machine. When enabled the virtualized
                                      trusted platform module measurements are used
                                      to create a known good boot integrity policy
                                      baseline. The integrity policy baseline is used
                                      for comparison with measurements from subsequent
                                      VM boots to determine if anything has changed.
                                      This is required to be set to enabled if the
                                      SecurityEncryptionType is defined. If omitted,
                                      the platform chooses a default, which is subject
                                      to change over time, currently that default
                                      is disabled.
                                    enum:
                                    - Enabled
                                    - Disabled
                                    type: string
                                type: object
                            type: object
                        type: object
                      type:
                        description: InstanceType defines the azure instance type.
                          eg. Standard_DS_V2
                        type: string
                      ultraSSDCapability:
                        description: ultraSSDCapability defines if the instance should
                          use Ultra SSD disks.
                        enum:
                        - Enabled
                        - Disabled
                        type: string
                      vmNetworkingType:
                        description: 'VMNetworkingType specifies whether to enable
                          accelerated networking. Accelerated networking enables single
                          root I/O virtualization (SR-IOV) to a VM, greatly improving
                          its networking performance. eg. values: "Accelerated", "Basic"'
                        enum:
                        - Accelerated
                        - Basic
                        type: string
                      zones:
                        description: Zones is list of availability zones that can
                          be used. eg. ["1", "2", "3"]
                        items:
                          type: string
                        type: array
                    type: object
                  networkResourceGroupName:
                    description: NetworkResourceGroupName specifies the network resource
                      group that contains an existing VNet
                    type: string
                  outboundType:
                    default: Loadbalancer
                    description: OutboundType is a strategy for how egress from cluster
                      is achieved. When not specified default is "Loadbalancer". "NatGateway"
                      is only available in TechPreview.
                    enum:
                    - ""
                    - Loadbalancer
                    - NatGateway
                    - UserDefinedRouting
                    type: string
                  region:
                    description: Region specifies the Azure region where the cluster
                      will be created.
                    type: string
                  resourceGroupName:
                    description: ResourceGroupName is the name of an already existing
                      resource group where the cluster should be installed. This resource
                      group should only be used for this specific cluster and the
                      cluster components will assume ownership of all resources in
                      the resource group. Destroying the cluster using installer will
                      delete this resource group. This resource group must be empty
                      with no other resources when trying to use it for creating a
                      cluster. If empty, a new resource group will created for the
                      cluster.
                    type: string
                  userTags:
                    additionalProperties:
                      type: string
                    description: UserTags has additional keys and values that the
                      installer will add as tags to all resources that it creates
                      on AzurePublicCloud alone. Resources created by the cluster
                      itself may not include these tags.
                    type: object
                  virtualNetwork:
                    description: VirtualNetwork specifies the name of an existing
                      VNet for the installer to use
                    type: string
                required:
                - region
                type: object
              baremetal:
                description: BareMetal is the configuration used when installing on
                  bare metal.
                properties:
                  apiVIP:
                    description: 'DeprecatedAPIVIP is the VIP to use for internal
                      API communication Deprecated: Use APIVIPs'
                    format: ip
                    type: string
                  apiVIPs:
                    description: APIVIPs contains the VIP(s) to use for internal API
                      communication. In dual stack clusters it contains an IPv4 and
                      IPv6 address, otherwise only one VIP
                    format: ip
                    items:
                      type: string
                    maxItems: 2
                    type: array
                    uniqueItems: true
                  bootstrapExternalStaticDNS:
                    description: BootstrapExternalStaticDNS is the static network
                      DNS of the bootstrap node. This can be useful in environments
                      without a DHCP server.
                    format: ip
                    type: string
                  bootstrapExternalStaticGateway:
                    description: BootstrapExternalStaticGateway is the static network
                      gateway of the bootstrap node. This can be useful in environments
                      without a DHCP server.
                    format: ip
                    type: string
                  bootstrapExternalStaticIP:
                    description: BootstrapExternalStaticIP is the static IP address
                      of the bootstrap node. This can be useful in environments without
                      a DHCP server.
                    format: ip
                    type: string
                  bootstrapOSImage:
                    description: BootstrapOSImage is a URL to override the default
                      OS image for the bootstrap node. The URL must contain a sha256
                      hash of the image e.g https://mirror.example.com/images/qemu.qcow2.gz?sha256=a07bd...
                    type: string
                  bootstrapProvisioningIP:
                    description: BootstrapProvisioningIP is the IP used on the bootstrap
                      VM to bring up provisioning services that are used to create
                      the control-plane machines
                    format: ip
                    type: string
                  clusterOSImage:
                    description: ClusterOSImage is a URL to override the default OS
                      image for cluster nodes. The URL must contain a sha256 hash
                      of the image e.g https://mirror.example.com/images/metal.qcow2.gz?sha256=3b5a8...
                    type: string
                  clusterProvisioningIP:
                    description: ClusterProvisioningIP is the IP on the dedicated
                      provisioning network where the baremetal-operator pod runs provisioning
                      services, and an http server to cache some downloaded content
                      e.g RHCOS/IPA images
                    type: string
                  defaultMachinePlatform:
                    description: DefaultMachinePlatform is the default configuration
                      used when installing on bare metal for machine pools which do
                      not define their own platform configuration.
                    type: object
                  externalBridge:
                    description: External bridge is used for external communication.
                    type: string
                  externalMACAddress:
                    description: ExternalMACAddress is used to allow setting a static
                      unicast MAC address for the bootstrap host on the external network.
                      Consider using the QEMU vendor prefix `52:54:00`. If left blank,
                      libvirt will generate one for you.
                    type: string
                  hosts:
                    description: Hosts is the information needed to create the objects
                      in Ironic.
                    items:
                      description: Host stores all the configuration data for a baremetal
                        host.
                      properties:
                        bmc:
                          description: BMC stores the information about a baremetal
                            host's management controller.
                          properties:
                            address:
                              type: string
                            disableCertificateVerification:
                              type: boolean
                            password:
                              type: string
                            username:
                              type: string
                          required:
                          - address
                          - disableCertificateVerification
                          - password
                          - username
                          type: object
                        bootMACAddress:
                          type: string
                        bootMode:
                          description: BootMode puts the server in legacy (BIOS),
                            UEFI secure boot or UEFI mode for booting. Secure boot
                            is only enabled during the final instance boot. The default
                            is UEFI.
                          enum:
                          - ""
                          - UEFI
                          - UEFISecureBoot
                          - legacy
                          type: string
                        hardwareProfile:
                          type: string
                        name:
                          type: string
                        networkConfig:
                          x-kubernetes-preserve-unknown-fields: true
                        role:
                          type: string
                        rootDeviceHints:
                          description: RootDeviceHints holds the hints for specifying
                            the storage location for the root filesystem for the image.
                          properties:
                            deviceName:
                              description: A Linux device name like "/dev/vda". The
                                hint must match the actual value exactly.
                              type: string
                            hctl:
                              description: A SCSI bus address like 0:0:0:0. The hint
                                must match the actual value exactly.
                              type: string
                            minSizeGigabytes:
                              description: The minimum size of the device in Gigabytes.
                              minimum: 0
                              type: integer
                            model:
                              description: A vendor-specific device identifier. The
                                hint can be a substring of the actual value.
                              type: string
                            rotational:
                              description: True if the device should use spinning
                                media, false otherwise.
                              type: boolean
                            serialNumber:
                              description: Device serial number. The hint must match
                                the actual value exactly.
                              type: string
                            vendor:
                              description: The name of the vendor or manufacturer
                                of the device. The hint can be a substring of the
                                actual value.
                              type: string
                            wwn:
                              description: Unique storage identifier. The hint must
                                match the actual value exactly.
                              type: string
                            wwnVendorExtension:
                              description: Unique vendor storage identifier. The hint
                                must match the actual value exactly.
                              type: string
                            wwnWithExtension:
                              description: Unique storage identifier with the vendor
                                extension appended. The hint must match the actual
                                value exactly.
                              type: string
                          type: object
                      required:
                      - bmc
                      - bootMACAddress
                      - hardwareProfile
                      - role
                      type: object
                    type: array
                  ingressVIP:
                    description: 'DeprecatedIngressVIP is the VIP to use for ingress
                      traffic Deprecated: Use IngressVIPs'
                    format: ip
                    type: string
                  ingressVIPs:
                    description: IngressVIPs contains the VIP(s) to use for ingress
                      traffic. In dual stack clusters it contains an IPv4 and IPv6
                      address, otherwise only one VIP
                    format: ip
                    items:
                      type: string
                    maxItems: 2
                    type: array
                    uniqueItems: true
                  libvirtURI:
                    default: qemu:///system
                    description: LibvirtURI is the identifier for the libvirtd connection.  It
                      must be reachable from the host where the installer is run.
                      Default is qemu:///system
                    type: string
                  loadBalancer:
                    description: LoadBalancer defines how the load balancer used by
                      the cluster is configured. LoadBalancer is available in TechPreview.
                    properties:
                      type:
                        default: OpenShiftManagedDefault
                        description: type defines the type of load balancer used by
                          the cluster on BareMetal platform which can be a user-managed
                          or openshift-managed load balancer that is to be used for
                          the OpenShift API and Ingress endpoints. When set to OpenShiftManagedDefault
                          the static pods in charge of API and Ingress traffic load-balancing
                          defined in the machine config operator will be deployed.
                          When set to UserManaged these static pods will not be deployed
                          and it is expected that the load balancer is configured
                          out of band by the deployer. When omitted, this means no
                          opinion and the platform is left to choose a reasonable
                          default. The default value is OpenShiftManagedDefault.
                        enum:
                        - OpenShiftManagedDefault
                        - UserManaged
                        type: string
                    type: object
                  provisioningBridge:
                    description: Provisioning bridge is used for provisioning nodes,
                      on the host that will run the bootstrap VM.
                    type: string
                  provisioningDHCPExternal:
                    description: DeprecatedProvisioningDHCPExternal indicates that
                      DHCP is provided by an external service. This parameter is replaced
                      by ProvisioningNetwork being set to "Unmanaged".
                    type: boolean
                  provisioningDHCPRange:
                    description: ProvisioningDHCPRange is used to provide DHCP services
                      to hosts for provisioning.
                    type: string
                  provisioningHostIP:
                    description: DeprecatedProvisioningHostIP is the deprecated version
                      of clusterProvisioningIP. When the baremetal platform was initially
                      added to the installer, the JSON field for ClusterProvisioningIP
                      was incorrectly set to "provisioningHostIP."  This field is
                      here to allow backwards-compatibility.
                    type: string
                  provisioningMACAddress:
                    description: ProvisioningMACAddress is used to allow setting a
                      static unicast MAC address for the bootstrap host on the provisioning
                      network. Consider using the QEMU vendor prefix `52:54:00`. If
                      left blank, libvirt will generate one for you.
                    type: string
                  provisioningNetwork:
                    default: Managed
                    description: ProvisioningNetwork is used to indicate if we will
                      have a provisioning network, and how it will be managed.
                    enum:
                    - ""
                    - Managed
                    - Unmanaged
                    - Disabled
                    type: string
                  provisioningNetworkCIDR:
                    description: ProvisioningNetworkCIDR defines the network to use
                      for provisioning.
                    type: Any
                  provisioningNetworkInterface:
                    description: ProvisioningNetworkInterface is the name of the network
                      interface on a control plane baremetal host that is connected
                      to the provisioning network.
                    type: string
                required:
                - hosts
                type: object
              external:
                description: External is the configuration used when installing on
                  an external cloud provider.
                properties:
                  cloudControllerManager:
                    default: ""
                    description: CloudControllerManager when set to external, this
                      property will enable an external cloud provider.
                    enum:
                    - ""
                    - External
                    type: string
                  platformName:
                    default: Unknown
                    description: PlatformName holds the arbitrary string representing
                      the infrastructure provider name, expected to be set at the
                      installation time. This field is solely for informational and
                      reporting purposes and is not expected to be used for decision-making.
                    type: string
                type: object
              gcp:
                description: GCP is the configuration used when installing on Google
                  Cloud Platform.
                properties:
                  computeSubnet:
                    description: ComputeSubnet is an existing subnet where the compute
                      nodes will be deployed. The value should be the name of the
                      subnet.
                    type: string
                  controlPlaneSubnet:
                    description: ControlPlaneSubnet is an existing subnet where the
                      control plane will be deployed. The value should be the name
                      of the subnet.
                    type: string
                  defaultMachinePlatform:
                    description: DefaultMachinePlatform is the default configuration
                      used when installing on GCP for machine pools which do not define
                      their own platform configuration.
                    properties:
                      confidentialCompute:
                        description: ConfidentialCompute Defines whether the instance
                          should have confidential compute enabled. If enabled OnHostMaintenance
                          is required to be set to "Terminate". If omitted, the platform
                          chooses a default, which is subject to change over time,
                          currently that default is false.
                        enum:
                        - Enabled
                        - Disabled
                        type: string
                      onHostMaintenance:
                        description: OnHostMaintenance determines the behavior when
                          a maintenance event occurs that might cause the instance
                          to reboot. Allowed values are "Migrate" and "Terminate".
                          If omitted, the platform chooses a default, which is subject
                          to change over time, currently that default is "Migrate".
                        enum:
                        - Migrate
                        - Terminate
                        type: string
                      osDisk:
                        description: OSDisk defines the storage for instance.
                        properties:
                          DiskSizeGB:
                            description: DiskSizeGB defines the size of disk in GB.
                            format: int64
                            maximum: 65536
                            minimum: 16
                            type: integer
                          diskType:
                            description: DiskType defines the type of disk. For control
                              plane nodes, the valid value is pd-ssd.
                            enum:
                            - pd-balanced
                            - pd-ssd
                            - pd-standard
                            type: string
                          encryptionKey:
                            description: EncryptionKey defines the KMS key to be used
                              to encrypt the disk.
                            properties:
                              kmsKey:
                                description: KMSKey is a reference to a KMS Key to
                                  use for the encryption.
                                properties:
                                  keyRing:
                                    description: KeyRing is the name of the KMS Key
                                      Ring which the KMS Key belongs to.
                                    type: string
                                  location:
                                    description: Location is the GCP location in which
                                      the Key Ring exists.
                                    type: string
                                  name:
                                    description: Name is the name of the customer
                                      managed encryption key to be used for the disk
                                      encryption.
                                    type: string
                                  projectID:
                                    description: ProjectID is the ID of the Project
                                      in which the KMS Key Ring exists. Defaults to
                                      the VM ProjectID if not set.
                                    type: string
                                required:
                                - keyRing
                                - location
                                - name
                                type: object
                              kmsKeyServiceAccount:
                                description: KMSKeyServiceAccount is the service account
                                  being used for the encryption request for the given
                                  KMS key. If absent, the Compute Engine default service
                                  account is used. See https://cloud.google.com/compute/docs/access/service-accounts#compute_engine_service_account
                                  for details on the default service account.
                                type: string
                            type: object
                        required:
                        - DiskSizeGB
                        type: object
                      osImage:
                        description: OSImage defines a custom image for instance.
                        properties:
                          name:
                            description: Name defines the name of the image.
                            type: string
                          project:
                            description: Project defines the name of the project containing
                              the image.
                            type: string
                        required:
                        - name
                        - project
                        type: object
                      secureBoot:
                        description: SecureBoot Defines whether the instance should
                          have secure boot enabled. secure boot Verify the digital
                          signature of all boot components, and halt the boot process
                          if signature verification fails. If omitted, the platform
                          chooses a default, which is subject to change over time,
                          currently that default is false.
                        enum:
                        - Enabled
                        - Disabled
                        type: string
                      serviceAccount:
                        description: ServiceAccount is the email of a gcp service
                          account to be used for shared vpc installations. The provided
                          service account will be attached to control-plane nodes
                          in order to provide the permissions required by the cloud
                          provider in the host project. This field is only supported
                          in the control-plane machinepool.
                        type: string
                      tags:
                        description: Tags defines a set of network tags which will
                          be added to instances in the machineset
                        items:
                          type: string
                        type: array
                      type:
                        description: InstanceType defines the GCP instance type. eg.
                          n1-standard-4
                        type: string
                      zones:
                        description: Zones is list of availability zones that can
                          be used.
                        items:
                          type: string
                        type: array
                    type: object
                  network:
                    description: Network specifies an existing VPC where the cluster
                      should be created rather than provisioning a new one.
                    type: string
                  networkProjectID:
                    description: NetworkProjectID specifies which project the network
                      and subnets exist in when they are not in the main ProjectID.
                    type: string
                  projectID:
                    description: ProjectID is the the project that will be used for
                      the cluster.
                    type: string
                  region:
                    description: Region specifies the GCP region where the cluster
                      will be created.
                    type: string
                  userLabels:
                    description: userLabels has additional keys and values that the
                      installer will add as labels to all resources that it creates
                      on GCP. Resources created by the cluster itself may not include
                      these labels. This is a TechPreview feature and requires setting
                      CustomNoUpgrade featureSet with GCPLabelsTags featureGate enabled
                      or TechPreviewNoUpgrade featureSet to configure labels.
                    items:
                      description: UserLabel is a label to apply to GCP resources
                        created for the cluster.
                      properties:
                        key:
                          description: key is the key part of the label. A label key
                            can have a maximum of 63 characters and cannot be empty.
                            Label must begin with a lowercase letter, and must contain
                            only lowercase letters, numeric characters, and the following
                            special characters `_-`.
                          type: string
                        value:
                          description: value is the value part of the label. A label
                            value can have a maximum of 63 characters and cannot be
                            empty. Value must contain only lowercase letters, numeric
                            characters, and the following special characters `_-`.
                          type: string
                      required:
                      - key
                      - value
                      type: object
                    type: array
                  userProvisionedDNS:
                    default: Disabled
                    description: UserProvisionedDNS indicates if the customer is providing
                      their own DNS solution in place of the default provisioned by
                      the Installer.
                    enum:
                    - Enabled
                    - Disabled
                    type: string
                  userTags:
                    description: userTags has additional keys and values that the
                      installer will add as tags to all resources that it creates
                      on GCP. Resources created by the cluster itself may not include
                      these tags. Tag key and tag value should be the shortnames of
                      the tag key and tag value resource. This is a TechPreview feature
                      and requires setting CustomNoUpgrade featureSet with GCPLabelsTags
                      featureGate enabled or TechPreviewNoUpgrade featureSet to configure
                      tags.
                    items:
                      description: UserTag is a tag to apply to GCP resources created
                        for the cluster.
                      properties:
                        key:
                          description: key is the key part of the tag. A tag key can
                            have a maximum of 63 characters and cannot be empty. Tag
                            key must begin and end with an alphanumeric character,
                            and must contain only uppercase, lowercase alphanumeric
                            characters, and the following special characters `._-`.
                          type: string
                        parentID:
                          description: 'parentID is the ID of the hierarchical resource
                            where the tags are defined, e.g. at the Organization or
                            the Project level. To find the Organization ID or Project
                            ID refer to the following pages: https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id,
                            https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects.
                            An OrganizationID must consist of decimal numbers, and
                            cannot have leading zeroes. A ProjectID must be 6 to 30
                            characters in length, can only contain lowercase letters,
                            numbers, and hyphens, and must start with a letter, and
                            cannot end with a hyphen.'
                          type: string
                        value:
                          description: value is the value part of the tag. A tag value
                            can have a maximum of 63 characters and cannot be empty.
                            Tag value must begin and end with an alphanumeric character,
                            and must contain only uppercase, lowercase alphanumeric
                            characters, and the following special characters `_-.@%=+:,*#&(){}[]`
                            and spaces.
                          type: string
                      required:
                      - key
                      - parentID
                      - value
                      type: object
                    type: array
                required:
                - projectID
                - region
                type: object
              ibmcloud:
                description: IBMCloud is the configuration used when installing on
                  IBM Cloud.
                properties:
                  computeSubnets:
                    description: ComputeSubnets are the names of already existing
                      subnets where the cluster compute nodes should be created.
                    items:
                      type: string
                    type: array
                  controlPlaneSubnets:
                    description: ControlPlaneSubnets are the names of already existing
                      subnets where the cluster control plane nodes should be created.
                    items:
                      type: string
                    type: array
                  defaultMachinePlatform:
                    description: DefaultMachinePlatform is the default configuration
                      used when installing on IBM Cloud for machine pools which do
                      not define their own platform configuration.
                    properties:
                      bootVolume:
                        description: BootVolume is the configuration for the machine's
                          boot volume.
                        properties:
                          encryptionKey:
                            description: EncryptionKey is the CRN referencing a Key
                              Protect or Hyper Protect Crypto Services key to use
                              for volume encryption. If not specified, a provider
                              managed encryption key will be used.
                            type: string
                        type: object
                      dedicatedHosts:
                        description: DedicatedHosts is the configuration for the machine's
                          dedicated host and profile.
                        items:
                          description: DedicatedHost stores the configuration for
                            the machine's dedicated host platform.
                          properties:
                            name:
                              description: Name is the name of the dedicated host
                                to provision the machine on. If specified, machines
                                will be created on pre-existing dedicated host.
                              type: string
                            profile:
                              description: Profile is the profile ID for the dedicated
                                host. If specified, new dedicated host will be created
                                for machines.
                              type: string
                          type: object
                        type: array
                      type:
                        description: InstanceType is the VSI machine profile.
                        type: string
                      zones:
                        description: Zones is the list of availability zones used
                          for machines in the pool.
                        items:
                          type: string
                        type: array
                    type: object
                  networkResourceGroupName:
                    description: NetworkResourceGroupName is the name of an already
                      existing resource group where an existing VPC and set of Subnets
                      exist, to be used during cluster creation.
                    type: string
                  region:
                    description: Region specifies the IBM Cloud region where the cluster
                      will be created.
                    type: string
                  resourceGroupName:
                    description: ResourceGroupName is the name of an already existing
                      resource group where the cluster should be installed. If empty,
                      a new resource group will be created for the cluster.
                    type: string
                  serviceEndpoints:
                    description: ServiceEndpoints is a list which contains custom
                      endpoints to override default service endpoints of IBM Cloud
                      Services. There must only be one ServiceEndpoint for a service
                      (no duplicates).
                    items:
                      description: IBMCloudServiceEndpoint stores the configuration
                        of a custom url to override existing defaults of IBM Cloud
                        Services.
                      properties:
                        name:
                          description: 'name is the name of the IBM Cloud service.
                            Possible values are: CIS, COS, DNSServices, GlobalSearch,
                            GlobalTagging, HyperProtect, IAM, KeyProtect, ResourceController,
                            ResourceManager, or VPC. For example, the IBM Cloud Private
                            IAM service could be configured with the service `name`
                            of `IAM` and `url` of `https://private.iam.cloud.ibm.com`
                            Whereas the IBM Cloud Private VPC service for US South
                            (Dallas) could be configured with the service `name` of
                            `VPC` and `url` of `https://us.south.private.iaas.cloud.ibm.com`'
                          enum:
                          - CIS
                          - COS
                          - DNSServices
                          - GlobalSearch
                          - GlobalTagging
                          - HyperProtect
                          - IAM
                          - KeyProtect
                          - ResourceController
                          - ResourceManager
                          - VPC
                          type: string
                        url:
                          description: url is fully qualified URI with scheme https,
                            that overrides the default generated endpoint for a client.
                            This must be provided and cannot be empty.
                          type: string
                      required:
                      - name
                      - url
                      type: object
                    type: array
                  vpcName:
                    description: VPCName is the name of an already existing VPC to
                      be used during cluster creation.
                    type: string
                required:
                - region
                type: object
              libvirt:
                description: Libvirt is the configuration used when installing on
                  libvirt.
                properties:
                  URI:
                    default: qemu+tcp://192.168.122.1/system
                    description: URI is the identifier for the libvirtd connection.  It
                      must be reachable from both the host (where the installer is
                      run) and the cluster (where the cluster-API controller pod will
                      be running). Default is qemu+tcp://192.168.122.1/system
                    type: string
                  defaultMachinePlatform:
                    description: DefaultMachinePlatform is the default configuration
                      used when installing on libvirt for machine pools which do not
                      define their own platform configuration. Default will set the
                      image field to the latest RHCOS image.
                    type: object
                  network:
                    description: Network
                    properties:
                      dnsmasqOptions:
                        description: DnsmasqOptions is the dnsmasq options to be used
                          when installing on libvirt.
                        items:
                          description: DnsmasqOption contains the name and value of
                            the option to configure in the libvirt network.
                          properties:
                            name:
                              description: The dnsmasq option name. A full list of
                                options and an explanation for each can be found in
                                /etc/dnsmasq.conf
                              type: string
                            value:
                              description: The value that is being set for the particular
                                option.
                              type: string
                          type: object
                        type: array
                      if:
                        default: tt0
                        description: The interface make used for the network. Default
                          is tt0.
                        type: string
                    type: object
                type: object
              none:
                description: None is the empty configuration used when installing
                  on an unsupported platform.
                type: object
              nutanix:
                description: Nutanix is the configuration used when installing on
                  Nutanix.
                properties:
                  apiVIP:
                    description: 'DeprecatedAPIVIP is the virtual IP address for the
                      api endpoint Deprecated: use APIVIPs'
                    type: string
                  apiVIPs:
                    description: APIVIPs contains the VIP(s) for the api endpoint.
                      In dual stack clusters it contains an IPv4 and IPv6 address,
                      otherwise only one VIP
                    format: ip
                    items:
                      type: string
                    maxItems: 2
                    type: array
                    uniqueItems: true
                  clusterOSImage:
                    description: ClusterOSImage overrides the url provided in rhcos.json
                      to download the RHCOS Image.
                    type: string
                  defaultMachinePlatform:
                    description: DefaultMachinePlatform is the default configuration
                      used when installing on Nutanix for machine pools which do not
                      define their own platform configuration.
                    properties:
                      bootType:
                        description: BootType indicates the boot type (Legacy, UEFI
                          or SecureBoot) the Machine's VM uses to boot. If this field
                          is empty or omitted, the VM will use the default boot type
                          "Legacy" to boot. "SecureBoot" depends on "UEFI" boot, i.e.,
                          enabling "SecureBoot" means that "UEFI" boot is also enabled.
                        enum:
                        - ""
                        - Legacy
                        - UEFI
                        - SecureBoot
                        type: string
                      categories:
                        description: Categories optionally adds one or more prism
                          categories (each with key and value) for the Machine's VM
                          to associate with. All the category key and value pairs
                          specified must already exist in the prism central.
                        items:
                          description: NutanixCategory identifies a pair of prism
                            category key and value
                          properties:
                            key:
                              description: key is the prism category key name
                              maxLength: 64
                              minLength: 1
                              type: string
                            value:
                              description: value is the prism category value associated
                                with the key
                              maxLength: 64
                              minLength: 1
                              type: string
                          required:
                          - key
                          - value
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - key
                        x-kubernetes-list-type: map
                      coresPerSocket:
                        description: 'NumCoresPerSocket is the number of cores per
                          socket in a vm. The number of vCPUs on the vm will be NumCPUs
                          times NumCoresPerSocket. For example: 4 CPUs and 4 Cores
                          per socket will result in 16 VPUs. The AHV scheduler treats
                          socket and core allocation exactly the same so there is
                          no benefit to configuring cores over CPUs.'
                        format: int64
                        type: integer
                      cpus:
                        description: NumCPUs is the total number of virtual processor
                          cores to assign a vm.
                        format: int64
                        type: integer
                      failureDomains:
                        description: FailureDomains optionally configures a list of
                          failure domain names that will be applied to the MachinePool
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                      memoryMiB:
                        description: Memory is the size of a VM's memory in MiB.
                        format: int64
                        type: integer
                      osDisk:
                        description: OSDisk defines the storage for instance.
                        properties:
                          diskSizeGiB:
                            description: DiskSizeGiB defines the size of disk in GiB.
                            format: int64
                            type: integer
                        type: object
                      project:
                        description: Project optionally identifies a Prism project
                          for the Machine's VM to associate with.
                        properties:
                          name:
                            description: name is the resource name in the PC
                            type: string
                          type:
                            description: Type is the identifier type to use for this
                              resource.
                            enum:
                            - uuid
                            - name
                            type: string
                          uuid:
                            description: uuid is the UUID of the resource in the PC.
                            type: string
                        required:
                        - type
                        type: object
                    type: object
                  failureDomains:
                    description: FailureDomains configures failure domains for the
                      Nutanix platform.
                    items:
                      description: FailureDomain configures failure domain information
                        for the Nutanix platform.
                      properties:
                        name:
                          description: Name defines the unique name of a failure domain.
                          maxLength: 64
                          minLength: 1
                          pattern: ^[0-9A-Za-z_.-@/]+$
                          type: string
                        prismElement:
                          description: prismElement holds the identification (name,
                            uuid) and the optional endpoint address and port of the
                            Nutanix Prism Element. When a cluster-wide proxy is installed,
                            by default, this endpoint will be accessed via the proxy.
                            Should you wish for communication with this endpoint not
                            to be proxied, please add the endpoint to the proxy spec.noProxy
                            list.
                          properties:
                            endpoint:
                              description: Endpoint holds the address and port of
                                the Prism Element
                              properties:
                                address:
                                  description: address is the endpoint address (DNS
                                    name or IP address) of the Nutanix Prism Central
                                    or Element (cluster)
                                  type: string
                                port:
                                  description: port is the port number to access the
                                    Nutanix Prism Central or Element (cluster)
                                  format: int32
                                  type: integer
                              required:
                              - address
                              - port
                              type: object
                            name:
                              description: Name is prism endpoint Name
                              type: string
                            uuid:
                              description: UUID is the UUID of the Prism Element (cluster)
                              type: string
                          required:
                          - uuid
                          type: object
                        subnetUUIDs:
                          description: SubnetUUIDs identifies the network subnets
                            of the Prism Element. Currently we only support one subnet
                            for a failure domain.
                          items:
                            type: string
                          minItems: 1
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - name
                      - prismElement
                      - subnetUUIDs
                      type: object
                    type: array
                  ingressVIP:
                    description: 'DeprecatedIngressVIP is the virtual IP address for
                      ingress Deprecated: use IngressVIPs'
                    type: string
                  ingressVIPs:
                    description: IngressVIPs contains the VIP(s) for ingress. In dual
                      stack clusters it contains an IPv4 and IPv6 address, otherwise
                      only one VIP
                    format: ip
                    items:
                      type: string
                    maxItems: 2
                    type: array
                    uniqueItems: true
                  loadBalancer:
                    description: LoadBalancer defines how the load balancer used by
                      the cluster is configured. LoadBalancer is available in TechPreview.
                    properties:
                      type:
                        default: OpenShiftManagedDefault
                        description: type defines the type of load balancer used by
                          the cluster on Nutanix platform which can be a user-managed
                          or openshift-managed load balancer that is to be used for
                          the OpenShift API and Ingress endpoints. When set to OpenShiftManagedDefault
                          the static pods in charge of API and Ingress traffic load-balancing
                          defined in the machine config operator will be deployed.
                          When set to UserManaged these static pods will not be deployed
                          and it is expected that the load balancer is configured
                          out of band by the deployer. When omitted, this means no
                          opinion and the platform is left to choose a reasonable
                          default. The default value is OpenShiftManagedDefault.
                        enum:
                        - OpenShiftManagedDefault
                        - UserManaged
                        type: string
                    type: object
                  prismCentral:
                    description: PrismCentral is the endpoint (address and port) and
                      credentials to connect to the Prism Central. This serves as
                      the default Prism-Central.
                    properties:
                      endpoint:
                        description: Endpoint holds the address and port of the Prism
                          Central
                        properties:
                          address:
                            description: address is the endpoint address (DNS name
                              or IP address) of the Nutanix Prism Central or Element
                              (cluster)
                            type: string
                          port:
                            description: port is the port number to access the Nutanix
                              Prism Central or Element (cluster)
                            format: int32
                            type: integer
                        required:
                        - address
                        - port
                        type: object
                      password:
                        description: Password is the password for the user to connect
                          to the Prism Central
                        type: string
                      username:
                        description: Username is the name of the user to connect to
                          the Prism Central
                        type: string
                    required:
                    - endpoint
                    - password
                    - username
                    type: object
                  prismElements:
                    description: PrismElements holds a list of Prism Elements (clusters).
                      A Prism Element encompasses all Nutanix resources (VMs, subnets,
                      etc.) used to host the OpenShift cluster. Currently only a single
                      Prism Element may be defined. This serves as the default Prism-Element.
                    items:
                      description: PrismElement holds the uuid, endpoint of the Prism
                        Element (cluster)
                      properties:
                        endpoint:
                          description: Endpoint holds the address and port of the
                            Prism Element
                          properties:
                            address:
                              description: address is the endpoint address (DNS name
                                or IP address) of the Nutanix Prism Central or Element
                                (cluster)
                              type: string
                            port:
                              description: port is the port number to access the Nutanix
                                Prism Central or Element (cluster)
                              format: int32
                              type: integer
                          required:
                          - address
                          - port
                          type: object
                        name:
                          description: Name is prism endpoint Name
                          type: string
                        uuid:
                          description: UUID is the UUID of the Prism Element (cluster)
                          type: string
                      required:
                      - uuid
                      type: object
                    type: array
                  subnetUUIDs:
                    description: SubnetUUIDs identifies the network subnets to be
                      used by the cluster. Currently we only support one subnet for
                      an OpenShift cluster.
                    items:
                      type: string
                    type: array
                required:
                - prismCentral
                - prismElements
                - subnetUUIDs
                type: object
              openstack:
                description: OpenStack is the configuration used when installing on
                  OpenStack.
                properties:
                  apiFloatingIP:
                    description: APIFloatingIP is the IP address of an available floating
                      IP in your OpenStack cluster to associate with the OpenShift
                      API load balancer.
                    type: string
                  apiVIP:
                    description: 'DeprecatedAPIVIP is the static IP on the nodes subnet
                      that the api port for openshift will be assigned Default: will
                      be set to the 5 on the first entry in the machineNetwork CIDR
                      Deprecated: Use APIVIPs'
                    format: ip
                    type: string
                  apiVIPs:
                    description: 'APIVIPs contains the VIP(s) on the nodes subnet
                      that the api port for openshift will be assigned. In dual stack
                      clusters it contains an IPv4 and IPv6 address, otherwise only
                      one VIP Default: will be set to the 5 on the first entry in
                      the machineNetwork CIDR'
                    format: ip
                    items:
                      type: string
                    maxItems: 2
                    type: array
                    uniqueItems: true
                  cloud:
                    description: Cloud is the name of OpenStack cloud to use from
                      clouds.yaml.
                    type: string
                  clusterOSImage:
                    description: ClusterOSImage is either a URL with `http(s)` or
                      `file` scheme to override the default OS image for cluster nodes,
                      or an existing Glance image name.
                    type: string
                  clusterOSImageProperties:
                    additionalProperties:
                      type: string
                    description: 'ClusterOSImageProperties is a list of properties
                      to be added to the metadata of the uploaded Glance ClusterOSImage.
                      Default: the default is to not set any properties.'
                    type: object
                  computeFlavor:
                    description: 'DeprecatedFlavorName is the name of the flavor to
                      use for instances in this cluster. Deprecated: use FlavorName
                      in DefaultMachinePlatform to define default flavor.'
                    type: string
                  controlPlanePort:
                    description: ControlPlanePort contains details of the network
                      attached to the control plane port, with the network either
                      containing one openstack subnet for IPv4 or two openstack subnets
                      for dualstack clusters. Providing this configuration will prevent
                      OpenShift from managing or updating this network and its subnets.
                      The network and its subnets will be used during creation of
                      all nodes.
                    properties:
                      fixedIPs:
                        description: Specify subnets of the network where control
                          plane port will be discovered.
                        items:
                          description: FixedIP identifies a subnet defined by a subnet
                            filter.
                          properties:
                            subnet:
                              description: SubnetFilter defines a subnet by ID and/or
                                name.
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                              type: object
                          required:
                          - subnet
                          type: object
                        type: array
                      network:
                        description: Network is a query for an openstack network that
                          the port will be discovered on. This will fail if the query
                          returns more than one network.
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                        type: object
                    required:
                    - fixedIPs
                    type: object
                  defaultMachinePlatform:
                    description: DefaultMachinePlatform is the default configuration
                      used when installing on OpenStack for machine pools which do
                      not define their own platform configuration.
                    properties:
                      additionalNetworkIDs:
                        description: AdditionalNetworkIDs contains IDs of additional
                          networks for machines, where each ID is presented in UUID
                          v4 format. Allowed address pairs won't be created for the
                          additional networks.
                        items:
                          type: string
                        type: array
                      additionalSecurityGroupIDs:
                        description: AdditionalSecurityGroupIDs contains IDs of additional
                          security groups for machines, where each ID is presented
                          in UUID v4 format.
                        items:
                          type: string
                        type: array
                      rootVolume:
                        description: RootVolume defines the root volume for instances
                          in the machine pool. The instances use ephemeral disks if
                          not set.
                        properties:
                          size:
                            description: Size defines the size of the volume in gibibytes
                              (GiB). Required
                            type: integer
                          type:
                            description: 'Type defines the type of the volume. Deprecated:
                              Use Types instead.'
                            type: string
                          types:
                            description: Types is the list of the volume types of
                              the root volumes. This is mutually exclusive with Type.
                            items:
                              type: string
                            type: array
                          zones:
                            description: Zones is the list of availability zones where
                              the root volumes should be deployed. If no zones are
                              provided, all instances will be deployed on OpenStack
                              Cinder default availability zone
                            items:
                              type: string
                            type: array
                        required:
                        - size
                        - types
                        type: object
                      serverGroupPolicy:
                        description: ServerGroupPolicy will be used to create the
                          Server Group that will contain all the machines of this
                          MachinePool. Defaults to "soft-anti-affinity".
                        enum:
                        - ""
                        - affinity
                        - soft-affinity
                        - anti-affinity
                        - soft-anti-affinity
                        type: string
                      type:
                        description: FlavorName defines the OpenStack Nova flavor.
                          eg. m1.large
                        type: string
                      zones:
                        description: Zones is the list of availability zones where
                          the instances should be deployed. If no zones are provided,
                          all instances will be deployed on OpenStack Nova default
                          availability zone
                        items:
                          type: string
                        type: array
                    required:
                    - type
                    type: object
                  externalDNS:
                    description: ExternalDNS holds the IP addresses of dns servers
                      that will be added to the dns resolution of all instances in
                      the cluster.
                    items:
                      type: string
                    type: array
                  externalNetwork:
                    description: ExternalNetwork is name of the external network in
                      your OpenStack cluster.
                    type: string
                  ingressFloatingIP:
                    description: IngressFloatingIP is the ID of an available floating
                      IP in your OpenStack cluster that will be associated with the
                      OpenShift ingress port
                    type: string
                  ingressVIP:
                    description: 'DeprecatedIngressVIP is the static IP on the nodes
                      subnet that the apps port for openshift will be assigned Default:
                      will be set to the 7 on the first entry in the machineNetwork
                      CIDR Deprecated: Use IngressVIPs'
                    format: ip
                    type: string
                  ingressVIPs:
                    description: 'IngressVIPs contains the VIP(s) on the nodes subnet
                      that the apps port for openshift will be assigned. In dual stack
                      clusters it contains an IPv4 and IPv6 address, otherwise only
                      one VIP Default: will be set to the 7 on the first entry in
                      the machineNetwork CIDR'
                    format: ip
                    items:
                      type: string
                    maxItems: 2
                    type: array
                    uniqueItems: true
                  lbFloatingIP:
                    description: 'LbFloatingIP is the IP address of an available floating
                      IP in your OpenStack cluster to associate with the OpenShift
                      load balancer. Deprecated: this value has been renamed to apiFloatingIP.'
                    type: string
                  loadBalancer:
                    description: LoadBalancer defines how the load balancer used by
                      the cluster is configured.
                    properties:
                      type:
                        default: OpenShiftManagedDefault
                        description: type defines the type of load balancer used by
                          the cluster on OpenStack platform which can be a user-managed
                          or openshift-managed load balancer that is to be used for
                          the OpenShift API and Ingress endpoints. When set to OpenShiftManagedDefault
                          the static pods in charge of API and Ingress traffic load-balancing
                          defined in the machine config operator will be deployed.
                          When set to UserManaged these static pods will not be deployed
                          and it is expected that the load balancer is configured
                          out of band by the deployer. When omitted, this means no
                          opinion and the platform is left to choose a reasonable
                          default. The default value is OpenShiftManagedDefault.
                        enum:
                        - OpenShiftManagedDefault
                        - UserManaged
                        type: string
                    type: object
                  machinesSubnet:
                    description: 'DeprecatedMachinesSubnet is a string of the UUIDv4
                      of an openstack subnet. This subnet will be used by all nodes
                      created by the installer. By setting this, the installer will
                      no longer create a network and subnet. The subnet and network
                      specified in MachinesSubnet will not be deleted or modified
                      by the installer. Deprecated: Use ControlPlanePort'
                    type: string
                  octaviaSupport:
                    description: 'OctaviaSupport holds a `0` or `1` value that indicates
                      whether your OpenStack cluster supports Octavia Loadbalancing.
                      Deprecated: this value is set by the installer automatically.'
                    type: string
                  region:
                    description: 'Region specifies the OpenStack region where the
                      cluster will be created. Deprecated: this value is not used
                      by the installer.'
                    type: string
                  trunkSupport:
                    description: 'TrunkSupport holds a `0` or `1` value that indicates
                      whether or not to use trunk ports in your OpenShift cluster.
                      Deprecated: this value is set by the installer automatically.'
                    type: string
                required:
                - cloud
                type: object
              ovirt:
                description: Ovirt is the configuration used when installing on oVirt.
                properties:
                  affinityGroups:
                    description: AffinityGroups contains the RHV affinity groups that
                      the installer will create.
                    items:
                      description: AffinityGroup defines the affinity group that the
                        installer will create
                      properties:
                        description:
                          description: Description of the affinity group
                          type: string
                        enforcing:
                          description: Enforcing whether to create a hard affinity
                            rule, default is false
                          type: boolean
                        name:
                          description: Name name of the affinity group
                          type: string
                        priority:
                          description: Priority of the affinity group, needs to be
                            between 1 (lowest) - 5 (highest)
                          type: integer
                      required:
                      - name
                      - priority
                      type: object
                    type: array
                  api_vip:
                    description: 'DeprecatedAPIVIP is an IP which will be served by
                      bootstrap and then pivoted masters, using keepalived Deprecated:
                      Use APIVIPs'
                    format: ip
                    type: string
                  api_vips:
                    description: APIVIPs contains the VIP(s) which will be served
                      by bootstrap and then pivoted masters, using keepalived. In
                      dual stack clusters it contains an IPv4 and IPv6 address, otherwise
                      only one VIP
                    format: ip
                    items:
                      type: string
                    maxItems: 2
                    type: array
                    uniqueItems: true
                  defaultMachinePlatform:
                    description: DefaultMachinePlatform is the default configuration
                      used when installing on ovirt for machine pools which do not
                      define their own platform configuration. Default will set the
                      image field to the latest RHCOS image.
                    properties:
                      affinityGroupsNames:
                        description: AffinityGroupsNames contains a list of oVirt
                          affinity group names that the newly created machines will
                          join. The affinity groups should exist on the oVirt cluster
                          or created by the OpenShift installer.
                        items:
                          type: string
                        type: array
                      autoPinningPolicy:
                        description: AutoPinningPolicy defines the policy to automatically
                          set the CPU and NUMA including pinning to the host for the
                          instance. When the field is omitted the default will be
                          "none".
                        enum:
                        - none
                        - resize_and_pin
                        type: string
                      clone:
                        description: "Clone makes sure that the disks are cloned from
                          the template and are not linked. Defaults to true for high
                          performance and server VM types, false for desktop types.
                          \n Note: this option is not documented in the OpenShift
                          documentation. This is intentional as it has sane defaults
                          that shouldn't be changed unless needed for debugging or
                          resolving issues in cooperation with Red Hat support."
                        type: boolean
                      cpu:
                        description: CPU defines the VM CPU.
                        properties:
                          cores:
                            description: Cores is the number of cores per socket.
                              Total CPUs is (Sockets * Cores)
                            format: int32
                            type: integer
                          sockets:
                            description: Sockets is the number of sockets for a VM.
                              Total CPUs is (Sockets * Cores)
                            format: int32
                            type: integer
                          threads:
                            description: Threads is the number of CPU threads.
                            format: int32
                            type: integer
                        required:
                        - cores
                        - sockets
                        - threads
                        type: object
                      format:
                        description: Format is the disk format that the disks are
                          in. Can be "cow" or "raw". "raw" disables several features
                          that may be needed, such as incremental backups.
                        enum:
                        - ""
                        - raw
                        - cow
                        type: string
                      hugepages:
                        description: Hugepages is the size of a VM's hugepages to
                          use in KiBs.
                        enum:
                        - 2048
                        - 1048576
                        format: int32
                        type: integer
                      instanceTypeID:
                        description: InstanceTypeID defines the VM instance type and
                          overrides the hardware parameters of the created VM, including
                          cpu and memory. If InstanceTypeID is passed, all memory
                          and cpu variables will be ignored.
                        type: string
                      memoryMB:
                        description: MemoryMB is the size of a VM's memory in MiBs.
                        format: int32
                        type: integer
                      osDisk:
                        description: OSDisk is the the root disk of the node.
                        properties:
                          sizeGB:
                            description: SizeGB size of the bootable disk in GiB.
                            format: int64
                            type: integer
                        required:
                        - sizeGB
                        type: object
                      sparse:
                        description: Sparse indicates that sparse provisioning should
                          be used and disks should be not preallocated.
                        type: boolean
                      vmType:
                        description: VMType defines the workload type of the VM.
                        enum:
                        - ""
                        - desktop
                        - server
                        - high_performance
                        type: string
                    type: object
                  ingress_vip:
                    description: 'IngressIP is an external IP which routes to the
                      default ingress controller. The IP is a suitable target of a
                      wildcard DNS record used to resolve default route host names.
                      Deprecated: Use IngressVIPs'
                    format: ip
                    type: string
                  ingress_vips:
                    description: IngressVIPs are external IP(s) which route to the
                      default ingress controller. The VIPs are suitable targets of
                      wildcard DNS records used to resolve default route host names.
                      In dual stack clusters it contains an IPv4 and IPv6 address,
                      otherwise only one VIP
                    format: ip
                    items:
                      type: string
                    maxItems: 2
                    type: array
                    uniqueItems: true
                  loadBalancer:
                    description: LoadBalancer defines how the load balancer used by
                      the cluster is configured. LoadBalancer is available in TechPreview.
                    properties:
                      type:
                        default: OpenShiftManagedDefault
                        description: type defines the type of load balancer used by
                          the cluster on Ovirt platform which can be a user-managed
                          or openshift-managed load balancer that is to be used for
                          the OpenShift API and Ingress endpoints. When set to OpenShiftManagedDefault
                          the static pods in charge of API and Ingress traffic load-balancing
                          defined in the machine config operator will be deployed.
                          When set to UserManaged these static pods will not be deployed
                          and it is expected that the load balancer is configured
                          out of band by the deployer. When omitted, this means no
                          opinion and the platform is left to choose a reasonable
                          default. The default value is OpenShiftManagedDefault.
                        enum:
                        - OpenShiftManagedDefault
                        - UserManaged
                        type: string
                    type: object
                  ovirt_cluster_id:
                    description: The target cluster under which all VMs will run
                    type: string
                  ovirt_network_name:
                    description: NetworkName is the target network of all the network
                      interfaces of the nodes. When no ovirt_network_name is provided
                      it defaults to `ovirtmgmt` network, which is a default network
                      for every ovirt cluster.
                    type: string
                  ovirt_storage_domain_id:
                    description: The target storage domain under which all VM disk
                      would be created.
                    type: string
                  vnicProfileID:
                    description: VNICProfileID defines the VNIC profile ID to use
                      the the VM network interfaces. When no vnicProfileID is provided
                      it will be set to the profile of the network. If there are multiple
                      profiles for the network, the installer requires you to explicitly
                      set the vnicProfileID.
                    type: string
                required:
                - ovirt_cluster_id
                - ovirt_storage_domain_id
                type: object
              powervs:
                description: PowerVS is the configuration used when installing on
                  Power VS.
                properties:
                  clusterOSImage:
                    description: ClusterOSImage is a pre-created Power VS boot image
                      that overrides the default image for cluster nodes.
                    type: string
                  defaultMachinePlatform:
                    description: DefaultMachinePlatform is the default configuration
                      used when installing on Power VS for machine pools which do
                      not define their own platform configuration.
                    properties:
                      memoryGiB:
                        description: memoryGiB is the size of a virtual machine's
                          memory, in GiB.
                        format: int32
                        type: integer
                      procType:
                        description: ProcType defines the processor sharing model
                          for the instance. Must be one of {Capped, Dedicated, Shared}.
                        enum:
                        - Dedicated
                        - Shared
                        - Capped
                        - ""
                        type: string
                      processors:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Processors defines the processing units for the
                          instance.
                        x-kubernetes-int-or-string: true
                      smtLevel:
                        description: SMTLevel specifies the level of SMT to set the
                          control plane and worker nodes to.
                        type: string
                      sysType:
                        description: SysType defines the system type for instance.
                        type: string
                      volumeIDs:
                        description: VolumeIDs is the list of volumes attached to
                          the instance.
                        items:
                          type: string
                        type: array
                    type: object
                  powervsResourceGroup:
                    description: PowerVSResourceGroup is the resource group in which
                      Power VS resources will be created.
                    type: string
                  region:
                    description: Region specifies the IBM Cloud colo region where
                      the cluster will be created.
                    type: string
                  serviceInstanceGUID:
                    description: ServiceInstanceGUID is the GUID of the Power IAAS
                      instance created from the IBM Cloud Catalog before the cluster
                      is completed.  Leave unset to allow the installer to create
                      a service instance during cluster creation.
                    type: string
                  userID:
                    description: UserID is the login for the user's IBM Cloud account.
                    type: string
                  vpcName:
                    description: VPCName is the name of a pre-created VPC inside IBM
                      Cloud.
                    type: string
                  vpcRegion:
                    description: VPCRegion specifies the IBM Cloud region in which
                      to create VPC resources. Leave unset to allow installer to select
                      the closest VPC region.
                    type: string
                  vpcSubnets:
                    description: VPCSubnets specifies existing subnets (by ID) where
                      cluster resources will be created.  Leave unset to have the
                      installer create subnets in a new VPC on your behalf.
                    items:
                      type: string
                    type: array
                  zone:
                    description: Zone specifies the IBM Cloud colo region where the
                      cluster will be created. At this time, only single-zone clusters
                      are supported.
                    type: string
                required:
                - powervsResourceGroup
                - userID
                - zone
                type: object
              vsphere:
                description: VSphere is the configuration used when installing on
                  vSphere.
                properties:
                  apiVIP:
                    description: 'DeprecatedAPIVIP is the virtual IP address for the
                      api endpoint Deprecated: Use APIVIPs'
                    type: string
                  apiVIPs:
                    description: APIVIPs contains the VIP(s) for the api endpoint.
                      In dual stack clusters it contains an IPv4 and IPv6 address,
                      otherwise only one VIP
                    format: ip
                    items:
                      type: string
                    maxItems: 2
                    type: array
                    uniqueItems: true
                  cluster:
                    description: 'Cluster is the name of the cluster virtual machines
                      will be cloned into. Deprecated: Use FailureDomains.Topology.Cluster'
                    type: string
                  clusterOSImage:
                    description: ClusterOSImage overrides the url provided in rhcos.json
                      to download the RHCOS OVA
                    type: string
                  datacenter:
                    description: 'Datacenter is the name of the datacenter to use
                      in the vCenter. Deprecated: Use FailureDomains.Topology.Datacenter'
                    type: string
                  defaultDatastore:
                    description: 'DefaultDatastore is the default datastore to use
                      for provisioning volumes. Deprecated: Use FailureDomains.Topology.Datastore'
                    type: string
                  defaultMachinePlatform:
                    description: DefaultMachinePlatform is the default configuration
                      used when installing on VSphere for machine pools which do not
                      define their own platform configuration.
                    properties:
                      coresPerSocket:
                        description: NumCoresPerSocket is the number of cores per
                          socket in a vm. The number of vCPUs on the vm will be NumCPUs/NumCoresPerSocket.
                        format: int32
                        type: integer
                      cpus:
                        description: NumCPUs is the total number of virtual processor
                          cores to assign a vm.
                        format: int32
                        type: integer
                      memoryMB:
                        description: Memory is the size of a VM's memory in MB.
                        format: int64
                        type: integer
                      osDisk:
                        description: OSDisk defines the storage for instance.
                        properties:
                          diskSizeGB:
                            description: DiskSizeGB defines the size of disk in GB.
                            format: int32
                            type: integer
                        type: object
                      zones:
                        description: Zones defines available zones Zones is available
                          in TechPreview.
                        items:
                          type: string
                        type: array
                    type: object
                  diskType:
                    description: DiskType is the name of the disk provisioning type,
                      valid values are thin, thick, and eagerZeroedThick. When not
                      specified, it will be set according to the default storage policy
                      of vsphere.
                    enum:
                    - ""
                    - thin
                    - thick
                    - eagerZeroedThick
                    type: string
                  failureDomains:
                    description: FailureDomains holds the VSpherePlatformFailureDomainSpec
                      which contains the definition of region, zone and the vCenter
                      topology. If this is omitted failure domains (regions and zones)
                      will not be used.
                    items:
                      description: FailureDomain holds the region and zone failure
                        domain and the vCenter topology of that failure domain.
                      properties:
                        name:
                          description: name defines the name of the FailureDomain
                            This name is arbitrary but will be used in VSpherePlatformDeploymentZone
                            for association.
                          maxLength: 256
                          minLength: 1
                          type: string
                        region:
                          description: region defines a FailureDomainCoordinate which
                            includes the name of the vCenter tag, the failure domain
                            type and the name of the vCenter tag category.
                          type: string
                        server:
                          description: server is the fully-qualified domain name or
                            the IP address of the vCenter server.
                          maxLength: 255
                          minLength: 1
                          type: string
                        topology:
                          description: Topology describes a given failure domain using
                            vSphere constructs
                          properties:
                            computeCluster:
                              description: computeCluster as the failure domain This
                                is required to be a path
                              maxLength: 2048
                              minLength: 1
                              type: string
                            datacenter:
                              description: datacenter is the vCenter datacenter in
                                which virtual machines will be located and defined
                                as the failure domain.
                              maxLength: 80
                              minLength: 1
                              type: string
                            datastore:
                              description: datastore is the name or inventory path
                                of the datastore in which the virtual machine is created/located.
                              maxLength: 2048
                              minLength: 1
                              type: string
                            folder:
                              description: folder is the inventory path of the folder
                                in which the virtual machine is created/located.
                              maxLength: 2048
                              minLength: 1
                              pattern: ^/.*?/vm/.*?
                              type: string
                            networks:
                              description: networks is the list of networks within
                                this failure domain
                              items:
                                type: string
                              type: array
                            resourcePool:
                              description: resourcePool is the absolute path of the
                                resource pool where virtual machines will be created.
                                The absolute path is of the form /<datacenter>/host/<cluster>/Resources/<resourcepool>.
                              maxLength: 2048
                              minLength: 1
                              pattern: ^/.*?/host/.*?/Resources.*
                              type: string
                            template:
                              description: template is the inventory path of the virtual
                                machine or template that will be used for cloning.
                              maxLength: 2048
                              minLength: 1
                              pattern: ^/.*?/vm/.*?
                              type: string
                          required:
                          - computeCluster
                          - datacenter
                          - datastore
                          type: object
                        zone:
                          description: zone defines a VSpherePlatformFailureDomain
                            which includes the name of the vCenter tag, the failure
                            domain type and the name of the vCenter tag category.
                          type: string
                      required:
                      - name
                      - region
                      - server
                      - topology
                      - zone
                      type: object
                    type: array
                  folder:
                    description: 'Folder is the absolute path of the folder that will
                      be used and/or created for virtual machines. The absolute path
                      is of the form /<datacenter>/vm/<folder>/<subfolder>. Deprecated:
                      Use FailureDomains.Topology.Folder'
                    pattern: ^/.*?/vm/.*?
                    type: string
                  hosts:
                    description: Hosts defines network configurations to be applied
                      by the installer. Hosts is available in TechPreview.
                    items:
                      description: Host defines host VMs to generate as part of the
                        installation.
                      properties:
                        failureDomain:
                          description: FailureDomain refers to the name of a FailureDomain
                            as described in https://github.com/openshift/enhancements/blob/master/enhancements/installer/vsphere-ipi-zonal.md
                          type: string
                        networkDevice:
                          description: NetworkDeviceSpec to be applied to the host
                          properties:
                            gateway:
                              description: gateway is an IPv4 or IPv6 address which
                                represents the subnet gateway, for example, 192.168.1.1.
                              format: ipv6
                              type: string
                            ipAddrs:
                              description: ipAddrs is a list of one or more IPv4 and/or
                                IPv6 addresses and CIDR to assign to this device,
                                for example, 192.168.1.100/24. IP addresses provided
                                via ipAddrs are intended to allow explicit assignment
                                of a machine's IP address.
                              format: ipv6
                              items:
                                type: string
                              type: array
                            nameservers:
                              description: nameservers is a list of IPv4 and/or IPv6
                                addresses used as DNS nameservers, for example, 8.8.8.8.
                                a nameserver is not provided by a fulfilled IPAddressClaim.
                                If DHCP is not the source of IP addresses for this
                                network device, nameservers should include a valid
                                nameserver.
                              format: ipv6
                              items:
                                type: string
                              type: array
                          required:
                          - ipAddrs
                          type: object
                        role:
                          description: Role defines the role of the node
                          enum:
                          - ""
                          - bootstrap
                          - control-plane
                          - compute
                          type: string
                      required:
                      - networkDevice
                      - role
                      type: object
                    type: array
                  ingressVIP:
                    description: 'DeprecatedIngressVIP is the virtual IP address for
                      ingress Deprecated: Use IngressVIPs'
                    type: string
                  ingressVIPs:
                    description: IngressVIPs contains the VIP(s) for ingress. In dual
                      stack clusters it contains an IPv4 and IPv6 address, otherwise
                      only one VIP
                    format: ip
                    items:
                      type: string
                    maxItems: 2
                    type: array
                    uniqueItems: true
                  loadBalancer:
                    description: LoadBalancer defines how the load balancer used by
                      the cluster is configured. LoadBalancer is available in TechPreview.
                    properties:
                      type:
                        default: OpenShiftManagedDefault
                        description: type defines the type of load balancer used by
                          the cluster on VSphere platform which can be a user-managed
                          or openshift-managed load balancer that is to be used for
                          the OpenShift API and Ingress endpoints. When set to OpenShiftManagedDefault
                          the static pods in charge of API and Ingress traffic load-balancing
                          defined in the machine config operator will be deployed.
                          When set to UserManaged these static pods will not be deployed
                          and it is expected that the load balancer is configured
                          out of band by the deployer. When omitted, this means no
                          opinion and the platform is left to choose a reasonable
                          default. The default value is OpenShiftManagedDefault.
                        enum:
                        - OpenShiftManagedDefault
                        - UserManaged
                        type: string
                    type: object
                  network:
                    description: 'Network specifies the name of the network to be
                      used by the cluster. Deprecated: Use FailureDomains.Topology.Network'
                    type: string
                  password:
                    description: 'Password is the password for the user to use to
                      connect to the vCenter. Deprecated: Use VCenters.Password'
                    type: string
                  resourcePool:
                    description: 'ResourcePool is the absolute path of the resource
                      pool where virtual machines will be created. The absolute path
                      is of the form /<datacenter>/host/<cluster>/Resources/<resourcepool>.
                      Deprecated: Use FailureDomains.Topology.ResourcePool'
                    type: string
                  username:
                    description: 'Username is the name of the user to use to connect
                      to the vCenter. Deprecated: Use VCenters.Username'
                    type: string
                  vCenter:
                    description: 'VCenter is the domain name or IP address of the
                      vCenter. Deprecated: Use VCenters.Server'
                    type: string
                  vcenters:
                    description: VCenters holds the connection details for services
                      to communicate with vCenter. Currently only a single vCenter
                      is supported.
                    items:
                      description: VCenter stores the vCenter connection fields https://github.com/kubernetes/cloud-provider-vsphere/blob/master/pkg/common/config/types_yaml.go
                      properties:
                        datacenters:
                          description: Datacenter in which VMs are located.
                          items:
                            type: string
                          minItems: 1
                          type: array
                        password:
                          description: Password is the password for the user to use
                            to connect to the vCenter.
                          type: string
                        port:
                          default: 443
                          description: port is the TCP port that will be used to communicate
                            to the vCenter endpoint. This is typically unchanged from
                            the default of HTTPS TCP/443.
                          format: int32
                          maximum: 32767
                          minimum: 1
                          type: integer
                        server:
                          description: server is the fully-qualified domain name or
                            the IP address of the vCenter server.
                          maxLength: 255
                          type: string
                        user:
                          description: Username is the username that will be used
                            to connect to vCenter
                          type: string
                      required:
                      - datacenters
                      - password
                      - server
                      - user
                      type: object
                    maxItems: 1
                    minItems: 1
                    type: array
                type: object
            type: object
          proxy:
            description: Proxy defines the proxy settings for the cluster. If unset,
              the cluster will not be configured to use a proxy.
            properties:
              httpProxy:
                description: HTTPProxy is the URL of the proxy for HTTP requests.
                type: string
              httpsProxy:
                description: HTTPSProxy is the URL of the proxy for HTTPS requests.
                type: string
              noProxy:
                description: NoProxy is a comma-separated list of domains and CIDRs
                  for which the proxy should not be used.
                type: string
            type: object
          publish:
            default: External
            description: Publish controls how the user facing endpoints of the cluster
              like the Kubernetes API, OpenShift routes etc. are exposed. When no
              strategy is specified, the strategy is "External".
            enum:
            - ""
            - External
            - Internal
            type: string
          pullSecret:
            description: PullSecret is the secret to use when pulling images.
            type: string
          sshKey:
            description: SSHKey is the public Secure Shell (SSH) key to provide access
              to instances.
            type: string
        required:
        - baseDomain
        - metadata
        - platform
        - pullSecret
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
