apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
    control-plane: controller-manager
  name: capx-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
    cluster.x-k8s.io/v1beta1: v1beta1
  name: nutanixclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: NutanixCluster
    listKind: NutanixClusterList
    plural: nutanixclusters
    shortNames:
    - ncl
    singular: nutanixcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: ControlplaneEndpoint
      jsonPath: .spec.controlPlaneEndpoint.host
      name: ControlplaneEndpoint
      type: string
    - description: in ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: NutanixCluster FailureDomains
      jsonPath: .status.failureDomains
      name: FailureDomains
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: NutanixCluster is the Schema for the nutanixclusters API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NutanixClusterSpec defines the desired state of NutanixCluster
            properties:
              controlPlaneEndpoint:
                description: |-
                  ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                  host can be either DNS name or ip address
                properties:
                  host:
                    description: host is the hostname on which the API server is serving.
                    maxLength: 512
                    type: string
                  port:
                    description: port is the port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              controlPlaneFailureDomains:
                description: |-
                  controlPlaneFailureDomains configures references to the NutanixFailureDomain objects
                  that the cluster uses to deploy its control-plane machines.
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              failureDomains:
                description: |-
                  failureDomains configures failure domains information for the Nutanix platform.
                  When set, the failure domains defined here may be used to spread Machines across
                  prism element clusters to improve fault tolerance of the cluster.

                  Deprecated: This field is replaced by the field controlPlaneFailureDomains and will be removed in the next apiVersion.
                items:
                  description: |-
                    NutanixFailureDomainConfig configures failure domain information for Nutanix.

                    Deprecated: This type is replaced by the NutanixFailureDomain CRD type and will be removed in the next apiVersion.
                  properties:
                    cluster:
                      description: |-
                        cluster is to identify the cluster (the Prism Element under management of the Prism Central),
                        in which the Machine's VM will be created. The cluster identifier (uuid or name) can be obtained
                        from the Prism Central console or using the prism_central API.
                      properties:
                        name:
                          description: name is the resource name in the PC
                          type: string
                        type:
                          description: Type is the identifier type to use for this
                            resource.
                          enum:
                          - uuid
                          - name
                          type: string
                        uuid:
                          description: uuid is the UUID of the resource in the PC.
                          type: string
                      required:
                      - type
                      type: object
                    controlPlane:
                      description: indicates if a failure domain is suited for control
                        plane nodes
                      type: boolean
                    name:
                      description: |-
                        name defines the unique name of a failure domain.
                        Name is required and must be at most 64 characters in length.
                        It must consist of only lower case alphanumeric characters and hyphens (-).
                        It must start and end with an alphanumeric character.
                        This value is arbitrary and is used to identify the failure domain within the platform.
                      maxLength: 64
                      minLength: 1
                      pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                      type: string
                    subnets:
                      description: |-
                        subnets holds a list of identifiers (one or more) of the cluster's network subnets
                        for the Machine's VM to connect to. The subnet identifiers (uuid or name) can be
                        obtained from the Prism Central console or using the prism_central API.
                      items:
                        description: NutanixResourceIdentifier holds the identity
                          of a Nutanix PC resource (cluster, image, subnet, etc.)
                        properties:
                          name:
                            description: name is the resource name in the PC
                            type: string
                          type:
                            description: Type is the identifier type to use for this
                              resource.
                            enum:
                            - uuid
                            - name
                            type: string
                          uuid:
                            description: uuid is the UUID of the resource in the PC.
                            type: string
                        required:
                        - type
                        type: object
                      minItems: 1
                      type: array
                  required:
                  - cluster
                  - controlPlane
                  - name
                  - subnets
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              prismCentral:
                description: |-
                  prismCentral holds the endpoint address and port to access the Nutanix Prism Central.
                  When a cluster-wide proxy is installed, by default, this endpoint will be accessed via the proxy.
                  Should you wish for communication with this endpoint not to be proxied, please add the endpoint to the
                  proxy spec.noProxy list.
                properties:
                  additionalTrustBundle:
                    description: |-
                      AdditionalTrustBundle is a PEM encoded x509 cert for the RootCA that was used to create the certificate
                      for a Prism Central that uses certificates that were issued by a non-publicly trusted RootCA. The trust
                      bundle is added to the cert pool used to authenticate the TLS connection to the Prism Central.
                    properties:
                      data:
                        description: Data of the trust bundle if Kind is String.
                        type: string
                      kind:
                        description: Kind of the Nutanix trust bundle
                        enum:
                        - String
                        - ConfigMap
                        type: string
                      name:
                        description: Name of the credential.
                        type: string
                      namespace:
                        description: namespace of the credential.
                        type: string
                    required:
                    - kind
                    type: object
                  address:
                    anyOf:
                    - format: hostname
                    - format: ipv4
                    - format: ipv6
                    description: address is the endpoint address (DNS name or IP address)
                      of the Nutanix Prism Central or Element (cluster)
                    maxLength: 256
                    type: string
                  credentialRef:
                    description: Pass credential information for the target Prism
                      instance
                    properties:
                      kind:
                        description: Kind of the Nutanix credential
                        enum:
                        - Secret
                        type: string
                      name:
                        description: Name of the credential.
                        minLength: 1
                        type: string
                      namespace:
                        description: namespace of the credential.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  insecure:
                    default: false
                    description: use insecure connection to Prism endpoint
                    type: boolean
                  port:
                    default: 9440
                    description: port is the port number to access the Nutanix Prism
                      Central or Element (cluster)
                    format: int32
                    maximum: 65535
                    minimum: 1
                    type: integer
                required:
                - address
                - port
                type: object
            type: object
            x-kubernetes-validations:
            - message: Cannot set both 'failureDomains' and 'controlPlaneFailureDomains'
                fields simultaneously. Use 'controlPlaneFailureDomains' as 'failureDomains'
                is deprecated.
              rule: '!(has(self.failureDomains) && has(self.controlPlaneFailureDomains))'
          status:
            description: NutanixClusterStatus defines the observed state of NutanixCluster
            properties:
              conditions:
                description: Conditions defines current service state of the NutanixCluster.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This field may be empty.
                      maxLength: 10240
                      minLength: 1
                      type: string
                    reason:
                      description: |-
                        reason is the reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      maxLength: 256
                      minLength: 1
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      maxLength: 32
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureDomains:
                additionalProperties:
                  description: |-
                    FailureDomainSpec is the Schema for Cluster API failure domains.
                    It allows controllers to understand how many failure domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: controlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: |-
                  failureDomains are a list of failure domains configured in the
                  cluster's spec and validated by the cluster controller.
                type: object
              failureMessage:
                description: Will be set in case of failure of Cluster instance
                type: string
              failureReason:
                description: Will be set in case of failure of Cluster instance
                type: string
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
    cluster.x-k8s.io/v1beta1: v1beta1
  name: nutanixclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: NutanixClusterTemplate
    listKind: NutanixClusterTemplateList
    plural: nutanixclustertemplates
    singular: nutanixclustertemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: NutanixClusterTemplate is the Schema for the nutanixclustertemplates
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NutanixClusterTemplateSpec defines the desired state of NutanixClusterTemplate
            properties:
              template:
                description: NutanixClusterTemplateResource describes the data needed
                  to create a NutanixCluster from a template.
                properties:
                  spec:
                    description: NutanixClusterSpec defines the desired state of NutanixCluster
                    properties:
                      controlPlaneEndpoint:
                        description: |-
                          ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                          host can be either DNS name or ip address
                        properties:
                          host:
                            description: host is the hostname on which the API server
                              is serving.
                            maxLength: 512
                            type: string
                          port:
                            description: port is the port on which the API server
                              is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      controlPlaneFailureDomains:
                        description: |-
                          controlPlaneFailureDomains configures references to the NutanixFailureDomain objects
                          that the cluster uses to deploy its control-plane machines.
                        items:
                          description: |-
                            LocalObjectReference contains enough information to let you locate the
                            referenced object inside the same namespace.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      failureDomains:
                        description: |-
                          failureDomains configures failure domains information for the Nutanix platform.
                          When set, the failure domains defined here may be used to spread Machines across
                          prism element clusters to improve fault tolerance of the cluster.

                          Deprecated: This field is replaced by the field controlPlaneFailureDomains and will be removed in the next apiVersion.
                        items:
                          description: |-
                            NutanixFailureDomainConfig configures failure domain information for Nutanix.

                            Deprecated: This type is replaced by the NutanixFailureDomain CRD type and will be removed in the next apiVersion.
                          properties:
                            cluster:
                              description: |-
                                cluster is to identify the cluster (the Prism Element under management of the Prism Central),
                                in which the Machine's VM will be created. The cluster identifier (uuid or name) can be obtained
                                from the Prism Central console or using the prism_central API.
                              properties:
                                name:
                                  description: name is the resource name in the PC
                                  type: string
                                type:
                                  description: Type is the identifier type to use
                                    for this resource.
                                  enum:
                                  - uuid
                                  - name
                                  type: string
                                uuid:
                                  description: uuid is the UUID of the resource in
                                    the PC.
                                  type: string
                              required:
                              - type
                              type: object
                            controlPlane:
                              description: indicates if a failure domain is suited
                                for control plane nodes
                              type: boolean
                            name:
                              description: |-
                                name defines the unique name of a failure domain.
                                Name is required and must be at most 64 characters in length.
                                It must consist of only lower case alphanumeric characters and hyphens (-).
                                It must start and end with an alphanumeric character.
                                This value is arbitrary and is used to identify the failure domain within the platform.
                              maxLength: 64
                              minLength: 1
                              pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?'
                              type: string
                            subnets:
                              description: |-
                                subnets holds a list of identifiers (one or more) of the cluster's network subnets
                                for the Machine's VM to connect to. The subnet identifiers (uuid or name) can be
                                obtained from the Prism Central console or using the prism_central API.
                              items:
                                description: NutanixResourceIdentifier holds the identity
                                  of a Nutanix PC resource (cluster, image, subnet,
                                  etc.)
                                properties:
                                  name:
                                    description: name is the resource name in the
                                      PC
                                    type: string
                                  type:
                                    description: Type is the identifier type to use
                                      for this resource.
                                    enum:
                                    - uuid
                                    - name
                                    type: string
                                  uuid:
                                    description: uuid is the UUID of the resource
                                      in the PC.
                                    type: string
                                required:
                                - type
                                type: object
                              minItems: 1
                              type: array
                          required:
                          - cluster
                          - controlPlane
                          - name
                          - subnets
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      prismCentral:
                        description: |-
                          prismCentral holds the endpoint address and port to access the Nutanix Prism Central.
                          When a cluster-wide proxy is installed, by default, this endpoint will be accessed via the proxy.
                          Should you wish for communication with this endpoint not to be proxied, please add the endpoint to the
                          proxy spec.noProxy list.
                        properties:
                          additionalTrustBundle:
                            description: |-
                              AdditionalTrustBundle is a PEM encoded x509 cert for the RootCA that was used to create the certificate
                              for a Prism Central that uses certificates that were issued by a non-publicly trusted RootCA. The trust
                              bundle is added to the cert pool used to authenticate the TLS connection to the Prism Central.
                            properties:
                              data:
                                description: Data of the trust bundle if Kind is String.
                                type: string
                              kind:
                                description: Kind of the Nutanix trust bundle
                                enum:
                                - String
                                - ConfigMap
                                type: string
                              name:
                                description: Name of the credential.
                                type: string
                              namespace:
                                description: namespace of the credential.
                                type: string
                            required:
                            - kind
                            type: object
                          address:
                            description: address is the endpoint address (DNS name
                              or IP address) of the Nutanix Prism Central or Element
                              (cluster)
                            maxLength: 256
                            type: string
                          credentialRef:
                            description: Pass credential information for the target
                              Prism instance
                            properties:
                              kind:
                                description: Kind of the Nutanix credential
                                enum:
                                - Secret
                                type: string
                              name:
                                description: Name of the credential.
                                minLength: 1
                                type: string
                              namespace:
                                description: namespace of the credential.
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                          insecure:
                            default: false
                            description: use insecure connection to Prism endpoint
                            type: boolean
                          port:
                            default: 9440
                            description: port is the port number to access the Nutanix
                              Prism Central or Element (cluster)
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                        required:
                        - address
                        - port
                        type: object
                    type: object
                    x-kubernetes-validations:
                    - message: Cannot set both 'failureDomains' and 'controlPlaneFailureDomains'
                        fields simultaneously. Use 'controlPlaneFailureDomains' as
                        'failureDomains' is deprecated.
                      rule: '!(has(self.failureDomains) && has(self.controlPlaneFailureDomains))'
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
    cluster.x-k8s.io/v1beta1: v1beta1
    clusterctl.cluster.x-k8s.io/move: ""
  name: nutanixfailuredomains.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: NutanixFailureDomain
    listKind: NutanixFailureDomainList
    plural: nutanixfailuredomains
    shortNames:
    - nfd
    singular: nutanixfailuredomain
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: NutanixFailureDomain is the Schema for the NutanixFailureDomain
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NutanixFailureDomainSpec defines the desired state of NutanixFailureDomain.
            properties:
              prismElementCluster:
                description: prismElementCluster is to identify the Prism Element
                  cluster in the Prism Central for the failure domain.
                properties:
                  name:
                    description: name is the resource name in the PC
                    type: string
                  type:
                    description: Type is the identifier type to use for this resource.
                    enum:
                    - uuid
                    - name
                    type: string
                  uuid:
                    description: uuid is the UUID of the resource in the PC.
                    type: string
                required:
                - type
                type: object
                x-kubernetes-validations:
                - message: prismElementCluster is immutable once set
                  rule: self == oldSelf
              subnets:
                description: |-
                  subnets holds a list of identifiers (one or more) of the PE cluster's network subnets
                  for the Machine's VM to connect to.
                items:
                  description: NutanixResourceIdentifier holds the identity of a Nutanix
                    PC resource (cluster, image, subnet, etc.)
                  properties:
                    name:
                      description: name is the resource name in the PC
                      type: string
                    type:
                      description: Type is the identifier type to use for this resource.
                      enum:
                      - uuid
                      - name
                      type: string
                    uuid:
                      description: uuid is the UUID of the resource in the PC.
                      type: string
                  required:
                  - type
                  type: object
                minItems: 1
                type: array
                x-kubernetes-validations:
                - message: subnets is immutable once set
                  rule: self == oldSelf
            required:
            - prismElementCluster
            - subnets
            type: object
          status:
            description: NutanixFailureDomainStatus defines the observed state of
              NutanixFailureDomain resource.
            properties:
              conditions:
                description: conditions represent the latest states of the failure
                  domain.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This field may be empty.
                      maxLength: 10240
                      minLength: 1
                      type: string
                    reason:
                      description: |-
                        reason is the reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      maxLength: 256
                      minLength: 1
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      maxLength: 32
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
    cluster.x-k8s.io/v1beta1: v1beta1
  name: nutanixmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: NutanixMachine
    listKind: NutanixMachineList
    plural: nutanixmachines
    shortNames:
    - nma
    singular: nutanixmachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The VM address
      jsonPath: .status.addresses[0].address
      name: Address
      type: string
    - description: NutanixMachine ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: NutanixMachine instance ID
      jsonPath: .spec.providerID
      name: ProviderID
      type: string
    - description: NutanixMachine FailureDomain
      jsonPath: .status.failureDomain
      name: FailureDomain
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: NutanixMachine is the Schema for the nutanixmachines API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NutanixMachineSpec defines the desired state of NutanixMachine
            properties:
              additionalCategories:
                description: List of categories that need to be added to the machines.
                  Categories must already exist in Prism Central
                items:
                  properties:
                    key:
                      description: key is the Key of category in PC.
                      type: string
                    value:
                      description: value is the category value linked to the category
                        key in PC
                      type: string
                  type: object
                type: array
              bootType:
                description: Defines the boot type of the virtual machine. Only supports
                  UEFI and Legacy
                enum:
                - legacy
                - uefi
                type: string
              bootstrapRef:
                description: |-
                  BootstrapRef is a reference to a bootstrap provider-specific resource
                  that holds configuration details.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              cluster:
                description: |-
                  cluster is to identify the cluster (the Prism Element under management
                  of the Prism Central), in which the Machine's VM will be created.
                  The cluster identifier (uuid or name) can be obtained from the Prism Central console
                  or using the prism_central API.
                properties:
                  name:
                    description: name is the resource name in the PC
                    type: string
                  type:
                    description: Type is the identifier type to use for this resource.
                    enum:
                    - uuid
                    - name
                    type: string
                  uuid:
                    description: uuid is the UUID of the resource in the PC.
                    type: string
                required:
                - type
                type: object
              dataDisks:
                description: dataDisks hold the list of data disks to be attached
                  to the VM
                items:
                  description: NutanixMachineVMDisk defines the disk configuration
                    for a NutanixMachine
                  properties:
                    dataSource:
                      description: dataSource refers to a data source image for the
                        VM disk.
                      properties:
                        name:
                          description: name is the resource name in the PC
                          type: string
                        type:
                          description: Type is the identifier type to use for this
                            resource.
                          enum:
                          - uuid
                          - name
                          type: string
                        uuid:
                          description: uuid is the UUID of the resource in the PC.
                          type: string
                      required:
                      - type
                      type: object
                    deviceProperties:
                      description: deviceProperties are the properties of the disk
                        device.
                      properties:
                        adapterType:
                          description: |-
                            adapterType is the adapter type of the disk address.
                            If the deviceType is "Disk", the valid adapterType can be "SCSI", "IDE", "PCI", "SATA" or "SPAPR".
                            If the deviceType is "CDRom", the valid adapterType can be "IDE" or "SATA".
                          enum:
                          - SCSI
                          - IDE
                          - PCI
                          - SATA
                          - SPAPR
                          type: string
                        deviceIndex:
                          default: 0
                          description: |-
                            deviceIndex is the index of the disk address. The valid values are non-negative integers, with the default value 0.
                            For a Machine VM, the deviceIndex for the disks with the same deviceType.adapterType combination should
                            start from 0 and increase consecutively afterwards. Note that for each Machine VM, the Disk.SCSI.0
                            and CDRom.IDE.0 are reserved to be used by the VM's system. So for dataDisks of Disk.SCSI and CDRom.IDE,
                            the deviceIndex should start from 1.
                          format: int32
                          minimum: 0
                          type: integer
                        deviceType:
                          default: Disk
                          description: |-
                            deviceType specifies the disk device type.
                            The valid values are "Disk" and "CDRom", and the default is "Disk".
                          enum:
                          - Disk
                          - CDRom
                          type: string
                      required:
                      - adapterType
                      - deviceType
                      type: object
                    diskSize:
                      anyOf:
                      - type: integer
                      - type: string
                      description: |-
                        diskSize is the size (in Quantity format) of the disk attached to the VM.
                        See https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Format for the Quantity format and example documentation.
                        The minimum diskSize is 1GB.
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    storageConfig:
                      description: storageConfig are the storage configuration parameters
                        of the VM disks.
                      properties:
                        diskMode:
                          default: Standard
                          description: |-
                            diskMode specifies the disk mode.
                            The valid values are Standard and Flash, and the default is Standard.
                          enum:
                          - Standard
                          - Flash
                          type: string
                        storageContainer:
                          description: storageContainer refers to the storage_container
                            used by the VM disk.
                          properties:
                            name:
                              description: name is the resource name in the PC
                              type: string
                            type:
                              description: Type is the identifier type to use for
                                this resource.
                              enum:
                              - uuid
                              - name
                              type: string
                            uuid:
                              description: uuid is the UUID of the resource in the
                                PC.
                              type: string
                          required:
                          - type
                          type: object
                      required:
                      - diskMode
                      type: object
                  required:
                  - diskSize
                  type: object
                type: array
              gpus:
                description: List of GPU devices that need to be added to the machines.
                items:
                  properties:
                    deviceID:
                      description: deviceID is the id of the GPU entity.
                      format: int64
                      type: integer
                    name:
                      description: name is the GPU name
                      type: string
                    type:
                      description: Type is the identifier type to use for this resource.
                      enum:
                      - deviceID
                      - name
                      type: string
                  required:
                  - type
                  type: object
                type: array
              image:
                description: |-
                  image is to identify the nutanix machine image uploaded to the Prism Central (PC)
                  The image identifier (uuid or name) can be obtained from the Prism Central console
                  or using the prism_central API.
                properties:
                  name:
                    description: name is the resource name in the PC
                    type: string
                  type:
                    description: Type is the identifier type to use for this resource.
                    enum:
                    - uuid
                    - name
                    type: string
                  uuid:
                    description: uuid is the UUID of the resource in the PC.
                    type: string
                required:
                - type
                type: object
              imageLookup:
                description: imageLookup is a container that holds how to look up
                  rhcos images for the cluster.
                properties:
                  baseOS:
                    description: |-
                      BaseOS is the name of the base operating system to use for
                      image lookup.
                    minLength: 1
                    type: string
                  format:
                    default: capx-{{.BaseOS}}-{{.K8sVersion}}-*
                    description: |-
                      Format is the naming format to look up the image for this
                      machine It will be ignored if an explicit image is set. Supports
                      substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
                      kubernetes version, respectively. The BaseOS will be the value in
                      BaseOS and the K8sVersion is the value in the Machine .spec.version, with the v prefix removed.
                      This is effectively the defined by the packages produced by kubernetes/release without v as a
                      prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                      image format of {{.BaseOS}}-?{{.K8sVersion}}-* and BaseOS as "rhel-8.10" will end up
                      searching for images that match the pattern rhel-8.10-1.30.5-* for a
                      Machine that is targeting kubernetes v1.30.5. See
                      also: https://golang.org/pkg/text/template/
                    type: string
                required:
                - baseOS
                type: object
              memorySize:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  memorySize is the memory size (in Quantity format) of the VM
                  The minimum memorySize is 2Gi bytes
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              project:
                description: Add the machine resources to a Prism Central project
                properties:
                  name:
                    description: name is the resource name in the PC
                    type: string
                  type:
                    description: Type is the identifier type to use for this resource.
                    enum:
                    - uuid
                    - name
                    type: string
                  uuid:
                    description: uuid is the UUID of the resource in the PC.
                    type: string
                required:
                - type
                type: object
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              subnet:
                description: |-
                  subnet is to identify the cluster's network subnet to use for the Machine's VM
                  The cluster identifier (uuid or name) can be obtained from the Prism Central console
                  or using the prism_central API.
                items:
                  description: NutanixResourceIdentifier holds the identity of a Nutanix
                    PC resource (cluster, image, subnet, etc.)
                  properties:
                    name:
                      description: name is the resource name in the PC
                      type: string
                    type:
                      description: Type is the identifier type to use for this resource.
                      enum:
                      - uuid
                      - name
                      type: string
                    uuid:
                      description: uuid is the UUID of the resource in the PC.
                      type: string
                  required:
                  - type
                  type: object
                type: array
              systemDiskSize:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  systemDiskSize is size (in Quantity format) of the system disk of the VM
                  The minimum systemDiskSize is 20Gi bytes
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              vcpuSockets:
                description: vcpuSockets is the number of vCPU sockets of the VM
                format: int32
                minimum: 1
                type: integer
              vcpusPerSocket:
                description: vcpusPerSocket is the number of vCPUs per socket of the
                  VM
                format: int32
                minimum: 1
                type: integer
            required:
            - memorySize
            - systemDiskSize
            - vcpuSockets
            - vcpusPerSocket
            type: object
            x-kubernetes-validations:
            - message: Either 'image' or 'imageLookup' must be set, but not both
              rule: has(self.image) != has(self.imageLookup)
          status:
            description: NutanixMachineStatus defines the observed state of NutanixMachine
            properties:
              addresses:
                description: |-
                  Addresses contains the Nutanix VM associated addresses.
                  Address type is one of Hostname, ExternalIP, InternalIP, ExternalDNS, InternalDNS
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: address is the machine address.
                      maxLength: 256
                      minLength: 1
                      type: string
                    type:
                      description: type is the machine address type, one of Hostname,
                        ExternalIP, InternalIP, ExternalDNS or InternalDNS.
                      enum:
                      - Hostname
                      - ExternalIP
                      - InternalIP
                      - ExternalDNS
                      - InternalDNS
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the NutanixMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This field may be empty.
                      maxLength: 10240
                      minLength: 1
                      type: string
                    reason:
                      description: |-
                        reason is the reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      maxLength: 256
                      minLength: 1
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      maxLength: 32
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureDomain:
                description: failureDomain is the name of the failure domain where
                  this Machine has been placed in.
                type: string
              failureMessage:
                description: Will be set in case of failure of Machine instance
                type: string
              failureReason:
                description: Will be set in case of failure of Machine instance
                type: string
              nodeRef:
                description: |-
                  NodeRef is a reference to the corresponding workload cluster Node if it exists.
                  Deprecated: Do not use. Will be removed in a future release.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              vmUUID:
                description: The Nutanix VM's UUID
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
    cluster.x-k8s.io/v1beta1: v1beta1
  name: nutanixmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: NutanixMachineTemplate
    listKind: NutanixMachineTemplateList
    plural: nutanixmachinetemplates
    shortNames:
    - nmtmpl
    singular: nutanixmachinetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: NutanixMachineTemplate is the Schema for the nutanixmachinetemplates
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NutanixMachineTemplateSpec defines the desired state of NutanixMachineTemplate
            properties:
              template:
                description: NutanixMachineTemplateResource describes the data needed
                  to create a NutanixMachine from a template
                properties:
                  metadata:
                    description: |-
                      Standard object metadata.
                      Ref: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: http://kubernetes.io/docs/user-guide/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          labels is a map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: http://kubernetes.io/docs/user-guide/labels
                        type: object
                    type: object
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      additionalCategories:
                        description: List of categories that need to be added to the
                          machines. Categories must already exist in Prism Central
                        items:
                          properties:
                            key:
                              description: key is the Key of category in PC.
                              type: string
                            value:
                              description: value is the category value linked to the
                                category key in PC
                              type: string
                          type: object
                        type: array
                      bootType:
                        description: Defines the boot type of the virtual machine.
                          Only supports UEFI and Legacy
                        enum:
                        - legacy
                        - uefi
                        type: string
                      bootstrapRef:
                        description: |-
                          BootstrapRef is a reference to a bootstrap provider-specific resource
                          that holds configuration details.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: |-
                              If referring to a piece of an object instead of an entire object, this string
                              should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container within a pod, this would take on a value like:
                              "spec.containers{name}" (where "name" refers to the name of the container that triggered
                              the event) or if no container name is specified "spec.containers[2]" (container with
                              index 2 in this pod). This syntax is chosen only to have some well-defined way of
                              referencing a part of an object.
                            type: string
                          kind:
                            description: |-
                              Kind of the referent.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            type: string
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          namespace:
                            description: |-
                              Namespace of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            type: string
                          resourceVersion:
                            description: |-
                              Specific resourceVersion to which this reference is made, if any.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                            type: string
                          uid:
                            description: |-
                              UID of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      cluster:
                        description: |-
                          cluster is to identify the cluster (the Prism Element under management
                          of the Prism Central), in which the Machine's VM will be created.
                          The cluster identifier (uuid or name) can be obtained from the Prism Central console
                          or using the prism_central API.
                        properties:
                          name:
                            description: name is the resource name in the PC
                            type: string
                          type:
                            description: Type is the identifier type to use for this
                              resource.
                            enum:
                            - uuid
                            - name
                            type: string
                          uuid:
                            description: uuid is the UUID of the resource in the PC.
                            type: string
                        required:
                        - type
                        type: object
                      dataDisks:
                        description: dataDisks hold the list of data disks to be attached
                          to the VM
                        items:
                          description: NutanixMachineVMDisk defines the disk configuration
                            for a NutanixMachine
                          properties:
                            dataSource:
                              description: dataSource refers to a data source image
                                for the VM disk.
                              properties:
                                name:
                                  description: name is the resource name in the PC
                                  type: string
                                type:
                                  description: Type is the identifier type to use
                                    for this resource.
                                  enum:
                                  - uuid
                                  - name
                                  type: string
                                uuid:
                                  description: uuid is the UUID of the resource in
                                    the PC.
                                  type: string
                              required:
                              - type
                              type: object
                            deviceProperties:
                              description: deviceProperties are the properties of
                                the disk device.
                              properties:
                                adapterType:
                                  description: |-
                                    adapterType is the adapter type of the disk address.
                                    If the deviceType is "Disk", the valid adapterType can be "SCSI", "IDE", "PCI", "SATA" or "SPAPR".
                                    If the deviceType is "CDRom", the valid adapterType can be "IDE" or "SATA".
                                  enum:
                                  - SCSI
                                  - IDE
                                  - PCI
                                  - SATA
                                  - SPAPR
                                  type: string
                                deviceIndex:
                                  default: 0
                                  description: |-
                                    deviceIndex is the index of the disk address. The valid values are non-negative integers, with the default value 0.
                                    For a Machine VM, the deviceIndex for the disks with the same deviceType.adapterType combination should
                                    start from 0 and increase consecutively afterwards. Note that for each Machine VM, the Disk.SCSI.0
                                    and CDRom.IDE.0 are reserved to be used by the VM's system. So for dataDisks of Disk.SCSI and CDRom.IDE,
                                    the deviceIndex should start from 1.
                                  format: int32
                                  minimum: 0
                                  type: integer
                                deviceType:
                                  default: Disk
                                  description: |-
                                    deviceType specifies the disk device type.
                                    The valid values are "Disk" and "CDRom", and the default is "Disk".
                                  enum:
                                  - Disk
                                  - CDRom
                                  type: string
                              required:
                              - adapterType
                              - deviceType
                              type: object
                            diskSize:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                diskSize is the size (in Quantity format) of the disk attached to the VM.
                                See https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Format for the Quantity format and example documentation.
                                The minimum diskSize is 1GB.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            storageConfig:
                              description: storageConfig are the storage configuration
                                parameters of the VM disks.
                              properties:
                                diskMode:
                                  default: Standard
                                  description: |-
                                    diskMode specifies the disk mode.
                                    The valid values are Standard and Flash, and the default is Standard.
                                  enum:
                                  - Standard
                                  - Flash
                                  type: string
                                storageContainer:
                                  description: storageContainer refers to the storage_container
                                    used by the VM disk.
                                  properties:
                                    name:
                                      description: name is the resource name in the
                                        PC
                                      type: string
                                    type:
                                      description: Type is the identifier type to
                                        use for this resource.
                                      enum:
                                      - uuid
                                      - name
                                      type: string
                                    uuid:
                                      description: uuid is the UUID of the resource
                                        in the PC.
                                      type: string
                                  required:
                                  - type
                                  type: object
                              required:
                              - diskMode
                              type: object
                          required:
                          - diskSize
                          type: object
                        type: array
                      gpus:
                        description: List of GPU devices that need to be added to
                          the machines.
                        items:
                          properties:
                            deviceID:
                              description: deviceID is the id of the GPU entity.
                              format: int64
                              type: integer
                            name:
                              description: name is the GPU name
                              type: string
                            type:
                              description: Type is the identifier type to use for
                                this resource.
                              enum:
                              - deviceID
                              - name
                              type: string
                          required:
                          - type
                          type: object
                        type: array
                      image:
                        description: |-
                          image is to identify the nutanix machine image uploaded to the Prism Central (PC)
                          The image identifier (uuid or name) can be obtained from the Prism Central console
                          or using the prism_central API.
                        properties:
                          name:
                            description: name is the resource name in the PC
                            type: string
                          type:
                            description: Type is the identifier type to use for this
                              resource.
                            enum:
                            - uuid
                            - name
                            type: string
                          uuid:
                            description: uuid is the UUID of the resource in the PC.
                            type: string
                        required:
                        - type
                        type: object
                      imageLookup:
                        description: imageLookup is a container that holds how to
                          look up rhcos images for the cluster.
                        properties:
                          baseOS:
                            description: |-
                              BaseOS is the name of the base operating system to use for
                              image lookup.
                            minLength: 1
                            type: string
                          format:
                            default: capx-{{.BaseOS}}-{{.K8sVersion}}-*
                            description: |-
                              Format is the naming format to look up the image for this
                              machine It will be ignored if an explicit image is set. Supports
                              substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
                              kubernetes version, respectively. The BaseOS will be the value in
                              BaseOS and the K8sVersion is the value in the Machine .spec.version, with the v prefix removed.
                              This is effectively the defined by the packages produced by kubernetes/release without v as a
                              prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                              image format of {{.BaseOS}}-?{{.K8sVersion}}-* and BaseOS as "rhel-8.10" will end up
                              searching for images that match the pattern rhel-8.10-1.30.5-* for a
                              Machine that is targeting kubernetes v1.30.5. See
                              also: https://golang.org/pkg/text/template/
                            type: string
                        required:
                        - baseOS
                        type: object
                      memorySize:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          memorySize is the memory size (in Quantity format) of the VM
                          The minimum memorySize is 2Gi bytes
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      project:
                        description: Add the machine resources to a Prism Central
                          project
                        properties:
                          name:
                            description: name is the resource name in the PC
                            type: string
                          type:
                            description: Type is the identifier type to use for this
                              resource.
                            enum:
                            - uuid
                            - name
                            type: string
                          uuid:
                            description: uuid is the UUID of the resource in the PC.
                            type: string
                        required:
                        - type
                        type: object
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider.
                        type: string
                      subnet:
                        description: |-
                          subnet is to identify the cluster's network subnet to use for the Machine's VM
                          The cluster identifier (uuid or name) can be obtained from the Prism Central console
                          or using the prism_central API.
                        items:
                          description: NutanixResourceIdentifier holds the identity
                            of a Nutanix PC resource (cluster, image, subnet, etc.)
                          properties:
                            name:
                              description: name is the resource name in the PC
                              type: string
                            type:
                              description: Type is the identifier type to use for
                                this resource.
                              enum:
                              - uuid
                              - name
                              type: string
                            uuid:
                              description: uuid is the UUID of the resource in the
                                PC.
                              type: string
                          required:
                          - type
                          type: object
                        type: array
                      systemDiskSize:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          systemDiskSize is size (in Quantity format) of the system disk of the VM
                          The minimum systemDiskSize is 20Gi bytes
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      vcpuSockets:
                        description: vcpuSockets is the number of vCPU sockets of
                          the VM
                        format: int32
                        minimum: 1
                        type: integer
                      vcpusPerSocket:
                        description: vcpusPerSocket is the number of vCPUs per socket
                          of the VM
                        format: int32
                        minimum: 1
                        type: integer
                    required:
                    - memorySize
                    - systemDiskSize
                    - vcpuSockets
                    - vcpusPerSocket
                    type: object
                    x-kubernetes-validations:
                    - message: Either 'image' or 'imageLookup' must be set, but not
                        both
                      rule: has(self.image) != has(self.imageLookup)
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
  name: capx-controller-manager
  namespace: capx-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
  name: capx-leader-election-role
  namespace: capx-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
  name: capx-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - bootstrap.cluster.x-k8s.io
  resources:
  - kubeadmconfigs
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  - machines
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - nutanixclusters
  - nutanixfailuredomains
  - nutanixmachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - nutanixclusters/finalizers
  - nutanixmachines/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - nutanixclusters/status
  - nutanixfailuredomains/finalizers
  - nutanixfailuredomains/status
  - nutanixmachines/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
  name: capx-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
  name: capx-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
  name: capx-leader-election-rolebinding
  namespace: capx-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capx-leader-election-role
subjects:
- kind: ServiceAccount
  name: capx-controller-manager
  namespace: capx-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
  name: capx-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capx-manager-role
subjects:
- kind: ServiceAccount
  name: capx-controller-manager
  namespace: capx-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
  name: capx-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capx-proxy-role
subjects:
- kind: ServiceAccount
  name: capx-controller-manager
  namespace: capx-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: f265110d.cluster.x-k8s.io
kind: ConfigMap
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
  name: capx-manager-config
  namespace: capx-system
---
apiVersion: v1
data:
  prismCentral: |-
    {
      "address": "${NUTANIX_ENDPOINT}",
      "port": ${NUTANIX_PORT=9440},
      "insecure": ${NUTANIX_INSECURE=false},
      "credentialRef": {
        "kind": "secret",
        "name": "capx-nutanix-creds"
      },
      "additionalTrustBundle": {
        "kind": "ConfigMap",
        "name": "capx-pc-trusted-ca-bundle"
      }
    }
kind: ConfigMap
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
  name: capx-nutanix-endpoint
  namespace: capx-system
---
apiVersion: v1
binaryData:
  ca.crt: ${NUTANIX_ADDITIONAL_TRUST_BUNDLE=''}
kind: ConfigMap
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
  name: capx-pc-trusted-ca-bundle
  namespace: capx-system
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
  name: capx-nutanix-creds
  namespace: capx-system
stringData:
  credentials: |
    [
      {
        "type": "basic_auth",
        "data": {
          "prismCentral":{
            "username": "${NUTANIX_USER}",
            "password": "${NUTANIX_PASSWORD}"
          },
          "prismElements": null
        }
      }
    ]
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
    control-plane: controller-manager
  name: capx-controller-manager-metrics-service
  namespace: capx-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    cluster.x-k8s.io/provider: infrastructure-nutanix
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-nutanix
    control-plane: controller-manager
  name: capx-controller-manager
  namespace: capx-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-nutanix
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        cluster.x-k8s.io/provider: infrastructure-nutanix
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --diagnostics-address=:8443
        - --leader-elect
        - --zap-log-level=${NUTANIX_LOG_LEVEL=info}
        - --zap-devel=${NUTANIX_LOG_DEVELOPMENT=true}
        - --zap-stacktrace-level=${NUTANIX_LOG_STACKTRACE_LEVEL=panic}
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: ghcr.io/nutanix-cloud-native/cluster-api-provider-nutanix/controller:v1.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
        volumeMounts:
        - mountPath: /etc/nutanix/config
          name: endpoint
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: capx-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - configMap:
          name: capx-nutanix-endpoint
        name: endpoint
