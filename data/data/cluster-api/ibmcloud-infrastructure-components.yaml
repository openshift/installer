apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
    control-plane: controller-manager
  name: capi-ibmcloud-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-ibmcloud-system/capi-ibmcloud-serving-cert
    controller-gen.kubebuilder.io/version: v0.13.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
    cluster.x-k8s.io/v1beta1: v1beta1_v1beta2
  name: ibmpowervsclusters.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capi-ibmcloud-webhook-service
          namespace: capi-ibmcloud-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: IBMPowerVSCluster
    listKind: IBMPowerVSClusterList
    plural: ibmpowervsclusters
    singular: ibmpowervscluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this IBMPowerVSCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Time duration since creation of IBMPowerVSCluster
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.serviceInstanceID
      name: PowerVS Cloud Instance ID
      priority: 1
      type: string
    - description: Control Plane Endpoint
      jsonPath: .spec.controlPlaneEndpoint.host
      name: Endpoint
      priority: 1
      type: string
    - description: Control Plane Port
      jsonPath: .spec.controlPlaneEndpoint.port
      name: Port
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: IBMPowerVSCluster is the Schema for the ibmpowervsclusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMPowerVSClusterSpec defines the desired state of IBMPowerVSCluster.
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              network:
                description: Network is the reference to the Network to use for this
                  cluster.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: Regular expression to match resource, In case of
                      multiple resources matches the provided regular expression the
                      first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              serviceInstanceID:
                description: ServiceInstanceID is the id of the power cloud instance
                  where the vsi instance will get deployed.
                minLength: 1
                type: string
            required:
            - network
            - serviceInstanceID
            type: object
          status:
            description: IBMPowerVSClusterStatus defines the observed state of IBMPowerVSCluster.
            properties:
              ready:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Cluster to which this IBMPowerVSCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Time duration since creation of IBMPowerVSCluster
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.serviceInstanceID
      name: PowerVS Cloud Instance ID
      priority: 1
      type: string
    - description: Control Plane Endpoint
      jsonPath: .spec.controlPlaneEndpoint.host
      name: Endpoint
      priority: 1
      type: string
    - description: Control Plane Port
      jsonPath: .spec.controlPlaneEndpoint.port
      name: Port
      priority: 1
      type: string
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: IBMPowerVSCluster is the Schema for the ibmpowervsclusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMPowerVSClusterSpec defines the desired state of IBMPowerVSCluster.
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              cosInstance:
                description: cosInstance contains options to configure a supporting
                  IBM Cloud COS bucket for this cluster - currently used for nodes
                  requiring Ignition (https://coreos.github.io/ignition/) for bootstrapping
                  (requires BootstrapFormatIgnition feature flag to be enabled). when
                  powervs.cluster.x-k8s.io/create-infra=true annotation is set on
                  IBMPowerVSCluster resource and Ignition is set, then 1. CosInstance.Name
                  should be set not setting will result in webhook error. 2. CosInstance.BucketName
                  should be set not setting will result in webhook error. 3. CosInstance.BucketRegion
                  should be set not setting will result in webhook error.
                properties:
                  bucketName:
                    description: bucketName is IBM cloud COS bucket name
                    type: string
                  bucketRegion:
                    description: bucketRegion is IBM cloud COS bucket region
                    type: string
                  name:
                    description: name defines name of IBM cloud COS instance to be
                      created. when IBMPowerVSCluster.Ignition is set
                    maxLength: 63
                    minLength: 3
                    pattern: ^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$
                    type: string
                type: object
              dhcpServer:
                description: dhcpServer is contains the configuration to be used while
                  creating a new DHCP server in PowerVS workspace. when the field
                  is omitted, CLUSTER_NAME will be used as DHCPServer.Name and DHCP
                  server will be created. it will automatically create network with
                  name DHCPSERVER<DHCPServer.Name>_Private in PowerVS workspace.
                properties:
                  cidr:
                    description: Optional cidr for DHCP private network
                    type: string
                  dnsServer:
                    default: 1.1.1.1
                    description: Optional DNS Server for DHCP service
                    type: string
                  id:
                    description: Optional id of the existing DHCPServer
                    type: string
                  name:
                    description: Optional name of DHCP Service. Only alphanumeric
                      characters and dashes are allowed.
                    type: string
                  snat:
                    default: true
                    description: Optional indicates if SNAT will be enabled for DHCP
                      service
                    type: boolean
                type: object
              ignition:
                description: Ignition defined options related to the bootstrapping
                  systems where Ignition is used.
                properties:
                  version:
                    default: "2.3"
                    description: Version defines which version of Ignition will be
                      used to generate bootstrap data.
                    enum:
                    - "2.3"
                    - "2.4"
                    - "3.0"
                    - "3.1"
                    - "3.2"
                    - "3.3"
                    - "3.4"
                    type: string
                type: object
              loadBalancers:
                description: loadBalancers is optional configuration for configuring
                  loadbalancers to control plane or data plane nodes. when omitted
                  system will create a public loadbalancer with name CLUSTER_NAME-loadbalancer.
                  when specified a vpc loadbalancer will be created and controlPlaneEndpoint
                  will be set with associated hostname of loadbalancer. ControlPlaneEndpoint
                  will be set with associated hostname of public loadbalancer. when
                  LoadBalancers[].ID is set, its expected that there exist a loadbalancer
                  with ID or else system will give error. when LoadBalancers[].Name
                  is set, system will first check for loadbalancer with Name, if not
                  exist system will create new loadbalancer.
                items:
                  description: VPCLoadBalancerSpec defines the desired state of an
                    VPC load balancer.
                  properties:
                    additionalListeners:
                      description: AdditionalListeners sets the additional listeners
                        for the control plane load balancer. .
                      items:
                        description: AdditionalListenerSpec defines the desired state
                          of an additional listener on an VPC load balancer.
                        properties:
                          port:
                            description: Port sets the port for the additional listener.
                            format: int64
                            maximum: 65535
                            minimum: 1
                            type: integer
                        required:
                        - port
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - port
                      x-kubernetes-list-type: map
                    id:
                      description: id of the loadbalancer
                      type: string
                    name:
                      description: Name sets the name of the VPC load balancer.
                      maxLength: 63
                      type: string
                    public:
                      default: true
                      description: public indicates that load balancer is public or
                        private
                      type: boolean
                  type: object
                type: array
              network:
                description: Network is the reference to the Network to use for this
                  cluster. when the field is omitted, A DHCP service will be created
                  in the Power VS workspace and its private network will be used.
                  the DHCP service created network will have the following name format
                  1. in the case of DHCPServer.Name is not set the name will be DHCPSERVER<CLUSTER_NAME>_Private.
                  2. if DHCPServer.Name is set the name will be DHCPSERVER<DHCPServer.Name>_Private.
                  when Network.ID is set, its expected that there exist a network
                  in PowerVS workspace with id or else system will give error. when
                  Network.Name is set, system will first check for network with Name
                  in PowerVS workspace, if not exist network will be created by DHCP
                  service. Network.RegEx is not yet supported and system will ignore
                  the value.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: Regular expression to match resource, In case of
                      multiple resources matches the provided regular expression the
                      first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              resourceGroup:
                description: resourceGroup name under which the resources will be
                  created. when powervs.cluster.x-k8s.io/create-infra=true annotation
                  is set on IBMPowerVSCluster resource, 1. it is expected to set the
                  ResourceGroup.Name, not setting will result in webhook error. ServiceInstance.ID
                  and ServiceInstance.Regex is not yet supported and system will ignore
                  the value.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: Regular expression to match resource, In case of
                      multiple resources matches the provided regular expression the
                      first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              serviceInstance:
                description: serviceInstance is the reference to the Power VS server
                  workspace on which the server instance(VM) will be created. Power
                  VS server workspace is a container for all Power VS instances at
                  a specific geographic region. serviceInstance can be created via
                  IBM Cloud catalog or CLI. supported serviceInstance identifier in
                  PowerVSResource are Name and ID and that can be obtained from IBM
                  Cloud UI or IBM Cloud cli. More detail about Power VS service instance.
                  https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server
                  when omitted system will dynamically create the service instance
                  with name CLUSTER_NAME-serviceInstance. when ServiceInstance.ID
                  is set, its expected that there exist a service instance in PowerVS
                  workspace with id or else system will give error. when ServiceInstance.Name
                  is set, system will first check for service instance with Name in
                  PowerVS workspace, if not exist system will create new instance.
                  ServiceInstance.Regex is not yet supported not yet supported and
                  system will ignore the value.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: Regular expression to match resource, In case of
                      multiple resources matches the provided regular expression the
                      first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              serviceInstanceID:
                description: 'ServiceInstanceID is the id of the power cloud instance
                  where the vsi instance will get deployed. Deprecated: use ServiceInstance
                  instead'
                type: string
              transitGateway:
                description: transitGateway contains information about IBM Cloud TransitGateway
                  IBM Cloud TransitGateway helps in establishing network connectivity
                  between IBM Cloud Power VS and VPC infrastructure more information
                  about TransitGateway can be found here https://www.ibm.com/products/transit-gateway.
                  when TransitGateway.ID is set, its expected that there exist a TransitGateway
                  with ID or else system will give error. when TransitGateway.Name
                  is set, system will first check for TransitGateway with Name, if
                  not exist system will create new TransitGateway.
                properties:
                  id:
                    description: id of resource.
                    type: string
                  name:
                    description: name of resource.
                    type: string
                type: object
              vpc:
                description: vpc contains information about IBM Cloud VPC resources.
                  when omitted system will dynamically create the VPC with name CLUSTER_NAME-vpc.
                  when VPC.ID is set, its expected that there exist a VPC with ID
                  or else system will give error. when VPC.Name is set, system will
                  first check for VPC with Name, if not exist system will create new
                  VPC. when powervs.cluster.x-k8s.io/create-infra=true annotation
                  is set on IBMPowerVSCluster resource, 1. it is expected to set the
                  VPC.Region, not setting will result in webhook error.
                properties:
                  id:
                    description: id of resource.
                    minLength: 1
                    type: string
                  name:
                    description: name of resource.
                    minLength: 1
                    type: string
                  region:
                    description: region of IBM Cloud VPC. when powervs.cluster.x-k8s.io/create-infra=true
                      annotation is set on IBMPowerVSCluster resource, it is expected
                      to set the region, not setting will result in webhook error.
                    type: string
                type: object
              vpcSubnets:
                description: vpcSubnets contains information about IBM Cloud VPC Subnet
                  resources. when omitted system will create the subnets in all the
                  zone corresponding to VPC.Region, with name CLUSTER_NAME-vpcsubnet-ZONE_NAME.
                  possible values can be found here https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server.
                  when VPCSubnets[].ID is set, its expected that there exist a subnet
                  with ID or else system will give error. when VPCSubnets[].Zone is
                  not set, a random zone is picked from available zones of VPC.Region.
                  when VPCSubnets[].Name is not set, system will set name as CLUSTER_NAME-vpcsubnet-INDEX.
                  if subnet with name VPCSubnets[].Name not found, system will create
                  new subnet in VPCSubnets[].Zone.
                items:
                  description: Subnet describes a subnet.
                  properties:
                    cidr:
                      type: string
                    id:
                      type: string
                    name:
                      type: string
                    zone:
                      type: string
                  type: object
                type: array
              zone:
                description: zone is the name of Power VS zone where the cluster will
                  be created possible values can be found here https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server.
                  when powervs.cluster.x-k8s.io/create-infra=true annotation is set
                  on IBMPowerVSCluster resource, 1. it is expected to set the zone,
                  not setting will result in webhook error. 2. the zone should have
                  PER capabilities, or else system will give error.
                type: string
            required:
            - network
            - serviceInstanceID
            type: object
          status:
            description: IBMPowerVSClusterStatus defines the observed state of IBMPowerVSCluster.
            properties:
              conditions:
                description: Conditions defines current service state of the IBMPowerVSCluster.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              cosInstance:
                description: cosInstance is reference to IBM Cloud COS Instance resource.
                properties:
                  controllerCreated:
                    default: false
                    description: controllerCreated indicates whether the resource
                      is created by the controller.
                    type: boolean
                  id:
                    description: id represents the id of the resource.
                    type: string
                type: object
              dhcpServer:
                description: dhcpServer is the reference to the Power VS DHCP server.
                properties:
                  controllerCreated:
                    default: false
                    description: controllerCreated indicates whether the resource
                      is created by the controller.
                    type: boolean
                  id:
                    description: id represents the id of the resource.
                    type: string
                type: object
              loadBalancers:
                additionalProperties:
                  description: VPCLoadBalancerStatus defines the status VPC load balancer.
                  properties:
                    controllerCreated:
                      default: false
                      description: controllerCreated indicates whether the resource
                        is created by the controller.
                      type: boolean
                    hostname:
                      description: hostname is the hostname of load balancer.
                      type: string
                    id:
                      description: id of VPC load balancer.
                      type: string
                    state:
                      description: State is the status of the load balancer.
                      type: string
                  type: object
                description: loadBalancers reference to IBM Cloud VPC Loadbalancer.
                type: object
              network:
                description: networkID is the reference to the Power VS network to
                  use for this cluster.
                properties:
                  controllerCreated:
                    default: false
                    description: controllerCreated indicates whether the resource
                      is created by the controller.
                    type: boolean
                  id:
                    description: id represents the id of the resource.
                    type: string
                type: object
              ready:
                default: false
                description: ready is true when the provider resource is ready.
                type: boolean
              resourceGroupID:
                description: ResourceGroup is the reference to the Power VS resource
                  group under which the resources will be created.
                properties:
                  controllerCreated:
                    default: false
                    description: controllerCreated indicates whether the resource
                      is created by the controller.
                    type: boolean
                  id:
                    description: id represents the id of the resource.
                    type: string
                type: object
              serviceInstance:
                description: serviceInstance is the reference to the Power VS service
                  on which the server instance(VM) will be created.
                properties:
                  controllerCreated:
                    default: false
                    description: controllerCreated indicates whether the resource
                      is created by the controller.
                    type: boolean
                  id:
                    description: id represents the id of the resource.
                    type: string
                type: object
              transitGateway:
                description: transitGateway is reference to IBM Cloud TransitGateway.
                properties:
                  controllerCreated:
                    default: false
                    description: controllerCreated indicates whether the resource
                      is created by the controller.
                    type: boolean
                  id:
                    description: id represents the id of the resource.
                    type: string
                type: object
              vpc:
                description: vpc is reference to IBM Cloud VPC resources.
                properties:
                  controllerCreated:
                    default: false
                    description: controllerCreated indicates whether the resource
                      is created by the controller.
                    type: boolean
                  id:
                    description: id represents the id of the resource.
                    type: string
                type: object
              vpcSubnet:
                additionalProperties:
                  description: ResourceReference identifies a resource with id.
                  properties:
                    controllerCreated:
                      default: false
                      description: controllerCreated indicates whether the resource
                        is created by the controller.
                      type: boolean
                    id:
                      description: id represents the id of the resource.
                      type: string
                  type: object
                description: vpcSubnet is reference to IBM Cloud VPC subnet.
                type: object
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
    cluster.x-k8s.io/v1beta1: v1beta1_v1beta2
  name: ibmpowervsclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: IBMPowerVSClusterTemplate
    listKind: IBMPowerVSClusterTemplateList
    plural: ibmpowervsclustertemplates
    shortNames:
    - ibmpowervsct
    singular: ibmpowervsclustertemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Time duration since creation of IBMPowerVSClusterTemplate
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: IBMPowerVSClusterTemplate is the schema for IBM Power VS Kubernetes
          Cluster Templates.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMPowerVSClusterTemplateSpec defines the desired state of
              IBMPowerVSClusterTemplate.
            properties:
              template:
                description: IBMPowerVSClusterTemplateResource describes the data
                  needed to create an IBMPowerVSCluster from a template.
                properties:
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map
                          stored with a resource that may be set by external tools
                          to store and retrieve arbitrary metadata. They are not queryable
                          and should be preserved when modifying objects. More info:
                          http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and services.
                          More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                    type: object
                  spec:
                    description: IBMPowerVSClusterSpec defines the desired state of
                      IBMPowerVSCluster.
                    properties:
                      controlPlaneEndpoint:
                        description: ControlPlaneEndpoint represents the endpoint
                          used to communicate with the control plane.
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                          port:
                            description: The port on which the API server is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      network:
                        description: Network is the reference to the Network to use
                          for this cluster.
                        properties:
                          id:
                            description: ID of resource
                            minLength: 1
                            type: string
                          name:
                            description: Name of resource
                            minLength: 1
                            type: string
                          regex:
                            description: Regular expression to match resource, In
                              case of multiple resources matches the provided regular
                              expression the first matched resource will be selected
                            minLength: 1
                            type: string
                        type: object
                      serviceInstanceID:
                        description: ServiceInstanceID is the id of the power cloud
                          instance where the vsi instance will get deployed.
                        minLength: 1
                        type: string
                    required:
                    - network
                    - serviceInstanceID
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: false
    subresources: {}
  - additionalPrinterColumns:
    - description: Time duration since creation of IBMPowerVSClusterTemplate
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: IBMPowerVSClusterTemplate is the schema for IBM Power VS Kubernetes
          Cluster Templates.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMPowerVSClusterTemplateSpec defines the desired state of
              IBMPowerVSClusterTemplate.
            properties:
              template:
                description: IBMPowerVSClusterTemplateResource describes the data
                  needed to create an IBMPowerVSCluster from a template.
                properties:
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map
                          stored with a resource that may be set by external tools
                          to store and retrieve arbitrary metadata. They are not queryable
                          and should be preserved when modifying objects. More info:
                          http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and services.
                          More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                    type: object
                  spec:
                    description: IBMPowerVSClusterSpec defines the desired state of
                      IBMPowerVSCluster.
                    properties:
                      controlPlaneEndpoint:
                        description: ControlPlaneEndpoint represents the endpoint
                          used to communicate with the control plane.
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                          port:
                            description: The port on which the API server is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      cosInstance:
                        description: cosInstance contains options to configure a supporting
                          IBM Cloud COS bucket for this cluster - currently used for
                          nodes requiring Ignition (https://coreos.github.io/ignition/)
                          for bootstrapping (requires BootstrapFormatIgnition feature
                          flag to be enabled). when powervs.cluster.x-k8s.io/create-infra=true
                          annotation is set on IBMPowerVSCluster resource and Ignition
                          is set, then 1. CosInstance.Name should be set not setting
                          will result in webhook error. 2. CosInstance.BucketName
                          should be set not setting will result in webhook error.
                          3. CosInstance.BucketRegion should be set not setting will
                          result in webhook error.
                        properties:
                          bucketName:
                            description: bucketName is IBM cloud COS bucket name
                            type: string
                          bucketRegion:
                            description: bucketRegion is IBM cloud COS bucket region
                            type: string
                          name:
                            description: name defines name of IBM cloud COS instance
                              to be created. when IBMPowerVSCluster.Ignition is set
                            maxLength: 63
                            minLength: 3
                            pattern: ^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$
                            type: string
                        type: object
                      dhcpServer:
                        description: dhcpServer is contains the configuration to be
                          used while creating a new DHCP server in PowerVS workspace.
                          when the field is omitted, CLUSTER_NAME will be used as
                          DHCPServer.Name and DHCP server will be created. it will
                          automatically create network with name DHCPSERVER<DHCPServer.Name>_Private
                          in PowerVS workspace.
                        properties:
                          cidr:
                            description: Optional cidr for DHCP private network
                            type: string
                          dnsServer:
                            default: 1.1.1.1
                            description: Optional DNS Server for DHCP service
                            type: string
                          id:
                            description: Optional id of the existing DHCPServer
                            type: string
                          name:
                            description: Optional name of DHCP Service. Only alphanumeric
                              characters and dashes are allowed.
                            type: string
                          snat:
                            default: true
                            description: Optional indicates if SNAT will be enabled
                              for DHCP service
                            type: boolean
                        type: object
                      ignition:
                        description: Ignition defined options related to the bootstrapping
                          systems where Ignition is used.
                        properties:
                          version:
                            default: "2.3"
                            description: Version defines which version of Ignition
                              will be used to generate bootstrap data.
                            enum:
                            - "2.3"
                            - "2.4"
                            - "3.0"
                            - "3.1"
                            - "3.2"
                            - "3.3"
                            - "3.4"
                            type: string
                        type: object
                      loadBalancers:
                        description: loadBalancers is optional configuration for configuring
                          loadbalancers to control plane or data plane nodes. when
                          omitted system will create a public loadbalancer with name
                          CLUSTER_NAME-loadbalancer. when specified a vpc loadbalancer
                          will be created and controlPlaneEndpoint will be set with
                          associated hostname of loadbalancer. ControlPlaneEndpoint
                          will be set with associated hostname of public loadbalancer.
                          when LoadBalancers[].ID is set, its expected that there
                          exist a loadbalancer with ID or else system will give error.
                          when LoadBalancers[].Name is set, system will first check
                          for loadbalancer with Name, if not exist system will create
                          new loadbalancer.
                        items:
                          description: VPCLoadBalancerSpec defines the desired state
                            of an VPC load balancer.
                          properties:
                            additionalListeners:
                              description: AdditionalListeners sets the additional
                                listeners for the control plane load balancer. .
                              items:
                                description: AdditionalListenerSpec defines the desired
                                  state of an additional listener on an VPC load balancer.
                                properties:
                                  port:
                                    description: Port sets the port for the additional
                                      listener.
                                    format: int64
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - port
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - port
                              x-kubernetes-list-type: map
                            id:
                              description: id of the loadbalancer
                              type: string
                            name:
                              description: Name sets the name of the VPC load balancer.
                              maxLength: 63
                              type: string
                            public:
                              default: true
                              description: public indicates that load balancer is
                                public or private
                              type: boolean
                          type: object
                        type: array
                      network:
                        description: Network is the reference to the Network to use
                          for this cluster. when the field is omitted, A DHCP service
                          will be created in the Power VS workspace and its private
                          network will be used. the DHCP service created network will
                          have the following name format 1. in the case of DHCPServer.Name
                          is not set the name will be DHCPSERVER<CLUSTER_NAME>_Private.
                          2. if DHCPServer.Name is set the name will be DHCPSERVER<DHCPServer.Name>_Private.
                          when Network.ID is set, its expected that there exist a
                          network in PowerVS workspace with id or else system will
                          give error. when Network.Name is set, system will first
                          check for network with Name in PowerVS workspace, if not
                          exist network will be created by DHCP service. Network.RegEx
                          is not yet supported and system will ignore the value.
                        properties:
                          id:
                            description: ID of resource
                            minLength: 1
                            type: string
                          name:
                            description: Name of resource
                            minLength: 1
                            type: string
                          regex:
                            description: Regular expression to match resource, In
                              case of multiple resources matches the provided regular
                              expression the first matched resource will be selected
                            minLength: 1
                            type: string
                        type: object
                      resourceGroup:
                        description: resourceGroup name under which the resources
                          will be created. when powervs.cluster.x-k8s.io/create-infra=true
                          annotation is set on IBMPowerVSCluster resource, 1. it is
                          expected to set the ResourceGroup.Name, not setting will
                          result in webhook error. ServiceInstance.ID and ServiceInstance.Regex
                          is not yet supported and system will ignore the value.
                        properties:
                          id:
                            description: ID of resource
                            minLength: 1
                            type: string
                          name:
                            description: Name of resource
                            minLength: 1
                            type: string
                          regex:
                            description: Regular expression to match resource, In
                              case of multiple resources matches the provided regular
                              expression the first matched resource will be selected
                            minLength: 1
                            type: string
                        type: object
                      serviceInstance:
                        description: serviceInstance is the reference to the Power
                          VS server workspace on which the server instance(VM) will
                          be created. Power VS server workspace is a container for
                          all Power VS instances at a specific geographic region.
                          serviceInstance can be created via IBM Cloud catalog or
                          CLI. supported serviceInstance identifier in PowerVSResource
                          are Name and ID and that can be obtained from IBM Cloud
                          UI or IBM Cloud cli. More detail about Power VS service
                          instance. https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server
                          when omitted system will dynamically create the service
                          instance with name CLUSTER_NAME-serviceInstance. when ServiceInstance.ID
                          is set, its expected that there exist a service instance
                          in PowerVS workspace with id or else system will give error.
                          when ServiceInstance.Name is set, system will first check
                          for service instance with Name in PowerVS workspace, if
                          not exist system will create new instance. ServiceInstance.Regex
                          is not yet supported not yet supported and system will ignore
                          the value.
                        properties:
                          id:
                            description: ID of resource
                            minLength: 1
                            type: string
                          name:
                            description: Name of resource
                            minLength: 1
                            type: string
                          regex:
                            description: Regular expression to match resource, In
                              case of multiple resources matches the provided regular
                              expression the first matched resource will be selected
                            minLength: 1
                            type: string
                        type: object
                      serviceInstanceID:
                        description: 'ServiceInstanceID is the id of the power cloud
                          instance where the vsi instance will get deployed. Deprecated:
                          use ServiceInstance instead'
                        type: string
                      transitGateway:
                        description: transitGateway contains information about IBM
                          Cloud TransitGateway IBM Cloud TransitGateway helps in establishing
                          network connectivity between IBM Cloud Power VS and VPC
                          infrastructure more information about TransitGateway can
                          be found here https://www.ibm.com/products/transit-gateway.
                          when TransitGateway.ID is set, its expected that there exist
                          a TransitGateway with ID or else system will give error.
                          when TransitGateway.Name is set, system will first check
                          for TransitGateway with Name, if not exist system will create
                          new TransitGateway.
                        properties:
                          id:
                            description: id of resource.
                            type: string
                          name:
                            description: name of resource.
                            type: string
                        type: object
                      vpc:
                        description: vpc contains information about IBM Cloud VPC
                          resources. when omitted system will dynamically create the
                          VPC with name CLUSTER_NAME-vpc. when VPC.ID is set, its
                          expected that there exist a VPC with ID or else system will
                          give error. when VPC.Name is set, system will first check
                          for VPC with Name, if not exist system will create new VPC.
                          when powervs.cluster.x-k8s.io/create-infra=true annotation
                          is set on IBMPowerVSCluster resource, 1. it is expected
                          to set the VPC.Region, not setting will result in webhook
                          error.
                        properties:
                          id:
                            description: id of resource.
                            minLength: 1
                            type: string
                          name:
                            description: name of resource.
                            minLength: 1
                            type: string
                          region:
                            description: region of IBM Cloud VPC. when powervs.cluster.x-k8s.io/create-infra=true
                              annotation is set on IBMPowerVSCluster resource, it
                              is expected to set the region, not setting will result
                              in webhook error.
                            type: string
                        type: object
                      vpcSubnets:
                        description: vpcSubnets contains information about IBM Cloud
                          VPC Subnet resources. when omitted system will create the
                          subnets in all the zone corresponding to VPC.Region, with
                          name CLUSTER_NAME-vpcsubnet-ZONE_NAME. possible values can
                          be found here https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server.
                          when VPCSubnets[].ID is set, its expected that there exist
                          a subnet with ID or else system will give error. when VPCSubnets[].Zone
                          is not set, a random zone is picked from available zones
                          of VPC.Region. when VPCSubnets[].Name is not set, system
                          will set name as CLUSTER_NAME-vpcsubnet-INDEX. if subnet
                          with name VPCSubnets[].Name not found, system will create
                          new subnet in VPCSubnets[].Zone.
                        items:
                          description: Subnet describes a subnet.
                          properties:
                            cidr:
                              type: string
                            id:
                              type: string
                            name:
                              type: string
                            zone:
                              type: string
                          type: object
                        type: array
                      zone:
                        description: zone is the name of Power VS zone where the cluster
                          will be created possible values can be found here https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server.
                          when powervs.cluster.x-k8s.io/create-infra=true annotation
                          is set on IBMPowerVSCluster resource, 1. it is expected
                          to set the zone, not setting will result in webhook error.
                          2. the zone should have PER capabilities, or else system
                          will give error.
                        type: string
                    required:
                    - network
                    - serviceInstanceID
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-ibmcloud-system/capi-ibmcloud-serving-cert
    controller-gen.kubebuilder.io/version: v0.13.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
    cluster.x-k8s.io/v1beta1: v1beta1_v1beta2
  name: ibmpowervsimages.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capi-ibmcloud-webhook-service
          namespace: capi-ibmcloud-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: IBMPowerVSImage
    listKind: IBMPowerVSImageList
    plural: ibmpowervsimages
    singular: ibmpowervsimage
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: PowerVS image state
      jsonPath: .status.imageState
      name: State
      type: string
    - description: Image is ready for IBM PowerVS instances
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: IBMPowerVSImage is the Schema for the ibmpowervsimages API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMPowerVSImageSpec defines the desired state of IBMPowerVSImage.
            properties:
              bucket:
                description: Cloud Object Storage bucket name; bucket-name[/optional/folder]
                type: string
              clusterName:
                description: ClusterName is the name of the Cluster this object belongs
                  to.
                minLength: 1
                type: string
              deletePolicy:
                default: delete
                description: DeletePolicy defines the policy used to identify images
                  to be preserved beyond the lifecycle of associated cluster.
                enum:
                - delete
                - retain
                type: string
              object:
                description: Cloud Object Storage image filename.
                type: string
              region:
                description: Cloud Object Storage region.
                type: string
              serviceInstanceID:
                description: ServiceInstanceID is the id of the power cloud instance
                  where the image will get imported.
                type: string
              storageType:
                default: tier1
                description: Type of storage, storage pool with the most available
                  space will be selected.
                enum:
                - tier1
                - tier3
                type: string
            required:
            - bucket
            - clusterName
            - object
            - region
            - serviceInstanceID
            type: object
          status:
            description: IBMPowerVSImageStatus defines the observed state of IBMPowerVSImage.
            properties:
              conditions:
                description: Conditions defines current service state of the IBMPowerVSImage.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              imageID:
                description: ImageID is the id of the imported image.
                type: string
              imageState:
                description: ImageState is the status of the imported image.
                type: string
              jobID:
                description: JobID is the job ID of an import operation.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: PowerVS image state
      jsonPath: .status.imageState
      name: State
      type: string
    - description: Image is ready for IBM PowerVS instances
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: IBMPowerVSImage is the Schema for the ibmpowervsimages API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMPowerVSImageSpec defines the desired state of IBMPowerVSImage.
            properties:
              bucket:
                description: Cloud Object Storage bucket name; bucket-name[/optional/folder]
                type: string
              clusterName:
                description: ClusterName is the name of the Cluster this object belongs
                  to.
                minLength: 1
                type: string
              deletePolicy:
                default: delete
                description: DeletePolicy defines the policy used to identify images
                  to be preserved beyond the lifecycle of associated cluster.
                enum:
                - delete
                - retain
                type: string
              object:
                description: Cloud Object Storage image filename.
                type: string
              region:
                description: Cloud Object Storage region.
                type: string
              serviceInstance:
                description: serviceInstance is the reference to the Power VS workspace
                  on which the server instance(VM) will be created. Power VS workspace
                  is a container for all Power VS instances at a specific geographic
                  region. serviceInstance can be created via IBM Cloud catalog or
                  CLI. supported serviceInstance identifier in PowerVSResource are
                  Name and ID and that can be obtained from IBM Cloud UI or IBM Cloud
                  cli. More detail about Power VS service instance. https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server
                  when omitted system will dynamically create the service instance
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: Regular expression to match resource, In case of
                      multiple resources matches the provided regular expression the
                      first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              serviceInstanceID:
                description: 'ServiceInstanceID is the id of the power cloud instance
                  where the image will get imported. Deprecated: use ServiceInstance
                  instead'
                type: string
              storageType:
                default: tier1
                description: Type of storage, storage pool with the most available
                  space will be selected.
                enum:
                - tier1
                - tier3
                type: string
            required:
            - bucket
            - clusterName
            - object
            - region
            - serviceInstanceID
            type: object
          status:
            description: IBMPowerVSImageStatus defines the observed state of IBMPowerVSImage.
            properties:
              conditions:
                description: Conditions defines current service state of the IBMPowerVSImage.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              imageID:
                description: ImageID is the id of the imported image.
                type: string
              imageState:
                description: ImageState is the status of the imported image.
                type: string
              jobID:
                description: JobID is the job ID of an import operation.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-ibmcloud-system/capi-ibmcloud-serving-cert
    controller-gen.kubebuilder.io/version: v0.13.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
    cluster.x-k8s.io/v1beta1: v1beta1_v1beta2
  name: ibmpowervsmachines.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capi-ibmcloud-webhook-service
          namespace: capi-ibmcloud-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: IBMPowerVSMachine
    listKind: IBMPowerVSMachineList
    plural: ibmpowervsmachines
    singular: ibmpowervsmachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this IBMPowerVSMachine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Machine object to which this IBMPowerVSMachine belongs
      jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
      name: Machine
      priority: 1
      type: string
    - description: Time duration since creation of IBMPowerVSMachine
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Cluster infrastructure is ready for IBM PowerVS instances
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Instance Internal Addresses
      jsonPath: .status.addresses[?(@.type=="InternalIP")].address
      name: Internal-IP
      priority: 1
      type: string
    - description: Instance External Addresses
      jsonPath: .status.addresses[?(@.type=="ExternalIP")].address
      name: External-IP
      priority: 1
      type: string
    - description: PowerVS instance state
      jsonPath: .status.instanceState
      name: State
      type: string
    - description: PowerVS instance health
      jsonPath: .status.health
      name: Health
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: IBMPowerVSMachine is the Schema for the ibmpowervsmachines API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMPowerVSMachineSpec defines the desired state of IBMPowerVSMachine.
            properties:
              image:
                description: Image is the reference to the Image from which to create
                  the machine instance.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: Regular expression to match resource, In case of
                      multiple resources matches the provided regular expression the
                      first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              imageRef:
                description: ImageRef is an optional reference to a provider-specific
                  resource that holds the details for provisioning the Image for a
                  Cluster.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              memory:
                description: Memory is Amount of memory allocated (in GB)
                type: string
              network:
                description: Network is the reference to the Network to use for this
                  instance.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: Regular expression to match resource, In case of
                      multiple resources matches the provided regular expression the
                      first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              procType:
                description: 'ProcType is the processor type, e.g: dedicated, shared,
                  capped'
                type: string
              processors:
                description: Processors is Number of processors allocated.
                pattern: ^\d+(\.)?(\d)?(\d)?$
                type: string
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              serviceInstanceID:
                description: ServiceInstanceID is the id of the power cloud instance
                  where the vsi instance will get deployed.
                minLength: 1
                type: string
              sshKey:
                description: SSHKey is the name of the SSH key pair provided to the
                  vsi for authenticating users.
                type: string
              sysType:
                description: SysType is the System type used to host the vsi.
                type: string
            required:
            - network
            - serviceInstanceID
            type: object
          status:
            description: IBMPowerVSMachineStatus defines the observed state of IBMPowerVSMachine.
            properties:
              addresses:
                description: Addresses contains the vsi associated addresses.
                items:
                  description: NodeAddress contains information for the node's address.
                  properties:
                    address:
                      description: The node address.
                      type: string
                    type:
                      description: Node address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the IBMPowerVSMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the Machine's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of Machines can be added as events to
                  the Machine object and/or logged in the controller's output."
                type: string
              fault:
                description: Fault will report if any fault messages for the vsi.
                type: string
              health:
                description: Health is the health of the vsi.
                type: string
              instanceID:
                type: string
              instanceState:
                description: InstanceState is the status of the vsi.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              region:
                description: Region specifies the Power VS Service instance region.
                type: string
              zone:
                description: Zone specifies the Power VS Service instance zone.
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Cluster to which this IBMPowerVSMachine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Machine object to which this IBMPowerVSMachine belongs
      jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
      name: Machine
      priority: 1
      type: string
    - description: Time duration since creation of IBMPowerVSMachine
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Cluster infrastructure is ready for IBM PowerVS instances
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Instance Internal Addresses
      jsonPath: .status.addresses[?(@.type=="InternalIP")].address
      name: Internal-IP
      priority: 1
      type: string
    - description: Instance External Addresses
      jsonPath: .status.addresses[?(@.type=="ExternalIP")].address
      name: External-IP
      priority: 1
      type: string
    - description: PowerVS instance state
      jsonPath: .status.instanceState
      name: State
      type: string
    - description: PowerVS instance health
      jsonPath: .status.health
      name: Health
      type: string
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: IBMPowerVSMachine is the Schema for the ibmpowervsmachines API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMPowerVSMachineSpec defines the desired state of IBMPowerVSMachine.
            properties:
              image:
                description: Image the reference to the image which is used to create
                  the instance. supported image identifier in IBMPowerVSResourceReference
                  are Name and ID and that can be obtained from IBM Cloud UI or IBM
                  Cloud cli.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: Regular expression to match resource, In case of
                      multiple resources matches the provided regular expression the
                      first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              imageRef:
                description: ImageRef is an optional reference to a provider-specific
                  resource that holds the details for provisioning the Image for a
                  Cluster.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              memoryGiB:
                description: memoryGiB is the size of a virtual machine's memory,
                  in GiB. maximum value for the MemoryGiB depends on the selected
                  SystemType. when SystemType is set to e880 maximum MemoryGiB value
                  is 7463 GiB. when SystemType is set to e980 maximum MemoryGiB value
                  is 15307 GiB. when SystemType is set to s922 maximum MemoryGiB value
                  is 942 GiB. The minimum memory is 2 GiB. When omitted, this means
                  the user has no opinion and the platform is left to choose a reasonable
                  default, which is subject to change over time. The current default
                  is 2.
                format: int32
                type: integer
              network:
                description: Network is the reference to the Network to use for this
                  instance. supported network identifier in IBMPowerVSResourceReference
                  are Name, ID and RegEx and that can be obtained from IBM Cloud UI
                  or IBM Cloud cli.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: Regular expression to match resource, In case of
                      multiple resources matches the provided regular expression the
                      first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              processorType:
                description: 'processorType is the VM instance processor type. It
                  must be set to one of the following values: Dedicated, Capped or
                  Shared. Dedicated: resources are allocated for a specific client,
                  The hypervisor makes a 1:1 binding of a partition’s processor to
                  a physical processor core. Shared: Shared among other clients. Capped:
                  Shared, but resources do not expand beyond those that are requested,
                  the amount of CPU time is Capped to the value specified for the
                  entitlement. if the processorType is selected as Dedicated, then
                  processors value cannot be fractional. When omitted, this means
                  that the user has no opinion and the platform is left to choose
                  a reasonable default, which is subject to change over time. The
                  current default is Shared.'
                enum:
                - Dedicated
                - Shared
                - Capped
                - ""
                type: string
              processors:
                anyOf:
                - type: integer
                - type: string
                description: processors is the number of virtual processors in a virtual
                  machine. when the processorType is selected as Dedicated the processors
                  value cannot be fractional. maximum value for the Processors depends
                  on the selected SystemType. when SystemType is set to e880 or e980
                  maximum Processors value is 143. when SystemType is set to s922
                  maximum Processors value is 15. minimum value for Processors depends
                  on the selected ProcessorType. when ProcessorType is set as Shared
                  or Capped, The minimum processors is 0.25. when ProcessorType is
                  set as Dedicated, The minimum processors is 1. When omitted, this
                  means that the user has no opinion and the platform is left to choose
                  a reasonable default, which is subject to change over time. The
                  default is set based on the selected ProcessorType. when ProcessorType
                  selected as Dedicated, the default is set to 1. when ProcessorType
                  selected as Shared or Capped, the default is set to 0.25.
                x-kubernetes-int-or-string: true
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              serviceInstance:
                description: serviceInstance is the reference to the Power VS workspace
                  on which the server instance(VM) will be created. Power VS workspace
                  is a container for all Power VS instances at a specific geographic
                  region. serviceInstance can be created via IBM Cloud catalog or
                  CLI. supported serviceInstance identifier in PowerVSResource are
                  Name and ID and that can be obtained from IBM Cloud UI or IBM Cloud
                  cli. More detail about Power VS service instance. https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server
                  when omitted system will dynamically create the service instance
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                  regex:
                    description: Regular expression to match resource, In case of
                      multiple resources matches the provided regular expression the
                      first matched resource will be selected
                    minLength: 1
                    type: string
                type: object
              serviceInstanceID:
                description: 'ServiceInstanceID is the id of the power cloud instance
                  where the vsi instance will get deployed. Deprecated: use ServiceInstance
                  instead'
                type: string
              sshKey:
                description: SSHKey is the name of the SSH key pair provided to the
                  vsi for authenticating users.
                type: string
              systemType:
                description: systemType is the System type used to host the instance.
                  systemType determines the number of cores and memory that is available.
                  Few of the supported SystemTypes are s922,e880,e980. e880 systemType
                  available only in Dallas Datacenters. e980 systemType available
                  in Datacenters except Dallas and Washington. When omitted, this
                  means that the user has no opinion and the platform is left to choose
                  a reasonable default, which is subject to change over time. The
                  current default is s922 which is generally available.
                enum:
                - s922
                - e880
                - e980
                - s1022
                - ""
                type: string
            required:
            - network
            - serviceInstanceID
            type: object
          status:
            description: IBMPowerVSMachineStatus defines the observed state of IBMPowerVSMachine.
            properties:
              addresses:
                description: Addresses contains the vsi associated addresses.
                items:
                  description: NodeAddress contains information for the node's address.
                  properties:
                    address:
                      description: The node address.
                      type: string
                    type:
                      description: Node address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the IBMPowerVSMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the Machine's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of Machines can be added as events to
                  the Machine object and/or logged in the controller's output."
                type: string
              fault:
                description: Fault will report if any fault messages for the vsi.
                type: string
              health:
                description: Health is the health of the vsi.
                type: string
              instanceID:
                type: string
              instanceState:
                description: InstanceState is the status of the vsi.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              region:
                description: Region specifies the Power VS Service instance region.
                type: string
              zone:
                description: Zone specifies the Power VS Service instance zone.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-ibmcloud-system/capi-ibmcloud-serving-cert
    controller-gen.kubebuilder.io/version: v0.13.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
    cluster.x-k8s.io/v1beta1: v1beta1_v1beta2
  name: ibmpowervsmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capi-ibmcloud-webhook-service
          namespace: capi-ibmcloud-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: IBMPowerVSMachineTemplate
    listKind: IBMPowerVSMachineTemplateList
    plural: ibmpowervsmachinetemplates
    singular: ibmpowervsmachinetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: IBMPowerVSMachineTemplate is the Schema for the ibmpowervsmachinetemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMPowerVSMachineTemplateSpec defines the desired state of
              IBMPowerVSMachineTemplate.
            properties:
              template:
                description: IBMPowerVSMachineTemplateResource holds the IBMPowerVSMachine
                  spec.
                properties:
                  spec:
                    description: IBMPowerVSMachineSpec defines the desired state of
                      IBMPowerVSMachine.
                    properties:
                      image:
                        description: Image is the reference to the Image from which
                          to create the machine instance.
                        properties:
                          id:
                            description: ID of resource
                            minLength: 1
                            type: string
                          name:
                            description: Name of resource
                            minLength: 1
                            type: string
                          regex:
                            description: Regular expression to match resource, In
                              case of multiple resources matches the provided regular
                              expression the first matched resource will be selected
                            minLength: 1
                            type: string
                        type: object
                      imageRef:
                        description: ImageRef is an optional reference to a provider-specific
                          resource that holds the details for provisioning the Image
                          for a Cluster.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      memory:
                        description: Memory is Amount of memory allocated (in GB)
                        type: string
                      network:
                        description: Network is the reference to the Network to use
                          for this instance.
                        properties:
                          id:
                            description: ID of resource
                            minLength: 1
                            type: string
                          name:
                            description: Name of resource
                            minLength: 1
                            type: string
                          regex:
                            description: Regular expression to match resource, In
                              case of multiple resources matches the provided regular
                              expression the first matched resource will be selected
                            minLength: 1
                            type: string
                        type: object
                      procType:
                        description: 'ProcType is the processor type, e.g: dedicated,
                          shared, capped'
                        type: string
                      processors:
                        description: Processors is Number of processors allocated.
                        pattern: ^\d+(\.)?(\d)?(\d)?$
                        type: string
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider.
                        type: string
                      serviceInstanceID:
                        description: ServiceInstanceID is the id of the power cloud
                          instance where the vsi instance will get deployed.
                        minLength: 1
                        type: string
                      sshKey:
                        description: SSHKey is the name of the SSH key pair provided
                          to the vsi for authenticating users.
                        type: string
                      sysType:
                        description: SysType is the System type used to host the vsi.
                        type: string
                    required:
                    - network
                    - serviceInstanceID
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
          status:
            description: IBMPowerVSMachineTemplateStatus defines the observed state
              of IBMPowerVSMachineTemplate.
            properties:
              capacity:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: 'Capacity defines the resource capacity for this machine.
                  This value is used for autoscaling from zero operations as defined
                  in: https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20210310-opt-in-autoscaling-from-zero.md'
                type: object
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: IBMPowerVSMachineTemplate is the Schema for the ibmpowervsmachinetemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMPowerVSMachineTemplateSpec defines the desired state of
              IBMPowerVSMachineTemplate.
            properties:
              template:
                description: IBMPowerVSMachineTemplateResource holds the IBMPowerVSMachine
                  spec.
                properties:
                  spec:
                    description: IBMPowerVSMachineSpec defines the desired state of
                      IBMPowerVSMachine.
                    properties:
                      image:
                        description: Image the reference to the image which is used
                          to create the instance. supported image identifier in IBMPowerVSResourceReference
                          are Name and ID and that can be obtained from IBM Cloud
                          UI or IBM Cloud cli.
                        properties:
                          id:
                            description: ID of resource
                            minLength: 1
                            type: string
                          name:
                            description: Name of resource
                            minLength: 1
                            type: string
                          regex:
                            description: Regular expression to match resource, In
                              case of multiple resources matches the provided regular
                              expression the first matched resource will be selected
                            minLength: 1
                            type: string
                        type: object
                      imageRef:
                        description: ImageRef is an optional reference to a provider-specific
                          resource that holds the details for provisioning the Image
                          for a Cluster.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      memoryGiB:
                        description: memoryGiB is the size of a virtual machine's
                          memory, in GiB. maximum value for the MemoryGiB depends
                          on the selected SystemType. when SystemType is set to e880
                          maximum MemoryGiB value is 7463 GiB. when SystemType is
                          set to e980 maximum MemoryGiB value is 15307 GiB. when SystemType
                          is set to s922 maximum MemoryGiB value is 942 GiB. The minimum
                          memory is 2 GiB. When omitted, this means the user has no
                          opinion and the platform is left to choose a reasonable
                          default, which is subject to change over time. The current
                          default is 2.
                        format: int32
                        type: integer
                      network:
                        description: Network is the reference to the Network to use
                          for this instance. supported network identifier in IBMPowerVSResourceReference
                          are Name, ID and RegEx and that can be obtained from IBM
                          Cloud UI or IBM Cloud cli.
                        properties:
                          id:
                            description: ID of resource
                            minLength: 1
                            type: string
                          name:
                            description: Name of resource
                            minLength: 1
                            type: string
                          regex:
                            description: Regular expression to match resource, In
                              case of multiple resources matches the provided regular
                              expression the first matched resource will be selected
                            minLength: 1
                            type: string
                        type: object
                      processorType:
                        description: 'processorType is the VM instance processor type.
                          It must be set to one of the following values: Dedicated,
                          Capped or Shared. Dedicated: resources are allocated for
                          a specific client, The hypervisor makes a 1:1 binding of
                          a partition’s processor to a physical processor core. Shared:
                          Shared among other clients. Capped: Shared, but resources
                          do not expand beyond those that are requested, the amount
                          of CPU time is Capped to the value specified for the entitlement.
                          if the processorType is selected as Dedicated, then processors
                          value cannot be fractional. When omitted, this means that
                          the user has no opinion and the platform is left to choose
                          a reasonable default, which is subject to change over time.
                          The current default is Shared.'
                        enum:
                        - Dedicated
                        - Shared
                        - Capped
                        - ""
                        type: string
                      processors:
                        anyOf:
                        - type: integer
                        - type: string
                        description: processors is the number of virtual processors
                          in a virtual machine. when the processorType is selected
                          as Dedicated the processors value cannot be fractional.
                          maximum value for the Processors depends on the selected
                          SystemType. when SystemType is set to e880 or e980 maximum
                          Processors value is 143. when SystemType is set to s922
                          maximum Processors value is 15. minimum value for Processors
                          depends on the selected ProcessorType. when ProcessorType
                          is set as Shared or Capped, The minimum processors is 0.25.
                          when ProcessorType is set as Dedicated, The minimum processors
                          is 1. When omitted, this means that the user has no opinion
                          and the platform is left to choose a reasonable default,
                          which is subject to change over time. The default is set
                          based on the selected ProcessorType. when ProcessorType
                          selected as Dedicated, the default is set to 1. when ProcessorType
                          selected as Shared or Capped, the default is set to 0.25.
                        x-kubernetes-int-or-string: true
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider.
                        type: string
                      serviceInstance:
                        description: serviceInstance is the reference to the Power
                          VS workspace on which the server instance(VM) will be created.
                          Power VS workspace is a container for all Power VS instances
                          at a specific geographic region. serviceInstance can be
                          created via IBM Cloud catalog or CLI. supported serviceInstance
                          identifier in PowerVSResource are Name and ID and that can
                          be obtained from IBM Cloud UI or IBM Cloud cli. More detail
                          about Power VS service instance. https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server
                          when omitted system will dynamically create the service
                          instance
                        properties:
                          id:
                            description: ID of resource
                            minLength: 1
                            type: string
                          name:
                            description: Name of resource
                            minLength: 1
                            type: string
                          regex:
                            description: Regular expression to match resource, In
                              case of multiple resources matches the provided regular
                              expression the first matched resource will be selected
                            minLength: 1
                            type: string
                        type: object
                      serviceInstanceID:
                        description: 'ServiceInstanceID is the id of the power cloud
                          instance where the vsi instance will get deployed. Deprecated:
                          use ServiceInstance instead'
                        type: string
                      sshKey:
                        description: SSHKey is the name of the SSH key pair provided
                          to the vsi for authenticating users.
                        type: string
                      systemType:
                        description: systemType is the System type used to host the
                          instance. systemType determines the number of cores and
                          memory that is available. Few of the supported SystemTypes
                          are s922,e880,e980. e880 systemType available only in Dallas
                          Datacenters. e980 systemType available in Datacenters except
                          Dallas and Washington. When omitted, this means that the
                          user has no opinion and the platform is left to choose a
                          reasonable default, which is subject to change over time.
                          The current default is s922 which is generally available.
                        enum:
                        - s922
                        - e880
                        - e980
                        - s1022
                        - ""
                        type: string
                    required:
                    - network
                    - serviceInstanceID
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
          status:
            description: IBMPowerVSMachineTemplateStatus defines the observed state
              of IBMPowerVSMachineTemplate.
            properties:
              capacity:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: 'Capacity defines the resource capacity for this machine.
                  This value is used for autoscaling from zero operations as defined
                  in: https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20210310-opt-in-autoscaling-from-zero.md'
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-ibmcloud-system/capi-ibmcloud-serving-cert
    controller-gen.kubebuilder.io/version: v0.13.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
    cluster.x-k8s.io/v1beta1: v1beta1_v1beta2
  name: ibmvpcclusters.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capi-ibmcloud-webhook-service
          namespace: capi-ibmcloud-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: IBMVPCCluster
    listKind: IBMVPCClusterList
    plural: ibmvpcclusters
    singular: ibmvpccluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this IBMVPCCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Cluster infrastructure is ready for IBM VPC instances
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: IBMVPCCluster is the Schema for the ibmvpcclusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMVPCClusterSpec defines the desired state of IBMVPCCluster.
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              controlPlaneLoadBalancer:
                description: ControlPlaneLoadBalancer is optional configuration for
                  customizing control plane behavior.
                properties:
                  name:
                    description: Name sets the name of the VPC load balancer.
                    maxLength: 63
                    pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                    type: string
                type: object
              region:
                description: The IBM Cloud Region the cluster lives in.
                type: string
              resourceGroup:
                description: The VPC resources should be created under the resource
                  group.
                type: string
              vpc:
                description: The Name of VPC.
                type: string
              zone:
                description: The Name of availability zone.
                type: string
            required:
            - region
            - resourceGroup
            type: object
          status:
            description: IBMVPCClusterStatus defines the observed state of IBMVPCCluster.
            properties:
              conditions:
                description: Conditions defines current service state of the load
                  balancer.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              controlPlaneLoadBalancerState:
                description: ControlPlaneLoadBalancerState is the status of the load
                  balancer.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              subnet:
                description: Subnet describes a subnet.
                properties:
                  cidr:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                  zone:
                    type: string
                required:
                - cidr
                - id
                - name
                - zone
                type: object
              vpc:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                properties:
                  id:
                    type: string
                  name:
                    type: string
                required:
                - id
                - name
                type: object
              vpcEndpoint:
                description: VPCEndpoint describes a VPCEndpoint.
                properties:
                  address:
                    type: string
                  floatingIPID:
                    description: 'Deprecated: This field has no function and is going
                      to be removed in the next release.'
                    type: string
                  loadBalancerIPID:
                    type: string
                required:
                - address
                type: object
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Cluster to which this IBMVPCCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Cluster infrastructure is ready for IBM VPC instances
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: IBMVPCCluster is the Schema for the ibmvpcclusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMVPCClusterSpec defines the desired state of IBMVPCCluster.
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              controlPlaneLoadBalancer:
                description: ControlPlaneLoadBalancer is optional configuration for
                  customizing control plane behavior.
                properties:
                  additionalListeners:
                    description: AdditionalListeners sets the additional listeners
                      for the control plane load balancer. .
                    items:
                      description: AdditionalListenerSpec defines the desired state
                        of an additional listener on an VPC load balancer.
                      properties:
                        port:
                          description: Port sets the port for the additional listener.
                          format: int64
                          maximum: 65535
                          minimum: 1
                          type: integer
                      required:
                      - port
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - port
                    x-kubernetes-list-type: map
                  id:
                    description: id of the loadbalancer
                    type: string
                  name:
                    description: Name sets the name of the VPC load balancer.
                    maxLength: 63
                    type: string
                  public:
                    default: true
                    description: public indicates that load balancer is public or
                      private
                    type: boolean
                type: object
              region:
                description: The IBM Cloud Region the cluster lives in.
                type: string
              resourceGroup:
                description: The VPC resources should be created under the resource
                  group.
                type: string
              vpc:
                description: The Name of VPC.
                type: string
              zone:
                description: The Name of availability zone.
                type: string
            required:
            - region
            - resourceGroup
            type: object
          status:
            description: IBMVPCClusterStatus defines the observed state of IBMVPCCluster.
            properties:
              conditions:
                description: Conditions defines current service state of the load
                  balancer.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              controlPlaneLoadBalancerState:
                description: ControlPlaneLoadBalancerState is the status of the load
                  balancer.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              subnet:
                description: Subnet describes a subnet.
                properties:
                  cidr:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                  zone:
                    type: string
                type: object
              vpc:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                properties:
                  id:
                    type: string
                  name:
                    type: string
                required:
                - id
                - name
                type: object
              vpcEndpoint:
                description: VPCEndpoint describes a VPCEndpoint.
                properties:
                  address:
                    type: string
                  floatingIPID:
                    description: 'Deprecated: This field has no function and is going
                      to be removed in the next release.'
                    type: string
                  loadBalancerIPID:
                    type: string
                required:
                - address
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
    cluster.x-k8s.io/v1beta1: v1beta1_v1beta2
  name: ibmvpcclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: IBMVPCClusterTemplate
    listKind: IBMVPCClusterTemplateList
    plural: ibmvpcclustertemplates
    shortNames:
    - ibmvpcct
    singular: ibmvpcclustertemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Time duration since creation of IBMVPCClusterTemplate
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: IBMVPCClusterTemplate is the Schema for the ibmvpcclustertemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMVPCClusterTemplateSpec defines the desired state of IBMVPCClusterTemplate.
            properties:
              template:
                description: IBMVPCClusterTemplateResource describes the data needed
                  to create an IBMVPCCluster from a template.
                properties:
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map
                          stored with a resource that may be set by external tools
                          to store and retrieve arbitrary metadata. They are not queryable
                          and should be preserved when modifying objects. More info:
                          http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and services.
                          More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                    type: object
                  spec:
                    description: IBMVPCClusterSpec defines the desired state of IBMVPCCluster.
                    properties:
                      controlPlaneEndpoint:
                        description: ControlPlaneEndpoint represents the endpoint
                          used to communicate with the control plane.
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                          port:
                            description: The port on which the API server is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      controlPlaneLoadBalancer:
                        description: ControlPlaneLoadBalancer is optional configuration
                          for customizing control plane behavior.
                        properties:
                          additionalListeners:
                            description: AdditionalListeners sets the additional listeners
                              for the control plane load balancer. .
                            items:
                              description: AdditionalListenerSpec defines the desired
                                state of an additional listener on an VPC load balancer.
                              properties:
                                port:
                                  description: Port sets the port for the additional
                                    listener.
                                  format: int64
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                              required:
                              - port
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - port
                            x-kubernetes-list-type: map
                          id:
                            description: id of the loadbalancer
                            type: string
                          name:
                            description: Name sets the name of the VPC load balancer.
                            maxLength: 63
                            type: string
                          public:
                            default: true
                            description: public indicates that load balancer is public
                              or private
                            type: boolean
                        type: object
                      region:
                        description: The IBM Cloud Region the cluster lives in.
                        type: string
                      resourceGroup:
                        description: The VPC resources should be created under the
                          resource group.
                        type: string
                      vpc:
                        description: The Name of VPC.
                        type: string
                      zone:
                        description: The Name of availability zone.
                        type: string
                    required:
                    - region
                    - resourceGroup
                    type: object
                required:
                - spec
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-ibmcloud-system/capi-ibmcloud-serving-cert
    controller-gen.kubebuilder.io/version: v0.13.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
    cluster.x-k8s.io/v1beta1: v1beta1_v1beta2
  name: ibmvpcmachines.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capi-ibmcloud-webhook-service
          namespace: capi-ibmcloud-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: IBMVPCMachine
    listKind: IBMVPCMachineList
    plural: ibmvpcmachines
    singular: ibmvpcmachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster infrastructure is ready for IBM VPC instances
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: IBMVPCMachine is the Schema for the ibmvpcmachines API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMVPCMachineSpec defines the desired state of IBMVPCMachine.
            properties:
              bootVolume:
                description: BootVolume contains machines's boot volume configurations
                  like size, iops etc..
                properties:
                  deleteVolumeOnInstanceDelete:
                    default: true
                    description: DeleteVolumeOnInstanceDelete If set to true, when
                      deleting the instance the volume will also be deleted. Default
                      is set as true
                    type: boolean
                  encryptionKeyCRN:
                    description: EncryptionKey is the root key to use to wrap the
                      data encryption key for the volume and this points to the CRN
                      and possible values are as follows. The CRN of the [Key Protect
                      Root Key](https://cloud.ibm.com/docs/key-protect?topic=key-protect-getting-started-tutorial)
                      or [Hyper Protect Crypto Service Root Key](https://cloud.ibm.com/docs/hs-crypto?topic=hs-crypto-get-started)
                      for this resource. If unspecified, the `encryption` type for
                      the volume will be `provider_managed`.
                    type: string
                  iops:
                    description: Iops is the maximum I/O operations per second (IOPS)
                      to use for the volume. Applicable only to volumes using a profile
                      family of `custom`.
                    format: int64
                    type: integer
                  name:
                    description: Name is the unique user-defined name for this volume.
                      Default will be autogenerated
                    type: string
                  profile:
                    default: general-purpose
                    description: Profile is the volume profile for the bootdisk, refer
                      https://cloud.ibm.com/docs/vpc?topic=vpc-block-storage-profiles
                      for more information. Default to general-purpose
                    enum:
                    - general-purpose
                    - 5iops-tier
                    - 10iops-tier
                    - custom
                    type: string
                  sizeGiB:
                    description: SizeGiB is the size of the virtual server's boot
                      disk in GiB. Default to the size of the image's `minimum_provisioned_size`.
                    format: int64
                    type: integer
                type: object
              image:
                description: 'Image is the id of OS image which would be install on
                  the instance. Example: r134-ed3f775f-ad7e-4e37-ae62-7199b4988b00'
                type: string
              imageName:
                description: ImageName is the name of OS image which would be install
                  on the instance.
                type: string
              name:
                description: Name of the instance.
                type: string
              primaryNetworkInterface:
                description: PrimaryNetworkInterface is required to specify subnet.
                properties:
                  subnet:
                    description: Subnet ID of the network interface.
                    type: string
                type: object
              profile:
                description: "Profile indicates the flavor of instance. Example: bx2-8x32\tmeans
                  8 vCPUs\t32 GB RAM\t16 Gbps TODO: add a reference link of profile"
                type: string
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              sshKeyNames:
                description: SSHKeysNames is the SSH pub key names that will be used
                  to access VM.
                items:
                  type: string
                type: array
              sshKeys:
                description: SSHKeys is the SSH pub keys that will be used to access
                  VM.
                items:
                  type: string
                type: array
              zone:
                description: 'Zone is the place where the instance should be created.
                  Example: us-south-3 TODO: Actually zone is transparent to user.
                  The field user can access is location. Example: Dallas 2'
                type: string
            required:
            - zone
            type: object
          status:
            description: IBMVPCMachineStatus defines the observed state of IBMVPCMachine.
            properties:
              addresses:
                description: Addresses contains the GCP instance associated addresses.
                items:
                  description: NodeAddress contains information for the node's address.
                  properties:
                    address:
                      description: The node address.
                      type: string
                    type:
                      description: Node address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              instanceID:
                type: string
              instanceState:
                description: InstanceStatus is the status of the GCP instance for
                  this machine.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Cluster infrastructure is ready for IBM VPC instances
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: IBMVPCMachine is the Schema for the ibmvpcmachines API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMVPCMachineSpec defines the desired state of IBMVPCMachine.
            properties:
              bootVolume:
                description: BootVolume contains machines's boot volume configurations
                  like size, iops etc..
                properties:
                  deleteVolumeOnInstanceDelete:
                    default: true
                    description: DeleteVolumeOnInstanceDelete If set to true, when
                      deleting the instance the volume will also be deleted. Default
                      is set as true
                    type: boolean
                  encryptionKeyCRN:
                    description: EncryptionKey is the root key to use to wrap the
                      data encryption key for the volume and this points to the CRN
                      and possible values are as follows. The CRN of the [Key Protect
                      Root Key](https://cloud.ibm.com/docs/key-protect?topic=key-protect-getting-started-tutorial)
                      or [Hyper Protect Crypto Service Root Key](https://cloud.ibm.com/docs/hs-crypto?topic=hs-crypto-get-started)
                      for this resource. If unspecified, the `encryption` type for
                      the volume will be `provider_managed`.
                    type: string
                  iops:
                    description: Iops is the maximum I/O operations per second (IOPS)
                      to use for the volume. Applicable only to volumes using a profile
                      family of `custom`.
                    format: int64
                    type: integer
                  name:
                    description: Name is the unique user-defined name for this volume.
                      Default will be autogenerated
                    type: string
                  profile:
                    default: general-purpose
                    description: Profile is the volume profile for the bootdisk, refer
                      https://cloud.ibm.com/docs/vpc?topic=vpc-block-storage-profiles
                      for more information. Default to general-purpose
                    enum:
                    - general-purpose
                    - 5iops-tier
                    - 10iops-tier
                    - custom
                    type: string
                  sizeGiB:
                    description: SizeGiB is the size of the virtual server's boot
                      disk in GiB. Default to the size of the image's `minimum_provisioned_size`.
                    format: int64
                    type: integer
                type: object
              image:
                description: Image is the OS image which would be install on the instance.
                  ID will take higher precedence over Name if both specified.
                properties:
                  id:
                    description: ID of resource
                    minLength: 1
                    type: string
                  name:
                    description: Name of resource
                    minLength: 1
                    type: string
                type: object
              name:
                description: Name of the instance.
                type: string
              primaryNetworkInterface:
                description: PrimaryNetworkInterface is required to specify subnet.
                properties:
                  subnet:
                    description: Subnet ID of the network interface.
                    type: string
                type: object
              profile:
                description: "Profile indicates the flavor of instance. Example: bx2-8x32\tmeans
                  8 vCPUs\t32 GB RAM\t16 Gbps TODO: add a reference link of profile"
                type: string
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              sshKeys:
                description: SSHKeys is the SSH pub keys that will be used to access
                  VM. ID will take higher precedence over Name if both specified.
                items:
                  description: IBMVPCResourceReference is a reference to a specific
                    VPC resource by ID or Name Only one of ID or Name may be specified.
                    Specifying more than one will result in a validation error.
                  properties:
                    id:
                      description: ID of resource
                      minLength: 1
                      type: string
                    name:
                      description: Name of resource
                      minLength: 1
                      type: string
                  type: object
                type: array
              zone:
                description: 'Zone is the place where the instance should be created.
                  Example: us-south-3 TODO: Actually zone is transparent to user.
                  The field user can access is location. Example: Dallas 2'
                type: string
            required:
            - image
            - zone
            type: object
          status:
            description: IBMVPCMachineStatus defines the observed state of IBMVPCMachine.
            properties:
              addresses:
                description: Addresses contains the GCP instance associated addresses.
                items:
                  description: NodeAddress contains information for the node's address.
                  properties:
                    address:
                      description: The node address.
                      type: string
                    type:
                      description: Node address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              instanceID:
                type: string
              instanceState:
                description: InstanceStatus is the status of the GCP instance for
                  this machine.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-ibmcloud-system/capi-ibmcloud-serving-cert
    controller-gen.kubebuilder.io/version: v0.13.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
    cluster.x-k8s.io/v1beta1: v1beta1_v1beta2
  name: ibmvpcmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capi-ibmcloud-webhook-service
          namespace: capi-ibmcloud-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: IBMVPCMachineTemplate
    listKind: IBMVPCMachineTemplateList
    plural: ibmvpcmachinetemplates
    singular: ibmvpcmachinetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: IBMVPCMachineTemplate is the Schema for the ibmvpcmachinetemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMVPCMachineTemplateSpec defines the desired state of IBMVPCMachineTemplate.
            properties:
              template:
                description: IBMVPCMachineTemplateResource describes the data needed
                  to create am IBMVPCMachine from a template.
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      bootVolume:
                        description: BootVolume contains machines's boot volume configurations
                          like size, iops etc..
                        properties:
                          deleteVolumeOnInstanceDelete:
                            default: true
                            description: DeleteVolumeOnInstanceDelete If set to true,
                              when deleting the instance the volume will also be deleted.
                              Default is set as true
                            type: boolean
                          encryptionKeyCRN:
                            description: EncryptionKey is the root key to use to wrap
                              the data encryption key for the volume and this points
                              to the CRN and possible values are as follows. The CRN
                              of the [Key Protect Root Key](https://cloud.ibm.com/docs/key-protect?topic=key-protect-getting-started-tutorial)
                              or [Hyper Protect Crypto Service Root Key](https://cloud.ibm.com/docs/hs-crypto?topic=hs-crypto-get-started)
                              for this resource. If unspecified, the `encryption`
                              type for the volume will be `provider_managed`.
                            type: string
                          iops:
                            description: Iops is the maximum I/O operations per second
                              (IOPS) to use for the volume. Applicable only to volumes
                              using a profile family of `custom`.
                            format: int64
                            type: integer
                          name:
                            description: Name is the unique user-defined name for
                              this volume. Default will be autogenerated
                            type: string
                          profile:
                            default: general-purpose
                            description: Profile is the volume profile for the bootdisk,
                              refer https://cloud.ibm.com/docs/vpc?topic=vpc-block-storage-profiles
                              for more information. Default to general-purpose
                            enum:
                            - general-purpose
                            - 5iops-tier
                            - 10iops-tier
                            - custom
                            type: string
                          sizeGiB:
                            description: SizeGiB is the size of the virtual server's
                              boot disk in GiB. Default to the size of the image's
                              `minimum_provisioned_size`.
                            format: int64
                            type: integer
                        type: object
                      image:
                        description: 'Image is the id of OS image which would be install
                          on the instance. Example: r134-ed3f775f-ad7e-4e37-ae62-7199b4988b00'
                        type: string
                      imageName:
                        description: ImageName is the name of OS image which would
                          be install on the instance.
                        type: string
                      name:
                        description: Name of the instance.
                        type: string
                      primaryNetworkInterface:
                        description: PrimaryNetworkInterface is required to specify
                          subnet.
                        properties:
                          subnet:
                            description: Subnet ID of the network interface.
                            type: string
                        type: object
                      profile:
                        description: "Profile indicates the flavor of instance. Example:
                          bx2-8x32\tmeans 8 vCPUs\t32 GB RAM\t16 Gbps TODO: add a
                          reference link of profile"
                        type: string
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider.
                        type: string
                      sshKeyNames:
                        description: SSHKeysNames is the SSH pub key names that will
                          be used to access VM.
                        items:
                          type: string
                        type: array
                      sshKeys:
                        description: SSHKeys is the SSH pub keys that will be used
                          to access VM.
                        items:
                          type: string
                        type: array
                      zone:
                        description: 'Zone is the place where the instance should
                          be created. Example: us-south-3 TODO: Actually zone is transparent
                          to user. The field user can access is location. Example:
                          Dallas 2'
                        type: string
                    required:
                    - zone
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
          status:
            description: IBMVPCMachineTemplateStatus defines the observed state of
              IBMVPCMachineTemplate.
            type: object
        type: object
    served: true
    storage: false
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: IBMVPCMachineTemplate is the Schema for the ibmvpcmachinetemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IBMVPCMachineTemplateSpec defines the desired state of IBMVPCMachineTemplate.
            properties:
              template:
                description: IBMVPCMachineTemplateResource describes the data needed
                  to create am IBMVPCMachine from a template.
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      bootVolume:
                        description: BootVolume contains machines's boot volume configurations
                          like size, iops etc..
                        properties:
                          deleteVolumeOnInstanceDelete:
                            default: true
                            description: DeleteVolumeOnInstanceDelete If set to true,
                              when deleting the instance the volume will also be deleted.
                              Default is set as true
                            type: boolean
                          encryptionKeyCRN:
                            description: EncryptionKey is the root key to use to wrap
                              the data encryption key for the volume and this points
                              to the CRN and possible values are as follows. The CRN
                              of the [Key Protect Root Key](https://cloud.ibm.com/docs/key-protect?topic=key-protect-getting-started-tutorial)
                              or [Hyper Protect Crypto Service Root Key](https://cloud.ibm.com/docs/hs-crypto?topic=hs-crypto-get-started)
                              for this resource. If unspecified, the `encryption`
                              type for the volume will be `provider_managed`.
                            type: string
                          iops:
                            description: Iops is the maximum I/O operations per second
                              (IOPS) to use for the volume. Applicable only to volumes
                              using a profile family of `custom`.
                            format: int64
                            type: integer
                          name:
                            description: Name is the unique user-defined name for
                              this volume. Default will be autogenerated
                            type: string
                          profile:
                            default: general-purpose
                            description: Profile is the volume profile for the bootdisk,
                              refer https://cloud.ibm.com/docs/vpc?topic=vpc-block-storage-profiles
                              for more information. Default to general-purpose
                            enum:
                            - general-purpose
                            - 5iops-tier
                            - 10iops-tier
                            - custom
                            type: string
                          sizeGiB:
                            description: SizeGiB is the size of the virtual server's
                              boot disk in GiB. Default to the size of the image's
                              `minimum_provisioned_size`.
                            format: int64
                            type: integer
                        type: object
                      image:
                        description: Image is the OS image which would be install
                          on the instance. ID will take higher precedence over Name
                          if both specified.
                        properties:
                          id:
                            description: ID of resource
                            minLength: 1
                            type: string
                          name:
                            description: Name of resource
                            minLength: 1
                            type: string
                        type: object
                      name:
                        description: Name of the instance.
                        type: string
                      primaryNetworkInterface:
                        description: PrimaryNetworkInterface is required to specify
                          subnet.
                        properties:
                          subnet:
                            description: Subnet ID of the network interface.
                            type: string
                        type: object
                      profile:
                        description: "Profile indicates the flavor of instance. Example:
                          bx2-8x32\tmeans 8 vCPUs\t32 GB RAM\t16 Gbps TODO: add a
                          reference link of profile"
                        type: string
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider.
                        type: string
                      sshKeys:
                        description: SSHKeys is the SSH pub keys that will be used
                          to access VM. ID will take higher precedence over Name if
                          both specified.
                        items:
                          description: IBMVPCResourceReference is a reference to a
                            specific VPC resource by ID or Name Only one of ID or
                            Name may be specified. Specifying more than one will result
                            in a validation error.
                          properties:
                            id:
                              description: ID of resource
                              minLength: 1
                              type: string
                            name:
                              description: Name of resource
                              minLength: 1
                              type: string
                          type: object
                        type: array
                      zone:
                        description: 'Zone is the place where the instance should
                          be created. Example: us-south-3 TODO: Actually zone is transparent
                          to user. The field user can access is location. Example:
                          Dallas 2'
                        type: string
                    required:
                    - image
                    - zone
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
          status:
            description: IBMVPCMachineTemplateStatus defines the observed state of
              IBMVPCMachineTemplate.
            properties:
              capacity:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: 'Capacity defines the resource capacity for this machine.
                  This value is used for autoscaling from zero operations as defined
                  in: https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20210310-opt-in-autoscaling-from-zero.md'
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
  name: capi-ibmcloud-manager
  namespace: capi-ibmcloud-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
  name: capi-ibmcloud-leader-elect-role
  namespace: capi-ibmcloud-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
  name: capi-ibmcloud-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ibmpowervsclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ibmpowervsclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ibmpowervsimages
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ibmpowervsimages/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ibmpowervsmachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ibmpowervsmachines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ibmpowervsmachinetemplates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ibmpowervsmachinetemplates/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ibmvpcclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ibmvpcclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ibmvpcmachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ibmvpcmachines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ibmvpcmachinetemplates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - ibmvpcmachinetemplates/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
  name: capi-ibmcloud-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
  name: capi-ibmcloud-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
  name: capi-ibmcloud-leader-elect-rolebinding
  namespace: capi-ibmcloud-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capi-ibmcloud-leader-elect-role
subjects:
- kind: ServiceAccount
  name: capi-ibmcloud-manager
  namespace: capi-ibmcloud-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
  name: capi-ibmcloud-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capi-ibmcloud-manager-role
subjects:
- kind: ServiceAccount
  name: capi-ibmcloud-manager
  namespace: capi-ibmcloud-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
  name: capi-ibmcloud-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capi-ibmcloud-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capi-ibmcloud-system
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
  name: capi-ibmcloud-manager-bootstrap-credentials
  namespace: capi-ibmcloud-system
stringData:
  ibm-credentials.env: |-
    IBMCLOUD_AUTH_TYPE=iam
    IBMCLOUD_APIKEY=${IBMCLOUD_API_KEY}
    IBMCLOUD_AUTH_URL=${IBMCLOUD_AUTH_URL:=https://iam.cloud.ibm.com}
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
    control-plane: controller-manager
  name: capi-ibmcloud-controller-manager-metrics-svc
  namespace: capi-ibmcloud-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
  name: capi-ibmcloud-webhook-service
  namespace: capi-ibmcloud-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
    control-plane: controller-manager
  name: capi-ibmcloud-controller-manager
  namespace: capi-ibmcloud-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-ibmcloud
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-ibmcloud
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        - --provider-id-fmt=${PROVIDER_ID_FORMAT:=v1}
        - --metrics-bind-addr=127.0.0.1:8080
        - --service-endpoint=${SERVICE_ENDPOINT:=none}
        - --v=${LOGLEVEL:=0}
        command:
        - /manager
        env:
        - name: IBM_CREDENTIALS_FILE
          value: /home/.ibmcloud/ibm-credentials.env
        image: gcr.io/k8s-staging-capi-ibmcloud/cluster-api-ibmcloud-controller:v0.8.0-alpha.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        resources:
          limits:
            cpu: 300m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /home/.ibmcloud
          name: credentials
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      serviceAccountName: capi-ibmcloud-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - name: credentials
        secret:
          secretName: capi-ibmcloud-manager-bootstrap-credentials
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
  name: capi-ibmcloud-serving-cert
  namespace: capi-ibmcloud-system
spec:
  dnsNames:
  - capi-ibmcloud-webhook-service.capi-ibmcloud-system.svc
  - capi-ibmcloud-webhook-service.capi-ibmcloud-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: capi-ibmcloud-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
  name: capi-ibmcloud-selfsigned-issuer
  namespace: capi-ibmcloud-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-ibmcloud-system/capi-ibmcloud-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
  name: capi-ibmcloud-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capi-ibmcloud-webhook-service
      namespace: capi-ibmcloud-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta2-ibmpowervscluster
  failurePolicy: Fail
  name: mibmpowervscluster.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ibmpowervsclusters
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capi-ibmcloud-webhook-service
      namespace: capi-ibmcloud-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta2-ibmpowervsclustertemplate
  failurePolicy: Fail
  name: mibmpowervsclustertemplate.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ibmpowervsclustertemplates
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capi-ibmcloud-webhook-service
      namespace: capi-ibmcloud-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta2-ibmpowervsimage
  failurePolicy: Fail
  name: mibmpowervsimage.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ibmpowervsimages
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capi-ibmcloud-webhook-service
      namespace: capi-ibmcloud-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta2-ibmpowervsmachine
  failurePolicy: Fail
  name: mibmpowervsmachine.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ibmpowervsmachines
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capi-ibmcloud-webhook-service
      namespace: capi-ibmcloud-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta2-ibmpowervsmachinetemplate
  failurePolicy: Fail
  name: mibmpowervsmachinetemplate.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ibmpowervsmachinetemplates
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capi-ibmcloud-webhook-service
      namespace: capi-ibmcloud-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta2-ibmvpccluster
  failurePolicy: Fail
  name: mibmvpccluster.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ibmvpcclusters
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capi-ibmcloud-webhook-service
      namespace: capi-ibmcloud-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta2-ibmvpcmachine
  failurePolicy: Fail
  name: mibmvpcmachine.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ibmvpcmachines
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capi-ibmcloud-webhook-service
      namespace: capi-ibmcloud-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta2-ibmvpcmachinetemplate
  failurePolicy: Fail
  name: mibmvpcmachinetemplate.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ibmvpcmachinetemplates
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-ibmcloud-system/capi-ibmcloud-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-ibmcloud
  name: capi-ibmcloud-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capi-ibmcloud-webhook-service
      namespace: capi-ibmcloud-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta2-ibmpowervscluster
  failurePolicy: Fail
  name: vibmpowervscluster.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ibmpowervsclusters
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capi-ibmcloud-webhook-service
      namespace: capi-ibmcloud-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta2-ibmpowervsclustertemplate
  failurePolicy: Fail
  name: vibmpowervsclustertemplate.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ibmpowervsclustertemplates
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capi-ibmcloud-webhook-service
      namespace: capi-ibmcloud-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta2-ibmpowervsimage
  failurePolicy: Fail
  name: vibmpowervsimage.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ibmpowervsimages
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capi-ibmcloud-webhook-service
      namespace: capi-ibmcloud-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta2-ibmpowervsmachine
  failurePolicy: Fail
  name: vibmpowervsmachine.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ibmpowervsmachines
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capi-ibmcloud-webhook-service
      namespace: capi-ibmcloud-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta2-ibmpowervsmachinetemplate
  failurePolicy: Fail
  name: vibmpowervsmachinetemplate.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ibmpowervsmachinetemplates
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capi-ibmcloud-webhook-service
      namespace: capi-ibmcloud-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta2-ibmvpccluster
  failurePolicy: Fail
  name: vibmvpccluster.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ibmvpcclusters
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capi-ibmcloud-webhook-service
      namespace: capi-ibmcloud-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta2-ibmvpcmachine
  failurePolicy: Fail
  name: vibmvpcmachine.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ibmvpcmachines
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: capi-ibmcloud-webhook-service
      namespace: capi-ibmcloud-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta2-ibmvpcmachinetemplate
  failurePolicy: Fail
  name: vibmvpcmachinetemplate.kb.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - ibmvpcmachinetemplates
  sideEffects: None
