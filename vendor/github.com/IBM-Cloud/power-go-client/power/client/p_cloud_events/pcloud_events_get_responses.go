// Code generated by go-swagger; DO NOT EDIT.

package p_cloud_events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IBM-Cloud/power-go-client/power/models"
)

// PcloudEventsGetReader is a Reader for the PcloudEventsGet structure.
type PcloudEventsGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PcloudEventsGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPcloudEventsGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPcloudEventsGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPcloudEventsGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPcloudEventsGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPcloudEventsGetOK creates a PcloudEventsGetOK with default headers values
func NewPcloudEventsGetOK() *PcloudEventsGetOK {
	return &PcloudEventsGetOK{}
}

/*PcloudEventsGetOK handles this case with default header values.

OK
*/
type PcloudEventsGetOK struct {
	Payload *models.Event
}

func (o *PcloudEventsGetOK) Error() string {
	return fmt.Sprintf("[GET /pcloud/v1/cloud-instances/{cloud_instance_id}/events/{event_id}][%d] pcloudEventsGetOK  %+v", 200, o.Payload)
}

func (o *PcloudEventsGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Event)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudEventsGetBadRequest creates a PcloudEventsGetBadRequest with default headers values
func NewPcloudEventsGetBadRequest() *PcloudEventsGetBadRequest {
	return &PcloudEventsGetBadRequest{}
}

/*PcloudEventsGetBadRequest handles this case with default header values.

Bad Request
*/
type PcloudEventsGetBadRequest struct {
	Payload *models.Error
}

func (o *PcloudEventsGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /pcloud/v1/cloud-instances/{cloud_instance_id}/events/{event_id}][%d] pcloudEventsGetBadRequest  %+v", 400, o.Payload)
}

func (o *PcloudEventsGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudEventsGetNotFound creates a PcloudEventsGetNotFound with default headers values
func NewPcloudEventsGetNotFound() *PcloudEventsGetNotFound {
	return &PcloudEventsGetNotFound{}
}

/*PcloudEventsGetNotFound handles this case with default header values.

Not Found
*/
type PcloudEventsGetNotFound struct {
	Payload *models.Error
}

func (o *PcloudEventsGetNotFound) Error() string {
	return fmt.Sprintf("[GET /pcloud/v1/cloud-instances/{cloud_instance_id}/events/{event_id}][%d] pcloudEventsGetNotFound  %+v", 404, o.Payload)
}

func (o *PcloudEventsGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudEventsGetInternalServerError creates a PcloudEventsGetInternalServerError with default headers values
func NewPcloudEventsGetInternalServerError() *PcloudEventsGetInternalServerError {
	return &PcloudEventsGetInternalServerError{}
}

/*PcloudEventsGetInternalServerError handles this case with default header values.

Internal Server Error
*/
type PcloudEventsGetInternalServerError struct {
	Payload *models.Error
}

func (o *PcloudEventsGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /pcloud/v1/cloud-instances/{cloud_instance_id}/events/{event_id}][%d] pcloudEventsGetInternalServerError  %+v", 500, o.Payload)
}

func (o *PcloudEventsGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
