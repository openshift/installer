// Code generated by go-swagger; DO NOT EDIT.

package p_cloud_volume_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// PcloudVolumegroupsPutReader is a Reader for the PcloudVolumegroupsPut structure.
type PcloudVolumegroupsPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PcloudVolumegroupsPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPcloudVolumegroupsPutAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPcloudVolumegroupsPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPcloudVolumegroupsPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPcloudVolumegroupsPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPcloudVolumegroupsPutConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPcloudVolumegroupsPutUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPcloudVolumegroupsPutInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPcloudVolumegroupsPutAccepted creates a PcloudVolumegroupsPutAccepted with default headers values
func NewPcloudVolumegroupsPutAccepted() *PcloudVolumegroupsPutAccepted {
	return &PcloudVolumegroupsPutAccepted{}
}

/* PcloudVolumegroupsPutAccepted describes a response with status code 202, with default header values.

Accepted
*/
type PcloudVolumegroupsPutAccepted struct {
	Payload models.Object
}

func (o *PcloudVolumegroupsPutAccepted) Error() string {
	return fmt.Sprintf("[PUT /pcloud/v1/cloud-instances/{cloud_instance_id}/volume-groups/{volume_group_id}][%d] pcloudVolumegroupsPutAccepted  %+v", 202, o.Payload)
}
func (o *PcloudVolumegroupsPutAccepted) GetPayload() models.Object {
	return o.Payload
}

func (o *PcloudVolumegroupsPutAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudVolumegroupsPutBadRequest creates a PcloudVolumegroupsPutBadRequest with default headers values
func NewPcloudVolumegroupsPutBadRequest() *PcloudVolumegroupsPutBadRequest {
	return &PcloudVolumegroupsPutBadRequest{}
}

/* PcloudVolumegroupsPutBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PcloudVolumegroupsPutBadRequest struct {
	Payload *models.Error
}

func (o *PcloudVolumegroupsPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /pcloud/v1/cloud-instances/{cloud_instance_id}/volume-groups/{volume_group_id}][%d] pcloudVolumegroupsPutBadRequest  %+v", 400, o.Payload)
}
func (o *PcloudVolumegroupsPutBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PcloudVolumegroupsPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudVolumegroupsPutUnauthorized creates a PcloudVolumegroupsPutUnauthorized with default headers values
func NewPcloudVolumegroupsPutUnauthorized() *PcloudVolumegroupsPutUnauthorized {
	return &PcloudVolumegroupsPutUnauthorized{}
}

/* PcloudVolumegroupsPutUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PcloudVolumegroupsPutUnauthorized struct {
	Payload *models.Error
}

func (o *PcloudVolumegroupsPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /pcloud/v1/cloud-instances/{cloud_instance_id}/volume-groups/{volume_group_id}][%d] pcloudVolumegroupsPutUnauthorized  %+v", 401, o.Payload)
}
func (o *PcloudVolumegroupsPutUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PcloudVolumegroupsPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudVolumegroupsPutNotFound creates a PcloudVolumegroupsPutNotFound with default headers values
func NewPcloudVolumegroupsPutNotFound() *PcloudVolumegroupsPutNotFound {
	return &PcloudVolumegroupsPutNotFound{}
}

/* PcloudVolumegroupsPutNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PcloudVolumegroupsPutNotFound struct {
	Payload *models.Error
}

func (o *PcloudVolumegroupsPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /pcloud/v1/cloud-instances/{cloud_instance_id}/volume-groups/{volume_group_id}][%d] pcloudVolumegroupsPutNotFound  %+v", 404, o.Payload)
}
func (o *PcloudVolumegroupsPutNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PcloudVolumegroupsPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudVolumegroupsPutConflict creates a PcloudVolumegroupsPutConflict with default headers values
func NewPcloudVolumegroupsPutConflict() *PcloudVolumegroupsPutConflict {
	return &PcloudVolumegroupsPutConflict{}
}

/* PcloudVolumegroupsPutConflict describes a response with status code 409, with default header values.

Conflict
*/
type PcloudVolumegroupsPutConflict struct {
	Payload *models.Error
}

func (o *PcloudVolumegroupsPutConflict) Error() string {
	return fmt.Sprintf("[PUT /pcloud/v1/cloud-instances/{cloud_instance_id}/volume-groups/{volume_group_id}][%d] pcloudVolumegroupsPutConflict  %+v", 409, o.Payload)
}
func (o *PcloudVolumegroupsPutConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *PcloudVolumegroupsPutConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudVolumegroupsPutUnprocessableEntity creates a PcloudVolumegroupsPutUnprocessableEntity with default headers values
func NewPcloudVolumegroupsPutUnprocessableEntity() *PcloudVolumegroupsPutUnprocessableEntity {
	return &PcloudVolumegroupsPutUnprocessableEntity{}
}

/* PcloudVolumegroupsPutUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable Entity
*/
type PcloudVolumegroupsPutUnprocessableEntity struct {
	Payload *models.Error
}

func (o *PcloudVolumegroupsPutUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /pcloud/v1/cloud-instances/{cloud_instance_id}/volume-groups/{volume_group_id}][%d] pcloudVolumegroupsPutUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *PcloudVolumegroupsPutUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *PcloudVolumegroupsPutUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudVolumegroupsPutInternalServerError creates a PcloudVolumegroupsPutInternalServerError with default headers values
func NewPcloudVolumegroupsPutInternalServerError() *PcloudVolumegroupsPutInternalServerError {
	return &PcloudVolumegroupsPutInternalServerError{}
}

/* PcloudVolumegroupsPutInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PcloudVolumegroupsPutInternalServerError struct {
	Payload *models.Error
}

func (o *PcloudVolumegroupsPutInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /pcloud/v1/cloud-instances/{cloud_instance_id}/volume-groups/{volume_group_id}][%d] pcloudVolumegroupsPutInternalServerError  %+v", 500, o.Payload)
}
func (o *PcloudVolumegroupsPutInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PcloudVolumegroupsPutInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
