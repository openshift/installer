// Code generated by go-swagger; DO NOT EDIT.

package p_cloud_images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IBM-Cloud/power-go-client/power/models"
)

// PcloudImagesGetReader is a Reader for the PcloudImagesGet structure.
type PcloudImagesGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PcloudImagesGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPcloudImagesGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPcloudImagesGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPcloudImagesGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPcloudImagesGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPcloudImagesGetOK creates a PcloudImagesGetOK with default headers values
func NewPcloudImagesGetOK() *PcloudImagesGetOK {
	return &PcloudImagesGetOK{}
}

/*PcloudImagesGetOK handles this case with default header values.

OK
*/
type PcloudImagesGetOK struct {
	Payload *models.Image
}

func (o *PcloudImagesGetOK) Error() string {
	return fmt.Sprintf("[GET /pcloud/v1/images/{image_id}][%d] pcloudImagesGetOK  %+v", 200, o.Payload)
}

func (o *PcloudImagesGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Image)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudImagesGetBadRequest creates a PcloudImagesGetBadRequest with default headers values
func NewPcloudImagesGetBadRequest() *PcloudImagesGetBadRequest {
	return &PcloudImagesGetBadRequest{}
}

/*PcloudImagesGetBadRequest handles this case with default header values.

Bad Request
*/
type PcloudImagesGetBadRequest struct {
	Payload *models.Error
}

func (o *PcloudImagesGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /pcloud/v1/images/{image_id}][%d] pcloudImagesGetBadRequest  %+v", 400, o.Payload)
}

func (o *PcloudImagesGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudImagesGetNotFound creates a PcloudImagesGetNotFound with default headers values
func NewPcloudImagesGetNotFound() *PcloudImagesGetNotFound {
	return &PcloudImagesGetNotFound{}
}

/*PcloudImagesGetNotFound handles this case with default header values.

Not Found
*/
type PcloudImagesGetNotFound struct {
	Payload *models.Error
}

func (o *PcloudImagesGetNotFound) Error() string {
	return fmt.Sprintf("[GET /pcloud/v1/images/{image_id}][%d] pcloudImagesGetNotFound  %+v", 404, o.Payload)
}

func (o *PcloudImagesGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudImagesGetInternalServerError creates a PcloudImagesGetInternalServerError with default headers values
func NewPcloudImagesGetInternalServerError() *PcloudImagesGetInternalServerError {
	return &PcloudImagesGetInternalServerError{}
}

/*PcloudImagesGetInternalServerError handles this case with default header values.

Internal Server Error
*/
type PcloudImagesGetInternalServerError struct {
	Payload *models.Error
}

func (o *PcloudImagesGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /pcloud/v1/images/{image_id}][%d] pcloudImagesGetInternalServerError  %+v", 500, o.Payload)
}

func (o *PcloudImagesGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
