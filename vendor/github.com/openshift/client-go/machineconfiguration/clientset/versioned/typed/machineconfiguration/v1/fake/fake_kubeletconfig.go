// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/machineconfiguration/v1"
	machineconfigurationv1 "github.com/openshift/client-go/machineconfiguration/applyconfigurations/machineconfiguration/v1"
	typedmachineconfigurationv1 "github.com/openshift/client-go/machineconfiguration/clientset/versioned/typed/machineconfiguration/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeKubeletConfigs implements KubeletConfigInterface
type fakeKubeletConfigs struct {
	*gentype.FakeClientWithListAndApply[*v1.KubeletConfig, *v1.KubeletConfigList, *machineconfigurationv1.KubeletConfigApplyConfiguration]
	Fake *FakeMachineconfigurationV1
}

func newFakeKubeletConfigs(fake *FakeMachineconfigurationV1) typedmachineconfigurationv1.KubeletConfigInterface {
	return &fakeKubeletConfigs{
		gentype.NewFakeClientWithListAndApply[*v1.KubeletConfig, *v1.KubeletConfigList, *machineconfigurationv1.KubeletConfigApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("kubeletconfigs"),
			v1.SchemeGroupVersion.WithKind("KubeletConfig"),
			func() *v1.KubeletConfig { return &v1.KubeletConfig{} },
			func() *v1.KubeletConfigList { return &v1.KubeletConfigList{} },
			func(dst, src *v1.KubeletConfigList) { dst.ListMeta = src.ListMeta },
			func(list *v1.KubeletConfigList) []*v1.KubeletConfig { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.KubeletConfigList, items []*v1.KubeletConfig) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
