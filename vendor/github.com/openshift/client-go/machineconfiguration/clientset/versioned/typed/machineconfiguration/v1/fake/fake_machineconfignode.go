// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/machineconfiguration/v1"
	machineconfigurationv1 "github.com/openshift/client-go/machineconfiguration/applyconfigurations/machineconfiguration/v1"
	typedmachineconfigurationv1 "github.com/openshift/client-go/machineconfiguration/clientset/versioned/typed/machineconfiguration/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeMachineConfigNodes implements MachineConfigNodeInterface
type fakeMachineConfigNodes struct {
	*gentype.FakeClientWithListAndApply[*v1.MachineConfigNode, *v1.MachineConfigNodeList, *machineconfigurationv1.MachineConfigNodeApplyConfiguration]
	Fake *FakeMachineconfigurationV1
}

func newFakeMachineConfigNodes(fake *FakeMachineconfigurationV1) typedmachineconfigurationv1.MachineConfigNodeInterface {
	return &fakeMachineConfigNodes{
		gentype.NewFakeClientWithListAndApply[*v1.MachineConfigNode, *v1.MachineConfigNodeList, *machineconfigurationv1.MachineConfigNodeApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("machineconfignodes"),
			v1.SchemeGroupVersion.WithKind("MachineConfigNode"),
			func() *v1.MachineConfigNode { return &v1.MachineConfigNode{} },
			func() *v1.MachineConfigNodeList { return &v1.MachineConfigNodeList{} },
			func(dst, src *v1.MachineConfigNodeList) { dst.ListMeta = src.ListMeta },
			func(list *v1.MachineConfigNodeList) []*v1.MachineConfigNode {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1.MachineConfigNodeList, items []*v1.MachineConfigNode) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
