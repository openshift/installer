// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/openshift/api/machineconfiguration/v1alpha1"
	machineconfigurationv1alpha1 "github.com/openshift/client-go/machineconfiguration/applyconfigurations/machineconfiguration/v1alpha1"
	typedmachineconfigurationv1alpha1 "github.com/openshift/client-go/machineconfiguration/clientset/versioned/typed/machineconfiguration/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakePinnedImageSets implements PinnedImageSetInterface
type fakePinnedImageSets struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.PinnedImageSet, *v1alpha1.PinnedImageSetList, *machineconfigurationv1alpha1.PinnedImageSetApplyConfiguration]
	Fake *FakeMachineconfigurationV1alpha1
}

func newFakePinnedImageSets(fake *FakeMachineconfigurationV1alpha1) typedmachineconfigurationv1alpha1.PinnedImageSetInterface {
	return &fakePinnedImageSets{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.PinnedImageSet, *v1alpha1.PinnedImageSetList, *machineconfigurationv1alpha1.PinnedImageSetApplyConfiguration](
			fake.Fake,
			"",
			v1alpha1.SchemeGroupVersion.WithResource("pinnedimagesets"),
			v1alpha1.SchemeGroupVersion.WithKind("PinnedImageSet"),
			func() *v1alpha1.PinnedImageSet { return &v1alpha1.PinnedImageSet{} },
			func() *v1alpha1.PinnedImageSetList { return &v1alpha1.PinnedImageSetList{} },
			func(dst, src *v1alpha1.PinnedImageSetList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.PinnedImageSetList) []*v1alpha1.PinnedImageSet {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.PinnedImageSetList, items []*v1alpha1.PinnedImageSet) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
