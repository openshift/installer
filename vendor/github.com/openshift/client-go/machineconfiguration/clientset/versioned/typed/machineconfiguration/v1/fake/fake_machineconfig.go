// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/machineconfiguration/v1"
	machineconfigurationv1 "github.com/openshift/client-go/machineconfiguration/applyconfigurations/machineconfiguration/v1"
	typedmachineconfigurationv1 "github.com/openshift/client-go/machineconfiguration/clientset/versioned/typed/machineconfiguration/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeMachineConfigs implements MachineConfigInterface
type fakeMachineConfigs struct {
	*gentype.FakeClientWithListAndApply[*v1.MachineConfig, *v1.MachineConfigList, *machineconfigurationv1.MachineConfigApplyConfiguration]
	Fake *FakeMachineconfigurationV1
}

func newFakeMachineConfigs(fake *FakeMachineconfigurationV1) typedmachineconfigurationv1.MachineConfigInterface {
	return &fakeMachineConfigs{
		gentype.NewFakeClientWithListAndApply[*v1.MachineConfig, *v1.MachineConfigList, *machineconfigurationv1.MachineConfigApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("machineconfigs"),
			v1.SchemeGroupVersion.WithKind("MachineConfig"),
			func() *v1.MachineConfig { return &v1.MachineConfig{} },
			func() *v1.MachineConfigList { return &v1.MachineConfigList{} },
			func(dst, src *v1.MachineConfigList) { dst.ListMeta = src.ListMeta },
			func(list *v1.MachineConfigList) []*v1.MachineConfig { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.MachineConfigList, items []*v1.MachineConfig) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
