// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/operator/v1"
	operatorv1 "github.com/openshift/client-go/operator/applyconfigurations/operator/v1"
	typedoperatorv1 "github.com/openshift/client-go/operator/clientset/versioned/typed/operator/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeStorages implements StorageInterface
type fakeStorages struct {
	*gentype.FakeClientWithListAndApply[*v1.Storage, *v1.StorageList, *operatorv1.StorageApplyConfiguration]
	Fake *FakeOperatorV1
}

func newFakeStorages(fake *FakeOperatorV1) typedoperatorv1.StorageInterface {
	return &fakeStorages{
		gentype.NewFakeClientWithListAndApply[*v1.Storage, *v1.StorageList, *operatorv1.StorageApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("storages"),
			v1.SchemeGroupVersion.WithKind("Storage"),
			func() *v1.Storage { return &v1.Storage{} },
			func() *v1.StorageList { return &v1.StorageList{} },
			func(dst, src *v1.StorageList) { dst.ListMeta = src.ListMeta },
			func(list *v1.StorageList) []*v1.Storage { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.StorageList, items []*v1.Storage) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
