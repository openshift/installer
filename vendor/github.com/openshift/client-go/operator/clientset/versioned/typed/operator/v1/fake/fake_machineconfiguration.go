// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/operator/v1"
	operatorv1 "github.com/openshift/client-go/operator/applyconfigurations/operator/v1"
	typedoperatorv1 "github.com/openshift/client-go/operator/clientset/versioned/typed/operator/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeMachineConfigurations implements MachineConfigurationInterface
type fakeMachineConfigurations struct {
	*gentype.FakeClientWithListAndApply[*v1.MachineConfiguration, *v1.MachineConfigurationList, *operatorv1.MachineConfigurationApplyConfiguration]
	Fake *FakeOperatorV1
}

func newFakeMachineConfigurations(fake *FakeOperatorV1) typedoperatorv1.MachineConfigurationInterface {
	return &fakeMachineConfigurations{
		gentype.NewFakeClientWithListAndApply[*v1.MachineConfiguration, *v1.MachineConfigurationList, *operatorv1.MachineConfigurationApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("machineconfigurations"),
			v1.SchemeGroupVersion.WithKind("MachineConfiguration"),
			func() *v1.MachineConfiguration { return &v1.MachineConfiguration{} },
			func() *v1.MachineConfigurationList { return &v1.MachineConfigurationList{} },
			func(dst, src *v1.MachineConfigurationList) { dst.ListMeta = src.ListMeta },
			func(list *v1.MachineConfigurationList) []*v1.MachineConfiguration {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1.MachineConfigurationList, items []*v1.MachineConfiguration) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
