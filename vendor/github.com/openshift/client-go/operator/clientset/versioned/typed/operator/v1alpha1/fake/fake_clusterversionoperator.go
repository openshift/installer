// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/openshift/api/operator/v1alpha1"
	operatorv1alpha1 "github.com/openshift/client-go/operator/applyconfigurations/operator/v1alpha1"
	typedoperatorv1alpha1 "github.com/openshift/client-go/operator/clientset/versioned/typed/operator/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeClusterVersionOperators implements ClusterVersionOperatorInterface
type fakeClusterVersionOperators struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.ClusterVersionOperator, *v1alpha1.ClusterVersionOperatorList, *operatorv1alpha1.ClusterVersionOperatorApplyConfiguration]
	Fake *FakeOperatorV1alpha1
}

func newFakeClusterVersionOperators(fake *FakeOperatorV1alpha1) typedoperatorv1alpha1.ClusterVersionOperatorInterface {
	return &fakeClusterVersionOperators{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.ClusterVersionOperator, *v1alpha1.ClusterVersionOperatorList, *operatorv1alpha1.ClusterVersionOperatorApplyConfiguration](
			fake.Fake,
			"",
			v1alpha1.SchemeGroupVersion.WithResource("clusterversionoperators"),
			v1alpha1.SchemeGroupVersion.WithKind("ClusterVersionOperator"),
			func() *v1alpha1.ClusterVersionOperator { return &v1alpha1.ClusterVersionOperator{} },
			func() *v1alpha1.ClusterVersionOperatorList { return &v1alpha1.ClusterVersionOperatorList{} },
			func(dst, src *v1alpha1.ClusterVersionOperatorList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.ClusterVersionOperatorList) []*v1alpha1.ClusterVersionOperator {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.ClusterVersionOperatorList, items []*v1alpha1.ClusterVersionOperator) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
