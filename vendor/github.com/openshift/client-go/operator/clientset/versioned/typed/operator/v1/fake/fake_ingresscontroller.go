// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/operator/v1"
	operatorv1 "github.com/openshift/client-go/operator/applyconfigurations/operator/v1"
	typedoperatorv1 "github.com/openshift/client-go/operator/clientset/versioned/typed/operator/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeIngressControllers implements IngressControllerInterface
type fakeIngressControllers struct {
	*gentype.FakeClientWithListAndApply[*v1.IngressController, *v1.IngressControllerList, *operatorv1.IngressControllerApplyConfiguration]
	Fake *FakeOperatorV1
}

func newFakeIngressControllers(fake *FakeOperatorV1, namespace string) typedoperatorv1.IngressControllerInterface {
	return &fakeIngressControllers{
		gentype.NewFakeClientWithListAndApply[*v1.IngressController, *v1.IngressControllerList, *operatorv1.IngressControllerApplyConfiguration](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("ingresscontrollers"),
			v1.SchemeGroupVersion.WithKind("IngressController"),
			func() *v1.IngressController { return &v1.IngressController{} },
			func() *v1.IngressControllerList { return &v1.IngressControllerList{} },
			func(dst, src *v1.IngressControllerList) { dst.ListMeta = src.ListMeta },
			func(list *v1.IngressControllerList) []*v1.IngressController {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1.IngressControllerList, items []*v1.IngressController) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
