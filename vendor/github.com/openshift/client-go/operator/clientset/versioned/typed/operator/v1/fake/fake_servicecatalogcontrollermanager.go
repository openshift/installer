// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/operator/v1"
	operatorv1 "github.com/openshift/client-go/operator/applyconfigurations/operator/v1"
	typedoperatorv1 "github.com/openshift/client-go/operator/clientset/versioned/typed/operator/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeServiceCatalogControllerManagers implements ServiceCatalogControllerManagerInterface
type fakeServiceCatalogControllerManagers struct {
	*gentype.FakeClientWithListAndApply[*v1.ServiceCatalogControllerManager, *v1.ServiceCatalogControllerManagerList, *operatorv1.ServiceCatalogControllerManagerApplyConfiguration]
	Fake *FakeOperatorV1
}

func newFakeServiceCatalogControllerManagers(fake *FakeOperatorV1) typedoperatorv1.ServiceCatalogControllerManagerInterface {
	return &fakeServiceCatalogControllerManagers{
		gentype.NewFakeClientWithListAndApply[*v1.ServiceCatalogControllerManager, *v1.ServiceCatalogControllerManagerList, *operatorv1.ServiceCatalogControllerManagerApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("servicecatalogcontrollermanagers"),
			v1.SchemeGroupVersion.WithKind("ServiceCatalogControllerManager"),
			func() *v1.ServiceCatalogControllerManager { return &v1.ServiceCatalogControllerManager{} },
			func() *v1.ServiceCatalogControllerManagerList { return &v1.ServiceCatalogControllerManagerList{} },
			func(dst, src *v1.ServiceCatalogControllerManagerList) { dst.ListMeta = src.ListMeta },
			func(list *v1.ServiceCatalogControllerManagerList) []*v1.ServiceCatalogControllerManager {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1.ServiceCatalogControllerManagerList, items []*v1.ServiceCatalogControllerManager) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
