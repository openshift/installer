apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.openshift.io: https://github.com/openshift/api/pull/470
    include.release.openshift.io/ibm-cloud-managed: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: TechPreviewNoUpgrade
  name: networks.config.openshift.io
spec:
  group: config.openshift.io
  names:
    kind: Network
    listKind: NetworkList
    plural: networks
    singular: network
  preserveUnknownFields: false
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: "Network holds cluster-wide information about Network. The canonical
          name is `cluster`. It is used to configure the desired network configuration,
          such as: IP address pools for services/pod IPs, network plugin, etc. Please
          view network.spec for an explanation on what applies when configuring this
          resource. \n Compatibility level 1: Stable within a major release for a
          minimum of 12 months or 3 minor releases (whichever is longer)."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec holds user settable values for configuration. As a general
              rule, this SHOULD NOT be read directly. Instead, you should consume
              the NetworkStatus, as it indicates the currently deployed configuration.
              Currently, most spec fields are immutable after installation. Please
              view the individual ones for further details on each.
            properties:
              clusterNetwork:
                description: IP address pool to use for pod IPs. This field is immutable
                  after installation.
                items:
                  description: ClusterNetworkEntry is a contiguous block of IP addresses
                    from which pod IPs are allocated.
                  properties:
                    cidr:
                      description: The complete block for pod IPs.
                      type: string
                    hostPrefix:
                      description: The size (prefix) of block to allocate to each
                        node. If this field is not used by the plugin, it can be left
                        unset.
                      format: int32
                      minimum: 0
                      type: integer
                  type: object
                type: array
              externalIP:
                description: externalIP defines configuration for controllers that
                  affect Service.ExternalIP. If nil, then ExternalIP is not allowed
                  to be set.
                properties:
                  autoAssignCIDRs:
                    description: autoAssignCIDRs is a list of CIDRs from which to
                      automatically assign Service.ExternalIP. These are assigned
                      when the service is of type LoadBalancer. In general, this is
                      only useful for bare-metal clusters. In Openshift 3.x, this
                      was misleadingly called "IngressIPs". Automatically assigned
                      External IPs are not affected by any ExternalIPPolicy rules.
                      Currently, only one entry may be provided.
                    items:
                      type: string
                    type: array
                  policy:
                    description: policy is a set of restrictions applied to the ExternalIP
                      field. If nil or empty, then ExternalIP is not allowed to be
                      set.
                    properties:
                      allowedCIDRs:
                        description: allowedCIDRs is the list of allowed CIDRs.
                        items:
                          type: string
                        type: array
                      rejectedCIDRs:
                        description: rejectedCIDRs is the list of disallowed CIDRs.
                          These take precedence over allowedCIDRs.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              networkType:
                description: 'NetworkType is the plugin that is to be deployed (e.g.
                  OpenShiftSDN). This should match a value that the cluster-network-operator
                  understands, or else no networking will be installed. Currently
                  supported values are: - OpenShiftSDN This field is immutable after
                  installation.'
                type: string
              serviceNetwork:
                description: IP address pool for services. Currently, we only support
                  a single entry here. This field is immutable after installation.
                items:
                  type: string
                type: array
              serviceNodePortRange:
                description: The port range allowed for Services of type NodePort.
                  If not specified, the default of 30000-32767 will be used. Such
                  Services without a NodePort specified will have one automatically
                  allocated from this range. This parameter can be updated after the
                  cluster is installed.
                pattern: ^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])-([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$
                type: string
            type: object
          status:
            description: status holds observed values from the cluster. They may not
              be overridden.
            properties:
              clusterNetwork:
                description: IP address pool to use for pod IPs.
                items:
                  description: ClusterNetworkEntry is a contiguous block of IP addresses
                    from which pod IPs are allocated.
                  properties:
                    cidr:
                      description: The complete block for pod IPs.
                      type: string
                    hostPrefix:
                      description: The size (prefix) of block to allocate to each
                        node. If this field is not used by the plugin, it can be left
                        unset.
                      format: int32
                      minimum: 0
                      type: integer
                  type: object
                type: array
              clusterNetworkMTU:
                description: ClusterNetworkMTU is the MTU for inter-pod networking.
                type: integer
              conditions:
                description: 'conditions represents the observations of a network.config
                  current state. Known .status.conditions.type are: "NetworkTypeMigrationInProgress",
                  "NetworkTypeMigrationMTUReady", "NetworkTypeMigrationTargetCNIAvailable",
                  "NetworkTypeMigrationTargetCNIInUse" and "NetworkTypeMigrationOriginalCNIPurged"'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              migration:
                description: Migration contains the cluster network migration configuration.
                properties:
                  mtu:
                    description: MTU contains the MTU migration configuration.
                    properties:
                      machine:
                        description: Machine contains MTU migration configuration
                          for the machine's uplink.
                        properties:
                          from:
                            description: From is the MTU to migrate from.
                            format: int32
                            minimum: 0
                            type: integer
                          to:
                            description: To is the MTU to migrate to.
                            format: int32
                            minimum: 0
                            type: integer
                        type: object
                      network:
                        description: Network contains MTU migration configuration
                          for the default network.
                        properties:
                          from:
                            description: From is the MTU to migrate from.
                            format: int32
                            minimum: 0
                            type: integer
                          to:
                            description: To is the MTU to migrate to.
                            format: int32
                            minimum: 0
                            type: integer
                        type: object
                    type: object
                  networkType:
                    description: 'NetworkType is the target plugin that is to be deployed.
                      Currently supported values are: OpenShiftSDN, OVNKubernetes'
                    enum:
                    - OpenShiftSDN
                    - OVNKubernetes
                    type: string
                type: object
              networkType:
                description: NetworkType is the plugin that is deployed (e.g. OpenShiftSDN).
                type: string
              serviceNetwork:
                description: IP address pool for services. Currently, we only support
                  a single entry here.
                items:
                  type: string
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
