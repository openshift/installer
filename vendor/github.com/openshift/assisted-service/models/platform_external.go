// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PlatformExternal Configuration used when installing with an external platform type.
//
// swagger:model platform_external
type PlatformExternal struct {

	// When set to external, this property will enable an external cloud provider.
	// Enum: [ External]
	CloudControllerManager *string `json:"cloud_controller_manager,omitempty"`

	// Holds the arbitrary string representing the infrastructure provider name.
	// Min Length: 1
	PlatformName *string `json:"platform_name,omitempty"`
}

// Validate validates this platform external
func (m *PlatformExternal) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCloudControllerManager(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePlatformName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var platformExternalTypeCloudControllerManagerPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["","External"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		platformExternalTypeCloudControllerManagerPropEnum = append(platformExternalTypeCloudControllerManagerPropEnum, v)
	}
}

const (

	// PlatformExternalCloudControllerManagerEmpty captures enum value ""
	PlatformExternalCloudControllerManagerEmpty string = ""

	// PlatformExternalCloudControllerManagerExternal captures enum value "External"
	PlatformExternalCloudControllerManagerExternal string = "External"
)

// prop value enum
func (m *PlatformExternal) validateCloudControllerManagerEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, platformExternalTypeCloudControllerManagerPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PlatformExternal) validateCloudControllerManager(formats strfmt.Registry) error {
	if swag.IsZero(m.CloudControllerManager) { // not required
		return nil
	}

	// value enum
	if err := m.validateCloudControllerManagerEnum("cloud_controller_manager", "body", *m.CloudControllerManager); err != nil {
		return err
	}

	return nil
}

func (m *PlatformExternal) validatePlatformName(formats strfmt.Registry) error {
	if swag.IsZero(m.PlatformName) { // not required
		return nil
	}

	if err := validate.MinLength("platform_name", "body", *m.PlatformName, 1); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this platform external based on context it is used
func (m *PlatformExternal) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PlatformExternal) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PlatformExternal) UnmarshalBinary(b []byte) error {
	var res PlatformExternal
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
