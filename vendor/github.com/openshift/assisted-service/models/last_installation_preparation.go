// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LastInstallationPreparation Gives the status of the last installation preparation (if any)
//
// swagger:model last-installation-preparation
type LastInstallationPreparation struct {

	// The reason for the preparation status if applicable
	Reason string `json:"reason,omitempty"`

	// The last installation preparation status
	// Enum: [not_started failed success]
	Status string `json:"status,omitempty"`
}

// Validate validates this last installation preparation
func (m *LastInstallationPreparation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var lastInstallationPreparationTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["not_started","failed","success"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lastInstallationPreparationTypeStatusPropEnum = append(lastInstallationPreparationTypeStatusPropEnum, v)
	}
}

const (

	// LastInstallationPreparationStatusNotStarted captures enum value "not_started"
	LastInstallationPreparationStatusNotStarted string = "not_started"

	// LastInstallationPreparationStatusFailed captures enum value "failed"
	LastInstallationPreparationStatusFailed string = "failed"

	// LastInstallationPreparationStatusSuccess captures enum value "success"
	LastInstallationPreparationStatusSuccess string = "success"
)

// prop value enum
func (m *LastInstallationPreparation) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, lastInstallationPreparationTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *LastInstallationPreparation) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this last installation preparation based on context it is used
func (m *LastInstallationPreparation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LastInstallationPreparation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LastInstallationPreparation) UnmarshalBinary(b []byte) error {
	var res LastInstallationPreparation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
