// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RebootForReclaimRequest Information sent to the agent for rebooting a host into discovery.
//
// swagger:model reboot_for_reclaim_request
type RebootForReclaimRequest struct {

	// The base directory on the host that contains the /boot folder. The host needs to
	// chroot into this directory in order to properly reboot.
	// Required: true
	HostFsMountDir *string `json:"host_fs_mount_dir"`
}

// Validate validates this reboot for reclaim request
func (m *RebootForReclaimRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHostFsMountDir(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RebootForReclaimRequest) validateHostFsMountDir(formats strfmt.Registry) error {

	if err := validate.Required("host_fs_mount_dir", "body", m.HostFsMountDir); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this reboot for reclaim request based on context it is used
func (m *RebootForReclaimRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RebootForReclaimRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RebootForReclaimRequest) UnmarshalBinary(b []byte) error {
	var res RebootForReclaimRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
