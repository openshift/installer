// Code generated by go-swagger; DO NOT EDIT.

package manifests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// DownloadClusterManifestReader is a Reader for the DownloadClusterManifest structure.
type DownloadClusterManifestReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *DownloadClusterManifestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDownloadClusterManifestOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDownloadClusterManifestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDownloadClusterManifestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDownloadClusterManifestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDownloadClusterManifestMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDownloadClusterManifestConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDownloadClusterManifestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDownloadClusterManifestOK creates a DownloadClusterManifestOK with default headers values
func NewDownloadClusterManifestOK(writer io.Writer) *DownloadClusterManifestOK {
	return &DownloadClusterManifestOK{

		Payload: writer,
	}
}

/* DownloadClusterManifestOK describes a response with status code 200, with default header values.

Success.
*/
type DownloadClusterManifestOK struct {
	Payload io.Writer
}

func (o *DownloadClusterManifestOK) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/manifests/files][%d] downloadClusterManifestOK  %+v", 200, o.Payload)
}
func (o *DownloadClusterManifestOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *DownloadClusterManifestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadClusterManifestUnauthorized creates a DownloadClusterManifestUnauthorized with default headers values
func NewDownloadClusterManifestUnauthorized() *DownloadClusterManifestUnauthorized {
	return &DownloadClusterManifestUnauthorized{}
}

/* DownloadClusterManifestUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type DownloadClusterManifestUnauthorized struct {
	Payload *models.InfraError
}

func (o *DownloadClusterManifestUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/manifests/files][%d] downloadClusterManifestUnauthorized  %+v", 401, o.Payload)
}
func (o *DownloadClusterManifestUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *DownloadClusterManifestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadClusterManifestForbidden creates a DownloadClusterManifestForbidden with default headers values
func NewDownloadClusterManifestForbidden() *DownloadClusterManifestForbidden {
	return &DownloadClusterManifestForbidden{}
}

/* DownloadClusterManifestForbidden describes a response with status code 403, with default header values.

Forbidden.
*/
type DownloadClusterManifestForbidden struct {
	Payload *models.InfraError
}

func (o *DownloadClusterManifestForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/manifests/files][%d] downloadClusterManifestForbidden  %+v", 403, o.Payload)
}
func (o *DownloadClusterManifestForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *DownloadClusterManifestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadClusterManifestNotFound creates a DownloadClusterManifestNotFound with default headers values
func NewDownloadClusterManifestNotFound() *DownloadClusterManifestNotFound {
	return &DownloadClusterManifestNotFound{}
}

/* DownloadClusterManifestNotFound describes a response with status code 404, with default header values.

Error.
*/
type DownloadClusterManifestNotFound struct {
	Payload *models.Error
}

func (o *DownloadClusterManifestNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/manifests/files][%d] downloadClusterManifestNotFound  %+v", 404, o.Payload)
}
func (o *DownloadClusterManifestNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DownloadClusterManifestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadClusterManifestMethodNotAllowed creates a DownloadClusterManifestMethodNotAllowed with default headers values
func NewDownloadClusterManifestMethodNotAllowed() *DownloadClusterManifestMethodNotAllowed {
	return &DownloadClusterManifestMethodNotAllowed{}
}

/* DownloadClusterManifestMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed.
*/
type DownloadClusterManifestMethodNotAllowed struct {
	Payload *models.Error
}

func (o *DownloadClusterManifestMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/manifests/files][%d] downloadClusterManifestMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *DownloadClusterManifestMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *DownloadClusterManifestMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadClusterManifestConflict creates a DownloadClusterManifestConflict with default headers values
func NewDownloadClusterManifestConflict() *DownloadClusterManifestConflict {
	return &DownloadClusterManifestConflict{}
}

/* DownloadClusterManifestConflict describes a response with status code 409, with default header values.

Error.
*/
type DownloadClusterManifestConflict struct {
	Payload *models.Error
}

func (o *DownloadClusterManifestConflict) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/manifests/files][%d] downloadClusterManifestConflict  %+v", 409, o.Payload)
}
func (o *DownloadClusterManifestConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *DownloadClusterManifestConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadClusterManifestInternalServerError creates a DownloadClusterManifestInternalServerError with default headers values
func NewDownloadClusterManifestInternalServerError() *DownloadClusterManifestInternalServerError {
	return &DownloadClusterManifestInternalServerError{}
}

/* DownloadClusterManifestInternalServerError describes a response with status code 500, with default header values.

Error.
*/
type DownloadClusterManifestInternalServerError struct {
	Payload *models.Error
}

func (o *DownloadClusterManifestInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/manifests/files][%d] downloadClusterManifestInternalServerError  %+v", 500, o.Payload)
}
func (o *DownloadClusterManifestInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DownloadClusterManifestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
