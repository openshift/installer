// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// GetClusterHostRequirementsReader is a Reader for the GetClusterHostRequirements structure.
type GetClusterHostRequirementsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterHostRequirementsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClusterHostRequirementsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetClusterHostRequirementsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetClusterHostRequirementsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClusterHostRequirementsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetClusterHostRequirementsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetClusterHostRequirementsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetClusterHostRequirementsOK creates a GetClusterHostRequirementsOK with default headers values
func NewGetClusterHostRequirementsOK() *GetClusterHostRequirementsOK {
	return &GetClusterHostRequirementsOK{}
}

/* GetClusterHostRequirementsOK describes a response with status code 200, with default header values.

Success.
*/
type GetClusterHostRequirementsOK struct {
	Payload models.ClusterHostRequirementsList
}

func (o *GetClusterHostRequirementsOK) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/host-requirements][%d] getClusterHostRequirementsOK  %+v", 200, o.Payload)
}
func (o *GetClusterHostRequirementsOK) GetPayload() models.ClusterHostRequirementsList {
	return o.Payload
}

func (o *GetClusterHostRequirementsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterHostRequirementsUnauthorized creates a GetClusterHostRequirementsUnauthorized with default headers values
func NewGetClusterHostRequirementsUnauthorized() *GetClusterHostRequirementsUnauthorized {
	return &GetClusterHostRequirementsUnauthorized{}
}

/* GetClusterHostRequirementsUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type GetClusterHostRequirementsUnauthorized struct {
	Payload *models.InfraError
}

func (o *GetClusterHostRequirementsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/host-requirements][%d] getClusterHostRequirementsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetClusterHostRequirementsUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *GetClusterHostRequirementsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterHostRequirementsForbidden creates a GetClusterHostRequirementsForbidden with default headers values
func NewGetClusterHostRequirementsForbidden() *GetClusterHostRequirementsForbidden {
	return &GetClusterHostRequirementsForbidden{}
}

/* GetClusterHostRequirementsForbidden describes a response with status code 403, with default header values.

Forbidden.
*/
type GetClusterHostRequirementsForbidden struct {
	Payload *models.InfraError
}

func (o *GetClusterHostRequirementsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/host-requirements][%d] getClusterHostRequirementsForbidden  %+v", 403, o.Payload)
}
func (o *GetClusterHostRequirementsForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *GetClusterHostRequirementsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterHostRequirementsNotFound creates a GetClusterHostRequirementsNotFound with default headers values
func NewGetClusterHostRequirementsNotFound() *GetClusterHostRequirementsNotFound {
	return &GetClusterHostRequirementsNotFound{}
}

/* GetClusterHostRequirementsNotFound describes a response with status code 404, with default header values.

Error.
*/
type GetClusterHostRequirementsNotFound struct {
	Payload *models.Error
}

func (o *GetClusterHostRequirementsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/host-requirements][%d] getClusterHostRequirementsNotFound  %+v", 404, o.Payload)
}
func (o *GetClusterHostRequirementsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetClusterHostRequirementsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterHostRequirementsMethodNotAllowed creates a GetClusterHostRequirementsMethodNotAllowed with default headers values
func NewGetClusterHostRequirementsMethodNotAllowed() *GetClusterHostRequirementsMethodNotAllowed {
	return &GetClusterHostRequirementsMethodNotAllowed{}
}

/* GetClusterHostRequirementsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed.
*/
type GetClusterHostRequirementsMethodNotAllowed struct {
	Payload *models.Error
}

func (o *GetClusterHostRequirementsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/host-requirements][%d] getClusterHostRequirementsMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *GetClusterHostRequirementsMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetClusterHostRequirementsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterHostRequirementsInternalServerError creates a GetClusterHostRequirementsInternalServerError with default headers values
func NewGetClusterHostRequirementsInternalServerError() *GetClusterHostRequirementsInternalServerError {
	return &GetClusterHostRequirementsInternalServerError{}
}

/* GetClusterHostRequirementsInternalServerError describes a response with status code 500, with default header values.

Error.
*/
type GetClusterHostRequirementsInternalServerError struct {
	Payload *models.Error
}

func (o *GetClusterHostRequirementsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/host-requirements][%d] getClusterHostRequirementsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetClusterHostRequirementsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetClusterHostRequirementsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
