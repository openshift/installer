// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// V2UpdateClusterFinalizingProgressReader is a Reader for the V2UpdateClusterFinalizingProgress structure.
type V2UpdateClusterFinalizingProgressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2UpdateClusterFinalizingProgressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV2UpdateClusterFinalizingProgressOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewV2UpdateClusterFinalizingProgressUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV2UpdateClusterFinalizingProgressForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV2UpdateClusterFinalizingProgressNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewV2UpdateClusterFinalizingProgressMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV2UpdateClusterFinalizingProgressInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewV2UpdateClusterFinalizingProgressServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewV2UpdateClusterFinalizingProgressOK creates a V2UpdateClusterFinalizingProgressOK with default headers values
func NewV2UpdateClusterFinalizingProgressOK() *V2UpdateClusterFinalizingProgressOK {
	return &V2UpdateClusterFinalizingProgressOK{}
}

/*
V2UpdateClusterFinalizingProgressOK describes a response with status code 200, with default header values.

Update install progress.
*/
type V2UpdateClusterFinalizingProgressOK struct {
}

// IsSuccess returns true when this v2 update cluster finalizing progress o k response has a 2xx status code
func (o *V2UpdateClusterFinalizingProgressOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v2 update cluster finalizing progress o k response has a 3xx status code
func (o *V2UpdateClusterFinalizingProgressOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v2 update cluster finalizing progress o k response has a 4xx status code
func (o *V2UpdateClusterFinalizingProgressOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v2 update cluster finalizing progress o k response has a 5xx status code
func (o *V2UpdateClusterFinalizingProgressOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v2 update cluster finalizing progress o k response a status code equal to that given
func (o *V2UpdateClusterFinalizingProgressOK) IsCode(code int) bool {
	return code == 200
}

func (o *V2UpdateClusterFinalizingProgressOK) Error() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/progress][%d] v2UpdateClusterFinalizingProgressOK ", 200)
}

func (o *V2UpdateClusterFinalizingProgressOK) String() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/progress][%d] v2UpdateClusterFinalizingProgressOK ", 200)
}

func (o *V2UpdateClusterFinalizingProgressOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewV2UpdateClusterFinalizingProgressUnauthorized creates a V2UpdateClusterFinalizingProgressUnauthorized with default headers values
func NewV2UpdateClusterFinalizingProgressUnauthorized() *V2UpdateClusterFinalizingProgressUnauthorized {
	return &V2UpdateClusterFinalizingProgressUnauthorized{}
}

/*
V2UpdateClusterFinalizingProgressUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type V2UpdateClusterFinalizingProgressUnauthorized struct {
	Payload *models.InfraError
}

// IsSuccess returns true when this v2 update cluster finalizing progress unauthorized response has a 2xx status code
func (o *V2UpdateClusterFinalizingProgressUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v2 update cluster finalizing progress unauthorized response has a 3xx status code
func (o *V2UpdateClusterFinalizingProgressUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v2 update cluster finalizing progress unauthorized response has a 4xx status code
func (o *V2UpdateClusterFinalizingProgressUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this v2 update cluster finalizing progress unauthorized response has a 5xx status code
func (o *V2UpdateClusterFinalizingProgressUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this v2 update cluster finalizing progress unauthorized response a status code equal to that given
func (o *V2UpdateClusterFinalizingProgressUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *V2UpdateClusterFinalizingProgressUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/progress][%d] v2UpdateClusterFinalizingProgressUnauthorized  %+v", 401, o.Payload)
}

func (o *V2UpdateClusterFinalizingProgressUnauthorized) String() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/progress][%d] v2UpdateClusterFinalizingProgressUnauthorized  %+v", 401, o.Payload)
}

func (o *V2UpdateClusterFinalizingProgressUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *V2UpdateClusterFinalizingProgressUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2UpdateClusterFinalizingProgressForbidden creates a V2UpdateClusterFinalizingProgressForbidden with default headers values
func NewV2UpdateClusterFinalizingProgressForbidden() *V2UpdateClusterFinalizingProgressForbidden {
	return &V2UpdateClusterFinalizingProgressForbidden{}
}

/*
V2UpdateClusterFinalizingProgressForbidden describes a response with status code 403, with default header values.

Forbidden.
*/
type V2UpdateClusterFinalizingProgressForbidden struct {
	Payload *models.InfraError
}

// IsSuccess returns true when this v2 update cluster finalizing progress forbidden response has a 2xx status code
func (o *V2UpdateClusterFinalizingProgressForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v2 update cluster finalizing progress forbidden response has a 3xx status code
func (o *V2UpdateClusterFinalizingProgressForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v2 update cluster finalizing progress forbidden response has a 4xx status code
func (o *V2UpdateClusterFinalizingProgressForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this v2 update cluster finalizing progress forbidden response has a 5xx status code
func (o *V2UpdateClusterFinalizingProgressForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this v2 update cluster finalizing progress forbidden response a status code equal to that given
func (o *V2UpdateClusterFinalizingProgressForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *V2UpdateClusterFinalizingProgressForbidden) Error() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/progress][%d] v2UpdateClusterFinalizingProgressForbidden  %+v", 403, o.Payload)
}

func (o *V2UpdateClusterFinalizingProgressForbidden) String() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/progress][%d] v2UpdateClusterFinalizingProgressForbidden  %+v", 403, o.Payload)
}

func (o *V2UpdateClusterFinalizingProgressForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *V2UpdateClusterFinalizingProgressForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2UpdateClusterFinalizingProgressNotFound creates a V2UpdateClusterFinalizingProgressNotFound with default headers values
func NewV2UpdateClusterFinalizingProgressNotFound() *V2UpdateClusterFinalizingProgressNotFound {
	return &V2UpdateClusterFinalizingProgressNotFound{}
}

/*
V2UpdateClusterFinalizingProgressNotFound describes a response with status code 404, with default header values.

Error.
*/
type V2UpdateClusterFinalizingProgressNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this v2 update cluster finalizing progress not found response has a 2xx status code
func (o *V2UpdateClusterFinalizingProgressNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v2 update cluster finalizing progress not found response has a 3xx status code
func (o *V2UpdateClusterFinalizingProgressNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v2 update cluster finalizing progress not found response has a 4xx status code
func (o *V2UpdateClusterFinalizingProgressNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v2 update cluster finalizing progress not found response has a 5xx status code
func (o *V2UpdateClusterFinalizingProgressNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v2 update cluster finalizing progress not found response a status code equal to that given
func (o *V2UpdateClusterFinalizingProgressNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *V2UpdateClusterFinalizingProgressNotFound) Error() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/progress][%d] v2UpdateClusterFinalizingProgressNotFound  %+v", 404, o.Payload)
}

func (o *V2UpdateClusterFinalizingProgressNotFound) String() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/progress][%d] v2UpdateClusterFinalizingProgressNotFound  %+v", 404, o.Payload)
}

func (o *V2UpdateClusterFinalizingProgressNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2UpdateClusterFinalizingProgressNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2UpdateClusterFinalizingProgressMethodNotAllowed creates a V2UpdateClusterFinalizingProgressMethodNotAllowed with default headers values
func NewV2UpdateClusterFinalizingProgressMethodNotAllowed() *V2UpdateClusterFinalizingProgressMethodNotAllowed {
	return &V2UpdateClusterFinalizingProgressMethodNotAllowed{}
}

/*
V2UpdateClusterFinalizingProgressMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed.
*/
type V2UpdateClusterFinalizingProgressMethodNotAllowed struct {
	Payload *models.Error
}

// IsSuccess returns true when this v2 update cluster finalizing progress method not allowed response has a 2xx status code
func (o *V2UpdateClusterFinalizingProgressMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v2 update cluster finalizing progress method not allowed response has a 3xx status code
func (o *V2UpdateClusterFinalizingProgressMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v2 update cluster finalizing progress method not allowed response has a 4xx status code
func (o *V2UpdateClusterFinalizingProgressMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this v2 update cluster finalizing progress method not allowed response has a 5xx status code
func (o *V2UpdateClusterFinalizingProgressMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this v2 update cluster finalizing progress method not allowed response a status code equal to that given
func (o *V2UpdateClusterFinalizingProgressMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

func (o *V2UpdateClusterFinalizingProgressMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/progress][%d] v2UpdateClusterFinalizingProgressMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *V2UpdateClusterFinalizingProgressMethodNotAllowed) String() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/progress][%d] v2UpdateClusterFinalizingProgressMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *V2UpdateClusterFinalizingProgressMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2UpdateClusterFinalizingProgressMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2UpdateClusterFinalizingProgressInternalServerError creates a V2UpdateClusterFinalizingProgressInternalServerError with default headers values
func NewV2UpdateClusterFinalizingProgressInternalServerError() *V2UpdateClusterFinalizingProgressInternalServerError {
	return &V2UpdateClusterFinalizingProgressInternalServerError{}
}

/*
V2UpdateClusterFinalizingProgressInternalServerError describes a response with status code 500, with default header values.

Error.
*/
type V2UpdateClusterFinalizingProgressInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this v2 update cluster finalizing progress internal server error response has a 2xx status code
func (o *V2UpdateClusterFinalizingProgressInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v2 update cluster finalizing progress internal server error response has a 3xx status code
func (o *V2UpdateClusterFinalizingProgressInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v2 update cluster finalizing progress internal server error response has a 4xx status code
func (o *V2UpdateClusterFinalizingProgressInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this v2 update cluster finalizing progress internal server error response has a 5xx status code
func (o *V2UpdateClusterFinalizingProgressInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this v2 update cluster finalizing progress internal server error response a status code equal to that given
func (o *V2UpdateClusterFinalizingProgressInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *V2UpdateClusterFinalizingProgressInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/progress][%d] v2UpdateClusterFinalizingProgressInternalServerError  %+v", 500, o.Payload)
}

func (o *V2UpdateClusterFinalizingProgressInternalServerError) String() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/progress][%d] v2UpdateClusterFinalizingProgressInternalServerError  %+v", 500, o.Payload)
}

func (o *V2UpdateClusterFinalizingProgressInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2UpdateClusterFinalizingProgressInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2UpdateClusterFinalizingProgressServiceUnavailable creates a V2UpdateClusterFinalizingProgressServiceUnavailable with default headers values
func NewV2UpdateClusterFinalizingProgressServiceUnavailable() *V2UpdateClusterFinalizingProgressServiceUnavailable {
	return &V2UpdateClusterFinalizingProgressServiceUnavailable{}
}

/*
V2UpdateClusterFinalizingProgressServiceUnavailable describes a response with status code 503, with default header values.

Unavailable.
*/
type V2UpdateClusterFinalizingProgressServiceUnavailable struct {
	Payload *models.Error
}

// IsSuccess returns true when this v2 update cluster finalizing progress service unavailable response has a 2xx status code
func (o *V2UpdateClusterFinalizingProgressServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v2 update cluster finalizing progress service unavailable response has a 3xx status code
func (o *V2UpdateClusterFinalizingProgressServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v2 update cluster finalizing progress service unavailable response has a 4xx status code
func (o *V2UpdateClusterFinalizingProgressServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this v2 update cluster finalizing progress service unavailable response has a 5xx status code
func (o *V2UpdateClusterFinalizingProgressServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this v2 update cluster finalizing progress service unavailable response a status code equal to that given
func (o *V2UpdateClusterFinalizingProgressServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

func (o *V2UpdateClusterFinalizingProgressServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/progress][%d] v2UpdateClusterFinalizingProgressServiceUnavailable  %+v", 503, o.Payload)
}

func (o *V2UpdateClusterFinalizingProgressServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/progress][%d] v2UpdateClusterFinalizingProgressServiceUnavailable  %+v", 503, o.Payload)
}

func (o *V2UpdateClusterFinalizingProgressServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2UpdateClusterFinalizingProgressServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
