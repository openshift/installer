// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// V2UpdateClusterLogsProgressReader is a Reader for the V2UpdateClusterLogsProgress structure.
type V2UpdateClusterLogsProgressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2UpdateClusterLogsProgressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewV2UpdateClusterLogsProgressNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewV2UpdateClusterLogsProgressUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV2UpdateClusterLogsProgressForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV2UpdateClusterLogsProgressNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewV2UpdateClusterLogsProgressMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewV2UpdateClusterLogsProgressConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV2UpdateClusterLogsProgressInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewV2UpdateClusterLogsProgressServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewV2UpdateClusterLogsProgressNoContent creates a V2UpdateClusterLogsProgressNoContent with default headers values
func NewV2UpdateClusterLogsProgressNoContent() *V2UpdateClusterLogsProgressNoContent {
	return &V2UpdateClusterLogsProgressNoContent{}
}

/* V2UpdateClusterLogsProgressNoContent describes a response with status code 204, with default header values.

Update cluster install progress.
*/
type V2UpdateClusterLogsProgressNoContent struct {
}

func (o *V2UpdateClusterLogsProgressNoContent) Error() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/logs-progress][%d] v2UpdateClusterLogsProgressNoContent ", 204)
}

func (o *V2UpdateClusterLogsProgressNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewV2UpdateClusterLogsProgressUnauthorized creates a V2UpdateClusterLogsProgressUnauthorized with default headers values
func NewV2UpdateClusterLogsProgressUnauthorized() *V2UpdateClusterLogsProgressUnauthorized {
	return &V2UpdateClusterLogsProgressUnauthorized{}
}

/* V2UpdateClusterLogsProgressUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type V2UpdateClusterLogsProgressUnauthorized struct {
	Payload *models.InfraError
}

func (o *V2UpdateClusterLogsProgressUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/logs-progress][%d] v2UpdateClusterLogsProgressUnauthorized  %+v", 401, o.Payload)
}
func (o *V2UpdateClusterLogsProgressUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *V2UpdateClusterLogsProgressUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2UpdateClusterLogsProgressForbidden creates a V2UpdateClusterLogsProgressForbidden with default headers values
func NewV2UpdateClusterLogsProgressForbidden() *V2UpdateClusterLogsProgressForbidden {
	return &V2UpdateClusterLogsProgressForbidden{}
}

/* V2UpdateClusterLogsProgressForbidden describes a response with status code 403, with default header values.

Forbidden.
*/
type V2UpdateClusterLogsProgressForbidden struct {
	Payload *models.InfraError
}

func (o *V2UpdateClusterLogsProgressForbidden) Error() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/logs-progress][%d] v2UpdateClusterLogsProgressForbidden  %+v", 403, o.Payload)
}
func (o *V2UpdateClusterLogsProgressForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *V2UpdateClusterLogsProgressForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2UpdateClusterLogsProgressNotFound creates a V2UpdateClusterLogsProgressNotFound with default headers values
func NewV2UpdateClusterLogsProgressNotFound() *V2UpdateClusterLogsProgressNotFound {
	return &V2UpdateClusterLogsProgressNotFound{}
}

/* V2UpdateClusterLogsProgressNotFound describes a response with status code 404, with default header values.

Error.
*/
type V2UpdateClusterLogsProgressNotFound struct {
	Payload *models.Error
}

func (o *V2UpdateClusterLogsProgressNotFound) Error() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/logs-progress][%d] v2UpdateClusterLogsProgressNotFound  %+v", 404, o.Payload)
}
func (o *V2UpdateClusterLogsProgressNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2UpdateClusterLogsProgressNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2UpdateClusterLogsProgressMethodNotAllowed creates a V2UpdateClusterLogsProgressMethodNotAllowed with default headers values
func NewV2UpdateClusterLogsProgressMethodNotAllowed() *V2UpdateClusterLogsProgressMethodNotAllowed {
	return &V2UpdateClusterLogsProgressMethodNotAllowed{}
}

/* V2UpdateClusterLogsProgressMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed.
*/
type V2UpdateClusterLogsProgressMethodNotAllowed struct {
	Payload *models.Error
}

func (o *V2UpdateClusterLogsProgressMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/logs-progress][%d] v2UpdateClusterLogsProgressMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *V2UpdateClusterLogsProgressMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2UpdateClusterLogsProgressMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2UpdateClusterLogsProgressConflict creates a V2UpdateClusterLogsProgressConflict with default headers values
func NewV2UpdateClusterLogsProgressConflict() *V2UpdateClusterLogsProgressConflict {
	return &V2UpdateClusterLogsProgressConflict{}
}

/* V2UpdateClusterLogsProgressConflict describes a response with status code 409, with default header values.

Error.
*/
type V2UpdateClusterLogsProgressConflict struct {
	Payload *models.Error
}

func (o *V2UpdateClusterLogsProgressConflict) Error() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/logs-progress][%d] v2UpdateClusterLogsProgressConflict  %+v", 409, o.Payload)
}
func (o *V2UpdateClusterLogsProgressConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2UpdateClusterLogsProgressConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2UpdateClusterLogsProgressInternalServerError creates a V2UpdateClusterLogsProgressInternalServerError with default headers values
func NewV2UpdateClusterLogsProgressInternalServerError() *V2UpdateClusterLogsProgressInternalServerError {
	return &V2UpdateClusterLogsProgressInternalServerError{}
}

/* V2UpdateClusterLogsProgressInternalServerError describes a response with status code 500, with default header values.

Error.
*/
type V2UpdateClusterLogsProgressInternalServerError struct {
	Payload *models.Error
}

func (o *V2UpdateClusterLogsProgressInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/logs-progress][%d] v2UpdateClusterLogsProgressInternalServerError  %+v", 500, o.Payload)
}
func (o *V2UpdateClusterLogsProgressInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2UpdateClusterLogsProgressInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2UpdateClusterLogsProgressServiceUnavailable creates a V2UpdateClusterLogsProgressServiceUnavailable with default headers values
func NewV2UpdateClusterLogsProgressServiceUnavailable() *V2UpdateClusterLogsProgressServiceUnavailable {
	return &V2UpdateClusterLogsProgressServiceUnavailable{}
}

/* V2UpdateClusterLogsProgressServiceUnavailable describes a response with status code 503, with default header values.

Unavailable.
*/
type V2UpdateClusterLogsProgressServiceUnavailable struct {
	Payload *models.Error
}

func (o *V2UpdateClusterLogsProgressServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /v2/clusters/{cluster_id}/logs-progress][%d] v2UpdateClusterLogsProgressServiceUnavailable  %+v", 503, o.Payload)
}
func (o *V2UpdateClusterLogsProgressServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2UpdateClusterLogsProgressServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
