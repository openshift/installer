// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// V2GetPreflightRequirementsReader is a Reader for the V2GetPreflightRequirements structure.
type V2GetPreflightRequirementsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2GetPreflightRequirementsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV2GetPreflightRequirementsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewV2GetPreflightRequirementsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewV2GetPreflightRequirementsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV2GetPreflightRequirementsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewV2GetPreflightRequirementsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewV2GetPreflightRequirementsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewV2GetPreflightRequirementsOK creates a V2GetPreflightRequirementsOK with default headers values
func NewV2GetPreflightRequirementsOK() *V2GetPreflightRequirementsOK {
	return &V2GetPreflightRequirementsOK{}
}

/* V2GetPreflightRequirementsOK describes a response with status code 200, with default header values.

Success.
*/
type V2GetPreflightRequirementsOK struct {
	Payload *models.PreflightHardwareRequirements
}

func (o *V2GetPreflightRequirementsOK) Error() string {
	return fmt.Sprintf("[GET /v2/clusters/{cluster_id}/preflight-requirements][%d] v2GetPreflightRequirementsOK  %+v", 200, o.Payload)
}
func (o *V2GetPreflightRequirementsOK) GetPayload() *models.PreflightHardwareRequirements {
	return o.Payload
}

func (o *V2GetPreflightRequirementsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PreflightHardwareRequirements)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2GetPreflightRequirementsUnauthorized creates a V2GetPreflightRequirementsUnauthorized with default headers values
func NewV2GetPreflightRequirementsUnauthorized() *V2GetPreflightRequirementsUnauthorized {
	return &V2GetPreflightRequirementsUnauthorized{}
}

/* V2GetPreflightRequirementsUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type V2GetPreflightRequirementsUnauthorized struct {
	Payload *models.InfraError
}

func (o *V2GetPreflightRequirementsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/clusters/{cluster_id}/preflight-requirements][%d] v2GetPreflightRequirementsUnauthorized  %+v", 401, o.Payload)
}
func (o *V2GetPreflightRequirementsUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *V2GetPreflightRequirementsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2GetPreflightRequirementsForbidden creates a V2GetPreflightRequirementsForbidden with default headers values
func NewV2GetPreflightRequirementsForbidden() *V2GetPreflightRequirementsForbidden {
	return &V2GetPreflightRequirementsForbidden{}
}

/* V2GetPreflightRequirementsForbidden describes a response with status code 403, with default header values.

Forbidden.
*/
type V2GetPreflightRequirementsForbidden struct {
	Payload *models.InfraError
}

func (o *V2GetPreflightRequirementsForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/clusters/{cluster_id}/preflight-requirements][%d] v2GetPreflightRequirementsForbidden  %+v", 403, o.Payload)
}
func (o *V2GetPreflightRequirementsForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *V2GetPreflightRequirementsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2GetPreflightRequirementsNotFound creates a V2GetPreflightRequirementsNotFound with default headers values
func NewV2GetPreflightRequirementsNotFound() *V2GetPreflightRequirementsNotFound {
	return &V2GetPreflightRequirementsNotFound{}
}

/* V2GetPreflightRequirementsNotFound describes a response with status code 404, with default header values.

Error.
*/
type V2GetPreflightRequirementsNotFound struct {
	Payload *models.Error
}

func (o *V2GetPreflightRequirementsNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/clusters/{cluster_id}/preflight-requirements][%d] v2GetPreflightRequirementsNotFound  %+v", 404, o.Payload)
}
func (o *V2GetPreflightRequirementsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2GetPreflightRequirementsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2GetPreflightRequirementsMethodNotAllowed creates a V2GetPreflightRequirementsMethodNotAllowed with default headers values
func NewV2GetPreflightRequirementsMethodNotAllowed() *V2GetPreflightRequirementsMethodNotAllowed {
	return &V2GetPreflightRequirementsMethodNotAllowed{}
}

/* V2GetPreflightRequirementsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed.
*/
type V2GetPreflightRequirementsMethodNotAllowed struct {
	Payload *models.Error
}

func (o *V2GetPreflightRequirementsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /v2/clusters/{cluster_id}/preflight-requirements][%d] v2GetPreflightRequirementsMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *V2GetPreflightRequirementsMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2GetPreflightRequirementsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2GetPreflightRequirementsInternalServerError creates a V2GetPreflightRequirementsInternalServerError with default headers values
func NewV2GetPreflightRequirementsInternalServerError() *V2GetPreflightRequirementsInternalServerError {
	return &V2GetPreflightRequirementsInternalServerError{}
}

/* V2GetPreflightRequirementsInternalServerError describes a response with status code 500, with default header values.

Error.
*/
type V2GetPreflightRequirementsInternalServerError struct {
	Payload *models.Error
}

func (o *V2GetPreflightRequirementsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/clusters/{cluster_id}/preflight-requirements][%d] v2GetPreflightRequirementsInternalServerError  %+v", 500, o.Payload)
}
func (o *V2GetPreflightRequirementsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *V2GetPreflightRequirementsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
