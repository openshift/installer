// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// GetClusterInstallConfigReader is a Reader for the GetClusterInstallConfig structure.
type GetClusterInstallConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterInstallConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClusterInstallConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetClusterInstallConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetClusterInstallConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClusterInstallConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetClusterInstallConfigMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetClusterInstallConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetClusterInstallConfigOK creates a GetClusterInstallConfigOK with default headers values
func NewGetClusterInstallConfigOK() *GetClusterInstallConfigOK {
	return &GetClusterInstallConfigOK{}
}

/* GetClusterInstallConfigOK describes a response with status code 200, with default header values.

Success.
*/
type GetClusterInstallConfigOK struct {
	Payload string
}

func (o *GetClusterInstallConfigOK) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/install-config][%d] getClusterInstallConfigOK  %+v", 200, o.Payload)
}
func (o *GetClusterInstallConfigOK) GetPayload() string {
	return o.Payload
}

func (o *GetClusterInstallConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterInstallConfigUnauthorized creates a GetClusterInstallConfigUnauthorized with default headers values
func NewGetClusterInstallConfigUnauthorized() *GetClusterInstallConfigUnauthorized {
	return &GetClusterInstallConfigUnauthorized{}
}

/* GetClusterInstallConfigUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type GetClusterInstallConfigUnauthorized struct {
	Payload *models.InfraError
}

func (o *GetClusterInstallConfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/install-config][%d] getClusterInstallConfigUnauthorized  %+v", 401, o.Payload)
}
func (o *GetClusterInstallConfigUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *GetClusterInstallConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterInstallConfigForbidden creates a GetClusterInstallConfigForbidden with default headers values
func NewGetClusterInstallConfigForbidden() *GetClusterInstallConfigForbidden {
	return &GetClusterInstallConfigForbidden{}
}

/* GetClusterInstallConfigForbidden describes a response with status code 403, with default header values.

Forbidden.
*/
type GetClusterInstallConfigForbidden struct {
	Payload *models.InfraError
}

func (o *GetClusterInstallConfigForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/install-config][%d] getClusterInstallConfigForbidden  %+v", 403, o.Payload)
}
func (o *GetClusterInstallConfigForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *GetClusterInstallConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterInstallConfigNotFound creates a GetClusterInstallConfigNotFound with default headers values
func NewGetClusterInstallConfigNotFound() *GetClusterInstallConfigNotFound {
	return &GetClusterInstallConfigNotFound{}
}

/* GetClusterInstallConfigNotFound describes a response with status code 404, with default header values.

Error.
*/
type GetClusterInstallConfigNotFound struct {
	Payload *models.Error
}

func (o *GetClusterInstallConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/install-config][%d] getClusterInstallConfigNotFound  %+v", 404, o.Payload)
}
func (o *GetClusterInstallConfigNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetClusterInstallConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterInstallConfigMethodNotAllowed creates a GetClusterInstallConfigMethodNotAllowed with default headers values
func NewGetClusterInstallConfigMethodNotAllowed() *GetClusterInstallConfigMethodNotAllowed {
	return &GetClusterInstallConfigMethodNotAllowed{}
}

/* GetClusterInstallConfigMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed.
*/
type GetClusterInstallConfigMethodNotAllowed struct {
	Payload *models.Error
}

func (o *GetClusterInstallConfigMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/install-config][%d] getClusterInstallConfigMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *GetClusterInstallConfigMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetClusterInstallConfigMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterInstallConfigInternalServerError creates a GetClusterInstallConfigInternalServerError with default headers values
func NewGetClusterInstallConfigInternalServerError() *GetClusterInstallConfigInternalServerError {
	return &GetClusterInstallConfigInternalServerError{}
}

/* GetClusterInstallConfigInternalServerError describes a response with status code 500, with default header values.

Error.
*/
type GetClusterInstallConfigInternalServerError struct {
	Payload *models.Error
}

func (o *GetClusterInstallConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/install-config][%d] getClusterInstallConfigInternalServerError  %+v", 500, o.Payload)
}
func (o *GetClusterInstallConfigInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetClusterInstallConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
