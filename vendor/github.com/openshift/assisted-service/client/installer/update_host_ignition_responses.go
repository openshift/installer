// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// UpdateHostIgnitionReader is a Reader for the UpdateHostIgnition structure.
type UpdateHostIgnitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateHostIgnitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateHostIgnitionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateHostIgnitionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateHostIgnitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateHostIgnitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateHostIgnitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateHostIgnitionMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateHostIgnitionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateHostIgnitionCreated creates a UpdateHostIgnitionCreated with default headers values
func NewUpdateHostIgnitionCreated() *UpdateHostIgnitionCreated {
	return &UpdateHostIgnitionCreated{}
}

/* UpdateHostIgnitionCreated describes a response with status code 201, with default header values.

Success.
*/
type UpdateHostIgnitionCreated struct {
}

func (o *UpdateHostIgnitionCreated) Error() string {
	return fmt.Sprintf("[PATCH /v1/clusters/{cluster_id}/hosts/{host_id}/ignition][%d] updateHostIgnitionCreated ", 201)
}

func (o *UpdateHostIgnitionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateHostIgnitionBadRequest creates a UpdateHostIgnitionBadRequest with default headers values
func NewUpdateHostIgnitionBadRequest() *UpdateHostIgnitionBadRequest {
	return &UpdateHostIgnitionBadRequest{}
}

/* UpdateHostIgnitionBadRequest describes a response with status code 400, with default header values.

Error.
*/
type UpdateHostIgnitionBadRequest struct {
	Payload *models.Error
}

func (o *UpdateHostIgnitionBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/clusters/{cluster_id}/hosts/{host_id}/ignition][%d] updateHostIgnitionBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateHostIgnitionBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateHostIgnitionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateHostIgnitionUnauthorized creates a UpdateHostIgnitionUnauthorized with default headers values
func NewUpdateHostIgnitionUnauthorized() *UpdateHostIgnitionUnauthorized {
	return &UpdateHostIgnitionUnauthorized{}
}

/* UpdateHostIgnitionUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type UpdateHostIgnitionUnauthorized struct {
	Payload *models.InfraError
}

func (o *UpdateHostIgnitionUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /v1/clusters/{cluster_id}/hosts/{host_id}/ignition][%d] updateHostIgnitionUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdateHostIgnitionUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *UpdateHostIgnitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateHostIgnitionForbidden creates a UpdateHostIgnitionForbidden with default headers values
func NewUpdateHostIgnitionForbidden() *UpdateHostIgnitionForbidden {
	return &UpdateHostIgnitionForbidden{}
}

/* UpdateHostIgnitionForbidden describes a response with status code 403, with default header values.

Forbidden.
*/
type UpdateHostIgnitionForbidden struct {
	Payload *models.InfraError
}

func (o *UpdateHostIgnitionForbidden) Error() string {
	return fmt.Sprintf("[PATCH /v1/clusters/{cluster_id}/hosts/{host_id}/ignition][%d] updateHostIgnitionForbidden  %+v", 403, o.Payload)
}
func (o *UpdateHostIgnitionForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *UpdateHostIgnitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateHostIgnitionNotFound creates a UpdateHostIgnitionNotFound with default headers values
func NewUpdateHostIgnitionNotFound() *UpdateHostIgnitionNotFound {
	return &UpdateHostIgnitionNotFound{}
}

/* UpdateHostIgnitionNotFound describes a response with status code 404, with default header values.

Error.
*/
type UpdateHostIgnitionNotFound struct {
	Payload *models.Error
}

func (o *UpdateHostIgnitionNotFound) Error() string {
	return fmt.Sprintf("[PATCH /v1/clusters/{cluster_id}/hosts/{host_id}/ignition][%d] updateHostIgnitionNotFound  %+v", 404, o.Payload)
}
func (o *UpdateHostIgnitionNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateHostIgnitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateHostIgnitionMethodNotAllowed creates a UpdateHostIgnitionMethodNotAllowed with default headers values
func NewUpdateHostIgnitionMethodNotAllowed() *UpdateHostIgnitionMethodNotAllowed {
	return &UpdateHostIgnitionMethodNotAllowed{}
}

/* UpdateHostIgnitionMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed.
*/
type UpdateHostIgnitionMethodNotAllowed struct {
	Payload *models.Error
}

func (o *UpdateHostIgnitionMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PATCH /v1/clusters/{cluster_id}/hosts/{host_id}/ignition][%d] updateHostIgnitionMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *UpdateHostIgnitionMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateHostIgnitionMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateHostIgnitionInternalServerError creates a UpdateHostIgnitionInternalServerError with default headers values
func NewUpdateHostIgnitionInternalServerError() *UpdateHostIgnitionInternalServerError {
	return &UpdateHostIgnitionInternalServerError{}
}

/* UpdateHostIgnitionInternalServerError describes a response with status code 500, with default header values.

Error.
*/
type UpdateHostIgnitionInternalServerError struct {
	Payload *models.Error
}

func (o *UpdateHostIgnitionInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /v1/clusters/{cluster_id}/hosts/{host_id}/ignition][%d] updateHostIgnitionInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateHostIgnitionInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateHostIgnitionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
