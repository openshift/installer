// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// GetHostIgnitionReader is a Reader for the GetHostIgnition structure.
type GetHostIgnitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHostIgnitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHostIgnitionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetHostIgnitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetHostIgnitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetHostIgnitionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetHostIgnitionMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetHostIgnitionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetHostIgnitionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetHostIgnitionOK creates a GetHostIgnitionOK with default headers values
func NewGetHostIgnitionOK() *GetHostIgnitionOK {
	return &GetHostIgnitionOK{}
}

/* GetHostIgnitionOK describes a response with status code 200, with default header values.

Success.
*/
type GetHostIgnitionOK struct {
	Payload *models.HostIgnitionParams
}

func (o *GetHostIgnitionOK) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/hosts/{host_id}/ignition][%d] getHostIgnitionOK  %+v", 200, o.Payload)
}
func (o *GetHostIgnitionOK) GetPayload() *models.HostIgnitionParams {
	return o.Payload
}

func (o *GetHostIgnitionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HostIgnitionParams)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostIgnitionUnauthorized creates a GetHostIgnitionUnauthorized with default headers values
func NewGetHostIgnitionUnauthorized() *GetHostIgnitionUnauthorized {
	return &GetHostIgnitionUnauthorized{}
}

/* GetHostIgnitionUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type GetHostIgnitionUnauthorized struct {
	Payload *models.InfraError
}

func (o *GetHostIgnitionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/hosts/{host_id}/ignition][%d] getHostIgnitionUnauthorized  %+v", 401, o.Payload)
}
func (o *GetHostIgnitionUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *GetHostIgnitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostIgnitionForbidden creates a GetHostIgnitionForbidden with default headers values
func NewGetHostIgnitionForbidden() *GetHostIgnitionForbidden {
	return &GetHostIgnitionForbidden{}
}

/* GetHostIgnitionForbidden describes a response with status code 403, with default header values.

Forbidden.
*/
type GetHostIgnitionForbidden struct {
	Payload *models.InfraError
}

func (o *GetHostIgnitionForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/hosts/{host_id}/ignition][%d] getHostIgnitionForbidden  %+v", 403, o.Payload)
}
func (o *GetHostIgnitionForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *GetHostIgnitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostIgnitionNotFound creates a GetHostIgnitionNotFound with default headers values
func NewGetHostIgnitionNotFound() *GetHostIgnitionNotFound {
	return &GetHostIgnitionNotFound{}
}

/* GetHostIgnitionNotFound describes a response with status code 404, with default header values.

Error.
*/
type GetHostIgnitionNotFound struct {
	Payload *models.Error
}

func (o *GetHostIgnitionNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/hosts/{host_id}/ignition][%d] getHostIgnitionNotFound  %+v", 404, o.Payload)
}
func (o *GetHostIgnitionNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHostIgnitionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostIgnitionMethodNotAllowed creates a GetHostIgnitionMethodNotAllowed with default headers values
func NewGetHostIgnitionMethodNotAllowed() *GetHostIgnitionMethodNotAllowed {
	return &GetHostIgnitionMethodNotAllowed{}
}

/* GetHostIgnitionMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed.
*/
type GetHostIgnitionMethodNotAllowed struct {
	Payload *models.Error
}

func (o *GetHostIgnitionMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/hosts/{host_id}/ignition][%d] getHostIgnitionMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *GetHostIgnitionMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHostIgnitionMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostIgnitionConflict creates a GetHostIgnitionConflict with default headers values
func NewGetHostIgnitionConflict() *GetHostIgnitionConflict {
	return &GetHostIgnitionConflict{}
}

/* GetHostIgnitionConflict describes a response with status code 409, with default header values.

Error.
*/
type GetHostIgnitionConflict struct {
	Payload *models.Error
}

func (o *GetHostIgnitionConflict) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/hosts/{host_id}/ignition][%d] getHostIgnitionConflict  %+v", 409, o.Payload)
}
func (o *GetHostIgnitionConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHostIgnitionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostIgnitionInternalServerError creates a GetHostIgnitionInternalServerError with default headers values
func NewGetHostIgnitionInternalServerError() *GetHostIgnitionInternalServerError {
	return &GetHostIgnitionInternalServerError{}
}

/* GetHostIgnitionInternalServerError describes a response with status code 500, with default header values.

Error.
*/
type GetHostIgnitionInternalServerError struct {
	Payload *models.Error
}

func (o *GetHostIgnitionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{cluster_id}/hosts/{host_id}/ignition][%d] getHostIgnitionInternalServerError  %+v", 500, o.Payload)
}
func (o *GetHostIgnitionInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHostIgnitionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
