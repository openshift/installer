// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// DeregisterClusterReader is a Reader for the DeregisterCluster structure.
type DeregisterClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeregisterClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeregisterClusterNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeregisterClusterUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeregisterClusterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeregisterClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeregisterClusterMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeregisterClusterConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeregisterClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeregisterClusterNoContent creates a DeregisterClusterNoContent with default headers values
func NewDeregisterClusterNoContent() *DeregisterClusterNoContent {
	return &DeregisterClusterNoContent{}
}

/* DeregisterClusterNoContent describes a response with status code 204, with default header values.

Success.
*/
type DeregisterClusterNoContent struct {
}

func (o *DeregisterClusterNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{cluster_id}][%d] deregisterClusterNoContent ", 204)
}

func (o *DeregisterClusterNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeregisterClusterUnauthorized creates a DeregisterClusterUnauthorized with default headers values
func NewDeregisterClusterUnauthorized() *DeregisterClusterUnauthorized {
	return &DeregisterClusterUnauthorized{}
}

/* DeregisterClusterUnauthorized describes a response with status code 401, with default header values.

Unauthorized.
*/
type DeregisterClusterUnauthorized struct {
	Payload *models.InfraError
}

func (o *DeregisterClusterUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{cluster_id}][%d] deregisterClusterUnauthorized  %+v", 401, o.Payload)
}
func (o *DeregisterClusterUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *DeregisterClusterUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeregisterClusterForbidden creates a DeregisterClusterForbidden with default headers values
func NewDeregisterClusterForbidden() *DeregisterClusterForbidden {
	return &DeregisterClusterForbidden{}
}

/* DeregisterClusterForbidden describes a response with status code 403, with default header values.

Forbidden.
*/
type DeregisterClusterForbidden struct {
	Payload *models.InfraError
}

func (o *DeregisterClusterForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{cluster_id}][%d] deregisterClusterForbidden  %+v", 403, o.Payload)
}
func (o *DeregisterClusterForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *DeregisterClusterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeregisterClusterNotFound creates a DeregisterClusterNotFound with default headers values
func NewDeregisterClusterNotFound() *DeregisterClusterNotFound {
	return &DeregisterClusterNotFound{}
}

/* DeregisterClusterNotFound describes a response with status code 404, with default header values.

Error.
*/
type DeregisterClusterNotFound struct {
	Payload *models.Error
}

func (o *DeregisterClusterNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{cluster_id}][%d] deregisterClusterNotFound  %+v", 404, o.Payload)
}
func (o *DeregisterClusterNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeregisterClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeregisterClusterMethodNotAllowed creates a DeregisterClusterMethodNotAllowed with default headers values
func NewDeregisterClusterMethodNotAllowed() *DeregisterClusterMethodNotAllowed {
	return &DeregisterClusterMethodNotAllowed{}
}

/* DeregisterClusterMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed.
*/
type DeregisterClusterMethodNotAllowed struct {
	Payload *models.Error
}

func (o *DeregisterClusterMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{cluster_id}][%d] deregisterClusterMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *DeregisterClusterMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeregisterClusterMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeregisterClusterConflict creates a DeregisterClusterConflict with default headers values
func NewDeregisterClusterConflict() *DeregisterClusterConflict {
	return &DeregisterClusterConflict{}
}

/* DeregisterClusterConflict describes a response with status code 409, with default header values.

Error.
*/
type DeregisterClusterConflict struct {
	Payload *models.Error
}

func (o *DeregisterClusterConflict) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{cluster_id}][%d] deregisterClusterConflict  %+v", 409, o.Payload)
}
func (o *DeregisterClusterConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeregisterClusterConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeregisterClusterInternalServerError creates a DeregisterClusterInternalServerError with default headers values
func NewDeregisterClusterInternalServerError() *DeregisterClusterInternalServerError {
	return &DeregisterClusterInternalServerError{}
}

/* DeregisterClusterInternalServerError describes a response with status code 500, with default header values.

Error.
*/
type DeregisterClusterInternalServerError struct {
	Payload *models.Error
}

func (o *DeregisterClusterInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{cluster_id}][%d] deregisterClusterInternalServerError  %+v", 500, o.Payload)
}
func (o *DeregisterClusterInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeregisterClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
