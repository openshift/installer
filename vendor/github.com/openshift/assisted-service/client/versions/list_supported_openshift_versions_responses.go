// Code generated by go-swagger; DO NOT EDIT.

package versions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// ListSupportedOpenshiftVersionsReader is a Reader for the ListSupportedOpenshiftVersions structure.
type ListSupportedOpenshiftVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListSupportedOpenshiftVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListSupportedOpenshiftVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewListSupportedOpenshiftVersionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewListSupportedOpenshiftVersionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListSupportedOpenshiftVersionsOK creates a ListSupportedOpenshiftVersionsOK with default headers values
func NewListSupportedOpenshiftVersionsOK() *ListSupportedOpenshiftVersionsOK {
	return &ListSupportedOpenshiftVersionsOK{}
}

/* ListSupportedOpenshiftVersionsOK describes a response with status code 200, with default header values.

Success.
*/
type ListSupportedOpenshiftVersionsOK struct {
	Payload models.OpenshiftVersions
}

func (o *ListSupportedOpenshiftVersionsOK) Error() string {
	return fmt.Sprintf("[GET /v1/openshift_versions][%d] listSupportedOpenshiftVersionsOK  %+v", 200, o.Payload)
}
func (o *ListSupportedOpenshiftVersionsOK) GetPayload() models.OpenshiftVersions {
	return o.Payload
}

func (o *ListSupportedOpenshiftVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSupportedOpenshiftVersionsInternalServerError creates a ListSupportedOpenshiftVersionsInternalServerError with default headers values
func NewListSupportedOpenshiftVersionsInternalServerError() *ListSupportedOpenshiftVersionsInternalServerError {
	return &ListSupportedOpenshiftVersionsInternalServerError{}
}

/* ListSupportedOpenshiftVersionsInternalServerError describes a response with status code 500, with default header values.

Error.
*/
type ListSupportedOpenshiftVersionsInternalServerError struct {
	Payload *models.Error
}

func (o *ListSupportedOpenshiftVersionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/openshift_versions][%d] listSupportedOpenshiftVersionsInternalServerError  %+v", 500, o.Payload)
}
func (o *ListSupportedOpenshiftVersionsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListSupportedOpenshiftVersionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSupportedOpenshiftVersionsServiceUnavailable creates a ListSupportedOpenshiftVersionsServiceUnavailable with default headers values
func NewListSupportedOpenshiftVersionsServiceUnavailable() *ListSupportedOpenshiftVersionsServiceUnavailable {
	return &ListSupportedOpenshiftVersionsServiceUnavailable{}
}

/* ListSupportedOpenshiftVersionsServiceUnavailable describes a response with status code 503, with default header values.

Unavailable.
*/
type ListSupportedOpenshiftVersionsServiceUnavailable struct {
	Payload *models.Error
}

func (o *ListSupportedOpenshiftVersionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/openshift_versions][%d] listSupportedOpenshiftVersionsServiceUnavailable  %+v", 503, o.Payload)
}
func (o *ListSupportedOpenshiftVersionsServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListSupportedOpenshiftVersionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
