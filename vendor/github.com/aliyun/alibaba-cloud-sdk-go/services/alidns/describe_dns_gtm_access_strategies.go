package alidns

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeDnsGtmAccessStrategies invokes the alidns.DescribeDnsGtmAccessStrategies API synchronously
func (client *Client) DescribeDnsGtmAccessStrategies(request *DescribeDnsGtmAccessStrategiesRequest) (response *DescribeDnsGtmAccessStrategiesResponse, err error) {
	response = CreateDescribeDnsGtmAccessStrategiesResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeDnsGtmAccessStrategiesWithChan invokes the alidns.DescribeDnsGtmAccessStrategies API asynchronously
func (client *Client) DescribeDnsGtmAccessStrategiesWithChan(request *DescribeDnsGtmAccessStrategiesRequest) (<-chan *DescribeDnsGtmAccessStrategiesResponse, <-chan error) {
	responseChan := make(chan *DescribeDnsGtmAccessStrategiesResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeDnsGtmAccessStrategies(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeDnsGtmAccessStrategiesWithCallback invokes the alidns.DescribeDnsGtmAccessStrategies API asynchronously
func (client *Client) DescribeDnsGtmAccessStrategiesWithCallback(request *DescribeDnsGtmAccessStrategiesRequest, callback func(response *DescribeDnsGtmAccessStrategiesResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeDnsGtmAccessStrategiesResponse
		var err error
		defer close(result)
		response, err = client.DescribeDnsGtmAccessStrategies(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeDnsGtmAccessStrategiesRequest is the request struct for api DescribeDnsGtmAccessStrategies
type DescribeDnsGtmAccessStrategiesRequest struct {
	*requests.RpcRequest
	PageNumber   requests.Integer `position:"Query" name:"PageNumber"`
	InstanceId   string           `position:"Query" name:"InstanceId"`
	UserClientIp string           `position:"Query" name:"UserClientIp"`
	PageSize     requests.Integer `position:"Query" name:"PageSize"`
	StrategyMode string           `position:"Query" name:"StrategyMode"`
	Lang         string           `position:"Query" name:"Lang"`
}

// DescribeDnsGtmAccessStrategiesResponse is the response struct for api DescribeDnsGtmAccessStrategies
type DescribeDnsGtmAccessStrategiesResponse struct {
	*responses.BaseResponse
	RequestId  string                                     `json:"RequestId" xml:"RequestId"`
	TotalItems int                                        `json:"TotalItems" xml:"TotalItems"`
	TotalPages int                                        `json:"TotalPages" xml:"TotalPages"`
	PageNumber int                                        `json:"PageNumber" xml:"PageNumber"`
	PageSize   int                                        `json:"PageSize" xml:"PageSize"`
	Strategies StrategiesInDescribeDnsGtmAccessStrategies `json:"Strategies" xml:"Strategies"`
}

// CreateDescribeDnsGtmAccessStrategiesRequest creates a request to invoke DescribeDnsGtmAccessStrategies API
func CreateDescribeDnsGtmAccessStrategiesRequest() (request *DescribeDnsGtmAccessStrategiesRequest) {
	request = &DescribeDnsGtmAccessStrategiesRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Alidns", "2015-01-09", "DescribeDnsGtmAccessStrategies", "alidns", "openAPI")
	request.Method = requests.POST
	return
}

// CreateDescribeDnsGtmAccessStrategiesResponse creates a response to parse from DescribeDnsGtmAccessStrategies response
func CreateDescribeDnsGtmAccessStrategiesResponse() (response *DescribeDnsGtmAccessStrategiesResponse) {
	response = &DescribeDnsGtmAccessStrategiesResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
