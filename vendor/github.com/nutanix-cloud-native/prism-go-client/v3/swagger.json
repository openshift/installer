{
    "info": {
        "version": "3.1.0", 
        "description": "Move programming from the user to the machine.", 
        "title": "Nutanix Intentful API"
    }, 
    "paths": {
        "/categories/{name}": {
            "put": {
                "responses": {
                    "201": {
                        "description": "Created", 
                        "schema": {
                            "$ref": "#/definitions/category_key_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/category_key_status"
                        }
                    }, 
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/category_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "in": "path", 
                        "name": "name", 
                        "pattern": "^[a-zA-Z0-9_.-]+( [a-zA-Z0-9_.-]+)*$", 
                        "required": true, 
                        "maxLength": 64, 
                        "type": "string"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/category_key"
                        }, 
                        "required": true, 
                        "name": "spec", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "categories"
                ], 
                "summary": "Create or Update a category Key.", 
                "x-ntnx-operations": [
                    "create_or_update_name"
                ], 
                "x-ntnx-kind": "category", 
                "description": "Create or Update a category Key."
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/category_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "maxLength": 64, 
                        "required": true, 
                        "type": "string", 
                        "name": "name", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "categories"
                ], 
                "summary": "Delete a category Key.", 
                "x-ntnx-operations": [
                    "delete_name"
                ], 
                "x-ntnx-kind": "category", 
                "description": "Delete a category Key."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/category_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/category_key_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "maxLength": 64, 
                        "required": true, 
                        "type": "string", 
                        "name": "name", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "categories"
                ], 
                "summary": "Get a category key.", 
                "x-ntnx-operations": [
                    "view_name"
                ], 
                "x-ntnx-kind": "category", 
                "description": "Get a category key."
            }
        }, 
        "/clusters/{uuid}/ahv_cluster_config/supported_cpu_models/{cpu_model_uuid}": {
            "get": {
                "description": "This operation gets information of CPU model referred by {cpu_model_uuid} parameter for cluster referred by {uuid}. This operation is supported only for AHV clusters.\n", 
                "parameters": [
                    {
                        "name": "uuid",
                        "schema": {
                            "$ref": "#/parameters/uuid"
                        },
                        "in": "path"
                    },
                    {
                        "name": "cpu_model_uuid",
                        "schema": {
                            "$ref": "#/parameters/uuid"
                        },
                        "in": "path"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Get information for given CPU model", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "cluster", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cluster_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cpu_model"
                        }
                    }
                }
            }
        }, 
        "/vm_recovery_points": {
            "post": {
                "x-ntnx-permissions": [
                    "vm_recovery_point.create"
                ], 
                "description": "This operation submits a request to create a new vm recovery point based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "summary": "Create a new vm recovery point", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_response"
                        }
                    }
                }
            }
        }, 
        "/portal_services/support_cases/upload": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/support_case_upload_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/support_case_upload_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/support_case_upload_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "portal_services"
                ], 
                "summary": "Upload attachments for a specific support case.",
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "support_case_upload", 
                "x-internal": true, 
                "description": "Given an intentful spec, trigger ncc health check and log uploads for a specified support case."
            }
        }, 
        "/portal_services/software/{software_type}/list": {
            "post": {
                "description": "Get a list of portal software with specified type", 
                "parameters": [
                    {
                        "description": "Software type", 
                        "required": true, 
                        "in": "path", 
                        "x-ntnx-enum": [
                            "NOS", 
                            "PRISM_CENTRAL"
                        ], 
                        "type": "string", 
                        "name": "software_type"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/software_list_metadata"
                        }, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "portal_services"
                ], 
                "summary": "Get all available software on Nutanix Portal", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/software_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/software_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/network_security_rules/export": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "format": "binary"
                        }
                    }
                }, 
                "produces": [
                    "application/octet-stream"
                ], 
                "tags": [
                    "network_security_rules"
                ], 
                "summary": "Export all network security rules", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "network_security_rule", 
                "description": "Export all network security rules to save and for subsequent import"
            }
        }, 
        "/layer2_stretches": {
            "post": {
                "description": "This operation submits a request to create a new layer2_stretch based on the input parameters.\nConfiguration to extend a Layer 2 network\n              between two sites.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/layer2_stretch_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "layer2_stretch"
                ], 
                "summary": "Create a new layer2_stretch", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "layer2_stretch", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/layer2_stretch_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/layer2_stretch_intent_response"
                        }
                    }
                }
            }
        }, 
        "/cloud_trusts/list": {
            "post": {
                "x-ntnx-permissions": [
                    "cloud_trust.view"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_trust_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_trust_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/cloud_trust_list_metadata"
                        }, 
                        "required": true, 
                        "description": "A cloud trust object", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "cloud"
                ], 
                "summary": "List trusted clouds.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "cloud_trust", 
                "x-internal": true, 
                "description": "Gets list of trusted clouds."
            }
        }, 
        "/remote_rpc_request": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_rpc_request_input"
                        }, 
                        "required": true, 
                        "description": "RPC payload.", 
                        "name": "payload", 
                        "in": "body"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Name of the service whose RPC needs to be invoked.", 
                        "name": "service_name", 
                        "in": "query"
                    }, 
                    {
                        "required": true, 
                        "type": "integer", 
                        "description": "Port at which the service is running", 
                        "name": "port", 
                        "in": "query"
                    }, 
                    {
                        "required": false, 
                        "type": "integer", 
                        "description": "timeout in milliseconds.", 
                        "name": "timeout_ms", 
                        "in": "query"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "base url for rpc call.", 
                        "name": "base_url", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "remote_connections"
                ], 
                "summary": "Execute Remote RPC", 
                "x-internal": true, 
                "consumes": [
                    "application/octet-stream"
                ], 
                "description": "Execute Remote RPC"
            }
        }, 
        "/cloud_configs/{cloud_type}": {
            "get": {
                "description": "Gets the Nutanix hosted cloud config.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/cloud_type"
                    }
                ], 
                "tags": [
                    "cloud"
                ], 
                "summary": "Gets the Nutanix hosted cloud config.", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_trust_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_config_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/cloud_trust_status"
                        }
                    }
                }
            }
        }, 
        "/capacity_planning/scenarios/{uuid}": {
            "put": {
                "description": "Update scenario.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/whatif_scenario"
                        }, 
                        "required": true, 
                        "description": "scenario body.", 
                        "name": "scenario", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "whatif"
                ], 
                "summary": "Update scenario", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "whatif", 
                "x-internal": false, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/whatif_scenario"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Delete scenario.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "whatif"
                ], 
                "summary": "Delete scenario", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "whatif", 
                "x-internal": false, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }, 
            "get": {
                "description": "Get scenario with given uuid.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "whatif"
                ], 
                "summary": "Get scenario with uuid", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "whatif", 
                "x-internal": false, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/whatif_scenario"
                        }
                    }
                }
            }
        }, 
        "/storage_policies/list": {
            "post": {
                "description": "This operation gets a list of storage_policies, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/storage_policy_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "storage_policies"
                ], 
                "summary": "Get a list of existing storage_policies", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "storage_policy", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/storage_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/storage_policy_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/report_configs": {
            "post": {
                "description": "Given an intentful spec, creates a report config with specified attributes.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/report_config_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "summary": "Create report config.", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "report_config", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/report_config_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/report_config_intent_response"
                        }
                    }
                }
            }
        }, 
        "/identity_providers/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/identity_provider_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/identity_provider_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/identity_provider_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/identity_provider_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "identity_providers"
                ], 
                "summary": "Update a existing identity_provider", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "identity_provider", 
                "description": "This operation submits a request to update a existing identity_provider based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/identity_provider_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/identity_provider_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "identity_providers"
                ], 
                "summary": "Delete a existing identity_provider", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "identity_provider", 
                "description": "This operation submits a request to delete a existing identity_provider."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/identity_provider_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/identity_provider_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/identity_provider_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "identity_providers"
                ], 
                "summary": "Get a existing identity_provider", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "identity_provider", 
                "description": "This operation gets a existing identity_provider."
            }
        }, 
        "/search": {
            "post": {
                "description": "Parse user query and give the structured search response\naccording to user query\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/search_request"
                        }, 
                        "required": true, 
                        "name": "search_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "search"
                ], 
                "summary": "Search Information on cluster", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/query_result"
                        }
                    }
                }
            }
        }, 
        "/identity_providers/sp_metadata": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/identity_provider_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "format": "binary"
                        }
                    }
                }, 
                "tags": [
                    "identity_providers"
                ], 
                "summary": "Endpoint which will give service provider metadata as output", 
                "description": "Endpoint which will give service provider metadata as output\n", 
                "x-ntnx-kind": "identity_provider"
            }
        }, 
        "/action_templates/list": {
            "post": {
                "description": "This operation gets a list of action_template, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/action_template_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_templates"
                ], 
                "summary": "Get a list of existing action_template", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "action_template", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_template_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/action_template_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/vpcs/{uuid}/packet_trace": {
            "post": {
                "description": "Performs a logical packet trace in the specified virtual network.\nReturns a list of user-configured flows that the packet matched,\nand the action at each of these flows - if the packet was dropped,\nforwarded or rerouted to a service VM.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/packet_trace_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "virtual_network"
                ], 
                "summary": "Logical Packet Trace", 
                "x-ntnx-operations": [
                    "run_trace"
                ], 
                "x-ntnx-kind": "virtual_network", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpc_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/packet_trace"
                        }
                    }
                }
            }
        }, 
        "/streaming_policies/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/streaming_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/streaming_policy_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/streaming_policy_intent_input"
                        }, 
                        "required": true, 
                        "description": "Update Streaming Policy", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "streaming_policy"
                ], 
                "summary": "Update Streaming Policy entity", 
                "x-ntnx-kind": "streaming_policy", 
                "x-internal": true, 
                "description": "Update Streaming Policy entity"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/streaming_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/streaming_policy_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "streaming_policy"
                ], 
                "summary": "Delete specified Streaming Policy", 
                "x-ntnx-kind": "streaming_policy", 
                "x-internal": true, 
                "description": "Delete specified Streaming Policy"
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/streaming_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/streaming_policy_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "streaming_policy"
                ], 
                "summary": "Retrieves specified Streaming Policy", 
                "x-ntnx-kind": "streaming_policy", 
                "x-internal": true, 
                "description": "Retrieves specified Streaming Policy"
            }
        }, 
        "/ovas": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ova_create_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ovas"
                ], 
                "summary": "Create a new ova", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "ova", 
                "description": "Creates an ova entity. OVAs can be uploaded using this by user which can be later used to create a VM.\n"
            }
        }, 
        "/vpn_connections/{uuid}/vendor_config/{name}/{version}": {
            "get": {
                "description": "Download the configuration steps for the given vendor device and version.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Vendor device name.", 
                        "in": "path", 
                        "name": "name"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Vendor device version.", 
                        "in": "path", 
                        "name": "version"
                    }
                ], 
                "produces": [
                    "text/plain"
                ], 
                "tags": [
                    "vpn_connection"
                ], 
                "summary": "Download vendor device configuration steps.", 
                "x-ntnx-operations": [
                    "config_download", 
                    "vpn_connection_config_download"
                ], 
                "x-ntnx-kind": "vpn_connection", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }
        }, 
        "/portal_services/support_cases": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/support_case_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/support_case_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/support_case_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "portal_services"
                ], 
                "summary": "Create support case.", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "support_case", 
                "x-internal": true, 
                "description": "Given a spec, creates a support case with associated metadata."
            }
        }, 
        "/service_groups/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing service_group based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/service_group"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "service_groups"
                ], 
                "summary": "Update a existing service_group", 
                "x-ntnx-kind": "service_group", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing service_group.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "service_groups"
                ], 
                "summary": "Delete a existing service_group", 
                "x-ntnx-kind": "service_group", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing service_group.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "service_groups"
                ], 
                "summary": "Get a existing service_group", 
                "x-ntnx-kind": "service_group", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/service_group_response"
                        }
                    }
                }
            }
        }, 
        "/action_rules/validate": {
            "post": {
                "description": "Validate an action rule without changing the rule.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/action_rule_validation_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_rules"
                ], 
                "summary": "Validate an action rule", 
                "x-ntnx-operations": [
                    "validate"
                ], 
                "x-ntnx-kind": "action_rule", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_resources"
                        }
                    }
                }
            }
        }, 
        "/vms/{uuid}/ngt": {
            "get": {
                "description": "This operation gets a existing ngt.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ngt"
                ], 
                "summary": "Get a existing ngt", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ngt", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ngt_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ngt_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/ngt_status"
                        }
                    }
                }
            }
        }, 
        "/directory_services/{uuid}/search": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_search_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/directory_service_search_metadata"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "directory_services"
                ], 
                "summary": "Search user or group in the directory service.", 
                "x-ntnx-operations": [
                    "search"
                ], 
                "x-ntnx-kind": "directory_service", 
                "description": "Retrieves a user or a group available in the directory service based on\nthe UUID specified.\n"
            }
        }, 
        "/aws/subnets/list": {
            "post": {
                "description": "List all AWS subnets. Supported filters are:\n- account_uuid\n- region\n- vpc_id\n- availability_zone\nUse account_uuid filter to list all the subnets on the default\nregion of a particular account.\nUse account_uuid and region filters together to list the subnets on\nall VPCs and AZs of a particular region.\nUse account_uuid, region and vpc_id filter together to list the\nsubnets on a particular VPC.\nUse account_uuid, region and availability_zone filter together to list\nthe subnets on a particualr AZ.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/aws_subnet_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "aws/subnets"
                ], 
                "summary": "List all AWS subnets.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "aws_subnet", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/aws_subnet_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_subnet_list_intent_response"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/aws_subnet_status"
                        }
                    }
                }
            }
        }, 
        "/network_security_rules/import/apply": {
            "post": {
                "description": "Imports previously exported network security rules", 
                "parameters": [
                    {
                        "schema": {
                            "format": "binary"
                        }, 
                        "required": true, 
                        "name": "import_data", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network_security_rules"
                ], 
                "summary": "Imports all the network security rules specified by the data.", 
                "x-ntnx-operations": [
                    "update", 
                    "create", 
                    "delete"
                ], 
                "x-ntnx-kind": "network_security_rule", 
                "consumes": [
                    "application/octet-stream"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/vm_host_affinity_legacy_policies/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_host_affinity_legacy_policy_list_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_host_affinity_legacy_policy_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_host_affinity_legacy_policies"
                ], 
                "summary": "Get a list of existing VM Host Affinity Legacy Policies", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vm_host_affinity_legacy_policy", 
                "description": "This operation gets a list of VM Host Affinity Legacy Policies, allowing for pagination.\n"
            }
        }, 
        "/vms/{uuid}/reset": {
            "post": {
                "description": "Creates a VM reset request task.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_set_power_state_input"
                        }, 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Create a VM reset request.", 
                "x-ntnx-operations": [
                    "update", 
                    "set_power_state"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_set_power_state_response"
                        }
                    }
                }
            }
        }, 
        "/projects": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/project_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/project_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/project_intent_input"
                        }, 
                        "required": true, 
                        "description": "The entity to create or modify a project.", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "projects"
                ], 
                "summary": "Create a new Project", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "project", 
                "description": "This operation submits a request to create a new Project based on the input parameters.\n"
            }
        }, 
        "/network_security_rules/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network_security_rules"
                ], 
                "summary": "Get all network security rules", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "network_security_rule", 
                "description": "This operation gets a list of Network security rules, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/ovas/{uuid}/vm_spec": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_spec_output"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "type": "boolean", 
                        "name": "ignore_unknown_fields", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "ovas"
                ], 
                "summary": "Get VM spec from an OVA.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ova", 
                "description": "Get VM spec from an OVA. This spec can be used to create a VM.\n"
            }
        }, 
        "/xig_dns_config": {
            "get": {
                "x-internal": true, 
                "description": "PC's DNS configuration for Xi Intent Gateway.\n", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/xig_dns_config_response"
                        }
                    }
                }, 
                "summary": "Get PC's DNS Config for Xi Intent Gateway."
            }
        }, 
        "/report_instances/list": {
            "post": {
                "description": "Get the list of all the generated report instances.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/report_instance_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "summary": "Get the list of all the Generated report instances.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "report_instance", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/report_instance_status"
                        }
                    }, 
                    "200": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/report_instance_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/underlay_subnets/list": {
            "post": {
                "description": "Retrieves all underlay subnets", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/underlay_subnet_list_metadata"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "underlay_subnet"
                ], 
                "summary": "Retrieves all underlay subnets", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "underlay_subnet", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/underlay_subnet_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/underlay_subnet_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/prism_central": {
            "get": {
                "description": "This operation gets a existing Prism Central.", 
                "tags": [
                    "prism_central"
                ], 
                "summary": "Get a existing Prism Central", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "prism_central", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error.", 
                        "schema": {
                            "$ref": "#/definitions/prism_central_status"
                        }
                    }, 
                    "200": {
                        "description": "Request succeeded.", 
                        "schema": {
                            "$ref": "#/definitions/prism_central"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID Provided.", 
                        "schema": {
                            "$ref": "#/definitions/prism_central_status"
                        }
                    }
                }
            }
        }, 
        "/virtual_networks/routing_policies/{uuid}/reset_counters": {
            "post": {
                "description": "This operation clears the counter values for a particular routing policy.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "routing_policies"
                ], 
                "summary": "Clear routing policy counters.", 
                "x-ntnx-operations": [
                    "clear_counters"
                ], 
                "x-ntnx-kind": "routing_policy", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }
                }
            }
        }, 
        "/reports/download/{type}/{uuid}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "format": "binary"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided"
                    }
                }, 
                "parameters": [
                    {
                        "description": "Type of resource to be downloaded. Supported types are.\n  - report_instance\n  - report_instance_pdf\n  - report_instance_csv\n  - logo\n", 
                        "pattern": "(\\breport_instance\\b|\\breport_instance_pdf\\b|\\breport_instance_csv\\b|\\blogo\\b)", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "type"
                    }, 
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "produces": [
                    "application/pdf", 
                    "application/zip", 
                    "image/png", 
                    "image/jpeg"
                ], 
                "summary": "Download a resource.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "report_instance", 
                "description": "Download a resource."
            }
        }, 
        "/directory_services/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/directory_service_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "directory_services"
                ], 
                "summary": "Get a list of existing directory service configurations", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "directory_service", 
                "description": "This operation gets a list of directory service configurations, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/images/placement_policies/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_placement_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/image_placement_policy_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/image_placement_policy_intent_input"
                        }, 
                        "required": true, 
                        "description": "Image placement policy to be updated", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "image_placement_policies"
                ], 
                "summary": "Update a existing image_placement_policy", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "image_placement_policy", 
                "description": "This operation submits a request to update a existing image_placement_policy based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_placement_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/image_placement_policy_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "image_placement_policies"
                ], 
                "summary": "Delete a existing image_placement_policy", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "image_placement_policy", 
                "description": "This operation submits a request to delete a existing image_placement_policy."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_placement_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/image_placement_policy_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "image_placement_policies"
                ], 
                "summary": "Get a existing image_placement_policy", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "image_placement_policy", 
                "description": "This operation gets a existing image_placement_policy."
            }
        }, 
        "/remote_syslog_servers/cluster_rsyslog_servers": {
            "get": {
                "description": "Remote Syslog servers configured on all PEs registered to PC.", 
                "tags": [
                    "remote_syslog_servers"
                ], 
                "summary": "Remote Syslog servers configured on all PEs registered to PC.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "remote_syslog_server", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cluster_syslog_server_list"
                        }
                    }
                }
            }
        }, 
        "/direct_connects/virtual_interfaces/list": {
            "post": {
                "description": "This operation gets a list of direct_connect_virtual_interfaces, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/direct_connect_virtual_interface_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "direct_connect_virtual_interfaces"
                ], 
                "summary": "Get a list of existing direct_connect_virtual_interfaces", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "direct_connect_virtual_interface", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_virtual_interface_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_virtual_interface_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/marketplace_items/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing marketplace item based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "marketplace_item"
                ], 
                "summary": "Update a existing marketplace item", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "marketplace_item", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing marketplace item.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "marketplace_item"
                ], 
                "summary": "Delete a existing marketplace item", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "marketplace_item", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing marketplace item.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "marketplace_item"
                ], 
                "summary": "Get a existing marketplace item", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "marketplace_item", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_status"
                        }
                    }
                }
            }
        }, 
        "/remote_connections": {
            "post": {
                "description": "Creates a remote connection", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_connection_intent_input"
                        }, 
                        "required": true, 
                        "description": "Remote connection details", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_connections"
                ], 
                "summary": "Creates a remote connection", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "remote_connection", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_intent_response"
                        }
                    }
                }
            }
        }, 
        "/ipfix_exporters/{uuid}": {
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ipfix_exporter_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/ipfix_exporter_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ipfix_exporters"
                ], 
                "summary": "Delete a existing IPFix Exporter", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "ipfix_exporter", 
                "x-internal": true, 
                "description": "This operation submits a request to delete a existing IPFix Exporter."
            }
        }, 
        "/entity_sync_rules/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing entity_sync_rule based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "entity_sync_rules"
                ], 
                "summary": "Update a existing entity_sync_rule", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "entity_sync_rule", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing entity_sync_rule.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "entity_sync_rules"
                ], 
                "summary": "Delete a existing entity_sync_rule", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "entity_sync_rule", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted"
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing entity_sync_rule.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "entity_sync_rules"
                ], 
                "summary": "Get a existing entity_sync_rule", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "entity_sync_rule", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_intent_response"
                        }
                    }
                }
            }
        }, 
        "/oauth/token": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/provider_oauth_token"
                        }
                    }, 
                    "401": {
                        "description": "Authentication Failure", 
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Must be authorization_code or refresh_token", 
                        "name": "grant_type", 
                        "in": "formData"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Your client ID", 
                        "name": "client_id", 
                        "in": "formData"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Your client secret", 
                        "name": "client_secret", 
                        "in": "formData"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "authorization_code received in redirect_uri\nmust for grant_type = authorization_code\n", 
                        "name": "code", 
                        "in": "formData"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "refresh_token received with previous token\nmust for grant_type = refresh_token\n", 
                        "name": "refresh_token", 
                        "in": "formData"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "state parameter to prevent cross site origin attacks\nuse only if passed in getting authorization\n", 
                        "name": "state", 
                        "in": "formData"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "description": "redirect uri used to get authorization\nmust for grant_type = authorization_code\n", 
                        "name": "redirect_uri", 
                        "in": "formData"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "summary": "This callback is used to get token from Oauth2 provider", 
                "x-internal": true, 
                "consumes": [
                    "application/x-www-form-urlencoded"
                ], 
                "description": "Returns an access token"
            }
        }, 
        "/action_rules/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing action_rule based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/action_rule_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_rules"
                ], 
                "summary": "Update a existing action_rule", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "action_rule", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal error", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Succeeded", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing action_rule.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "action_rules"
                ], 
                "summary": "Delete a existing action_rule", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "action_rule", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "internal error", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_status"
                        }
                    }, 
                    "202": {
                        "description": "Request succeeded"
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing action_rule.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "action_rules"
                ], 
                "summary": "Get a existing action_rule", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "action_rule", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_status"
                        }
                    }
                }
            }
        }, 
        "/vm_host_affinity_policies/{uuid}/vms_list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_host_affinity_policy_vms_list_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_host_affinity_policy_vms_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }, 
                    {
                        "x-ntnx-enum": [
                            "PENDING", 
                            "COMPLIANT", 
                            "NONCOMPLIANT"
                        ], 
                        "type": "string", 
                        "description": "Query filter to retrieve VMs based on compliance status. Valid status include - PENDING, COMPLIANT, NONCOMPLIANT.\n", 
                        "name": "status", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "vm_host_affinity_policies"
                ], 
                "summary": "Information about the VMs which are part of VM Host Affinity Policy", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vm_host_affinity_policy", 
                "description": "List of all the VMs which are part of input VM Host Affinity Policy and their compliance information.\n"
            }
        }, 
        "/aws/vms/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/aws_vm_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_vm_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/aws_vm_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/aws_vm_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "aws/vms"
                ], 
                "summary": "Update an AWS VM.", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "aws_vm", 
                "x-internal": true, 
                "description": "Given an intenful spec and VM uuid, update an AWS VM."
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/aws_vm_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_vm_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/aws_vm_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "aws/vms"
                ], 
                "summary": "Delete an AWS VM.", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "aws_vm", 
                "x-internal": true, 
                "description": "Delete an AWS VM given its uuid."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/aws_vm_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_vm_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/aws_vm_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "aws/vms"
                ], 
                "summary": "Get an AWS VM.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "aws_vm", 
                "x-internal": true, 
                "description": "Given a UUID, returns an AWS VM definition."
            }
        }, 
        "/vpcs/{uuid}/routing_policies/reset_counters": {
            "post": {
                "description": "This operation clears the counter values for all routing policies in the VPC.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "routing_policies"
                ], 
                "summary": "Clear all routing policy counters.", 
                "x-ntnx-operations": [
                    "clear_counters"
                ], 
                "x-ntnx-kind": "routing_policy", 
                "x-internal": false, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }
                }
            }
        }, 
        "/services/flow/security_planning/cluster_capability": {
            "get": {
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/security_planning_cluster_capability_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }, 
                "tags": [
                    "services"
                ], 
                "description": "Cluster feature capability status.", 
                "summary": "Cluster feature status."
            }
        }, 
        "/ipfix_exporters": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ipfix_exporter_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/ipfix_exporter_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ipfix_exporter_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ipfix_exporters"
                ], 
                "summary": "Create a new IPFix Exporter", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "ipfix_exporter", 
                "x-internal": true, 
                "description": "This operation submits a request to create a new IPFix Exporter based on the input parameters.\n"
            }
        }, 
        "/vpn_gateways": {
            "post": {
                "description": "This operation submits a request to create a new vpn_gateway based on the input parameters.\nA vpn_gateway represents the virtual\n              appliance that can peer with a remote gateway instance to\n              provide VPN functionality.\n",
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vpn_gateway_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vpn_gateway"
                ], 
                "summary": "Create a new vpn_gateway", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "vpn_gateway", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpn_gateway_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vpn_gateway_intent_response"
                        }
                    }
                }
            }
        }, 
        "/roles": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/role_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/role_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/role_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "roles"
                ], 
                "summary": "Create a role.", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "role", 
                "description": "\"A role is a collection of permissions defined for one or more kinds.\nA kind represents the type of an entity (such as VM). Roles are\ndefined by users who have permission to create roles and assign roles\nto projects. All users in a project inherit the role.\"\n"
            }
        }, 
        "/datacenters/list": {
            "post": {
                "description": "Retrieves all datacenters", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/datacenter_list_metadata"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "datacenter"
                ], 
                "summary": "Retrieves all datacenters", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "datacenter", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/datacenter_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/datacenter_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/action_types/list": {
            "post": {
                "description": "This operation gets a list of action_type, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/action_type_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_types"
                ], 
                "summary": "Get a list of existing action_type", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "action_type", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_type_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/action_type_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/vm_recovery_points/{uuid}/validate_restore": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_validate_restore_output"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "summary": "Validates the feasibility of vm restoration from the\nvm recovery point.\n", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-internal": true, 
                "description": "Validates the feasibility of vm restoration from the\nvm recovery point, if not feasible return the reason behind it.\n"
            }
        }, 
        "/mh_vms/{uuid}": {
            "put": {
                "description": "This operation submits a request to update an existing VM based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/mh_vm_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "mh_vms"
                ], 
                "summary": "Update an existing VM", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "mh_vm", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets an existing VM.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "mh_vms"
                ], 
                "summary": "Get an existing VM", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "mh_vm", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_status"
                        }
                    }
                }
            }
        }, 
        "/search/favorites/{uuid}": {
            "delete": {
                "description": "Delete a favorite.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "favorites"
                ], 
                "summary": "Delete a favorite.", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }
        }, 
        "/audits/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/audit_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/audit_list_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/audit_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "audits"
                ], 
                "summary": "Get a list of existing audit", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "audit", 
                "description": "This operation gets a list of audit, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/access_control_policies/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "access_control_policies"
                ], 
                "summary": "Get a list of existing Access Control Policies", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "access_control_policy", 
                "description": "This operation gets a list of Access Control Policies, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/mh_vms/{uuid}/snapshot": {
            "post": {
                "description": "Submits a request to create a task handling the snapshot operation on the VM, returns a task reference. This creates a point in time recovery point.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/mh_vm_snapshot_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "mh_vms"
                ], 
                "summary": "Create a VM recovery point.", 
                "x-ntnx-operations": [
                    "snapshot"
                ], 
                "x-ntnx-kind": "mh_vm", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/protection_rules/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/protection_rule_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/protection_rule_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/protection_rule_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "protection_rules"
                ], 
                "summary": "Modify protection rule", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "protection_rule", 
                "description": "Modify protection rule"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/protection_rule_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/protection_rule_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/protection_rule_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "protection_rules"
                ], 
                "summary": "Delete a protection rule", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "protection_rule", 
                "description": "Delete a protection rule"
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/protection_rule_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/protection_rule_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "protection_rules"
                ], 
                "summary": "Get details for a protection rule", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "protection_rule", 
                "description": "Get details for a protection rule"
            }
        }, 
        "/vpn_connections/{uuid}/vendor_config": {
            "get": {
                "description": "Get list of vendor devices for which configuration steps can be downloaded.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vpn_connection"
                ], 
                "summary": "Vendor devices for which configuration steps can be downloaded.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vpn_connection", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vendor_config_list_response"
                        }
                    }
                }
            }
        }, 
        "/virtual_networks/list": {
            "post": {
                "description": "This operation gets a list of virtual networks, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/virtual_network_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "virtual_network"
                ], 
                "summary": "Get a list of existing virtual networks", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "virtual_network", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/virtual_network_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/virtual_network_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/access_control_policies/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "access_control_policies"
                ], 
                "summary": "Update a existing Access Control Policy", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "access_control_policy", 
                "description": "This operation submits a request to update a existing Access Control Policy based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "access_control_policies"
                ], 
                "summary": "Delete a existing Access Control Policy", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "access_control_policy", 
                "description": "Delete an existing Access Control Policy. Warning - deleting an Access Control Policy will automatically detach the associated users and user-groups, thereby revoking the access they were granted because of this Access Control Policy.\n"
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "access_control_policies"
                ], 
                "summary": "Get a existing Access Control Policy", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "access_control_policy", 
                "description": "This operation gets a existing Access Control Policy."
            }
        }, 
        "/tasks/{uuid}": {
            "get": {
                "description": "This operation gets a existing Task.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "tasks"
                ], 
                "summary": "Get a existing Task", 
                "x-ntnx-kind": "task", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/task_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/task"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/task_status"
                        }
                    }
                }
            }
        }, 
        "/services/microseg": {
            "post": {
                "description": "Manage Microsegmentation.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/microseg_service_config_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "services"
                ], 
                "summary": "Manage Microsegmentation.", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/service_config_status"
                        }
                    }
                }
            }
        }, 
        "/images/placement_policies": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_placement_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/image_placement_policy_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/image_placement_policy_intent_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "image_placement_policies"
                ], 
                "summary": "Create a new image_placement_policy", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "image_placement_policy", 
                "description": "Create a placement policy object by specifiying Image and Cluster categories and placement type. Based on this input the Images matching the category will be placed on the cluster which match the cluster category.\n"
            }
        }, 
        "/images/{uuid}/file": {
            "put": {
                "description": "Upload the binary bits of an image based on the UUID specified. Note that the image must be created first before an upload can be done. Also, once the image has been uploaded the image cannot be changed.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "format": "binary"
                        }, 
                        "required": true, 
                        "name": "image", 
                        "in": "body"
                    }, 
                    {
                        "enum": [
                            "SHA_1", 
                            "SHA_256"
                        ], 
                        "type": "string", 
                        "description": "Checksum type (e.g SHA_1, SHA_256).", 
                        "in": "header", 
                        "name": "X-Nutanix-Checksum-Type"
                    }, 
                    {
                        "in": "header", 
                        "type": "string", 
                        "description": "Checksum bytes.", 
                        "name": "X-Nutanix-Checksum-Bytes"
                    }
                ], 
                "tags": [
                    "images"
                ], 
                "summary": "Upload Image Contents", 
                "x-ntnx-operations": [
                    "update", 
                    "create"
                ], 
                "x-ntnx-kind": "image", 
                "consumes": [
                    "application/octet-stream"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }, 
            "get": {
                "description": "Downloads the image based on the UUID specified.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "produces": [
                    "application/octet-stream"
                ], 
                "tags": [
                    "images"
                ], 
                "summary": "Get Image Contents", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "image", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "type": "string", 
                            "format": "binary"
                        }
                    }
                }
            }
        }, 
        "/clusters/{uuid}/certificates/svm_certs/{node_uuid}/{kms_uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "name": "node_uuid", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string"
                    }, 
                    {
                        "name": "kms_uuid", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/certificate"
                        }, 
                        "required": true, 
                        "name": "cert", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Replace the certificate on a service VM", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "x-internal": true, 
                "description": "Replace the certificate on a service VM"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "name": "node_uuid", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string"
                    }, 
                    {
                        "name": "kms_uuid", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Delete the certificate on a service VM", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "x-internal": true, 
                "description": "Delete the certificate on a service VM"
            }
        }, 
        "/storage_policies": {
            "post": {
                "description": "This operation submits a request to create a new storage_policy based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/storage_policy_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "storage_policies"
                ], 
                "summary": "Create a new storage_policy", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "storage_policy", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/storage_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/storage_policy_intent_response"
                        }
                    }
                }
            }
        }, 
        "/security_monitoring/topology": {
            "post": {
                "description": "Topology details for visualisation in Security Monitoring", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/topology_request"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "security_monitoring"
                ], 
                "summary": "Topology details", 
                "x-ntnx-operations": [
                    "view_topology"
                ], 
                "x-ntnx-kind": "security_monitoring", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/topology_response"
                        }
                    }
                }
            }
        }, 
        "/aws/regions/list": {
            "post": {
                "description": "List all the AWS regions. No filters to be mentioned.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/aws_region_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "aws/regions"
                ], 
                "summary": "List all the AWS regions", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "aws_region", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_region_list_intent_response"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }
            }
        }, 
        "/metrics/{api}": {
            "post": {
                "x-internal": true, 
                "description": "Input data is validated by REST layer in nusights DB server,this is a\n passthrough.\n", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "additionalProperties": true
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "additionalProperties": true
                        }
                    }
                }, 
                "parameters": [
                    {
                        "in": "path", 
                        "description": "The API type for nusights Db API server", 
                        "required": true, 
                        "maxLength": 64, 
                        "type": "string", 
                        "name": "api"
                    }, 
                    {
                        "schema": {
                            "additionalProperties": true
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Proxies metrics request to nusights Db API server."
            }
        }, 
        "/recovery_plans/{uuid}/entities": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_entities"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "x-ntnx-enum": [
                            "MIGRATE", 
                            "LIVE_MIGRATE", 
                            "FAILOVER", 
                            "TEST_FAILOVER"
                        ], 
                        "type": "string", 
                        "description": "The entities that will be recovered when an operation is performed on the Recovery Plan. Below is the list of supported action types. MIGRATE - Entities will be recovered from their latest state in the\n  Recovery Availability Zone.\nLIVE_MIGRATE - Entities will be recovered from their latest state\n  in the Recovery Availability Zone without VM down time.\nFAILOVER - Entities will be recovered from a Recovery Point at\n  Recovery Availability Zone.\nTEST_FAILOVER - Entities will be recovered from the latest Recovery\n  Point in the test network.\n", 
                        "name": "action_type", 
                        "in": "query"
                    }, 
                    {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array", 
                        "description": "List of Availability Zone URL and cluster UUIDs. Sample format is \"<az_url>|<cluster_uuid_1>|<cluster_uuid_2>|...\" where cluster_uuids are optional.\n", 
                        "name": "failed_availability_zone_info_list", 
                        "in": "query"
                    }, 
                    {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array", 
                        "description": "List of Availability Zone URL and cluster UUIDs. Sample format is \"<az_url>|<cluster_uuid_1>|<cluster_uuid_2>|...\" where cluster_uuids are optional.\n", 
                        "name": "recovery_availability_zone_info_list", 
                        "in": "query"
                    }, 
                    {
                        "format": "date-time", 
                        "type": "string", 
                        "description": "Time with respect to which entities has to be fetched for Unplanned Failover. This time will be used as reference time with respect to which latest snapshot will have to be restored in case of failover. For example, if failover is required to be done using snapshot created on or before yesterday '2:00' PM, then recovery_reference_time will be set to this time. This would be given in the format %Y-%m-%dT%H:%M:%SZ.\n", 
                        "name": "recovery_reference_time", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "recovery_plans"
                ], 
                "summary": "Get entities associated with the Recovery Plan", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "recovery_plan", 
                "description": "Entities associated with the Recovery Plan. It includes the live entities and the entities for which Recovery Points are present on the local Availability Zones/Public Cloud.\n"
            }
        }, 
        "/groups": {
            "post": {
                "description": "Get entities from entity db.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/groups_get_entities_request"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "groups"
                ], 
                "summary": "Get Entities.", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/groups_get_entities_response"
                        }
                    }
                }
            }
        }, 
        "/streaming_policies": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/streaming_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/streaming_policy_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/streaming_policy_intent_input"
                        }, 
                        "required": true, 
                        "description": "Create Streaming Policy object", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "streaming_policy"
                ], 
                "summary": "Create Streaming Policy", 
                "x-ntnx-kind": "streaming_policy", 
                "x-internal": true, 
                "description": "Create Streaming Policy"
            }
        }, 
        "/idempotence_identifiers/salted": {
            "post": {
                "description": "This operation submits a request to create an new idempotence_identifier based on the input parameters.\nThis internal API generates idempotent UUID5(s)for given name or list of names. These are deterministic UUID5, so use caution as this can result in duplicated uuids across environments.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/identifier_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "idempotence_identifiers"
                ], 
                "summary": "Create an new idempotence_identifier \" (Salted / UUID5)\"", 
                "x-ntnx-kind": "idempotence_identifier", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/identifier_response"
                        }
                    }
                }
            }
        }, 
        "/vms/{uuid}/resume_replication": {
            "post": {
                "description": "API to resume replication for a given VM protected using sync protection policy.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Resume the replication for the VM.", 
                "x-ntnx-operations": [
                    "manage_replication"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/procedural_error_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/procedural_error_response"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/ovas/capabilities": {
            "options": {
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/capability_information"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "tags": [
                    "ovas"
                ], 
                "description": "List of dictionaries containing supported capability names and their descriptions for OVAs.\n", 
                "summary": "Returns metadata for /ovas/capabilities endpoint."
            }, 
            "get": {
                "description": "Get capability information for OVAs.", 
                "parameters": [
                    {
                        "type": "string", 
                        "description": "Name of the capability", 
                        "name": "name", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "ovas"
                ], 
                "summary": "Capability information for OVAs.", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/capability_response"
                        }
                    }
                }
            }
        }, 
        "/images/remote_copy": {
            "post": {
                "description": "Submits a request to create a task handling image remote copy operation, returns a task uuid. In the case where image uuid list is provided as empty, all images on the local PC cluster will be copied to remote PC's cluster.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/image_remote_copy_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "images"
                ], 
                "summary": "Copy AHV images between on-prem and Xi", 
                "x-ntnx-operations": [
                    "remote_copy"
                ], 
                "x-ntnx-kind": "image", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/procedural_error_response"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/vpn_connections/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing vpn_connection based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vpn_connection"
                ], 
                "summary": "Update a existing vpn_connection", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "vpn_connection", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing vpn_connection.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vpn_connection"
                ], 
                "summary": "Delete a existing vpn_connection", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "vpn_connection", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing vpn_connection.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vpn_connection"
                ], 
                "summary": "Get a existing vpn_connection", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vpn_connection", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_status"
                        }
                    }
                }
            }
        }, 
        "/roles/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/role_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/role_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/role_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/role_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "roles"
                ], 
                "summary": "Update a role.", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "role", 
                "description": "Update a role."
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/role_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/role_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/role_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "roles"
                ], 
                "summary": "Delete a role.", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "role", 
                "description": "Delete a role."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/role_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/role_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/role_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "roles"
                ], 
                "summary": "Get a role.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "role", 
                "description": "Get a role."
            }
        }, 
        "/service_groups": {
            "post": {
                "description": "This operation submits a request to create a new service_group based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/service_group"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "service_groups"
                ], 
                "summary": "Create a new service_group", 
                "x-ntnx-kind": "service_group", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/service_group_reference"
                        }
                    }
                }
            }
        }, 
        "/oauth/revoke_token": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }, 
                    "404": {
                        "description": "Token not found", 
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "token", 
                        "in": "query"
                    }, 
                    {
                        "name": "token_type_hint", 
                        "default": "access_token", 
                        "required": false, 
                        "in": "query", 
                        "x-ntnx-enum": [
                            "access_token", 
                            "refresh_token"
                        ], 
                        "type": "string"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "summary": "Revoke a token will cause the token to be removed from system\nAny subsequent authorization calls with the token will fail\n", 
                "x-ntnx-kind": "oauth_token", 
                "x-internal": true, 
                "description": "Revokes an oauth token"
            }
        }, 
        "/identity_providers/redirect_list": {
            "post": {
                "description": "This operation gets a list of identity_provider, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/identity_provider_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "identity_providers"
                ], 
                "summary": "Get a list of existing identity_provider", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "identity_provider", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/identity_provider_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/identity_provider_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/action_trigger_types": {
            "post": {
                "description": "This operation submits a request to create a new action_trigger_type based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/action_trigger_type_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_trigger_types"
                ], 
                "summary": "Create a new action_trigger_type", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "action_trigger_type", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_trigger_type_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/action_trigger_type_intent_response"
                        }
                    }
                }
            }
        }, 
        "/blackouts/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal error", 
                        "schema": {
                            "$ref": "#/definitions/blackout_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Succeeded", 
                        "schema": {
                            "$ref": "#/definitions/blackout_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/blackout_intent_input"
                        }, 
                        "required": true, 
                        "description": "Update blackout", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "blackouts"
                ], 
                "summary": "Update blackout entity", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "blackout", 
                "description": "Update blackout entity"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Failed to delete blackout object", 
                        "schema": {
                            "$ref": "#/definitions/blackout_status"
                        }
                    }, 
                    "202": {
                        "description": "Request succeeded", 
                        "schema": {
                            "$ref": "#/definitions/blackout_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "blackouts"
                ], 
                "summary": "Delete specified blackout object", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "blackout", 
                "description": "Delete specified blackout object"
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Failed to retrieve blackout object", 
                        "schema": {
                            "$ref": "#/definitions/blackout_status"
                        }
                    }, 
                    "202": {
                        "description": "Request succeeded", 
                        "schema": {
                            "$ref": "#/definitions/blackout_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "blackouts"
                ], 
                "summary": "Retrieve specified blackout object", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "blackout", 
                "description": "Retrieve specified blackout object"
            }
        }, 
        "/action_trigger_types/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing action_trigger_type based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/action_trigger_type_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_trigger_types"
                ], 
                "summary": "Update a existing action_trigger_type", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "action_trigger_type", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal error", 
                        "schema": {
                            "$ref": "#/definitions/action_trigger_type_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/action_trigger_type_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Succeeded", 
                        "schema": {
                            "$ref": "#/definitions/action_trigger_type_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing action_trigger_type.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "action_trigger_types"
                ], 
                "summary": "Get a existing action_trigger_type", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "action_trigger_type", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_trigger_type_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/action_trigger_type_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/action_trigger_type_status"
                        }
                    }
                }
            }
        }, 
        "/clusters/multicluster_config/{uuid}": {
            "put": {
                "description": "Update a scheduled and unprocessed multicluster configuration request.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/multicluster_config_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Update a scheduled and unprocessed multicluster configuration request.\n", 
                "x-ntnx-kind": "multicluster_config", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/multicluster_config_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/multicluster_config_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Delete a scheduled and unprocessed multicluster configuration request.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Delete a scheduled and unprocessed multicluster configuration request.\n", 
                "x-ntnx-kind": "multicluster_config", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/multicluster_config_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/multicluster_config_intent_response"
                        }
                    }
                }
            }
        }, 
        "/entity_sync_rules/{uuid}/process": {
            "post": {
                "description": "It will be used whenever user wants to process an entity sync rule\nimmediately, irrespective of sync trigger or schedule. It will override\nentities in case of conflicts.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_process_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "entity_sync_rules"
                ], 
                "summary": "Process an entity sync rule.", 
                "x-ntnx-operations": [
                    "process"
                ], 
                "x-ntnx-kind": "entity_sync_rule", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/action_rule_results": {
            "post": {
                "description": "For testing purpose.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/action_rule_result_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_rule_results"
                ], 
                "summary": "Create a new action_rule_result", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "action_rule_result", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_result_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_result_intent_response"
                        }
                    }
                }
            }
        }, 
        "/volume_groups": {
            "post": {
                "description": "This operation submits a request to create a new volume_group based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_input"
                        }, 
                        "required": true, 
                        "description": "Volume group object.", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "volume_groups"
                ], 
                "summary": "Create a new volume_group", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "volume_group", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_response"
                        }
                    }
                }
            }
        }, 
        "/marketplace_items/render": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_render_output"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_render_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "marketplace_item"
                ], 
                "summary": "Create a Marketplace item from the given input.", 
                "x-ntnx-operations": [
                    "render"
                ], 
                "x-ntnx-kind": "marketplace_item", 
                "x-internal": true, 
                "description": "Helper that translates the given input spec into the equivalent Marketplace item. This is then persisted in the system. NOTE, the result of this operation is the uuid of the created marketplace item.\n"
            }
        }, 
        "/fanout_proxy": {
            "post": {
                "description": "Proxies request to remote cluster, uses remote connection\nto call endpoint on remote cluster.\n", 
                "parameters": [
                    {
                        "type": "string", 
                        "description": "One of the availability zones name of Xi portal.", 
                        "name": "az_name", 
                        "in": "query"
                    }, 
                    {
                        "description": "One of the availability zones uuid of Xi portal.", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "in": "query", 
                        "type": "string", 
                        "name": "az_physical_uuid"
                    }, 
                    {
                        "description": "Cluster uuid of remote PC or PE cluster.", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "in": "query", 
                        "type": "string", 
                        "name": "remote_cluster_uuid"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "HTTP method to call", 
                        "name": "method", 
                        "in": "query"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "URL path to call on remote cluster", 
                        "name": "url_path", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "description": "content type for the call", 
                        "name": "content_type", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "description": "entity kind e.g. vm, network", 
                        "name": "kind", 
                        "in": "query"
                    }, 
                    {
                        "description": "The UUID of the entity.", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "in": "query", 
                        "type": "string", 
                        "name": "entity_uuid"
                    }, 
                    {
                        "description": "The UUID of the tenant.", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "in": "query", 
                        "type": "string", 
                        "name": "tenant_uuid"
                    }, 
                    {
                        "type": "integer", 
                        "description": "Additional timeout in milliseconds for fanout calls.", 
                        "name": "timeout_ms", 
                        "in": "query"
                    }, 
                    {
                        "schema": {
                            "additionalProperties": true
                        }, 
                        "name": "fanout_proxy_body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_connections"
                ], 
                "summary": "Proxies request to remote cluster", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }
        }, 
        "/oauth/authorize": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }, 
                    "302": {
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        }, 
                        "description": "authorization grant is provided in callback url callback url\nis in format {redirect_uri}/?code={grant_code}&state={state}\n"
                    }
                }, 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Your client ID", 
                        "name": "client_id", 
                        "in": "formData"
                    }, 
                    {
                        "type": "string", 
                        "description": "Whitespace-separated list of scopes you application needs", 
                        "name": "scope", 
                        "in": "formData"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Must be 'code'", 
                        "name": "response_type", 
                        "in": "formData"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Must be 'yes' or 'no'", 
                        "name": "confirm", 
                        "in": "formData"
                    }, 
                    {
                        "type": "string", 
                        "description": "This URL is used to provide user authorization if the user accepted\naccess to the application or not\n", 
                        "name": "redirect_uri", 
                        "in": "formData"
                    }, 
                    {
                        "type": "string", 
                        "description": "state parameter to prevent cross site origin attacks", 
                        "name": "state", 
                        "in": "formData"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "summary": "Used to get authorization code from server", 
                "x-internal": true, 
                "consumes": [
                    "application/x-www-form-urlencoded"
                ], 
                "description": "Authorization confirmation post url"
            }
        }, 
        "/vm_host_affinity_policies/{uuid}/re_enforce": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vm_host_affinity_policies"
                ], 
                "summary": "Re-enforce VM Host Affinity Policy for all the applicable VMs", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "vm_host_affinity_policy", 
                "description": "Reapply the policy for all the affected VMs."
            }
        }, 
        "/virtual_networks/{uuid}/routing_policies/reset_counters": {
            "post": {
                "description": "This operation clears the counter values for all routing policies in the virtual network.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "routing_policies"
                ], 
                "summary": "Clear all routing policy counters.", 
                "x-ntnx-operations": [
                    "clear_counters"
                ], 
                "x-ntnx-kind": "routing_policy", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }
                }
            }
        }, 
        "/racks/list": {
            "post": {
                "description": "Retrieves all racks", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/rack_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "rack"
                ], 
                "summary": "Retrieves all racks", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "rack", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rack_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/rack_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/capacity_planning/scenarios": {
            "post": {
                "description": "Create a new scenario in DB.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/whatif_scenario"
                        }, 
                        "required": true, 
                        "description": "scenario body.", 
                        "name": "scenario", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "whatif"
                ], 
                "summary": "Create a scenario", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "whatif", 
                "x-internal": false, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "201": {
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        }, 
                        "description": "Created", 
                        "schema": {
                            "type": "object", 
                            "properties": {
                                "scenario_uuid": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }, 
            "get": {
                "description": "Query all scenarios name and uuid with pagination.", 
                "parameters": [
                    {
                        "default": 0, 
                        "required": false, 
                        "type": "integer", 
                        "name": "offset", 
                        "in": "query"
                    }, 
                    {
                        "default": 50, 
                        "required": false, 
                        "type": "integer", 
                        "name": "limit", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "whatif"
                ], 
                "summary": "Get scenarios name and uuid with pagination", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "whatif", 
                "x-internal": false, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/whatif_scenarios"
                        }
                    }
                }
            }
        }, 
        "/ovas/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ova_list_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ova_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ovas"
                ], 
                "summary": "Get a list of existing OVAs", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ova", 
                "description": "This operation gets a list of OVAs, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/vpcs/{uuid}/route_tables": {
            "put": {
                "description": "This operation submits a request to update a existing vpc_route_table based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vpc_route_table_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vpc"
                ], 
                "summary": "Update a existing vpc_route_table", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "vpc_route_table", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpc_route_table_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vpc_route_table_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vpc_route_table_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing vpc_route_table.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vpc"
                ], 
                "summary": "Get a existing vpc_route_table", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vpc_route_table", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpc_route_table_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vpc_route_table_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vpc_route_table_status"
                        }
                    }
                }
            }
        }, 
        "/address_groups/list": {
            "post": {
                "description": "List the address groups.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/address_group_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "address_groups"
                ], 
                "summary": "Address groups lists", 
                "x-ntnx-kind": "address_group", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/address_group_list_response"
                        }
                    }
                }
            }
        }, 
        "/vm_host_affinity_policies": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_host_affinity_policy_create_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_host_affinity_policies"
                ], 
                "summary": "Create a new VM Host Affinity Policy", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "vm_host_affinity_policy", 
                "description": "This operation submits a request to create a new VM Host Affinity Policy based on the input parameters.\n"
            }
        }, 
        "/billing/summary": {
            "get": {
                "description": "Get usage details for the current tenant grouped by day.", 
                "parameters": [
                    {
                        "format": "date", 
                        "required": true, 
                        "type": "string", 
                        "name": "start_date", 
                        "in": "query"
                    }, 
                    {
                        "format": "date", 
                        "required": true, 
                        "type": "string", 
                        "name": "end_date", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "billing"
                ], 
                "summary": "Get usage details for the current tenant.", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/billing_summary"
                        }
                    }
                }
            }
        }, 
        "/recovery_plans/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "recovery_plans"
                ], 
                "summary": "Update Recovery Plan", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "recovery_plan", 
                "description": "Given a spec and Recovery Plan UUID, update Recovery Plan\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "recovery_plans"
                ], 
                "summary": "Delete Recovery Plan", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "recovery_plan", 
                "description": "Delete a Recovery Plan given its UUID"
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "recovery_plans"
                ], 
                "summary": "Get Recovery Plan", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "recovery_plan", 
                "description": "Given a UUID, returns a Recovery Plan definition"
            }
        }, 
        "/services/disaster_recovery": {
            "post": {
                "description": "Manage Disaster Recovery service.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/disaster_recovery_service_config_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "services"
                ], 
                "summary": "Manage Disaster Recovery service.", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "disaster_recovery", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/service_response"
                        }
                    }
                }
            }
        }, 
        "/portal_services/support_cases/{case_id}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/support_case_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/support_case_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/support_case_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "ID of the support case.", 
                        "in": "path", 
                        "name": "case_id"
                    }
                ], 
                "tags": [
                    "portal_services"
                ], 
                "summary": "Get specified support case.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "support_case", 
                "x-internal": true, 
                "description": "Returns the support case details for a given support case ID."
            }
        }, 
        "/mh_vms": {
            "post": {
                "description": "This operation submits a request to create a new VM based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/mh_vm_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "mh_vms"
                ], 
                "summary": "Create a new VM", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "mh_vm", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_intent_response"
                        }
                    }
                }
            }
        }, 
        "/aws/images/list": {
            "post": {
                "description": "List AWS AMIs . Supported filters are:\n- account_uuid\n- region\n- executable_only\n- public_images\n- image_name\nUse account_uuid to list images on a particular account.\nUse account_uuid and region filters together to list images\nbelonging to a particular region.\nSet executable_only to True in either of the above two cases\nto list only executable images.\nSet public_images to True if AWS community AMIs also\nhave to be listed\nProvide image_name to limit the results to\nthose AMI names containing the provided name\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/aws_image_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "aws/images"
                ], 
                "summary": "List all AWS AMIs.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "aws_image", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/aws_image_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_image_list_intent_response"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/aws_image_status"
                        }
                    }
                }
            }
        }, 
        "/protection_rules/{uuid}/query_entities": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/protection_rule_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/affected_entity_list"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "protection_rules"
                ], 
                "summary": "Get a list of entities affected by a protection rule", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "protection_rule", 
                "description": "Get a list of entities affected by a protection rule based on the\nfilters provided in the protection rule definition.\n"
            }
        }, 
        "/network_devices/list": {
            "post": {
                "description": "Retrieves all network devices", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/network_device_list_metadata"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network_device"
                ], 
                "summary": "Retrieves all network devices", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "network_device", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_device_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/network_device_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/entity_sync_rules": {
            "post": {
                "description": "This operation submits a request to create a new entity_sync_rule based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "entity_sync_rules"
                ], 
                "summary": "Create a new entity_sync_rule", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "entity_sync_rule", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_intent_response"
                        }
                    }
                }
            }
        }, 
        "/virtual_networks/routing_policies": {
            "post": {
                "description": "This operation submits a request to create a new routing_policy based on the input parameters.\nA routing policy that defines traffic behavior.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/routing_policy_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "routing_policies"
                ], 
                "summary": "Create a new routing_policy", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "routing_policy", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_intent_response"
                        }
                    }
                }
            }
        }, 
        "/underlay_subnets": {
            "post": {
                "description": "Create a underlay subnet instance", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/underlay_subnet_intent_input"
                        }, 
                        "required": true, 
                        "description": "Create underlay subnet object", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "underlay_subnet"
                ], 
                "summary": "Create a underlay subnet instance", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "underlay_subnet", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/underlay_subnet_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/underlay_subnet_intent_response"
                        }
                    }
                }
            }
        }, 
        "/billing/unbilled_invoice": {
            "get": {
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/unbilled_invoice"
                        }
                    }
                }, 
                "summary": "Get unbilled usage summary.", 
                "description": "Get sumamry of usages that are not yet invoiced to the user.", 
                "tags": [
                    "billing"
                ]
            }
        }, 
        "/vpcs/list": {
            "post": {
                "description": "This operation gets a list of VPCs, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vpc_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "virtual_network"
                ], 
                "summary": "Get a list of existing VPCs", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "virtual_network", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpc_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vpc_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/availability_zones/sync": {
            "post": {
                "description": "Sync global entities like protection rules, recovery plans to all\nconnected availability zones.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/entity_sync_input"
                        }, 
                        "required": true, 
                        "description": "Request body", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "availability_zones"
                ], 
                "summary": "Sync global entities to all connected availability zones.", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/vms/{uuid}/power_cycle": {
            "post": {
                "description": "Creates a VM power_cycle request task.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_set_power_state_input"
                        }, 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Create a VM power_cycle request.", 
                "x-ntnx-operations": [
                    "update", 
                    "set_power_state"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_set_power_state_response"
                        }
                    }
                }
            }
        }, 
        "/vm_recovery_points/{uuid}": {
            "put": {
                "x-ntnx-permissions": [
                    "vm_recovery_point.update"
                ], 
                "description": "This operation submits a request to update a existing vm recovery point based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "summary": "Update a existing vm recovery point", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "x-ntnx-permissions": [
                    "vm_recovery_point.delete"
                ], 
                "description": "This operation submits a request to delete a existing vm recovery point.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "summary": "Delete a existing vm recovery point", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "x-ntnx-permissions": [
                    "vm_recovery_point.view"
                ], 
                "description": "This operation gets a existing vm recovery point.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "summary": "Get a existing vm recovery point", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }
                }
            }
        }, 
        "/oauth/client/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_list"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/oauth_client_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "summary": "Retrieves all oauth client", 
                "x-ntnx-kind": "oauth_client", 
                "x-internal": true, 
                "description": "Retrieves all oauth clients"
            }
        }, 
        "/vm_recovery_points/restore": {
            "post": {
                "x-ntnx-permissions": [
                    "vm_recovery_point"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_realize_restore_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "summary": "Restore a vm recovery point for the given time point.", 
                "x-ntnx-operations": [
                    "restore"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-internal": true, 
                "description": "Submits a request to create a task handling the restore of a vm recovery point given a timestamp to recover to, returns the task reference. This operation is used to create a vm out of a backend selected vm recovery point that is around the desired time point. Follow the task to get the reference of the created vm.\n"
            }
        }, 
        "/services/flow/security_planning/status": {
            "get": {
                "description": "Service status.", 
                "parameters": [
                    {
                        "type": "boolean", 
                        "description": "Whether or not to include the capabilities of this service in the response. Capabilities for service include if it can be enabled/disabled or not.\n", 
                        "name": "include_capabilities", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "services"
                ], 
                "summary": "Service status.", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/service_enablement_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }
            }
        }, 
        "/ngt_policies": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ngt_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/ngt_policy_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ngt_policy_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ngt_policies"
                ], 
                "summary": "Create a new ngt_policy", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "ngt_policy", 
                "description": "This operation submits a request to create a new ngt_policy based on the input parameters.\n"
            }
        }, 
        "/aws/roles/list": {
            "post": {
                "description": "List all the AWS roles. Supported filters are:\n- account_uuid\n- region\nUse account_uuid filter to list all the roles on the default region of a\nparticular AWS account.\nUse account_uuid and region filter together to list all the roles on a\nparticular region of an aws_account.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/aws_role_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "aws/roles"
                ], 
                "summary": "List all the AWS roles", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "aws_role", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_role_list_intent_response"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }
            }
        }, 
        "/aws/elastic_ips/list": {
            "post": {
                "description": "List all AWS elastic IPs. Supported filters are:\n- account_uuid\n- region\n- free_public_ip_address_only\n- eip_type\nUse account_uuid filter to list all the elastic IPs on the default\nregion of a particular account.\nUse account_uuid and region filters together to list the elastic IPs\non an AWS account in the particular region.\nSet the free_public_ip_address_only filter to True to return only\nfree public IPs in the above two cases.\nSet eip_type filter to either 'standard' or 'vpc' when\nonly_free_public_ips is set to True.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/aws_elastic_ip_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "aws/elastic_ips"
                ], 
                "summary": "List AWS elastic IPs.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "aws_elastic_ip", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/aws_elastic_ip_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_elastic_ip_list_intent_response"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/aws_elastic_ip_status"
                        }
                    }
                }
            }
        }, 
        "/capacity_planning/reports": {
            "post": {
                "description": "Generate scenario summary pdf report and return task uuid.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/report_params"
                        }, 
                        "description": "report request include scenario uuid and locale.", 
                        "name": "report_params", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "whatif"
                ], 
                "summary": "Generate scenario summary pdf report", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "whatif", 
                "x-internal": false, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted.", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/network_devices/{uuid}": {
            "put": {
                "description": "Update a network device", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/network_device_intent_input"
                        }, 
                        "required": true, 
                        "description": "Update network device", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network_device"
                ], 
                "summary": "Update network device", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "network_device", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_device_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/network_device_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Delete specified network device", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "network_device"
                ], 
                "summary": "Delete specified network device", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "network_device", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_device_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/network_device_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Retrieves specified network device", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "network_device"
                ], 
                "summary": "Retrieves specified network device", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "network_device", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_device_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/network_device_intent_response"
                        }
                    }
                }
            }
        }, 
        "/permissions/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/permission_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/permission_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/permission_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "permissions"
                ], 
                "summary": "List the permissions.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "permission", 
                "description": "Get permissions.\n"
            }
        }, 
        "/remote_syslog_modules/list": {
            "post": {
                "description": "This operation gets a list of Remote Syslog modules, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_list_metadata"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_syslog_modules"
                ], 
                "summary": "Get a list of existing Remote Syslog modules", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "remote_syslog_module", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/alerts/action/{action}": {
            "post": {
                "description": "Acknowledge alerts being looked at or be resolved.\n", 
                "parameters": [
                    {
                        "description": "The action type.", 
                        "required": true, 
                        "in": "path", 
                        "x-ntnx-enum": [
                            "ACKNOWLEDGE", 
                            "RESOLVE"
                        ], 
                        "type": "string", 
                        "name": "action"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/alert_action_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "alerts"
                ], 
                "summary": "Perform an action to acknowledge or resolve alerts.\n", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "alert", 
                "x-internal": false, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/alert_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/marketplace_items": {
            "post": {
                "description": "This operation submits a request to create a new marketplace item based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "marketplace_item"
                ], 
                "summary": "Create a new marketplace item", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "marketplace_item", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_intent_response"
                        }
                    }
                }
            }
        }, 
        "/projects/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/project_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/project_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/project_intent_input"
                        }, 
                        "required": true, 
                        "description": "The entity used to create or modify a project.", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "projects"
                ], 
                "summary": "Update a existing Project", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "project", 
                "description": "This operation submits a request to update a existing Project based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/project_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/project_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "projects"
                ], 
                "summary": "Delete a existing Project", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "project", 
                "description": "This operation submits a request to delete a existing Project."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/project_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/project_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "projects"
                ], 
                "summary": "Get a existing Project", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "project", 
                "description": "This operation gets a existing Project."
            }
        }, 
        "/racks": {
            "post": {
                "description": "Create a rack instance", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/rack_intent_input"
                        }, 
                        "required": true, 
                        "description": "Create rack object", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "rack"
                ], 
                "summary": "Create a rack instance", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "rack", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rack_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/rack_intent_response"
                        }
                    }
                }
            }
        }, 
        "/images/placement_policies/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_placement_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/image_placement_policy_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/image_placement_policy_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "image_placement_policies"
                ], 
                "summary": "Get a list of existing image_placement_policies", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "image_placement_policy", 
                "description": "This operation gets a list of image_placement_policies, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/virtual_networks": {
            "post": {
                "description": "This operation submits a request to create a new virtual network based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/virtual_network_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "virtual_network"
                ], 
                "summary": "Create a new virtual network", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "virtual_network", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/virtual_network_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/virtual_network_intent_response"
                        }
                    }
                }
            }
        }, 
        "/clusters/{uuid}/certificates/root": {
            "post": {
                "description": "On PC:\n- The request specifies with an \"INITIATOR\" role: The PC initiates a\n  root certificate exchange with all peer PCs.\n- The request specifies with an \"ACCEPTOR\" role: The PC performs root\n  certficate exchange with the peer PC by saving peer root certificate\n  to this PC, as well as all PEs registered with this PC.\nOn PE:\n- The receiving PE save the peer root certificate.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/root_certificate"
                        }, 
                        "required": true, 
                        "name": "root_cert", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "summary": "Save a PC root certificate on a PC or a PE", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "certificate", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/root_certificate"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "On PC:\n- Delete the root certificate that is associated with the specified\n  cluster UUID from the PC.\n- Delete the specified root certificate from all PEs registered with the\n  PC.\nOn PE:\n- Delete the root certificate that is associated with the specified\n  cluster UUID from the PE.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "summary": "Remove PC root certificates", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "certificate", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }, 
            "get": {
                "description": "On PC:\n- If the UUID refers to this PC, return the root certificate for the PC.\n- If the UUID refers to a peer PC, this request is to verify if the peer\n  root certificate has been stored on this PC, as well as all registered\n  PEs to this PC; if this is verified, it will return the peer root\n  certificate.\nOn PE:\n- The receiving PE returns the root certificate that is associated with\n  the specified cluster UUID.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "summary": "Retrieve PC root certificates", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "certificate", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/certificate"
                        }
                    }
                }
            }
        }, 
        "/vm_host_affinity_policies/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_host_affinity_policy_list_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_host_affinity_policy_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }, 
                    {
                        "default": false, 
                        "type": "boolean", 
                        "description": "Query param to include VMs and Hosts count associated with the Policy. When this param is set to True, returns counts of total VMs, compliant VMs, non compliant VMs and total Hosts associated with every policy.\n", 
                        "name": "include_vms_hosts_count", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "vm_host_affinity_policies"
                ], 
                "summary": "Get a list of existing VM Host Affinity Policies", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vm_host_affinity_policy", 
                "description": "This operation gets a list of VM Host Affinity Policies, allowing for pagination.\n"
            }
        }, 
        "/identity_providers/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/identity_provider_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/identity_provider_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/identity_provider_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "identity_providers"
                ], 
                "summary": "Get a list of existing identity_provider", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "identity_provider", 
                "description": "This operation gets a list of identity_provider, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/network_function_chains/{uuid}": {
            "put": {
                "description": "Given an intenful spec and uuid, update network function chain.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network_function_chains"
                ], 
                "summary": "Update a existing Network Function Chain", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "network_function_chain", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Delete a network function chain given its uuid.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "network_function_chains"
                ], 
                "summary": "Delete a existing Network Function Chain", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "network_function_chain", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Given a UUID, returns a network_function_chain definition.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "network_function_chains"
                ], 
                "summary": "Get a existing Network Function Chain", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "network_function_chain", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_intent_response"
                        }
                    }
                }
            }
        }, 
        "/ssh_user/{uuid}": {
            "put": {
                "description": "Update SSH User entity", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ssh_user_intent_input"
                        }, 
                        "required": true, 
                        "description": "Update SSH User", 
                        "name": "ssh_user_intent", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ssh_user"
                ], 
                "summary": "Update SSH User entity", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "ssh_user", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Unregister specified SSH User", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ssh_user"
                ], 
                "summary": "Unregister specified SSH User", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "ssh_user", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Retrieves specified SSH User", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ssh_user"
                ], 
                "summary": "Retrieves specified SSH User", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ssh_user", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_details"
                        }
                    }
                }
            }
        }, 
        "/disks/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/disk_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/disk_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/disk_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "disks"
                ], 
                "summary": "Get a list of existing Disks", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "disk", 
                "x-internal": true, 
                "description": "This operation gets a list of Disks, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/routing_policies/{uuid}/reset_counters": {
            "post": {
                "description": "This operation clears the counter values for a particular routing policy.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "routing_policies"
                ], 
                "summary": "Clear routing policy counters.", 
                "x-ntnx-operations": [
                    "clear_counters"
                ], 
                "x-ntnx-kind": "routing_policy", 
                "x-internal": false, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }
                }
            }
        }, 
        "/aws/vpcs/list": {
            "post": {
                "description": "List all AWS VPCs. Supported filters are:\n- account_uuid\n- region\nUse account_uuid to list all VPCs on the default region of a\nparticular AWS account.\nUse account_uuid and region filters together to list the\nVPCs in a particular region.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/aws_vpc_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "aws/vpcs"
                ], 
                "summary": "List all AWS VPCs", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "aws_vpc", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/aws_vpc_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_vpc_list_intent_response"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/aws_vpc_status"
                        }
                    }
                }
            }
        }, 
        "/mh_vms/{uuid}/revert": {
            "post": {
                "description": "Submits a request to create a task handling the VM revert to a recovery point operation, returns a task reference.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/mh_vm_revert_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "mh_vms"
                ], 
                "summary": "Revert the VM to the given recovery point.", 
                "x-ntnx-operations": [
                    "revert"
                ], 
                "x-ntnx-kind": "mh_vm", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/ngt_policies/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ngt_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ngt_policy_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ngt_policy_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ngt_policies"
                ], 
                "summary": "Get a list of existing ngt_policies", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ngt_policy", 
                "description": "This operation gets a list of ngt_policies, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/direct_connects/virtual_interfaces": {
            "post": {
                "description": "This operation submits a request to create a new direct_connect_virtual_interface based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/direct_connect_virtual_interface_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "direct_connect_virtual_interfaces"
                ], 
                "summary": "Create a new direct_connect_virtual_interface", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "direct_connect_virtual_interface", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_virtual_interface_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_virtual_interface_intent_response"
                        }
                    }
                }
            }
        }, 
        "/clusters/multicluster_config/{uuid}/resume": {
            "post": {
                "description": "Resume a paused multicluster configuration request.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Resume a paused multicluster configuration request.", 
                "x-ntnx-kind": "multicluster_config", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }
        }, 
        "/vms/{uuid}/pause_replication": {
            "post": {
                "description": "API to pause replication for a given VM protected using sync protection policy.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Pause the replication for the VM.", 
                "x-ntnx-operations": [
                    "manage_replication"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/procedural_error_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/procedural_error_response"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/cloud_tenants/{uuid}": {
            "put": {
                "description": "Update cloud_tenant details, eg :for Suspending cloud_tenant, cloud_tenant status can be updated to \"SUSPENDED\"", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/cloud_tenant_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "cloud_tenant"
                ], 
                "summary": "Update cloud_tenant details", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "cloud_tenant", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_tenant_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_tenant_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Deletes the cloud_tenant specific entities from PC eg; vms, categories", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "cloud_tenant"
                ], 
                "summary": "Delete cloud_tenant", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "cloud_tenant", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_tenant_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_tenant_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Returns details about specific cloud_tenant.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "cloud_tenant"
                ], 
                "summary": "Get cloud_tenant details", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "cloud_tenant", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_tenant_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_tenant_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/cloud_tenant_status"
                        }
                    }
                }
            }
        }, 
        "/vms/list": {
            "post": {
                "description": "This operation gets a list of VMs, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Get a list of existing VMs", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/tasks/poll": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/task_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/task_poll_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/task_poll_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "tasks"
                ], 
                "summary": "Poll for completion of tasks", 
                "x-ntnx-kind": "task", 
                "x-internal": true, 
                "description": "Poll for completion of tasks"
            }
        }, 
        "/alerts/{uuid}": {
            "get": {
                "description": "This operation gets a existing alert.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "alerts"
                ], 
                "summary": "Get a existing alert", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "alert", 
                "x-internal": false, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/alert_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/alert_intent_response"
                        }
                    }
                }
            }
        }, 
        "/directory_services/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/directory_service_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "directory_services"
                ], 
                "summary": "Update a existing directory service configuration", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "directory_service", 
                "description": "This operation submits a request to update a existing directory service configuration based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "directory_services"
                ], 
                "summary": "Delete a existing directory service configuration", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "directory_service", 
                "description": "This operation submits a request to delete a existing directory service configuration."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "directory_services"
                ], 
                "summary": "Get a existing directory service configuration", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "directory_service", 
                "description": "This operation gets a existing directory service configuration."
            }
        }, 
        "/direct_connects/virtual_interfaces/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing direct_connect_virtual_interface based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/direct_connect_virtual_interface_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "direct_connect_virtual_interfaces"
                ], 
                "summary": "Update a existing direct_connect_virtual_interface", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "direct_connect_virtual_interface", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_virtual_interface_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_virtual_interface_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing direct_connect_virtual_interface.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "direct_connect_virtual_interfaces"
                ], 
                "summary": "Delete a existing direct_connect_virtual_interface", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "direct_connect_virtual_interface", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_virtual_interface_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_virtual_interface_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing direct_connect_virtual_interface.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "direct_connect_virtual_interfaces"
                ], 
                "summary": "Get a existing direct_connect_virtual_interface", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "direct_connect_virtual_interface", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_virtual_interface_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_virtual_interface_intent_response"
                        }
                    }
                }
            }
        }, 
        "/user_groups": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_group_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/user_group_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/user_group_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "user_groups"
                ], 
                "summary": "Add a User group.", 
                "x-ntnx-operations": [
                    "add"
                ], 
                "x-ntnx-kind": "user_group", 
                "description": "Add a User group to the system."
            }
        }, 
        "/alerts/notify": {
            "post": {
                "description": "This operation submits a request to create a new alert based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/alert_notification_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "alerts"
                ], 
                "summary": "Create a new alert", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "alert", 
                "x-internal": false, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/alert_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/recovery_plans/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "recovery_plans"
                ], 
                "summary": "List the Recovery Plans", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "recovery_plan", 
                "description": "List the Recovery Plans with associated metadata"
            }
        }, 
        "/vpn_gateways/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing vpn_gateway based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vpn_gateway_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vpn_gateway"
                ], 
                "summary": "Update a existing vpn_gateway", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "vpn_gateway", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpn_gateway_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vpn_gateway_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vpn_gateway_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing vpn_gateway.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vpn_gateway"
                ], 
                "summary": "Delete a existing vpn_gateway", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "vpn_gateway", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpn_gateway_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vpn_gateway_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vpn_gateway_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing vpn_gateway.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vpn_gateway"
                ], 
                "summary": "Get a existing vpn_gateway", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vpn_gateway", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpn_gateway_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vpn_gateway_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vpn_gateway_status"
                        }
                    }
                }
            }
        }, 
        "/clusters/{uuid}/cloud_credentials/{cloud_type}/{cloud_credentials_id}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "$ref": "#/parameters/cloud_type"
                    }, 
                    {
                        "format": "int64", 
                        "required": true, 
                        "type": "integer", 
                        "name": "cloud_credentials_id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Update a existing cloud credentials", 
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ], 
                "x-ntnx-kind": "cloud_credentials", 
                "x-internal": true, 
                "description": "This operation submits a request to update a existing cloud credentials based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "$ref": "#/parameters/cloud_type"
                    }, 
                    {
                        "format": "int64", 
                        "required": true, 
                        "type": "integer", 
                        "name": "cloud_credentials_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Delete a existing cloud credentials", 
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ], 
                "x-ntnx-kind": "cloud_credentials", 
                "x-internal": true, 
                "description": "This operation submits a request to delete a existing cloud credentials."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "$ref": "#/parameters/cloud_type"
                    }, 
                    {
                        "format": "int64", 
                        "required": true, 
                        "type": "integer", 
                        "name": "cloud_credentials_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Get a existing cloud credentials", 
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ], 
                "x-ntnx-kind": "cloud_credentials", 
                "x-internal": true, 
                "description": "This operation gets a existing cloud credentials."
            }
        }, 
        "/remote_syslog_modules/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing Remote Syslog modules list based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_syslog_modules"
                ], 
                "summary": "Update a existing Remote Syslog modules list", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "remote_syslog_module", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing Remote Syslog modules list.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "remote_syslog_modules"
                ], 
                "summary": "Delete a existing Remote Syslog modules list", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "remote_syslog_module", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing Remote Syslog modules list.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "remote_syslog_modules"
                ], 
                "summary": "Get a existing Remote Syslog modules list", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "remote_syslog_module", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_intent_response"
                        }
                    }
                }
            }
        }, 
        "/vpn_connections/list": {
            "post": {
                "description": "This operation gets a list of vpn_connections, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vpn_connection"
                ], 
                "summary": "Get a list of existing vpn_connections", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vpn_connection", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/clusters/entity_replication_target_details": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/placement_detail"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/placement_spec"
                        }, 
                        "required": true, 
                        "description": "Entity spec.", 
                        "name": "spec", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Get the placement information for an entity. This will be used to\nidentify the replication target for an entity snapshot or placement of\nthe entity.\n", 
                "x-ntnx-kind": "cluster", 
                "x-internal": true, 
                "description": "Get entity placement details."
            }
        }, 
        "/floating_ips/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing Floating IP based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/floating_ip_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "floating_ip"
                ], 
                "summary": "Update a existing Floating IP", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "floating_ip", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/floating_ip_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/floating_ip_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/floating_ip_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing Floating IP.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "floating_ip"
                ], 
                "summary": "Delete a existing Floating IP", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "floating_ip", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/floating_ip_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/floating_ip_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/floating_ip_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing Floating IP.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "floating_ip"
                ], 
                "summary": "Get a existing Floating IP", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "floating_ip", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/floating_ip_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/floating_ip_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/floating_ip_status"
                        }
                    }
                }
            }
        }, 
        "/mh_vms/list": {
            "post": {
                "description": "This operation gets a list of VMs, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/mh_vm_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "mh_vms"
                ], 
                "summary": "Get a list of existing VMs", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "mh_vm", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/availability_zones/{uuid}": {
            "put": {
                "description": "Modify availability zone", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/availability_zone_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "availability_zones"
                ], 
                "summary": "Modify availability zone", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "availability_zone", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/availability_zone_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/availability_zone_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/availability_zone_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Delete an availability zone", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "availability_zones"
                ], 
                "summary": "Delete an availability zone", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "availability_zone", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/availability_zone_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/availability_zone_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/availability_zone_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Get details for an availability zones", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "availability_zones"
                ], 
                "summary": "Get details for an availability zones", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "availability_zone", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/availability_zone_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/availability_zone_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/availability_zone_status"
                        }
                    }
                }
            }
        }, 
        "/action_rule_results/list": {
            "post": {
                "description": "This operation gets a list of action_rule_result, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/action_rule_result_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_rule_results"
                ], 
                "summary": "Get a list of existing action_rule_result", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "action_rule_result", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_result_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_result_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/tasks/{uuid}/abort": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/procedural_error_response"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/procedural_error_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "tasks"
                ], 
                "summary": "Issue abort request on the task", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "task", 
                "description": "Issue abort request on the task"
            }
        }, 
        "/oauth/idp_login": {
            "get": {
                "x-internal": true, 
                "responses": {
                    "302": {
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        }, 
                        "description": "Redirect to IDP Login Page"
                    }
                }, 
                "summary": "Oauth2 login to idp", 
                "description": "Oauth2", 
                "tags": [
                    "oauth"
                ]
            }
        }, 
        "/cloud_trusts/{uuid}": {
            "delete": {
                "x-ntnx-permissions": [
                    "cloud_trust.delete"
                ], 
                "description": "Deletes the specified cloud pairing by un-establishing trust with the cloud.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "cloud"
                ], 
                "summary": "Deletes the specified cloud pairing.", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "cloud_trust", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_trust_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/cloud_trust_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "x-ntnx-permissions": [
                    "cloud_trust.view"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_trust_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_trust_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/cloud_trust_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "cloud"
                ], 
                "summary": "Get the details of the specified trusted cloud.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "cloud_trust", 
                "x-internal": true, 
                "description": "Gets the details of the specified trusted cloud."
            }
        }, 
        "/availability_zones": {
            "post": {
                "description": "Create an availability zone", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/availability_zone_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "availability_zones"
                ], 
                "summary": "Create an availability zone", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "availability_zone", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/availability_zone_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/availability_zone_intent_response"
                        }
                    }
                }
            }
        }, 
        "/vms/{uuid}/acpi_shutdown": {
            "post": {
                "description": "Creates a VM acpi_shutdown request task.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_set_power_state_input"
                        }, 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Create a VM acpi_shutdown request.", 
                "x-ntnx-operations": [
                    "update", 
                    "set_power_state"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_set_power_state_response"
                        }
                    }
                }
            }
        }, 
        "/streaming_policies/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/streaming_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/streaming_policy_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/streaming_policy_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "streaming_policy"
                ], 
                "summary": "Retrieves all Streaming Policies", 
                "x-ntnx-kind": "streaming_policy", 
                "x-internal": true, 
                "description": "Retrieves all Streaming Policies"
            }
        }, 
        "/aws/availability_zones/list": {
            "post": {
                "description": "List all the AWS roles. Supported filters are:\n- account_uuid\n- region\nUse account_uuid filter to list all the availability zones on\na particular AWS account.\nUse the account_uuid and region filters together to list all the\navailability zones on a particular region of an AWS account .\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/aws_availability_zone_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "aws/availability_zones"
                ], 
                "summary": "List all the AWS availability zones", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "aws_availability_zone", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_availability_zone_list_intent_response"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }
            }
        }, 
        "/graphql": {
            "post": {
                "description": "Execute graphql query and return the data.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/graphql_query"
                        }, 
                        "required": true, 
                        "description": "Graphql query to execute.", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "graphql"
                ], 
                "summary": "Execute graphql queries.", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Failed to process requests.", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Requests processed successfully.", 
                        "schema": {
                            "$ref": "#/definitions/graphql_response"
                        }
                    }
                }
            }
        }, 
        "/direct_connects/connections/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing direct_connect based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/direct_connect_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "direct_connects"
                ], 
                "summary": "Update a existing direct_connect", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "direct_connect", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing direct_connect.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "direct_connects"
                ], 
                "summary": "Delete a existing direct_connect", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "direct_connect", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing direct_connect.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "direct_connects"
                ], 
                "summary": "Get a existing direct_connect", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "direct_connect", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_intent_response"
                        }
                    }
                }
            }
        }, 
        "/routing_policies/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing routing_policy based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/routing_policy_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "routing_policies"
                ], 
                "summary": "Update a existing routing_policy", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "routing_policy", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing routing_policy.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "routing_policies"
                ], 
                "summary": "Delete a existing routing_policy", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "routing_policy", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing routing_policy.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "routing_policies"
                ], 
                "summary": "Get a existing routing_policy", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "routing_policy", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }
                }
            }
        }, 
        "/cells": {
            "post": {
                "description": "Create a cell instance", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/cell_intent_input"
                        }, 
                        "required": true, 
                        "description": "Create cell object", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "cell"
                ], 
                "summary": "Create a cell instance", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "cell", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cell_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cell_intent_response"
                        }
                    }
                }
            }
        }, 
        "/floating_ips": {
            "post": {
                "description": "This operation submits a request to create a new Floating IP based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/floating_ip_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "floating_ip"
                ], 
                "summary": "Create a new Floating IP", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "floating_ip", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/floating_ip_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/floating_ip_intent_response"
                        }
                    }
                }
            }
        }, 
        "/vms/{uuid}/clone": {
            "post": {
                "description": "Submits a request to create a task handling vm clone operation, returns a task reference. This creates a new vm by cloning the current vm.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_clone_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Clone a vm.", 
                "x-ntnx-operations": [
                    "clone"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/recovery_plan_jobs/{uuid}": {
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "recovery_plan_jobs"
                ], 
                "summary": "Delete Recovery Plan Job", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "recovery_plan_job", 
                "description": "Delete a Recovery Plan Job given its UUID"
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "recovery_plan_jobs"
                ], 
                "summary": "Get Recovery Plan Job", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "recovery_plan_job", 
                "description": "Given a UUID, returns a Recovery Plan Job state"
            }
        }, 
        "/identity_providers": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/identity_provider_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/identity_provider_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/identity_provider_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "identity_providers"
                ], 
                "summary": "Create a new identity_provider", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "identity_provider", 
                "description": "This operation submits a request to create a new identity_provider based on the input parameters.\n"
            }
        }, 
        "/action_trigger_types/{uuid}/display_metadata": {
            "get": {
                "description": "This operation gets action trigger type UI display metadata.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "action_trigger_types"
                ], 
                "summary": "Get action trigger type UI display metadata", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "action_trigger_type", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_trigger_type_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/display_metadata"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/action_trigger_type_status"
                        }
                    }
                }
            }
        }, 
        "/marketplace_items/list": {
            "post": {
                "description": "This operation gets a list of marketplace items, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "marketplace_item"
                ], 
                "summary": "Get a list of existing marketplace items", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "marketplace_item", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/services/{service_name}/status": {
            "get": {
                "description": "Service status.", 
                "parameters": [
                    {
                        "in": "path", 
                        "description": "The service name.", 
                        "required": true, 
                        "maxLength": 64, 
                        "type": "string", 
                        "name": "service_name"
                    }, 
                    {
                        "type": "boolean", 
                        "description": "Whether or not to include the capabilities of this service in the response. Capabilities for service include if it can be enabled/disabled or not.\n", 
                        "name": "include_capabilities", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "services"
                ], 
                "summary": "Service status.", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/service_enablement_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }
            }
        }, 
        "/aws/subnets/{account_uuid}/{region}/{id}": {
            "get": {
                "description": "Get details for a subnet.", 
                "parameters": [
                    {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "type": "string", 
                        "name": "account_uuid", 
                        "in": "path"
                    }, 
                    {
                        "pattern": "^[a-z]{2}-[a-z\\-]*-[1-9]{1}$", 
                        "required": true, 
                        "type": "string", 
                        "name": "region", 
                        "in": "path"
                    }, 
                    {
                        "pattern": "^subnet-[a-f0-9]{1,17}$", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "aws/subnets"
                ], 
                "summary": "Get details for an AWS subnet", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "aws_subnet", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/aws_subnet_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_subnet_intent_resource"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/aws_subnet_status"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/aws_subnet_status"
                        }
                    }
                }
            }
        }, 
        "/action_rules/list": {
            "post": {
                "description": "This operation gets a list of action_rule, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/action_rule_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_rules"
                ], 
                "summary": "Get a list of existing action_rule", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "action_rule", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/entity_sync_rules/list": {
            "post": {
                "description": "This operation gets a list of entity_sync_rules, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "entity_sync_rules"
                ], 
                "summary": "Get a list of existing entity_sync_rules", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "entity_sync_rule", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/vms/capabilities": {
            "options": {
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/capability_information"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "tags": [
                    "vms"
                ], 
                "description": "List of dictionaries containing supported capability names and their descriptions for vms.", 
                "summary": "Returns metadata for /vms/capabilities endpoint."
            }, 
            "get": {
                "description": "Get capability information for VMs.", 
                "parameters": [
                    {
                        "type": "string", 
                        "description": "Name of the capability", 
                        "name": "name", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Capability information for VMs.", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/capability_response"
                        }
                    }
                }
            }
        }, 
        "/subnets/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "subnets"
                ], 
                "summary": "Update a existing subnet", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "subnet", 
                "description": "This operation submits a request to update a existing subnet based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "subnets"
                ], 
                "summary": "Delete a existing subnet", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "subnet", 
                "description": "This operation submits a request to delete a existing subnet."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "subnets"
                ], 
                "summary": "Get a existing subnet", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "subnet", 
                "description": "This operation gets a existing subnet."
            }
        }, 
        "/services/files_manager": {
            "post": {
                "description": "Manage Files Manager service.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/files_manager_service_config_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "services"
                ], 
                "summary": "Manage Files Manager service.", 
                "x-ntnx-operations": [
                    "enable_files_service"
                ], 
                "x-ntnx-kind": "files", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/service_response"
                        }
                    }
                }
            }
        }, 
        "/oauth/idp_callback": {
            "get": {
                "description": "Oauth2 callback from IDP to intent gateway", 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "code", 
                        "in": "query"
                    }, 
                    {
                        "required": false, 
                        "type": "string", 
                        "name": "state", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "summary": "Oauth2 callback from IDP to intent gateway", 
                "x-internal": true, 
                "responses": {
                    "302": {
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        }, 
                        "description": "Redirect to SSP UI."
                    }
                }
            }
        }, 
        "/protection_rules/{uuid}/process": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/protection_rule_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/protection_rule_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "protection_rules"
                ], 
                "summary": "Process a protection rule", 
                "x-ntnx-operations": [
                    "process"
                ], 
                "x-ntnx-kind": "protection_rule", 
                "description": "It will be used whenever user wants to process a protection rule\nimmediately. For example if an entity is protected by a protection\nrule, user can call this API to trigger protection rule processing.\nThis API doesn't wait for the processing to be completed. The API\ntriggers the protection rule processing and returns.\n"
            }
        }, 
        "/capacity_planning/recommendations": {
            "post": {
                "description": "Run scenario recommendation in background and return task uuid.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/recommendation_params"
                        }, 
                        "description": "recommendation request include scenario uuid.", 
                        "name": "recommendation_params", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "whatif"
                ], 
                "summary": "Recommend nodes for scenario.", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "whatif", 
                "x-internal": false, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted.", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/action_types/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing action_type based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/action_type_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_types"
                ], 
                "summary": "Update a existing action_type", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "action_type", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal error", 
                        "schema": {
                            "$ref": "#/definitions/action_type_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/action_type_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Succeeded", 
                        "schema": {
                            "$ref": "#/definitions/action_type_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing action_type.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "action_types"
                ], 
                "summary": "Get a existing action_type", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "action_type", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_type_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/action_type_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/action_type_status"
                        }
                    }
                }
            }
        }, 
        "/vms/{uuid}": {
            "put": {
                "description": "This operation submits a request to update an existing VM based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Update an existing VM", 
                "x-ntnx-operations": [
                    "update", 
                    "update_power_state"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete an existing VM.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Delete an existing VM", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets an existing VM.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Get an existing VM", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }
                }
            }
        }, 
        "/vms/{uuid}/validate_migration": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_validate_migration_output"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_validate_migration_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Validates the feasibility of VM migration to given migration target.\n", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vm", 
                "x-internal": true, 
                "description": "Validates the feasibility of VM migration to given migration target,\nif not feasible returns the reason behind it.\n"
            }
        }, 
        "/images": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/image_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/image_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "images"
                ], 
                "summary": "Create a new image", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "image", 
                "description": "Images are raw ISO, QCOW2, or VMDK files that are uploaded by a user can be attached to a VM. An ISO image is attached as a virtual CD-ROM drive, and QCOW2 and VMDK files are attached as SCSI disks. An image has to be explicitly added to the self-service catalog before users can create VMs from it.\n"
            }
        }, 
        "/network_security_rules": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network_security_rules"
                ], 
                "summary": "Create a new Network security rule", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "network_security_rule", 
                "description": "This operation submits a request to create a new Network security rule based on the input parameters.\n"
            }
        }, 
        "/network_function_chains": {
            "post": {
                "description": "Given an intentful spec, creates a network function chain with associated metadata.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network_function_chains"
                ], 
                "summary": "Create a new Network Function Chain", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "network_function_chain", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_intent_response"
                        }
                    }
                }
            }
        }, 
        "/identity_providers/callback": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/identity_provider_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "required": false, 
                        "type": "string", 
                        "name": "saml_response", 
                        "in": "formData"
                    }
                ], 
                "tags": [
                    "identity_providers"
                ], 
                "summary": "Endpoint which will be called from the identity provider.", 
                "x-ntnx-kind": "identity_provider", 
                "x-internal": true, 
                "description": "Assertion consumer service url to which the SAML assertion is posted.\n"
            }
        }, 
        "/vms/{uuid}/migrate_disks": {
            "post": {
                "description": "API to migrate the VM's selected disks to the specified container\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/migrate_disks_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Migrate disks to a different container", 
                "x-ntnx-operations": [
                    "migrate"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/procedural_error_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/procedural_error_response"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/clusters/{uuid}/cloud_credentials/{cloud_type}": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "$ref": "#/parameters/cloud_type"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Add a cloud credential for accessing cloud sites", 
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ], 
                "x-ntnx-kind": "cloud_credentials", 
                "x-internal": true, 
                "description": "Add a cloud credential for accessing cloud sites"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "$ref": "#/parameters/cloud_type"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Delete all cloud credentials", 
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ], 
                "x-ntnx-kind": "cloud_credentials", 
                "x-internal": true, 
                "description": "Delete all cloud credentials"
            }
        }, 
        "/remote_connections/{uuid}": {
            "put": {
                "description": "Update remote connection", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_connection_intent_input"
                        }, 
                        "description": "Remote connection details", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_connections"
                ], 
                "summary": "Used to update remote connection details", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "remote_connection", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Delete existing remote connection and its information", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "remote_connections"
                ], 
                "summary": "Delete an existing remote connection", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "remote_connection", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Get remote connection", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "remote_connections"
                ], 
                "summary": "Used to fetch remote connection details", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "remote_connection", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }
                }
            }
        }, 
        "/clusters/{uuid}/certificates/svm_certs/{kms_uuid}": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "name": "kms_uuid", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/certificate_spec_upload_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Add one or more certificates to a service VM", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "x-internal": true, 
                "description": "Add one or more certificates to a service VM"
            }
        }, 
        "/ssh_user": {
            "post": {
                "description": "Add SSH User to the entity", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ssh_user_intent_input"
                        }, 
                        "required": true, 
                        "description": "Create SSH User object", 
                        "name": "ssh_user_intent", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ssh_user"
                ], 
                "summary": "Add SSH User to the entity", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "ssh_user", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_intent_response"
                        }
                    }
                }
            }
        }, 
        "/vm_host_affinity_legacy_policies/{uuid}": {
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vm_host_affinity_legacy_policies"
                ], 
                "summary": "Delete a existing VM Host Affinity Legacy Policy", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "vm_host_affinity_legacy_policy", 
                "description": "This operation submits a request to delete a existing VM Host Affinity Legacy Policy."
            }
        }, 
        "/network_devices": {
            "post": {
                "description": "Create a network device instance", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/network_device_intent_input"
                        }, 
                        "required": true, 
                        "description": "Create network device object", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network_device"
                ], 
                "summary": "Create a network device instance", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "network_device", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_device_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/network_device_intent_response"
                        }
                    }
                }
            }
        }, 
        "/underlay_subnets/{uuid}": {
            "put": {
                "description": "Update underlay subnet", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/underlay_subnet_intent_input"
                        }, 
                        "required": true, 
                        "description": "Update underlay subnet", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "underlay_subnet"
                ], 
                "summary": "Update underlay subnet", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "underlay_subnet", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/underlay_subnet_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/underlay_subnet_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Delete specified underlay subnet", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "underlay_subnet"
                ], 
                "summary": "Delete specified underlay subnet", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "underlay_subnet", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/underlay_subnet_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/underlay_subnet_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Retrieves specified underlay subnet", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "underlay_subnet"
                ], 
                "summary": "Retrieves specified underlay subnet", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "underlay_subnet", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/underlay_subnet_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/underlay_subnet_intent_response"
                        }
                    }
                }
            }
        }, 
        "/clusters/{uuid}/ahv_cluster_config/supported_cpu_models": {
            "get": {
                "description": "This operation gets list of supported CPU models for the cluster referred by {uuid}. This operation is supported only for AHV clusters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Get list of supported CPU models for given cluster", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "cluster", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cluster_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cluster_cpu_models_response"
                        }
                    }
                }
            }
        }, 
        "/audits/{uuid}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/audit_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/audit_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "audits"
                ], 
                "summary": "Get a existing audit", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "audit", 
                "description": "This operation gets a existing audit."
            }
        }, 
        "/vm_recovery_points/clone": {
            "post": {
                "description": "Submits a request to create a task handling the clone of a vm recovery point given a timestamp, returns the task reference. This operation is used to replicate a backend selected vm recovery point that is around the desired time point to a target AZ.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_points_realize_clone_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "summary": "Clone a vm recovery point for the given time point.", 
                "x-ntnx-operations": [
                    "clone"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/racks/validate_rack_config": {
            "post": {
                "description": "Check whether given rack configuration in this cluster's context is valid or not. A rack configuration refers to a map of racks to the hosts it contains.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/validate_rack_config_input"
                        }, 
                        "required": true, 
                        "description": "Validate rack configuration", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "rack"
                ], 
                "summary": "Validates Specified Rack Configuration", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "rack", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rack_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/validate_rack_config_output"
                        }
                    }
                }
            }
        }, 
        "/virtual_networks/routing_policies/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing routing_policy based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/routing_policy_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "routing_policies"
                ], 
                "summary": "Update a existing routing_policy", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "routing_policy", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing routing_policy.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "routing_policies"
                ], 
                "summary": "Delete a existing routing_policy", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "routing_policy", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing routing_policy.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "routing_policies"
                ], 
                "summary": "Get a existing routing_policy", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "routing_policy", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }
                }
            }
        }, 
        "/vms/{uuid}/revert": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_revert_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Revert the vm to the given recovery point.", 
                "x-ntnx-operations": [
                    "revert"
                ], 
                "x-ntnx-kind": "vm", 
                "x-internal": true, 
                "description": "Submits a request to create a task handling the vm revert to a recovery point operation, returns a task reference.\n"
            }
        }, 
        "/portal_services/support_cases/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/support_case_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/support_case_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/support_case_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "portal_services"
                ], 
                "summary": "List support cases.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "support_case", 
                "x-internal": true, 
                "description": "List of support cases. Supported filters are - - cluster_reference - serial_number\n"
            }
        }, 
        "/action_types/{uuid}/display_metadata": {
            "get": {
                "description": "This operation gets action type UI display metadata.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "action_types"
                ], 
                "summary": "Get action type UI display metadata", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "action_type", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_type_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/display_metadata"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/action_type_status"
                        }
                    }
                }
            }
        }, 
        "/recovery_plan_jobs/{uuid}/{action}": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "description": "Action to be performed on the Recovery Plan Job. Only Following actions are supported, cleanup - Delete entities recovered in the last Test-Failover\n  operation.\nrerun - Retriggers the Recovery Plan execution from its last\n  state. This action is only supported for Migrate, Failover, and\n  Test-Failover operations.\n", 
                        "required": true, 
                        "in": "path", 
                        "x-ntnx-enum": [
                            "cleanup", 
                            "rerun"
                        ], 
                        "type": "string", 
                        "name": "action"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_action_request"
                        }, 
                        "required": true, 
                        "description": "Request body", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "recovery_plan_jobs"
                ], 
                "summary": "Perform an action on Recovery Plan Job", 
                "x-ntnx-operations": [
                    "create", 
                    "update"
                ], 
                "x-ntnx-kind": "recovery_plan_job", 
                "description": "Perform an action on Recovery Plan Job"
            }
        }, 
        "/protection_rules/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/protection_rule_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/protection_rule_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/protection_rule_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "protection_rules"
                ], 
                "summary": "Get protection rules", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "protection_rule", 
                "description": "Get protection rules"
            }
        }, 
        "/direct_connects/service_providers/list": {
            "post": {
                "description": "This operation gets a list of direct_connects service providers, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/direct_connect_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "direct_connects"
                ], 
                "summary": "Get a list of existing direct_connects service providers", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "direct_connect", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_service_provider_list_response"
                        }
                    }
                }
            }
        }, 
        "/docker_registries": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/docker_registry_intent_input"
                        }, 
                        "required": true, 
                        "description": "Docker registry spec", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "docker_registry"
                ], 
                "summary": "Create a docker registry", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "docker_registry", 
                "x-internal": true, 
                "description": "Create a docker registry"
            }
        }, 
        "/cloud_tenants": {
            "post": {
                "description": "On-boarding script uses this API to register new cloud_tenant in PC. It creates xi_cloud_tenant entity in IDF with cloud_tenant ID.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/cloud_tenant_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "cloud_tenant"
                ], 
                "summary": "Register cloud_tenant to PC.", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "cloud_tenant", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_tenant_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_tenant_intent_response"
                        }
                    }
                }
            }
        }, 
        "/clusters/{uuid}/certificates/pemkey/import": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/pemkey_spec"
                        }, 
                        "required": true, 
                        "name": "spec", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Import a new key", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "x-internal": true, 
                "description": "Import a new key"
            }
        }, 
        "/identity_categorization/category_mappings/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing category_mapping based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/category_mapping_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "identity_categorization"
                ], 
                "summary": "Update a existing category_mapping", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "category_mapping", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/category_mapping_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/category_mapping_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing category_mapping.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "identity_categorization"
                ], 
                "summary": "Delete a existing category_mapping", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "category_mapping", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/category_mapping_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/category_mapping_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing category_mapping.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "identity_categorization"
                ], 
                "summary": "Get a existing category_mapping", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "category_mapping", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/category_mapping_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/category_mapping_intent_response"
                        }
                    }
                }
            }
        }, 
        "/action_rules": {
            "post": {
                "description": "This operation submits a request to create a new action_rule based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/action_rule_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_rules"
                ], 
                "summary": "Create a new action_rule", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "action_rule", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_intent_response"
                        }
                    }
                }
            }
        }, 
        "/permissions/{uuid}": {
            "put": {
                "description": "Update a permission.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/permission_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "permissions"
                ], 
                "summary": "Update a permission.", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "permission", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/permission_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/permission_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/permission_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Delete a permission.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "permissions"
                ], 
                "summary": "Delete a permission.", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "permission", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/permission_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/permission_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/permission_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/permission_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/permission_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/permission_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "permissions"
                ], 
                "summary": "Get a permission.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "permission", 
                "description": "Get a permission."
            }
        }, 
        "/services/xfit": {
            "post": {
                "description": "Manage xfit service, including enabling the service.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/xfit_service_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "services"
                ], 
                "summary": "Manage xfit service.", 
                "x-ntnx-operations": [
                    "enable_xfit_service"
                ], 
                "x-ntnx-kind": "xfit", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/service_config_status"
                        }
                    }
                }
            }
        }, 
        "/ovas/{uuid}/chunks/concatenate": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ovas"
                ], 
                "summary": "Concatenate uploaded file chunks of an OVA", 
                "x-ntnx-operations": [
                    "create", 
                    "update"
                ], 
                "x-ntnx-kind": "ova", 
                "description": "This operation will concatenate file chunks in order of their upload offset to create the resulting OVA file.\n"
            }
        }, 
        "/users/info": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/user_info"
                        }
                    }
                }, 
                "tags": [
                    "users"
                ], 
                "summary": "Retrieves the Access control policies and other user data\nfor logged in user.\n", 
                "x-ntnx-kind": "user", 
                "x-internal": true, 
                "description": "Gets the Access Control Policies attached to a user,\nalongwith other user-specific information.\n"
            }
        }, 
        "/directory_services": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/directory_service_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/directory_service_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "directory_services"
                ], 
                "summary": "Create a new directory service configuration", 
                "x-ntnx-operations": [
                    "add"
                ], 
                "x-ntnx-kind": "directory_service", 
                "description": "This operation submits a request to create a new directory service configuration based on the input parameters.\n"
            }
        }, 
        "/rackable_units/list": {
            "post": {
                "description": "Retrieves all rackable units", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/rackable_unit_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "rackable_unit"
                ], 
                "summary": "Retrieves all rackable units", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "rackable_unit", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rackable_unit_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/rackable_unit_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/service_groups/list": {
            "post": {
                "description": "List the service groups.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/service_group_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "service_groups"
                ], 
                "summary": "List the service groups", 
                "x-ntnx-kind": "service_group", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/service_group_list_response"
                        }
                    }
                }
            }
        }, 
        "/capacity_planning/reports/{task_uuid}": {
            "get": {
                "description": "Get scenario summary pdf report.", 
                "parameters": [
                    {
                        "description": "Task uuid in path.", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "x-example": "0e09cf83-ac68-4f28-af70-6df9a43df4f0", 
                        "in": "path", 
                        "type": "string", 
                        "name": "task_uuid"
                    }
                ], 
                "tags": [
                    "whatif"
                ], 
                "produces": [
                    "application/pdf"
                ], 
                "summary": "Get scenario summary pdf report", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "whatif", 
                "x-internal": false, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "format": "binary"
                        }
                    }
                }
            }
        }, 
        "/marketplace_items/config": {
            "post": {
                "description": "Enable or disable the Nutanix apps in the marketplace", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_config"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "marketplace_item"
                ], 
                "summary": "Enable or disable the Nutanix apps in the marketplace", 
                "x-ntnx-operations": [
                    "config"
                ], 
                "x-ntnx-kind": "marketplace_item", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/marketplace_item_config"
                        }
                    }
                }, 
                "tags": [
                    "marketplace_item"
                ], 
                "summary": "Retrieve configuration for Nutanix apps", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "marketplace_item", 
                "x-internal": true, 
                "description": "Retrieve configuration for whether Nutanix apps have been enabled\nor disabled\n"
            }
        }, 
        "/remote_syslog_servers/list": {
            "post": {
                "description": "This operation gets a list of Remote Syslog servers, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_list_metadata"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_syslog_servers"
                ], 
                "summary": "Get a list of existing Remote Syslog servers", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "remote_syslog_server", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/ovas/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "204": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ova_update_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ovas"
                ], 
                "summary": "Update name of an existing OVA", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "ova", 
                "description": "This operation updates a existing OVA based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ovas"
                ], 
                "summary": "Delete a existing OVA", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "ova", 
                "description": "This operation submits a request to delete a existing OVA."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ova_get_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ovas"
                ], 
                "summary": "Get an existing OVA", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ova", 
                "description": "This operation gets a existing OVA."
            }
        }, 
        "/volume_groups/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing volume_group based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_input"
                        }, 
                        "required": true, 
                        "description": "Volume group object.", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "volume_groups"
                ], 
                "summary": "Update a existing volume_group", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "volume_group", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing volume_group.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "volume_groups"
                ], 
                "summary": "Delete a existing volume_group", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "volume_group", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "volume_groups"
                ], 
                "description": "This operation gets a existing volume_group.", 
                "summary": "Get a existing volume_group", 
                "x-ntnx-ref-keys": [
                    "volume_group_reference"
                ], 
                "x-ntnx-kind": "volume_group", 
                "x-internal": true, 
                "x-ntnx-operations": [
                    "view"
                ]
            }
        }, 
        "/logout": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/logout_response"
                        }
                    }
                }, 
                "tags": [
                    "users"
                ], 
                "summary": "Logs out the current user", 
                "x-ntnx-kind": "user", 
                "x-internal": true, 
                "description": "Logs out the current user."
            }
        }, 
        "/oauth/client/{client_id}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_response"
                        }
                    }, 
                    "404": {
                        "description": "Client identifier does not exists", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "client_id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/oauth_client_input"
                        }, 
                        "required": true, 
                        "description": "Oauth client details", 
                        "name": "oauth_client", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "summary": "Used to update existing client details", 
                "x-ntnx-kind": "oauth_client", 
                "x-internal": true, 
                "description": "Update Oauth client information"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_response"
                        }
                    }, 
                    "404": {
                        "description": "Client identifier does not exists", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "client_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "summary": "Delete an existing Oauth client", 
                "x-ntnx-kind": "oauth_client", 
                "x-internal": true, 
                "description": "Delete existing Oauth client information"
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_response"
                        }
                    }, 
                    "404": {
                        "description": "Client identifier does not exists", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "client_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "summary": "Used to fetch existing oauth client details", 
                "x-ntnx-kind": "oauth_client", 
                "x-internal": true, 
                "description": "Get Oauth client information"
            }
        }, 
        "/blackouts/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Failed to retrieve blackout objects", 
                        "schema": {
                            "$ref": "#/definitions/blackout_status"
                        }
                    }, 
                    "200": {
                        "description": "Retrieve all blackout objects", 
                        "schema": {
                            "$ref": "#/definitions/blackout_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/blackout_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "blackouts"
                ], 
                "summary": "Retrieve all blackout objects", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "blackout", 
                "description": "Retrieve all blackout objects"
            }
        }, 
        "/file_store/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/file_item_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/file_item_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/file_item_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "file_store"
                ], 
                "summary": "Get a list of existing file_items", 
                "x-ntnx-kind": "file_item", 
                "x-internal": true, 
                "description": "This operation gets a list of file_items, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/availability_zones/list": {
            "post": {
                "description": "Get availability zones", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/availability_zone_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "availability_zones"
                ], 
                "summary": "Get availability zones", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "availability_zone", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/availability_zone_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/availability_zone_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/permissions": {
            "post": {
                "description": "\"Permissions define what a user can do with each type. For example,\nan admin can upload images; a DevOps user can create, edit, or delete\na VM; and an operations user can view a VM console.\"\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/permission_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "permissions"
                ], 
                "summary": "Create a permission.", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "permission", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/permission_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/permission_intent_response"
                        }
                    }
                }
            }
        }, 
        "/hosts/list": {
            "post": {
                "description": "This operation gets a list of Hosts, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/host_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "hosts"
                ], 
                "summary": "Get a list of existing Hosts", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "host", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/host_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/host_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/entity_sync_rules/{uuid}/list_entities_to_sync": {
            "get": {
                "description": "Get the list of entities that are affected by this entity sync rule\nwhich needs to be synced to connected Availability Zones.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "default": false, 
                        "type": "boolean", 
                        "description": "Boolean to indicate whether the categories should be included in\nthe response or not.\n", 
                        "name": "include_categories", 
                        "in": "query"
                    }, 
                    {
                        "x-ntnx-enum": [
                            "ENTITY_NAME", 
                            "ENTITY_TYPE", 
                            "SYNC_LOCATION", 
                            "SYNC_STATUS", 
                            "SYNC_OPERATION"
                        ], 
                        "type": "string", 
                        "description": "The attribute to perform sort on.", 
                        "name": "sort_attribute", 
                        "in": "query"
                    }, 
                    {
                        "x-ntnx-enum": [
                            "ASCENDING", 
                            "DESCENDING"
                        ], 
                        "type": "string", 
                        "description": "The sort order in which results are to be returned.", 
                        "name": "sort_order", 
                        "in": "query"
                    }, 
                    {
                        "description": "Offset from start of the entity list.", 
                        "format": "int32", 
                        "default": 0, 
                        "minimum": 0, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "offset"
                    }, 
                    {
                        "description": "The number of records to retrieve relative to the offset.", 
                        "format": "int32", 
                        "default": 20, 
                        "minimum": 1, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "length"
                    }
                ], 
                "tags": [
                    "entity_sync_rules"
                ], 
                "summary": "Get the list of entities which needs to be synced.\n", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "entity_sync_rule", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/list_entities_to_sync_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/entity_sync_rule_status"
                        }
                    }
                }
            }
        }, 
        "/cells/list": {
            "post": {
                "description": "Retrieves all cells", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/cell_list_metadata"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "cell"
                ], 
                "summary": "Retrieves all cells", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "cell", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cell_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cell_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/versions": {
            "get": {
                "x-internal": true, 
                "responses": {
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/versions"
                        }
                    }
                }, 
                "summary": "Get details on the api version", 
                "description": "A version is the major and minor number of the API.", 
                "tags": [
                    "versions"
                ]
            }
        }, 
        "/direct_connects/connections": {
            "post": {
                "description": "This operation submits a request to create a new direct_connect based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/direct_connect_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "direct_connects"
                ], 
                "summary": "Create a new direct_connect", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "direct_connect", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_intent_response"
                        }
                    }
                }
            }
        }, 
        "/clusters/multicluster_config/{cluster_uuid}/migrate_ssp_config": {
            "post": {
                "description": "Migrate SSP config from a Prism Element.", 
                "parameters": [
                    {
                        "description": "The UUID of the entity.", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "cluster_uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ssp_config_input"
                        }, 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Migrate SSP config from a Prism Element.", 
                "x-ntnx-kind": "multicluster_config", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/ssp_migration_status"
                        }
                    }
                }
            }
        }, 
        "/vms/{uuid}/update_ip": {
            "put": {
                "description": "Request a new IP address the currently allocated IP address.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_update_ip_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Request IP addresses for NICs with the given UUIDs.", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/racks/{uuid}": {
            "put": {
                "description": "Update rack", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/rack_intent_input"
                        }, 
                        "required": true, 
                        "description": "Update rack", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "rack"
                ], 
                "summary": "Update rack", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "rack", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rack_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/rack_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Delete specified rack", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "rack"
                ], 
                "summary": "Delete specified rack", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "rack", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rack_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/rack_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Retrieves specified rack", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "rack"
                ], 
                "summary": "Retrieves specified rack", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "rack", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rack_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/rack_intent_response"
                        }
                    }
                }
            }
        }, 
        "/layer2_stretches/related_entities/{uuid}": {
            "get": {
                "description": "This operation gets a existing layer2_stretch related entities.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "layer2_stretch"
                ], 
                "summary": "Get a existing layer2_stretch related entities", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "layer2_stretch", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/layer2_stretch_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/layer2_stretch_related_entities"
                        }
                    }
                }
            }
        }, 
        "/vm_recovery_points/list": {
            "post": {
                "x-ntnx-permissions": [
                    "vm_recovery_point.view"
                ], 
                "description": "This operation gets a list of vm recovery point, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "summary": "Get a list of existing vm recovery point", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/hosts/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/host_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/host_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/host_intent_input"
                        }, 
                        "required": true, 
                        "description": "Intent Spec of Host.", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "hosts"
                ], 
                "summary": "Update a existing Host", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "host", 
                "x-internal": true, 
                "description": "This operation submits a request to update a existing Host based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/host_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/host_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "hosts"
                ], 
                "summary": "Delete a existing Host", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "host", 
                "x-internal": true, 
                "description": "This operation submits a request to delete a existing Host."
            }, 
            "get": {
                "description": "This operation gets a existing Host.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "hosts"
                ], 
                "summary": "Get a existing Host", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "host", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/host_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/host_intent_response"
                        }
                    }
                }
            }
        }, 
        "/alerts/list": {
            "post": {
                "description": "This operation gets a list of alert, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/alert_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "alerts"
                ], 
                "summary": "Get a list of existing alert", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "alert", 
                "x-internal": false, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/alert_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/alert_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/services/flow/security_planning/data_collector/upgrade": {
            "post": {
                "description": "Security Planning Data Collector Upgrade.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/security_planning_data_collector_upgrade_config_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "services"
                ], 
                "summary": "Security Planning Data Collector Upgrade.", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/service_config_status"
                        }
                    }
                }
            }, 
            "get": {
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/security_planning_data_collector_upgrade_status"
                        }
                    }
                }, 
                "tags": [
                    "services"
                ], 
                "description": "Data Collector Upgrade Status.", 
                "summary": "Data Collector Upgrade Status."
            }
        }, 
        "/clusters/synchronous_replication_capable": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cluster_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cluster_synchronous_replication_capable_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/cluster_synchronous_replication_capable_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Get a list of existing clusters", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "cluster", 
                "x-internal": true, 
                "description": "\"API to check if a remote cluster is synchronous replication capable.\"\n"
            }
        }, 
        "/aws/vpcs/{account_uuid}/{region}/{id}": {
            "get": {
                "description": "Get an AWS VPC.", 
                "parameters": [
                    {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "type": "string", 
                        "name": "account_uuid", 
                        "in": "path"
                    }, 
                    {
                        "pattern": "^[a-z]{2}-[a-z\\-]*-[1-9]{1}$", 
                        "required": true, 
                        "type": "string", 
                        "name": "region", 
                        "in": "path"
                    }, 
                    {
                        "pattern": "^vpc-[a-f0-9]{1,17}$", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "aws/vpcs"
                ], 
                "summary": "Get an AWS VPC", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "aws_vpc", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/aws_vpc_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_vpc_intent_resource"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/aws_vpc_status"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/aws_vpc_status"
                        }
                    }
                }
            }
        }, 
        "/routing_policies/list": {
            "post": {
                "description": "This operation gets a list of routing_policies, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/routing_policy_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "routing_policies"
                ], 
                "summary": "Get a list of existing routing_policies", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "routing_policy", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/oauth/adfs_login": {
            "get": {
                "x-internal": true, 
                "responses": {
                    "302": {
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        }, 
                        "description": "Redirect to ADFS Login Page"
                    }
                }, 
                "summary": "ADFS login url for idp", 
                "description": "Oauth2", 
                "tags": [
                    "oauth"
                ]
            }
        }, 
        "/address_groups/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing address_group based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/address_group"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "address_groups"
                ], 
                "summary": "Update a existing address_group", 
                "x-ntnx-kind": "address_group", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/address_group"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing address_group.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "address_groups"
                ], 
                "summary": "Delete a existing address_group", 
                "x-ntnx-kind": "address_group", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing address_group.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "address_groups"
                ], 
                "summary": "Get a existing address_group", 
                "x-ntnx-kind": "address_group", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/address_group_response"
                        }
                    }
                }
            }
        }, 
        "/ovas/{uuid}/disks/{disk_id}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ova_disk_info"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "type": "string", 
                        "name": "uuid", 
                        "in": "path"
                    }, 
                    {
                        "pattern": "^[a-z]{3,5}\\d+\\.\\d+$", 
                        "required": true, 
                        "type": "string", 
                        "name": "disk_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "ovas"
                ], 
                "summary": "Get an existing disk of an OVA", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ova", 
                "description": "This operation gets disk of an existing OVA"
            }
        }, 
        "/tenant_clusters/account/terminate": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Server Error"
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }, 
                "tags": [
                    "tenants"
                ], 
                "summary": "Terminate a tenant account", 
                "x-ntnx-operations": [
                    "terminate"
                ], 
                "x-ntnx-kind": "tenant", 
                "x-internal": true, 
                "description": "Terminate a tenant account by stopping the tenant user vms in the cloud and unpairing from the trusted onprem cloud. This request is supported only on XI Prism Central.\n"
            }
        }, 
        "/migrate": {
            "post": {
                "description": "Migrate a set of VMs or Volume Groups.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/migrate_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "migrate"
                ], 
                "summary": "Migrate a set of VMs or Volume Groups.", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/capacity_planning/recommendations/{task_uuid}": {
            "get": {
                "description": "Get scenario runway and recommendation.", 
                "parameters": [
                    {
                        "description": "Task uuid in path.", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "x-example": "0e09cf83-ac68-4f28-af70-6df9a43df4f0", 
                        "in": "path", 
                        "type": "string", 
                        "name": "task_uuid"
                    }
                ], 
                "tags": [
                    "whatif"
                ], 
                "summary": "Get scenario runway and recommendation", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "whatif", 
                "x-internal": false, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/whatif_scenario"
                        }
                    }
                }
            }
        }, 
        "/remote_connections/list": {
            "post": {
                "description": "Retrieve list of remote connections", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_connection_list_metadata"
                        }, 
                        "required": false, 
                        "description": "A remote connection object", 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_connections"
                ], 
                "summary": "Get list of remote connections", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "remote_connection", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/ovas/{uuid}/chunks": {
            "put": {
                "description": "Upload a file chunk of an OVA based on the UUID specified. Note that the OVA must be created first before an upload can be done.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "format": "binary"
                        }, 
                        "required": true, 
                        "description": "File chunk in binary format.", 
                        "name": "ova", 
                        "in": "body"
                    }, 
                    {
                        "description": "Offset of file chunk in original OVA file.", 
                        "format": "int64", 
                        "required": true, 
                        "in": "header", 
                        "type": "integer", 
                        "name": "X-Nutanix-Upload-Offset"
                    }, 
                    {
                        "description": "Length of file chunk to upload.", 
                        "format": "int64", 
                        "required": true, 
                        "in": "header", 
                        "type": "integer", 
                        "name": "X-Nutanix-Content-Length"
                    }, 
                    {
                        "x-ntnx-enum": [
                            "SHA_1", 
                            "SHA_256"
                        ], 
                        "in": "header", 
                        "type": "string", 
                        "description": "Checksum type (e.g SHA_1, SHA_256).", 
                        "name": "X-Nutanix-Checksum-Type"
                    }, 
                    {
                        "in": "header", 
                        "type": "string", 
                        "description": "Checksum bytes of file chunk.", 
                        "name": "X-Nutanix-Checksum-Bytes"
                    }
                ], 
                "tags": [
                    "ovas"
                ], 
                "summary": "Upload file chunk of an OVA", 
                "x-ntnx-operations": [
                    "create", 
                    "update"
                ], 
                "x-ntnx-kind": "ova", 
                "consumes": [
                    "application/octet-stream"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "204": {
                        "description": "Success"
                    }
                }
            }, 
            "head": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "headers": {
                            "X-Nutanix-Upload-Length": {
                                "type": "integer", 
                                "description": "Length of the OVA file in bytes.", 
                                "format": "int64"
                            }, 
                            "X-Nutanix-Upload-Offset": {
                                "type": "integer", 
                                "description": "Minimum offset in bytes till which file is uploaded.", 
                                "format": "int64"
                            }
                        }, 
                        "description": "Success"
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ovas"
                ], 
                "summary": "Uploaded OVA file info", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ova", 
                "description": "Information of the uploaded OVA file."
            }
        }, 
        "/clusters/list": {
            "post": {
                "description": "This operation gets a list of clusters, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/cluster_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }, 
                    {
                        "in": "header", 
                        "type": "string", 
                        "description": "Forcefully get the latest response. (Values can be True, False)\n", 
                        "name": "Force-Refresh"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Get a list of existing clusters", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "cluster", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cluster_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cluster_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/tenant_clusters/physical_availability_zone": {
            "post": {
                "description": "Configure a Physical Availability zone.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/physical_availability_zone"
                        }, 
                        "required": true, 
                        "description": "Physical Availability Zone Configuration details.", 
                        "name": "physical_availability_zone", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "physical_availability_zone"
                ], 
                "summary": "Configure a Physical Availability zone.", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "physical_availability_zone", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/physical_availability_zone_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/physical_availability_zone_status"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Physical Availability zone configuration.", 
                "tags": [
                    "physical_availability_zone"
                ], 
                "summary": "Physical Availability zone configuration.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "physical_availability_zone", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error.", 
                        "schema": {
                            "$ref": "#/definitions/physical_availability_zone_status"
                        }
                    }, 
                    "200": {
                        "description": "Request succeeded.", 
                        "schema": {
                            "$ref": "#/definitions/physical_availability_zone"
                        }
                    }
                }
            }
        }, 
        "/rackable_units/{uuid}": {
            "put": {
                "description": "Update rackable unit", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/rackable_unit_intent_input"
                        }, 
                        "required": true, 
                        "description": "Update rackable unit", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "rackable_unit"
                ], 
                "summary": "Update rackable unit", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "rackable_unit", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rackable_unit_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/rackable_unit_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Retrieves specified rackable unit", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "rackable_unit"
                ], 
                "summary": "Retrieves specified rackable unit", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "rackable_unit", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/rackable_unit_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/rackable_unit_intent_response"
                        }
                    }
                }
            }
        }, 
        "/events": {
            "post": {
                "x-internal": true, 
                "description": "Input data is validated by REST layer in nusights DB server,this is a\n  passthrough.\n", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "additionalProperties": true
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "additionalProperties": true
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "additionalProperties": true
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "summary": "Proxies events request to nusights Db API server."
            }
        }, 
        "/docker_registries/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/docker_registry_intent_input"
                        }, 
                        "required": true, 
                        "description": "Docker registry spec", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "docker_registry"
                ], 
                "summary": "Update a docker registry", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "docker_registry", 
                "x-internal": true, 
                "description": "Update a docker registry"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "docker_registry"
                ], 
                "summary": "Deletes a Docker registry", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "docker_registry", 
                "x-internal": true, 
                "description": "Deletes a Docker registry"
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Failed to retrieve docker registry", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "docker_registry"
                ], 
                "summary": "Retrieve a Docker registry", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "docker_registry", 
                "x-internal": true, 
                "description": "Retrieve a docker registry"
            }
        }, 
        "/common_report_configs/{uuid}": {
            "put": {
                "description": "This operation updates a common report configuration based on the\nUUID and intentful spec.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/common_report_config_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "summary": "Update common report config.", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "common_report_config", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/common_report_config_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/common_report_config_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/common_report_config_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/common_report_config_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/common_report_config_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "summary": "Delete common report config.", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "common_report_config", 
                "x-internal": true, 
                "description": "This operation submits a request to delete a common report\nconfiguration based on the UUID.\n"
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/common_report_config_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/common_report_config_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/common_report_config_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "summary": "Get common report config information.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "common_report_config", 
                "x-internal": true, 
                "description": "This operation retrieves a common report configuration based on the\nUUID.\n"
            }
        }, 
        "/categories/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/category_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/category_key_list_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/category_list_metadata"
                        }, 
                        "required": false, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "categories"
                ], 
                "summary": "List the category keys.", 
                "x-ntnx-operations": [
                    "view_name"
                ], 
                "x-ntnx-kind": "category", 
                "description": "List the category keys.\n"
            }
        }, 
        "/datacenters": {
            "post": {
                "description": "Create a datacenter instance", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/datacenter_intent_input"
                        }, 
                        "required": true, 
                        "description": "Create datacenter object", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "datacenter"
                ], 
                "summary": "Create a datacenter instance", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "datacenter", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/datacenter_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/datacenter_intent_response"
                        }
                    }
                }
            }
        }, 
        "/images/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/image_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/image_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "images"
                ], 
                "summary": "Get a list of existing images", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "image", 
                "description": "This operation gets a list of images, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/images/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/image_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/image_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "images"
                ], 
                "summary": "Update a existing image", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "image", 
                "description": "This operation submits a request to update a existing image based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/image_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "images"
                ], 
                "summary": "Delete a existing image", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "image", 
                "description": "This operation submits a request to delete a existing image."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/image_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "images"
                ], 
                "summary": "Get a existing image", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "image", 
                "description": "This operation gets a existing image."
            }
        }, 
        "/projects/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/project_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/project_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/project_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "projects"
                ], 
                "summary": "Get a list of existing Projects", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "project", 
                "description": "This operation gets a list of Projects, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/common_report_configs/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/common_report_config_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/common_report_config_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/common_report_config_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "summary": "List the common report configs.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "common_report_config", 
                "x-internal": true, 
                "description": "This operation retrieves a list of all the common report\nconfigurations with associated metadata.\n"
            }
        }, 
        "/recovery_plan_jobs/{uuid}/{status}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_execution_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "description": "Type of the Recovery Plan Job status", 
                        "required": true, 
                        "in": "path", 
                        "x-ntnx-enum": [
                            "execution_status", 
                            "cleanup_status"
                        ], 
                        "type": "string", 
                        "name": "status"
                    }
                ], 
                "tags": [
                    "recovery_plan_jobs"
                ], 
                "summary": "Get the execution status of the Recovery Plan Job", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "recovery_plan_job", 
                "description": "Get the execution status of the Recovery Plan Job"
            }
        }, 
        "/batch": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/batch_response"
                        }
                    }
                }, 
                "summary": "Submit a list of one or more intentful REST APIs to be processed", 
                "description": "Batching allows for instructions for several operations to be sent\nusing a single HTTP request. Depending on the batch parameters, the\nNutanix v3 gateway processes each independent operation sequentially\nor in parallel. Once all operations in the batch have been completed,\na consolidated response is returned and the HTTP connection is closed.\nThe batch API takes an array of logical HTTP requests represented as\nJSON arrays. Maximum size of the array should not exceed 60.\nEach request comprises the following:\n- A method (corresponding to HTTP methods such as GET, PUT, and POST)\n- A relative URL (relative_url)\n- (Optional) A body (for POST and PUT requests).\nThe batch API returns an array of logical HTTP responses represented\nas JSON arrays containing the following:\n- A status code\n- (Optional) A body represented as a JSON-encoded string\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/batch_request"
                        }, 
                        "required": true, 
                        "description": "List of intent APIs", 
                        "name": "intent_list", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "batch"
                ]
            }
        }, 
        "/action_rule_results/{uuid}": {
            "delete": {
                "description": "This operation submits a request to delete a existing action_rule_result.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "action_rule_results"
                ], 
                "summary": "Delete a existing action_rule_result", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "action_rule_result", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "internal error", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_result_status"
                        }
                    }, 
                    "202": {
                        "description": "Request succeeded"
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing action_rule_result.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "action_rule_results"
                ], 
                "summary": "Get a existing action_rule_result", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "action_rule_result", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_result_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_result_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_result_status"
                        }
                    }
                }
            }
        }, 
        "/vms/{uuid}/vm_disk/{vm_disk_uuid}/data": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "type": "object", 
                            "description": "Return object indicating the status of the write.", 
                            "properties": {
                                "bytes_written": {
                                    "type": "integer", 
                                    "description": "Number of bytes written to the identity disk.", 
                                    "format": "int32"
                                }
                            }
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "description": "VM disk device UUID", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "vm_disk_uuid"
                    }, 
                    {
                        "description": "Offset within the disk. Defaults to 0.", 
                        "format": "int32", 
                        "maximum": 16777216, 
                        "minimum": 0, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "offset"
                    }, 
                    {
                        "schema": {
                            "format": "byte"
                        }, 
                        "required": true, 
                        "name": "data", 
                        "in": "body"
                    }
                ], 
                "summary": "Write to a VM disk.", 
                "x-internal": true, 
                "consumes": [
                    "application/octet-stream"
                ], 
                "description": "Write to an identity disk attached to a VM at the provided offset."
            }, 
            "get": {
                "x-internal": true, 
                "description": "Read from an identity disk attached to a VM from the provided offset.", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "type": "string", 
                            "format": "byte"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "description": "VM disk device UUID", 
                        "format": "UUID", 
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "vm_disk_uuid"
                    }, 
                    {
                        "description": "Offset within the disk. Defaults to 0.", 
                        "format": "int32", 
                        "maximum": 16777216, 
                        "minimum": 0, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "offset"
                    }, 
                    {
                        "name": "length", 
                        "format": "int32", 
                        "maximum": 16777216, 
                        "minimum": 0, 
                        "in": "query", 
                        "type": "integer", 
                        "description": "Amount to read from disk. By default this will be the max size (16 MB)."
                    }
                ], 
                "summary": "Read from a VM disk."
            }
        }, 
        "/remote_syslog_modules": {
            "post": {
                "description": "This operation submits a request to create a new Remote Syslog modules list based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_syslog_modules"
                ], 
                "summary": "Create a new Remote Syslog modules list", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "remote_syslog_module", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_module_intent_response"
                        }
                    }
                }
            }
        }, 
        "/vm_recovery_points/{uuid}/clone": {
            "post": {
                "description": "Submits a request to create a task handling vm_recovery_point clone operation, returns a task reference. This replicates the vm_recovery_point to target availability zone.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_points_clone_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "summary": "Clone a vm_recovery_point.", 
                "x-ntnx-operations": [
                    "clone"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/blackouts": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/blackout_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/blackout_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/blackout_intent_input"
                        }, 
                        "required": true, 
                        "description": "Create blackout object", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "blackouts"
                ], 
                "summary": "Create blackout object", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "blackout", 
                "description": "Create a blackout object"
            }
        }, 
        "/clusters/{uuid}/certificates/pemkey": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Generate a 2048 bits cipher length RSA key", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "x-internal": true, 
                "description": "Generate a 2048 bits cipher length RSA key"
            }
        }, 
        "/recovery_plan_jobs": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_intent_input"
                        }, 
                        "required": true, 
                        "description": "Request body", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "recovery_plan_jobs"
                ], 
                "summary": "Create Recovery Plan Job", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "recovery_plan_job", 
                "description": "Create a Recovery Plan Job for a Recovery Plan with associated metadata\n"
            }
        }, 
        "/category/query": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/category_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/category_query_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/category_query_input"
                        }, 
                        "name": "query", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "categories"
                ], 
                "summary": "Get category usage details.", 
                "x-ntnx-operations": [
                    "view_value"
                ], 
                "x-ntnx-kind": "category", 
                "description": "Get list of entities attached to categories or policies in which categories are used as defined by the filter criteria.\n"
            }
        }, 
        "/virtual_networks/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing virtual network based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/virtual_network_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "virtual_network"
                ], 
                "summary": "Update a existing virtual network", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "virtual_network", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/virtual_network_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/virtual_network_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/virtual_network_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing virtual network.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "virtual_network"
                ], 
                "summary": "Delete a existing virtual network", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "virtual_network", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/virtual_network_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/virtual_network_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/virtual_network_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing virtual network.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "virtual_network"
                ], 
                "summary": "Get a existing virtual network", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "virtual_network", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/virtual_network_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/virtual_network_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/virtual_network_status"
                        }
                    }
                }
            }
        }, 
        "/aws/security_groups/list": {
            "post": {
                "description": "List all AWS Security Groups. Supported filters are:\n- account_uuid\n- region\n- vpc_id\n- include_classic_sg\nUse account_uuid to list all security groups on the default\nregion of a particular AWS account.\nUse account_uuid and region filters together to list all\nsecurity groups in a particular region.\nUse account_uuid, region and vpc_id filters together to list all\nsecurity groups in a particular vpc.\nSet include_classic_sg filter to 'True' to also show\nEC2 classic security groups in the above three cases.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/aws_security_group_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "aws/security_groups"
                ], 
                "summary": "List all AWS Security Groups", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "aws_security_group", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/aws_security_group_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_security_group_list_intent_response"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/aws_security_group_status"
                        }
                    }
                }
            }
        }, 
        "/services/nucalm": {
            "post": {
                "description": "Manage NuCalm service.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/nucalm_service_config_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "services"
                ], 
                "summary": "Manage NuCalm service.", 
                "x-ntnx-operations": [
                    "enable"
                ], 
                "x-ntnx-kind": "nucalm", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/service_config_status"
                        }
                    }
                }
            }
        }, 
        "/direct_connects/connections/list": {
            "post": {
                "description": "This operation gets a list of direct_connects, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/direct_connect_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "direct_connects"
                ], 
                "summary": "Get a list of existing direct_connects", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "direct_connect", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/direct_connect_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/storage_policies/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing storage_policy based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/storage_policy_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "storage_policies"
                ], 
                "summary": "Update a existing storage_policy", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "storage_policy", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/storage_policy_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/storage_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/storage_policy_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing storage_policy.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "storage_policies"
                ], 
                "summary": "Delete a existing storage_policy", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "storage_policy", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/storage_policy_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/storage_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/storage_policy_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing storage_policy.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "storage_policies"
                ], 
                "summary": "Get a existing storage_policy", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "storage_policy", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/storage_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/storage_policy_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/storage_policy_status"
                        }
                    }
                }
            }
        }, 
        "/report_configs/list": {
            "post": {
                "description": "List the report configs with associated metadata.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/report_config_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "summary": "List the report configs.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "report_config", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/report_config_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/report_config_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/network_security_rules/import/dry_run": {
            "post": {
                "description": "Generates a report on the impact of importing the policy data", 
                "parameters": [
                    {
                        "schema": {
                            "format": "binary"
                        }, 
                        "required": true, 
                        "name": "import_data", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network_security_rules"
                ], 
                "summary": "Reports on the impact of importing the policy", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "network_security_rule", 
                "consumes": [
                    "application/octet-stream"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_import_response"
                        }
                    }
                }
            }
        }, 
        "/users/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/user_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/user_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "users"
                ], 
                "summary": "Get a list of existing Users", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "user", 
                "description": "This operation gets a list of Users, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/volume_groups/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/volume_group_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/volume_group_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "volume_groups"
                ], 
                "description": "This operation gets a list of volume_groups, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "summary": "Get a list of existing volume_groups", 
                "x-ntnx-ref-keys": [
                    "volume_group_reference", 
                    "volume_group_reference_list"
                ], 
                "x-ntnx-kind": "volume_group", 
                "x-internal": true, 
                "x-ntnx-operations": [
                    "view"
                ]
            }
        }, 
        "/protection_rules": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/protection_rule_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/protection_rule_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/protection_rule_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "protection_rules"
                ], 
                "summary": "Create a protection rule", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "protection_rule", 
                "description": "Create a protection rule"
            }
        }, 
        "/vpn_connections": {
            "post": {
                "description": "This operation submits a request to create a new vpn_connection based on the input parameters.\nA vpn_connection respresents the configuration\n              needed to establish an IPSEC vpn tunnel between the local\n              and remote vpn gateways. The vpn_gateway objects must be\n              created first.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vpn_connection"
                ], 
                "summary": "Create a new vpn_connection", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "vpn_connection", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_intent_response"
                        }
                    }
                }
            }
        }, 
        "/subnets/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/subnet_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/subnet_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "subnets"
                ], 
                "summary": "Get a list of existing subnets", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "subnet", 
                "description": "This operation gets a list of subnets, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/vms/{uuid}/export": {
            "post": {
                "description": "Submits a request to create a task handling OVA create operation, returns a task reference. This will export VM and create an OVA object for it.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_export_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Create an OVA object.", 
                "x-ntnx-operations": [
                    "export"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/cloud_trusts": {
            "post": {
                "x-ntnx-permissions": [
                    "cloud_trust.create"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_trust_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/cloud_trust_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/cloud_trust_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "cloud"
                ], 
                "summary": "Pairs this cloud with the given cloud (Nutanix hosted cloud/ Onprem Cloud).", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "cloud_trust", 
                "x-internal": true, 
                "description": "Performs cloud pairing by establishing a trust with the provided cloud."
            }
        }, 
        "/clusters/{uuid}/certificates/client_auth": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ca_chain_spec"
                        }, 
                        "required": true, 
                        "name": "spec", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Replace the CA chain for client authentication", 
                "x-ntnx-ref-keys": [
                    "client_auth_reference"
                ], 
                "x-ntnx-kind": "client_auth", 
                "x-internal": true, 
                "description": "Replace the CA chain for client authentication"
            }, 
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ca_chain_spec"
                        }, 
                        "required": true, 
                        "name": "spec", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Import CA chain for client authentication", 
                "x-ntnx-ref-keys": [
                    "client_auth_reference"
                ], 
                "x-ntnx-kind": "client_auth", 
                "x-internal": true, 
                "description": "Import CA chain for client authentication"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Remove the CA chain for client authentication", 
                "x-ntnx-ref-keys": [
                    "client_auth_reference"
                ], 
                "x-ntnx-kind": "client_auth", 
                "x-internal": true, 
                "description": "Remove the CA chain for client authentication"
            }
        }, 
        "/aws/security_groups/{account_uuid}/{region}/{id}": {
            "get": {
                "description": "Get an AWS security group", 
                "parameters": [
                    {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "required": true, 
                        "type": "string", 
                        "name": "account_uuid", 
                        "in": "path"
                    }, 
                    {
                        "pattern": "^[a-z]{2}-[a-z\\-]*-[1-9]{1}$", 
                        "required": true, 
                        "type": "string", 
                        "name": "region", 
                        "in": "path"
                    }, 
                    {
                        "pattern": "^sg-[a-f0-9]{1,17}$", 
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "aws/security_groups"
                ], 
                "summary": "Get an AWS security group", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "aws_security_group", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/aws_security_group_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_security_group_intent_resource"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/aws_security_group_status"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/aws_security_group_status"
                        }
                    }
                }
            }
        }, 
        "/mh_vms/{uuid}/validate_migration": {
            "post": {
                "description": "Validates the feasibility of VM migration to given migration target,\nif not feasible returns the reason behind it.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_validate_migration_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "mh_vm"
                ], 
                "summary": "Validates the feasibility of VM migration to given migration target.\n", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "mh_vm", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_validate_migration_output"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/mh_vm_status"
                        }
                    }
                }
            }
        }, 
        "/tenant_clusters/physical_availability_zone/keys": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/physical_availability_zone_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/key_set_response"
                        }
                    }
                }, 
                "tags": [
                    "physical_availability_zone"
                ], 
                "summary": "Get Physical Availability Zone's JWKS", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "physical_availability_zone", 
                "x-internal": true, 
                "description": "JSON Web Key Set (JWKS) that contains public keys. The keys can be used to verify the signatures of tokens issued by the PC, My.Nutanix (IDP), IAM and Okta.\n"
            }
        }, 
        "/layer2_stretches/list": {
            "post": {
                "description": "This operation gets a list of layer2_stretches, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/layer2_stretch_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "layer2_stretch"
                ], 
                "summary": "Get a list of existing layer2_stretches", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "layer2_stretch", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/layer2_stretch_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/layer2_stretch_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/recovery_plans": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_intent_input"
                        }, 
                        "required": true, 
                        "description": "Request body", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "recovery_plans"
                ], 
                "summary": "Create Recovery Plan", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "recovery_plan", 
                "description": "Given a spec creates a Recovery Plan with associated metadata\n"
            }
        }, 
        "/vpn_connections/{uuid}/vendor_config/{name}": {
            "get": {
                "description": "Download the configuration steps for the given vendor device's latest version.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Vendor device name.", 
                        "in": "path", 
                        "name": "name"
                    }
                ], 
                "produces": [
                    "text/plain"
                ], 
                "tags": [
                    "vpn_connection"
                ], 
                "summary": "Download vendor device configuration steps.", 
                "x-ntnx-operations": [
                    "config_download", 
                    "vpn_connection_config_download"
                ], 
                "x-ntnx-kind": "vpn_connection", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpn_connection_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }
        }, 
        "/projects_internal/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing Project based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/project_internal_intent_input"
                        }, 
                        "required": true, 
                        "description": "The entity used to create or modify a project.", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "project"
                ], 
                "summary": "Update a existing Project", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "project", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/project_internal_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing Project.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "project"
                ], 
                "summary": "Get a existing Project", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "project", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/project_internal_intent_response"
                        }
                    }
                }
            }
        }, 
        "/user_groups/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing User Group based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/user_group_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "user_groups"
                ], 
                "summary": "Update a existing User Group", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "user_group", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_group_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/user_group_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/user_group_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_group_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/user_group_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/user_group_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "user_groups"
                ], 
                "summary": "Delete a existing User Group", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "user_group", 
                "description": "This operation submits a request to delete a existing User Group."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_group_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/user_group_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/user_group_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "user_groups"
                ], 
                "summary": "Get a existing User Group", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "user_group", 
                "description": "A user group is a grouping of users either defined locally or in a Directory service.\n"
            }
        }, 
        "/users/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing User based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/user_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "users"
                ], 
                "summary": "Update a existing User", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "user", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/user_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/user_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/user_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/user_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "users"
                ], 
                "summary": "Delete a existing User", 
                "x-ntnx-operations": [
                    "remove"
                ], 
                "x-ntnx-kind": "user", 
                "description": "This operation submits a request to delete a existing User."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/user_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/user_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "users"
                ], 
                "summary": "Get a existing User", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "user", 
                "description": "This operation gets a existing User."
            }
        }, 
        "/services/{service_name}/cluster_capability": {
            "get": {
                "description": "Cluster feature capability status.", 
                "parameters": [
                    {
                        "in": "path", 
                        "description": "The service name.", 
                        "required": true, 
                        "maxLength": 64, 
                        "type": "string", 
                        "name": "service_name"
                    }
                ], 
                "tags": [
                    "services"
                ], 
                "summary": "Cluster feature status.", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cluster_capability_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }
            }
        }, 
        "/services/oss": {
            "post": {
                "description": "Manage Bucket Service Manager service.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/oss_service_config_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "services"
                ], 
                "summary": "Manage Bucket Service Manager service.", 
                "x-ntnx-operations": [
                    "enable_objects_service"
                ], 
                "x-ntnx-kind": "objectstore", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/service_response"
                        }
                    }
                }
            }
        }, 
        "/vpn_gateways/list": {
            "post": {
                "description": "This operation gets a list of vpn_gateways, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vpn_gateway_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vpn_gateway"
                ], 
                "summary": "Get a list of existing vpn_gateways", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vpn_gateway", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpn_gateway_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vpn_gateway_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/roles/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/role_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/role_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/role_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "roles"
                ], 
                "summary": "List the roles.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "role", 
                "description": "Get roles.\n"
            }
        }, 
        "/recovery_points/{uuid}/restore": {
            "post": {
                "description": "Submits a request to create a task handling the restore of a recovery point, returns the task reference. This operation is used to restore an entire composite recovery point or a subset of entities from it. Follow the task to get the reference of the created entities.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/recovery_point_restore_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "recovery_points"
                ], 
                "summary": "Restore a recovery point.", 
                "x-ntnx-kind": "recovery_point", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/procedural_error_response"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/virtual_networks/routing_policies/list": {
            "post": {
                "description": "This operation gets a list of routing_policies, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/routing_policy_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "routing_policies"
                ], 
                "summary": "Get a list of existing routing_policies", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "routing_policy", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/clusters/{uuid}/certificates/csrs/{node_ip}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "node_ip", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Download CSR from a discovered node", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "x-internal": true, 
                "description": "Download Certificate Signing Request from a discovered node"
            }
        }, 
        "/tasks/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/task_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/task_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/task_list_metadata"
                        }, 
                        "required": false, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "tasks"
                ], 
                "summary": "Get a list of existing Tasks", 
                "x-ntnx-kind": "task", 
                "x-internal": true, 
                "description": "This operation gets a list of Tasks, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/user_groups/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_group_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/user_group_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/user_group_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "user_groups"
                ], 
                "summary": "Get a list of existing User Groups", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "user_group", 
                "description": "This operation gets a list of User Groups, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/aws/vms": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/aws_vm_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_vm_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/aws_vm_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "aws/vms"
                ], 
                "summary": "Create an AWS instance(VM)", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "aws_vm", 
                "x-internal": true, 
                "description": "A VM is a logical representation of a computer (CPU, memory, storage, and operating system)\n"
            }
        }, 
        "/ngt/{uuid}": {
            "get": {
                "description": "This operation gets a existing ngt.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ngt"
                ], 
                "summary": "Get a existing ngt", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ngt", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ngt_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ngt_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/ngt_status"
                        }
                    }
                }
            }
        }, 
        "/file_store/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/file_item_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/file_item_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/file_item_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "file_store"
                ], 
                "summary": "Update a existing file_item", 
                "x-ntnx-kind": "file_item", 
                "x-internal": true, 
                "description": "This operation submits a request to update a existing file_item based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/file_item_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/file_item_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "file_store"
                ], 
                "summary": "Delete a existing file_item", 
                "x-ntnx-kind": "file_item", 
                "x-internal": true, 
                "description": "This operation submits a request to delete a existing file_item."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/file_item_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/file_item_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "file_store"
                ], 
                "summary": "Get a existing file_item", 
                "x-ntnx-kind": "file_item", 
                "x-internal": true, 
                "description": "This operation gets a existing file_item."
            }
        }, 
        "/oauth/generate_token": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/oauth_generate_token_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/oauth_generate_token_request"
                        }, 
                        "required": true, 
                        "name": "oauth_generate_token_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "summary": "This is used when the user is already authenticated and would like to\ncreate bearer tokens for distribution\n", 
                "x-ntnx-kind": "oauth_token", 
                "x-internal": true, 
                "description": "Generates an oauth token"
            }
        }, 
        "/clusters/multicluster_config/{uuid}/cancel": {
            "post": {
                "description": "Cancel a multicluster configuration request by cancelling all queued\ncluster configuration tasks.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Cancel a multicluster configuration request from Prism Central.", 
                "x-ntnx-kind": "multicluster_config", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }
        }, 
        "/directory_services_internal": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/internal_directory_service_response"
                        }
                    }
                }, 
                "tags": [
                    "directory_services_internal"
                ], 
                "summary": "Directory service internal API", 
                "x-ntnx-operations": [
                    "view_internal"
                ], 
                "x-ntnx-kind": "directory_service", 
                "x-internal": true, 
                "description": "Directory service internal API"
            }
        }, 
        "/users/me": {
            "get": {
                "description": "Displays the user currently logged in.", 
                "summary": "Retrieves currently logged in user.", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/user_intent_response"
                        }
                    }
                }, 
                "tags": [
                    "users"
                ], 
                "x-ntnx-kind": "user"
            }
        }, 
        "/idempotence_identifiers": {
            "post": {
                "description": "This operation submits a request to create an new idempotence_identifier based on the input parameters.\nThe idempotence_identifiers API allows users to generate an idempotent UUID4 with a user-provided identifier. The idempotent UUID(s) can later be passed in POST requests. By default,  Nutanix v3 APIs do not allow for operations to be created with user-provided UUIDs; each POST request received by the API gateway results in a UUID4 being automatically generated and returned in the response JSON.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/idempotence_identifiers_input"
                        }, 
                        "required": false, 
                        "description": "An idempotence identifier object.", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "idempotence_identifiers"
                ], 
                "summary": "Create an new idempotence_identifier \" (UUID4)\"", 
                "x-ntnx-kind": "idempotence_identifier", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/idempotence_identifiers_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/idempotence_identifiers_response"
                        }
                    }
                }
            }
        }, 
        "/vms/{uuid}/acpi_reboot": {
            "post": {
                "description": "Creates a VM acpi_reboot request task.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_set_power_state_input"
                        }, 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Create a VM acpi_reboot request.", 
                "x-ntnx-operations": [
                    "update", 
                    "set_power_state"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_set_power_state_response"
                        }
                    }
                }
            }
        }, 
        "/vms/{uuid}/guest_shutdown": {
            "post": {
                "description": "Creates a VM guest_shutdown request task.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_set_power_state_input"
                        }, 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Create a VM guest_shutdown request.", 
                "x-ntnx-operations": [
                    "update", 
                    "set_power_state"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_set_power_state_response"
                        }
                    }
                }
            }
        }, 
        "/images/migrate": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/procedural_error_response"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/image_migrate_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "images"
                ], 
                "summary": "Migrate images from PE cluster to PC", 
                "x-ntnx-operations": [
                    "migrate"
                ], 
                "x-ntnx-kind": "image", 
                "description": "Submits a request to create a task handling image migration operation, returns a task reference. This moves ownership of images from the PE cluster to PC. Image uuids can be obtained by querying the PE instance to list images on the PE. In the case where image uuid list is provided as empty, all images on the cluster that are not currently migrated to PC will be migrated to PC.\n"
            }
        }, 
        "/clusters/{uuid}/cloud_credentials/{cloud_type}/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "$ref": "#/parameters/cloud_type"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Get a list of existing cloud credentials", 
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ], 
                "x-ntnx-kind": "cloud_credentials", 
                "x-internal": true, 
                "description": "This operation gets a list of cloud credentials, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        }, 
        "/remote_syslog_servers": {
            "post": {
                "description": "This operation submits a request to create a new Remote Syslog server based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_syslog_servers"
                ], 
                "summary": "Create a new Remote Syslog server", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "remote_syslog_server", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_intent_response"
                        }
                    }
                }
            }
        }, 
        "/network_function_chains/list": {
            "post": {
                "description": "This operation gets a list of Network Function Chains, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network_function_chains"
                ], 
                "summary": "Get a list of existing Network Function Chains", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "network_function_chain", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/network_function_chain_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/ssh_user/list": {
            "post": {
                "description": "Retrieves all SSH Users on the cluster", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ssh_user_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ssh_user"
                ], 
                "summary": "Retrieves all SSH Users on the cluster", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ssh_user", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ssh_user_list"
                        }
                    }
                }
            }
        }, 
        "/vm_host_affinity_policies/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_host_affinity_policy_update_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_host_affinity_policies"
                ], 
                "summary": "Update a existing VM Host Affinity Policy", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "vm_host_affinity_policy", 
                "description": "This operation submits a request to update a existing VM Host Affinity Policy based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "vm_host_affinity_policies"
                ], 
                "summary": "Delete a existing VM Host Affinity Policy", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "vm_host_affinity_policy", 
                "description": "This operation submits a request to delete a existing VM Host Affinity Policy."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vm_host_affinity_policy_get_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "default": false, 
                        "type": "boolean", 
                        "description": "Query param to include VMs and Hosts count associated with the Policy. When this param is set to True, returns counts of total VMs, compliant VMs, non compliant VMs and total Hosts.\n", 
                        "name": "include_vms_hosts_count", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "vm_host_affinity_policies"
                ], 
                "summary": "Get a existing VM Host Affinity Policy", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "vm_host_affinity_policy", 
                "description": "This operation gets a existing VM Host Affinity Policy."
            }
        }, 
        "/users/{uuid}/project_usage_summary": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/resource_domain_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/user_usage_in_projects"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/resource_domain_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "users"
                ], 
                "summary": "Retrieves specified user resource domain information.", 
                "x-ntnx-operations": [
                    "view_project_usage_summary"
                ], 
                "x-ntnx-kind": "user", 
                "description": "Retrieves specified user resource domain information."
            }
        }, 
        "/vms/{uuid}/snapshot": {
            "post": {
                "description": "Submits a request to create a task handling the snapshot operation on the vm, returns a task reference. This creates a point in time recovery point.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Create a vm recovery point.", 
                "x-ntnx-operations": [
                    "snapshot"
                ], 
                "x-ntnx-kind": "vm", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/report_instances": {
            "post": {
                "description": "This will generate the report for a specified report config uuid.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/report_instance_intent_input"
                        }, 
                        "required": true, 
                        "name": "input_body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "summary": "Create a report instance.", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "report_instance", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/report_instance_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/report_instance_intent_response"
                        }
                    }
                }
            }
        }, 
        "/cloud_tenants/list": {
            "post": {
                "description": "List all cloud_tenants from PC.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/cloud_tenant_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "cloud_tenant"
                ], 
                "summary": "list the cloud_tenants", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "cloud_tenant", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cloud_tenant_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cloud_tenant_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/clusters/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing cluster based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/cluster_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Update a existing cluster", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "cluster", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cluster_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/cluster_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing cluster.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Get a existing cluster", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "cluster", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cluster_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cluster_intent_response"
                        }
                    }
                }
            }
        }, 
        "/aws/machine_types/list": {
            "post": {
                "description": "List all the AWS machine types. No filters to be mentioned.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/aws_machine_type_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "aws/machine_types"
                ], 
                "summary": "List all the AWS machine types", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "aws_machine_type", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_machine_type_list_intent_response"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }
            }
        }, 
        "/docker_registries/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/docker_registry_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "docker_registry"
                ], 
                "summary": "List all docker registries", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "docker_registry", 
                "x-internal": true, 
                "description": "List all docker registries"
            }
        }, 
        "/routing_policies": {
            "post": {
                "description": "This operation submits a request to create a new routing_policy based on the input parameters.\nA routing policy that defines traffic behavior.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/routing_policy_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "routing_policies"
                ], 
                "summary": "Create a new routing_policy", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "routing_policy", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/routing_policy_intent_response"
                        }
                    }
                }
            }
        }, 
        "/clusters/{uuid}/certificates/ca_certs": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ca_cert"
                        }, 
                        "required": true, 
                        "name": "spec", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Add a new CA certificate", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "x-internal": true, 
                "description": "Add a new CA certificate"
            }
        }, 
        "/services/flow/security_planning": {
            "post": {
                "description": "Security Planning Configuration.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/flow_security_planning_config_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "services"
                ], 
                "summary": "Security Planning Configuration.", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/service_config_status"
                        }
                    }
                }
            }
        }, 
        "/identity_categorization/category_mappings/list": {
            "post": {
                "description": "This operation gets a list of category_mappings, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/category_mapping_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "identity_categorization"
                ], 
                "summary": "Get a list of existing category_mappings", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "category_mapping", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/category_mapping_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/category_mapping_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/action_rules/trigger": {
            "post": {
                "description": "Execute playbooks on demand using trigger information passed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/action_rule_trigger_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_rules"
                ], 
                "summary": "Manually trigger action rules execution.\n", 
                "x-ntnx-operations": [
                    "execute"
                ], 
                "x-ntnx-kind": "action_rule", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/floating_ips/list": {
            "post": {
                "description": "This operation gets a list of Floating IPs, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/floating_ip_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "floating_ip"
                ], 
                "summary": "Get a list of existing Floating IPs", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "floating_ip", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/floating_ip_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/floating_ip_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/address_groups": {
            "post": {
                "description": "This operation submits a request to create a new address_group based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/address_group"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "address_groups"
                ], 
                "summary": "Create a new address_group", 
                "x-ntnx-kind": "address_group", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/address_group_reference"
                        }
                    }
                }
            }
        }, 
        "/ngt/list": {
            "post": {
                "description": "This operation gets a list of vms, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ngt_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ngt"
                ], 
                "summary": "Get a list of existing vms", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ngt", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ngt_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ngt_list_response"
                        }
                    }
                }
            }
        }, 
        "/oauth/client": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/oauth_client_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/oauth_client_input"
                        }, 
                        "required": true, 
                        "description": "Oauth client details", 
                        "name": "oauth_client", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "oauth"
                ], 
                "summary": "This is used to register new oauth client", 
                "x-ntnx-kind": "oauth_client", 
                "x-internal": true, 
                "description": "Add new Oauth Client"
            }
        }, 
        "/datacenters/{uuid}": {
            "put": {
                "description": "Update datacenter", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/datacenter_intent_input"
                        }, 
                        "required": true, 
                        "description": "Update datacenter", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "datacenter"
                ], 
                "summary": "Update datacenter", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "datacenter", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/datacenter_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/datacenter_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Delete specified datacenter", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "datacenter"
                ], 
                "summary": "Delete specified datacenter", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "datacenter", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/datacenter_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/datacenter_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Retrieves specified datacenter", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "datacenter"
                ], 
                "summary": "Retrieves specified datacenter", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "datacenter", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/datacenter_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/datacenter_intent_response"
                        }
                    }
                }
            }
        }, 
        "/report_instances/{uuid}": {
            "delete": {
                "description": "Delete the generated report instance.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "summary": "Delete the generated report instance.", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "report_instance", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/report_instance_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/report_instance_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/report_instance_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Get the specified report instance.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "summary": "Get the specified report instance.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "report_instance", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/report_instance_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/report_instance_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/report_instance_status"
                        }
                    }
                }
            }
        }, 
        "/projects_internal": {
            "post": {
                "description": "This operation submits a request to create a new Project based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/project_internal_intent_input"
                        }, 
                        "required": true, 
                        "description": "The entity to create or modify a project.", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "project"
                ], 
                "summary": "Create a new Project", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "project", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/project_internal_intent_response"
                        }
                    }
                }
            }
        }, 
        "/action_rule_results/action/{action}": {
            "post": {
                "description": "Abort or resume the rule execution instance.\n", 
                "parameters": [
                    {
                        "description": "The action type.", 
                        "required": true, 
                        "in": "path", 
                        "x-ntnx-enum": [
                            "ABORT", 
                            "RESUME"
                        ], 
                        "type": "string", 
                        "name": "action"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/action_rule_result_action_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_rule_results"
                ], 
                "summary": "Perform an action to abort/resume action rule execution instance.\n", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "action_rule_result", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_rule_result_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/security_monitoring/query": {
            "post": {
                "description": "Query API to execute various queries and retrieve results in Security Monitoring.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/query_request"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "security_monitoring"
                ], 
                "summary": "Query API in Security Monitoring.", 
                "x-ntnx-operations": [
                    "query"
                ], 
                "x-ntnx-kind": "security_monitoring", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/query_response"
                        }
                    }
                }
            }
        }, 
        "/storage_policies/compute_counts": {
            "post": {
                "description": "Counts for respective policies.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/storage_policy_compute_counts_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "storage_policies"
                ], 
                "summary": "Counts for respective policies.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "storage_policy", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/storage_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/storage_policy_compute_counts_output"
                        }
                    }
                }
            }
        }, 
        "/portal_services/software/{software_type}/{version}": {
            "get": {
                "description": "Get the software info with specified type and version", 
                "parameters": [
                    {
                        "description": "Software type", 
                        "required": true, 
                        "in": "path", 
                        "x-ntnx-enum": [
                            "NOS", 
                            "PRISM_CENTRAL"
                        ], 
                        "type": "string", 
                        "name": "software_type"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "Software version", 
                        "in": "path", 
                        "name": "version"
                    }
                ], 
                "tags": [
                    "portal_services"
                ], 
                "summary": "Get specified software information", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/software_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/portal_software"
                        }
                    }
                }
            }
        }, 
        "/clusters/{uuid}/certificates/ca_certs/{ca_name}": {
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "maxLength": 64, 
                        "required": true, 
                        "type": "string", 
                        "name": "ca_name", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Delete the CA certificate", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "x-internal": true, 
                "description": "Delete the CA certificate specified by certificate authority name\n"
            }
        }, 
        "/docker_registries/{uuid}/search/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_image_search_list_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/docker_registry_image_search_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/docker_registry_image_search_list_intent_response"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "docker_registry"
                ], 
                "summary": "Searches docker containers for specified registry", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "docker_image", 
                "x-internal": true, 
                "description": "Searches docker containers for specified registry"
            }
        }, 
        "/prism_central/cmsp/configure": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/prism_central_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/prism_central_enable_cmsp_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/cmsp_config_enablement"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "prism_central"
                ], 
                "summary": "Enables CMSP on Prism Central.", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "prism_central", 
                "x-internal": true, 
                "description": "Enables CMSP on Prism Central using all passed fields.\n"
            }
        }, 
        "/file_store/{uuid}/file": {
            "put": {
                "description": "Upload the binary bits for a file item.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "format": "binary"
                        }, 
                        "required": true, 
                        "name": "file_item", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "file_store"
                ], 
                "summary": "Upload file item contents", 
                "x-ntnx-kind": "file_item", 
                "x-internal": true, 
                "consumes": [
                    "application/octet-stream"
                ], 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/file_item_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }, 
            "get": {
                "description": "Download the raw binary bits associated with a file item.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "produces": [
                    "application/octet-stream"
                ], 
                "tags": [
                    "file_store"
                ], 
                "summary": "Get file item contents", 
                "x-ntnx-kind": "file_item", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/file_item_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "type": "string", 
                            "format": "binary"
                        }
                    }
                }
            }
        }, 
        "/clusters/recovery_point_resource_reservation": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/recovery_point_resource_reservation_spec"
                        }, 
                        "required": true, 
                        "description": "Entity spec.", 
                        "name": "spec", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Update the Lazan resource reservation lease for the given recovery\npoint replication.\n", 
                "x-ntnx-kind": "cluster", 
                "x-internal": true, 
                "description": "Update Lazan resource reservation lease."
            }
        }, 
        "/vm_recovery_points/{uuid}/restore": {
            "post": {
                "description": "Submits a request to create a task handling the restore of vm recovery point, returns the task reference. This operation is used to create a vm out of the vm recovery point. Follow the task to get the reference of the created vm.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_restore_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "summary": "Restore a vm recovery point.", 
                "x-ntnx-operations": [
                    "restore"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/vpcs/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing VPC based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vpc_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "virtual_network"
                ], 
                "summary": "Update a existing VPC", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "virtual_network", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpc_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vpc_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vpc_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing VPC.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "virtual_network"
                ], 
                "summary": "Delete a existing VPC", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "virtual_network", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpc_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vpc_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vpc_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing VPC.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "virtual_network"
                ], 
                "summary": "Get a existing VPC", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "virtual_network", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpc_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/vpc_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vpc_status"
                        }
                    }
                }
            }
        }, 
        "/recovery_points/{uuid}/replicate": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/procedural_error_response"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/replicate_recovery_point_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "recovery_points"
                ], 
                "summary": "Replicate a Recovery Point", 
                "x-ntnx-kind": "recovery_point", 
                "x-internal": true, 
                "description": "Submits a request to replicate a Recovery Point from source Availability Zone to target Availability Zone. The successful request returns a task ID to track the replication status.\n"
            }
        }, 
        "/action_trigger_types/list": {
            "post": {
                "description": "This operation gets a list of action_trigger_type, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/action_trigger_type_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_trigger_types"
                ], 
                "summary": "Get a list of existing action_trigger_type", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "action_trigger_type", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_trigger_type_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/action_trigger_type_list_intent_response"
                        }
                    }
                }
            }
        }, 
        "/categories/{name}/{value}": {
            "put": {
                "responses": {
                    "201": {
                        "description": "Created", 
                        "schema": {
                            "$ref": "#/definitions/category_value_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/category_value_status"
                        }
                    }, 
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/category_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "in": "path", 
                        "name": "name", 
                        "pattern": "^[a-zA-Z0-9_.-]+( [a-zA-Z0-9_.-]+)*$", 
                        "required": true, 
                        "maxLength": 64, 
                        "type": "string"
                    }, 
                    {
                        "in": "path", 
                        "name": "value", 
                        "pattern": "^[a-zA-Z0-9_.-]+( [a-zA-Z0-9_.-]+)*$", 
                        "required": true, 
                        "maxLength": 64, 
                        "type": "string"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/category_value"
                        }, 
                        "required": true, 
                        "name": "spec", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "categories"
                ], 
                "summary": "Create or Update a category value.", 
                "x-ntnx-operations": [
                    "create_or_update_value"
                ], 
                "x-ntnx-kind": "category", 
                "description": "Create or Update a category value. Creates when value doesn't exist.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/category_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "maxLength": 64, 
                        "required": true, 
                        "type": "string", 
                        "name": "name", 
                        "in": "path"
                    }, 
                    {
                        "maxLength": 64, 
                        "required": true, 
                        "type": "string", 
                        "name": "value", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "categories"
                ], 
                "summary": "Delete a category value.", 
                "x-ntnx-operations": [
                    "delete_value"
                ], 
                "x-ntnx-kind": "category", 
                "description": "Delete a category value."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/category_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/category_value_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "maxLength": 64, 
                        "required": true, 
                        "type": "string", 
                        "name": "name", 
                        "in": "path"
                    }, 
                    {
                        "maxLength": 64, 
                        "required": true, 
                        "type": "string", 
                        "name": "value", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "categories"
                ], 
                "summary": "Get a category value.", 
                "x-ntnx-operations": [
                    "view_value"
                ], 
                "x-ntnx-kind": "category", 
                "description": "Get a category value."
            }
        }, 
        "/protection_rules/query_entities": {
            "get": {
                "description": "This API fetches what could be the protection status of the entity\ngiven a set of parameters. The entities to return are based on the\ncategory name and value pair which is passed as an input to the API.\nThe recovery point objective values and some other parameters passed,\nalso as query params, help to determine if there are any errors\nassociated with it which are returned in the response.\n", 
                "parameters": [
                    {
                        "type": "string", 
                        "description": "Category name, value separated by ':'. Example: 'dept:eng'.\n", 
                        "name": "categories", 
                        "in": "query"
                    }, 
                    {
                        "items": {
                            "type": "integer", 
                            "format": "int32"
                        }, 
                        "type": "array", 
                        "description": "Recovery Point Objective (RPO) in seconds. This will be used to\ndetermine if the VM can be protected with the given RPO values.\n", 
                        "name": "recovery_point_objective_seconds", 
                        "in": "query"
                    }, 
                    {
                        "type": "boolean", 
                        "description": "Whether the Protection Rule has the intra PC DR policy configured.\n", 
                        "name": "has_intra_pc_dr_config", 
                        "in": "query"
                    }, 
                    {
                        "type": "boolean", 
                        "description": "Whether the Protection Rule has App-Consistent Recovery point\nconfigured.\n", 
                        "name": "has_app_consistent_rp_config", 
                        "in": "query"
                    }, 
                    {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array", 
                        "description": "List of PE cluster UUIDs for which the entities that belong to them\nare either fetched or ignored based on the value set for the\nshould_exclude_cluster_uuid_list parameter. If no value is given\nthen all the PE cluster UUIDs are looked at.\n", 
                        "name": "cluster_uuid_list", 
                        "in": "query"
                    }, 
                    {
                        "default": false, 
                        "type": "boolean", 
                        "description": "Controls whether the cluster_uuid_list is an inclusion list or an\nexclusion list. If set to False, then the only the entities that\nare present on the clusters from the cluster_uuid_list are fetched.\nIf set to True, then only the entities that are present on the\nclusters other than the ones from the cluster_uuid_list are\nfetched.\n", 
                        "name": "should_exclude_cluster_uuid_list", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "description": "Protection rule UUID for which the query is being invoked. If\nprotection rule isn't created yet then this field will be empty.\n", 
                        "name": "protection_rule_uuid", 
                        "in": "query"
                    }, 
                    {
                        "description": "Filter value which dictates whether to show all entities,\nirrespective of their protection status, or entities for which\nthere is protection failure, i.e., aren't protected at all.\n", 
                        "default": "ALL", 
                        "in": "query", 
                        "x-ntnx-enum": [
                            "ALL", 
                            "CANNOT_BE_PROTECTED"
                        ], 
                        "type": "string", 
                        "name": "protection_status_filter"
                    }, 
                    {
                        "description": "The entity type to be queried. Set to VM by default.\n", 
                        "default": "VM", 
                        "in": "query", 
                        "x-ntnx-enum": [
                            "VM", 
                            "VOLUME_GROUP"
                        ], 
                        "type": "string", 
                        "name": "entity_type"
                    }, 
                    {
                        "description": "Offset from the start of the entity list.", 
                        "format": "int32", 
                        "minimum": 0, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "offset"
                    }, 
                    {
                        "description": "The number of records to retrieve relative to the offset.", 
                        "format": "int32", 
                        "minimum": 1, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "length"
                    }
                ], 
                "tags": [
                    "protection_rules"
                ], 
                "summary": "Get a list of entities along with their protection status.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "protection_rule", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/protection_rule_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/query_entities_response"
                        }
                    }
                }
            }
        }, 
        "/tenant_clusters/config/tenants": {
            "post": {
                "description": "This operation submits a request to create a new Tenant based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/tenant"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "tenants"
                ], 
                "summary": "Create a new Tenant", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "tenant", 
                "x-internal": true, 
                "responses": {
                    "201": {
                        "description": "Created", 
                        "schema": {
                            "$ref": "#/definitions/tenant_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/tenant_status"
                        }
                    }, 
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/tenant_status"
                        }
                    }
                }
            }
        }, 
        "/billing/invoices": {
            "post": {
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/billing_invoice_list"
                        }
                    }
                }, 
                "summary": "Get a list of existing billing_invoices", 
                "description": "Get all invoices for the tenant account.", 
                "tags": [
                    "billing"
                ]
            }
        }, 
        "/action_templates/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing action_template based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/action_template_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_templates"
                ], 
                "summary": "Update a existing action_template", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "action_template", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal error", 
                        "schema": {
                            "$ref": "#/definitions/action_template_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/action_template_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/action_template_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing action_template.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "action_templates"
                ], 
                "summary": "Delete a existing action_template", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "action_template", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_template_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted"
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing action_template.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "action_templates"
                ], 
                "summary": "Get a existing action_template", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "action_template", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_template_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/action_template_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/action_template_status"
                        }
                    }
                }
            }
        }, 
        "/ovas/{uuid}/file": {
            "get": {
                "description": "Downloads the OVA based on the UUID specified.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "produces": [
                    "application/octet-stream"
                ], 
                "tags": [
                    "ovas"
                ], 
                "summary": "Get OVA Contents", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ova", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "type": "string", 
                            "format": "binary"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }
            }
        }, 
        "/vm_recovery_points/{uuid}/promote": {
            "post": {
                "description": "Submits a request to create a task handling the promote of Live vm recovery point, returns the task reference. This operation is used to create a vm out of the Live vm recovery point. Follow the task to get the reference of the created vm.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_restore_input"
                        }, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vm_recovery_points"
                ], 
                "summary": "Promote a vm recovery point.", 
                "x-ntnx-operations": [
                    "promote"
                ], 
                "x-ntnx-kind": "vm_recovery_point", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/reports/upload/{type}": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/resource_upload_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Type of the file to be uploaded. Supported types are\n  - logo\n", 
                        "pattern": "(\\breport_instance\\b|\\breport_instance_pdf\\b|\\breport_instance_csv\\b|\\blogo\\b)", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "type"
                    }, 
                    {
                        "schema": {
                            "format": "binary"
                        }, 
                        "required": true, 
                        "name": "file", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "summary": "Upload a file.", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "common_report_config", 
                "consumes": [
                    "application/pdf", 
                    "image/png", 
                    "image/jpeg"
                ], 
                "description": "This uploads a file and returns the UUID for the same."
            }
        }, 
        "/clusters/multicluster_config/{uuid}/pause": {
            "post": {
                "description": "Pause a multicluster configuration request by pausing all\nqueued cluster configuration tasks.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Pause a multicluster configuration request from Prism Central.", 
                "x-ntnx-kind": "multicluster_config", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }
        }, 
        "/storage_policies/get_info/{entity_type}/{uuid}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/storage_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/get_info"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The entity type.", 
                        "in": "path", 
                        "name": "entity_type"
                    }, 
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "storage_policies"
                ], 
                "summary": "Get effective storage configuration on an entity", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "storage_policy", 
                "x-internal": true, 
                "description": "Get effective storage configuration on an entity\n"
            }
        }, 
        "/vms/{uuid}/release_ip": {
            "put": {
                "description": "Release the currently allocated IP address.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_release_ip_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Release IP addresses for NICs for the given VM NIC UUIDs.", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                }
            }
        }, 
        "/action_templates": {
            "post": {
                "description": "This operation submits a request to create a new action_template based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/action_template_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_templates"
                ], 
                "summary": "Create a new action_template", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "action_template", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_template_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/action_template_intent_response"
                        }
                    }
                }
            }
        }, 
        "/aws/vms/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/aws_vm_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_vm_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/aws_vm_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "aws/vms"
                ], 
                "summary": "List AWS VMs.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "aws_vm", 
                "x-internal": true, 
                "description": "List VMs with associated metadata. Supported filters are:\n- account_uuid\n- region\n- power_state\nUse the account_uuid filter to get all the VMs on the default region of a\nparticular account.\nUse account_uuid and region filters together to list all the VMs in a\nparticular region.\nSet the power_state to running, stopped, and terminated. in the above two cases\nto list only VMs in the particular power state.\n"
            }
        }, 
        "/access_control_policies": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/access_control_policy_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "access_control_policies"
                ], 
                "summary": "Create a new Access Control Policy", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "access_control_policy", 
                "description": "An Access Control Policy (ACP) represents the association of a User with a role, in a given 'Context' (i.e. where can the role be exercised) e.g. an ACP can represent the following: User1 has Role1 within the boundaries of Project1. (i.e. if Role1 allows the User to update-VM, he/she can do so ONLY for VMs belonging to Project1)\n"
            }
        }, 
        "/report_configs/{uuid}": {
            "put": {
                "description": "Given an intenful spec and report config uuid, update report config.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/report_config_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "summary": "Update report config.", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "report_config", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/report_config_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/report_config_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/report_config_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Delete a report config given its uuid.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "summary": "Delete report config.", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "report_config", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/report_config_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/report_config_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Given a UUID, returns a report config.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "summary": "Get report config information.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "report_config", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/report_config_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/report_config_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/report_config_status"
                        }
                    }
                }
            }
        }, 
        "/ngt_policies/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ngt_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ngt_policy_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/ngt_policy_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ngt_policy_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "ngt_policies"
                ], 
                "summary": "Update a existing ngt_policy", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "ngt_policy", 
                "description": "This operation submits a request to update a existing ngt_policy based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ngt_policy_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/ngt_policy_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ngt_policies"
                ], 
                "summary": "Delete a existing ngt_policy", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "ngt_policy", 
                "description": "This operation submits a request to delete a existing ngt_policy."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/ngt_policy_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ngt_policy_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/ngt_policy_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ngt_policies"
                ], 
                "summary": "Get a existing ngt_policy", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ngt_policy", 
                "description": "This operation gets a existing ngt_policy."
            }
        }, 
        "/layer2_stretches/{uuid}": {
            "delete": {
                "description": "This operation submits a request to delete a existing layer2_stretch.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "layer2_stretch"
                ], 
                "summary": "Delete a existing layer2_stretch", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "layer2_stretch", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/layer2_stretch_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/layer2_stretch_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/layer2_stretch_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing layer2_stretch.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "layer2_stretch"
                ], 
                "summary": "Get a existing layer2_stretch", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "layer2_stretch", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/layer2_stretch_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/layer2_stretch_intent_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/layer2_stretch_status"
                        }
                    }
                }
            }
        }, 
        "/vpcs": {
            "post": {
                "description": "This operation submits a request to create a new VPC based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vpc_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "virtual_network"
                ], 
                "summary": "Create a new VPC", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "virtual_network", 
                "x-internal": false, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vpc_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vpc_intent_response"
                        }
                    }
                }
            }
        }, 
        "/disks/{uuid}": {
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/disk_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/disk_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "disks"
                ], 
                "summary": "Delete a existing Disk", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "disk", 
                "x-internal": true, 
                "description": "This operation submits a request to delete a existing Disk."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/disk_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/disk_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "disks"
                ], 
                "summary": "Get a existing Disk", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "disk", 
                "x-internal": true, 
                "description": "This operation gets a existing Disk."
            }
        }, 
        "/vms": {
            "post": {
                "description": "This operation submits a request to create a new VM based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Create a new VM", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_intent_response"
                        }
                    }
                }
            }
        }, 
        "/vms/{uuid}/guest_reboot": {
            "post": {
                "description": "Creates a VM guest_reboot request task.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/vm_set_power_state_input"
                        }, 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "vms"
                ], 
                "summary": "Create a VM guest_reboot request.", 
                "x-ntnx-operations": [
                    "update", 
                    "set_power_state"
                ], 
                "x-ntnx-kind": "vm", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/vm_set_power_state_response"
                        }
                    }
                }
            }
        }, 
        "/cells/{uuid}": {
            "put": {
                "description": "Update cell", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/cell_intent_input"
                        }, 
                        "required": true, 
                        "description": "Update cell", 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "cell"
                ], 
                "summary": "Update cell", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "cell", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cell_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cell_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "Delete specified cell", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "cell"
                ], 
                "summary": "Delete specified cell", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "cell", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cell_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cell_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Retrieves specified cell", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "cell"
                ], 
                "summary": "Retrieves specified cell", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "cell", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/cell_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/cell_intent_response"
                        }
                    }
                }
            }
        }, 
        "/az_proxy": {
            "post": {
                "description": "Proxies request to remote cluster, uses remote connection\nto call endpoint on remote cluster\n", 
                "parameters": [
                    {
                        "type": "string", 
                        "description": "Availability Zone Name", 
                        "name": "az_name", 
                        "in": "query"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "HTTP method to call", 
                        "name": "method", 
                        "in": "query"
                    }, 
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "URL path to call on remote cluster", 
                        "name": "url_path", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "description": "content type for the call", 
                        "name": "content_type", 
                        "in": "query"
                    }, 
                    {
                        "schema": {
                            "additionalProperties": true
                        }, 
                        "name": "az_proxy_body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_connections"
                ], 
                "summary": "Proxies request to remote AZ", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_connection_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }
            }
        }, 
        "/action_types": {
            "post": {
                "description": "This operation submits a request to create a new action_type based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/action_type_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "action_types"
                ], 
                "summary": "Create a new action_type", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "action_type", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/action_type_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/action_type_intent_response"
                        }
                    }
                }
            }
        }, 
        "/file_store": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/file_item_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/file_item_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/file_item_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "file_store"
                ], 
                "summary": "Create a new file_item", 
                "x-ntnx-kind": "file_item", 
                "x-internal": true, 
                "description": "File items are binaries and unlike images are not limited by the file type (e.g ISOs, or disk images)."
            }
        }, 
        "/prism_central/nodes": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/prism_central_nodes_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/prism_central_request_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/prism_central_nodes"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "prism_central"
                ], 
                "summary": "Add a new prism central VM to Prism Central cluster.", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "prism_central", 
                "x-internal": true, 
                "description": "Given an intentful spec, add a new prism central vm to the cluster .\n"
            }
        }, 
        "/users": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/user_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/user_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/user_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "users"
                ], 
                "summary": "Create a new User", 
                "x-ntnx-operations": [
                    "add"
                ], 
                "x-ntnx-kind": "user", 
                "description": "This operation submits a request to create a new User based on the input parameters.\n"
            }
        }, 
        "/recovery_plan_jobs/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_list_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/recovery_plan_job_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "recovery_plan_jobs"
                ], 
                "summary": "List the Recovery Plan Jobs", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "recovery_plan_job", 
                "description": "List the Recovery Plan Jobs"
            }
        }, 
        "/clusters/multicluster_config": {
            "post": {
                "description": "Apply multicluster configuration from Prism Central.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/multicluster_config_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "summary": "Apply multicluster configuration from Prism Central.", 
                "x-ntnx-kind": "multicluster_config", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/multicluster_config_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/multicluster_config_intent_response"
                        }
                    }
                }
            }
        }, 
        "/portal_services/support_cases/template/{template_id}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/support_case_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/support_case_template_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/support_case_status"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "ID of the screen for which it needs template.", 
                        "in": "path", 
                        "name": "template_id"
                    }
                ], 
                "tags": [
                    "portal_services"
                ], 
                "summary": "Get screen template from portal.", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "support_case", 
                "x-internal": true, 
                "description": "Given a template ID it fetches that template."
            }
        }, 
        "/identity_categorization/configuration": {
            "put": {
                "description": "Allows for configuring various aspects of identity categorization\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/identity_categorization_config"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "identity_categorization"
                ], 
                "summary": "Configures identity categorization", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "identity_categorization_config", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/category_mapping_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/identity_categorization_config"
                        }
                    }
                }
            }, 
            "get": {
                "description": "Gets identity categorization configuration", 
                "tags": [
                    "identity_categorization"
                ], 
                "summary": "Gets identity categorization configuration", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "identity_categorization_config", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/category_mapping_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/identity_categorization_config"
                        }
                    }
                }
            }
        }, 
        "/remote_syslog_servers/{uuid}": {
            "put": {
                "description": "This operation submits a request to update a existing Remote Syslog server based on the input parameters.\n", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "remote_syslog_servers"
                ], 
                "summary": "Update a existing Remote Syslog server", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "remote_syslog_server", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_status"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_intent_response"
                        }
                    }
                }
            }, 
            "delete": {
                "description": "This operation submits a request to delete a existing Remote Syslog server.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "remote_syslog_servers"
                ], 
                "summary": "Delete a existing Remote Syslog server", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "remote_syslog_server", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_intent_response"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets a existing Remote Syslog server.", 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "remote_syslog_servers"
                ], 
                "summary": "Get a existing Remote Syslog server", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "remote_syslog_server", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/remote_syslog_server_intent_response"
                        }
                    }
                }
            }
        }, 
        "/common_report_configs": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/common_report_config_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/common_report_config_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/common_report_config_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "summary": "Create common report config.", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "common_report_config", 
                "x-internal": true, 
                "description": "This operation submits a request to create a common report\nconfiguration with associated metadata based on the intentful spec.\n"
            }
        }, 
        "/network_security_rules/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "network_security_rules"
                ], 
                "summary": "Update a existing Network security rule", 
                "x-ntnx-operations": [
                    "update"
                ], 
                "x-ntnx-kind": "network_security_rule", 
                "description": "This operation submits a request to update a existing Network security rule based on the input parameters.\n"
            }, 
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "network_security_rules"
                ], 
                "summary": "Delete a existing Network security rule", 
                "x-ntnx-operations": [
                    "delete"
                ], 
                "x-ntnx-kind": "network_security_rule", 
                "description": "This operation submits a request to delete a existing Network security rule."
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/network_security_rule_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "network_security_rules"
                ], 
                "summary": "Get a existing Network security rule", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "network_security_rule", 
                "description": "This operation gets a existing Network security rule."
            }
        }, 
        "/billing/account": {
            "get": {
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/account_details"
                        }
                    }
                }, 
                "summary": "Get account information for the current user.", 
                "description": "Get account information for the logged in user.", 
                "tags": [
                    "billing"
                ]
            }
        }, 
        "/reports/notify": {
            "post": {
                "description": "Email the specified generated reports to specified recipients.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/report_notification_spec"
                        }, 
                        "required": true, 
                        "name": "request_body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "reports"
                ], 
                "summary": "Email the specified generated reports to specified recipients.", 
                "x-ntnx-operations": [
                    "notify"
                ], 
                "x-ntnx-kind": "report_instance", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/report_instance_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/report_instance_status"
                        }
                    }
                }
            }
        }, 
        "/aws/key_pairs/list": {
            "post": {
                "description": "List all the AWS key pairs. Supported filters are:\n- account_uuid\n- region\nUse account_uuid filter to list all the key pairs on the default region of\na particular AWS account.\nUse account_uuid and region filters together to list the key pairs on\na particular region of an AWS account.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/aws_key_pair_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "aws/key_pairs"
                ], 
                "summary": "List all the AWS key pairs", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "aws_key_pair", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_key_pair_list_intent_response"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }
            }
        }, 
        "/subnets": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }, 
                    "202": {
                        "description": "Request Accepted", 
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "subnets"
                ], 
                "summary": "Create a new subnet", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "subnet", 
                "description": "This operation submits a request to create a new subnet based on the input parameters.\nA subnet is a block of IP addresses.\n"
            }
        }, 
        "/identity_categorization/category_mappings": {
            "post": {
                "description": "This operation submits a request to create a new category_mapping based on the input parameters.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/category_mapping_intent_input"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "identity_categorization"
                ], 
                "summary": "Create a new category_mapping", 
                "x-ntnx-operations": [
                    "create"
                ], 
                "x-ntnx-kind": "category_mapping", 
                "x-internal": true, 
                "x-ntnx-force-cli": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/category_mapping_status"
                        }
                    }, 
                    "202": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/category_mapping_intent_response"
                        }
                    }
                }
            }
        }, 
        "/categories/{name}/list": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/category_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/category_value_list_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "maxLength": 64, 
                        "required": true, 
                        "type": "string", 
                        "name": "name", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/category_list_metadata"
                        }, 
                        "required": false, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "categories"
                ], 
                "summary": "List the values for a specified key.", 
                "x-ntnx-operations": [
                    "view_value"
                ], 
                "x-ntnx-kind": "category", 
                "description": "List the values for a specified key.\n"
            }
        }, 
        "/search/favorites": {
            "post": {
                "description": "Add a search query as user favorite.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/favorite"
                        }, 
                        "required": true, 
                        "name": "favorite", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "favorites"
                ], 
                "summary": "Create a favorite", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/favorite"
                        }
                    }
                }
            }, 
            "get": {
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/favorite_get_response"
                        }
                    }
                }, 
                "summary": "Get all favorites.", 
                "description": "Get all favorites for current logged in user.\n", 
                "tags": [
                    "favorites"
                ]
            }
        }, 
        "/clusters/{uuid}/certificates/csrs": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    }, 
                    "200": {
                        "description": "Success"
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/csrs_spec"
                        }, 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "clusters"
                ], 
                "produces": [
                    "application/octet-stream"
                ], 
                "summary": "Download CSRs from cluster", 
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ], 
                "x-ntnx-kind": "certificate", 
                "x-internal": true, 
                "description": "Download Certificate Signing Requests from cluster"
            }
        }, 
        "/idempotence_identifiers/{client_identifier}": {
            "delete": {
                "description": "This operation submits a request to delete an existing idempotence_identifier.", 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "client_identifier", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "idempotence_identifiers"
                ], 
                "summary": "Delete an existing idempotence_identifier", 
                "x-ntnx-kind": "idempotence_identifier", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/idempotence_identifiers_status"
                        }
                    }, 
                    "200": {
                        "description": "Success"
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/idempotence_identifiers_status"
                        }
                    }
                }
            }, 
            "get": {
                "description": "This operation gets an existing idempotence_identifier.", 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "client_identifier", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "idempotence_identifiers"
                ], 
                "summary": "Get an existing idempotence_identifier", 
                "x-ntnx-kind": "idempotence_identifier", 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/idempotence_identifiers_status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/idempotence_identifiers_response"
                        }
                    }, 
                    "404": {
                        "description": "Invalid UUID provided", 
                        "schema": {
                            "$ref": "#/definitions/idempotence_identifiers_status"
                        }
                    }
                }
            }
        }, 
        "/ovas/{uuid}/disks": {
            "get": {
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/ova_disk_list_response"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ], 
                "tags": [
                    "ovas"
                ], 
                "summary": "Gets a list of existing disks of an OVA", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "ova", 
                "description": "This operation gets a list of disks of an exisiting OVA\n"
            }
        }, 
        "/aws/volume_types/list": {
            "post": {
                "description": "List all the AWS volume types. No filters to be mentioned.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/aws_volume_type_list_metadata"
                        }, 
                        "required": true, 
                        "name": "get_entities_request", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "aws/volume_types"
                ], 
                "summary": "List all the AWS volume types", 
                "x-ntnx-operations": [
                    "view"
                ], 
                "x-ntnx-kind": "aws_volume_type", 
                "x-internal": true, 
                "responses": {
                    "default": {
                        "description": "Internal Error", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }, 
                    "200": {
                        "description": "Success", 
                        "schema": {
                            "$ref": "#/definitions/aws_volume_type_list_intent_response"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }
            }
        }
    }, 
    "schemes": [
        "https"
    ], 
    "parameters": {
        "cloud_type": {
            "description": "The Cloud Type.", 
            "pattern": "(\\bAWS\\b|\\bAZURE\\b|\\bNUTANIX_HOSTED_CLOUD\\b|\\bONPREM_CLOUD\\b)", 
            "required": true, 
            "in": "path", 
            "type": "string", 
            "name": "cloud_type"
        }, 
        "uuid": {
            "description": "The UUID of the entity.", 
            "format": "UUID", 
            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
            "required": true, 
            "x-example": "0e09cf83-ac68-4f28-af70-6df9a43df4f0", 
            "in": "path", 
            "type": "string", 
            "name": "uuid"
        }
    }, 
    "produces": [
        "application/json"
    ], 
    "basePath": "/api/nutanix/v3", 
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic"
        }
    }, 
    "definitions": {
        "remote_connection_intent_response": {
            "description": "Response object for intentful operations on a remote_connection", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/remote_connection_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/remote_connection"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_connection_metadata"
                }
            }, 
            "title": "remote_connection Intent Response"
        }, 
        "oauth_client_metadata": {
            "description": "The oauth_client kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when oauth_client was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "oauth_client", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "oauth_client"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "oauth_client uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the oauth_client is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when oauth_client was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the oauth_client. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the oauth_client. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "oauth_client name", 
                    "maxLength": 80
                }
            }, 
            "title": "oauth_client metadata"
        }, 
        "rackable_unit_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "rackable_unit", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "rackable_unit"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "blueprint_marketplace_launch_input": {
            "description": "Launch Blueprint request.", 
            "required": [
                "api_version", 
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/blueprint_marketplace_launch_spec"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "Launch Marketplace Blueprint request."
        }, 
        "action_template": {
            "description": "Action template entity definition", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/action_template_resources"
                }
            }, 
            "title": "Action template entity"
        }, 
        "action_rule_result_intent_input": {
            "description": "An intentful representation of a action_rule_result", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/action_rule_result"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_rule_result_metadata"
                }
            }, 
            "title": "action_rule_result Intent Entity"
        }, 
        "vm_recovery_point_realize_restore_input": {
            "description": "Input object for the restore API of the recovery points. User can provide optional UUID of the vm that will be created as a result of this operation.\n", 
            "required": [
                "vm_uuid", 
                "restore_target_time"
            ], 
            "type": "object", 
            "properties": {
                "cluster_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the cluster where recovery point is present. This needs to be\nprovided in case of Self AZ restore.\n", 
                    "format": "UUID"
                }, 
                "restore_target_time": {
                    "type": "string", 
                    "description": "The target time to which the user wishes to restore to. This is in\ninternet date/time format (RFC 3339). This field is explicitly used\nfor time based restore in high frequency snapshotting and will be\nignored for a regular restore.\n", 
                    "format": "date-time"
                }, 
                "vm_override_spec": {
                    "description": "Properties of the vm that can be overridden on restore.\n", 
                    "$ref": "#/definitions/vm_restore_override_spec"
                }, 
                "vm_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the vm entity for which the recovery point is to be\nrestored.\n", 
                    "format": "UUID"
                }, 
                "metadata": {
                    "type": "object", 
                    "properties": {
                        "categories_mapping": {
                            "additionalProperties": {
                                "items": {
                                    "type": "string"
                                }, 
                                "type": "array"
                            }, 
                            "type": "object", 
                            "description": "Categories for the vm. This allows setting up multiple\nvalues from a single key.\n"
                        }, 
                        "uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "format": "UUID"
                        }
                    }, 
                    "title": "Metadata of the restored vm."
                }
            }, 
            "title": "Restore API input"
        }, 
        "cld_tenant_status": {
            "x-ntnx-enum": [
                "SUBSCRIBED", 
                "SUSPENDED"
            ], 
            "type": "string", 
            "description": "Cloud Tenant Status.", 
            "title": "Cloud Tenant Status"
        }, 
        "ssp_config_input": {
            "description": "Extra information for ssp configuration migration.", 
            "type": "object", 
            "properties": {
                "directory_service_service_account": {
                    "$ref": "#/definitions/credentials"
                }, 
                "should_skip_migration": {
                    "type": "boolean", 
                    "description": "Migration can be skipped or not. If this flag is set to True, migration will be skipped and the Prism Element will be directly marked as migration completed. Default is False.\n"
                }
            }, 
            "title": "Extra information for ssp configuration migration."
        }, 
        "app_task_input_upload": {
            "description": "Task definition for Application.", 
            "required": [
                "name", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "target_any_local_reference": {
                    "$ref": "#/definitions/entity_reference"
                }, 
                "retries": {
                    "type": "string", 
                    "description": "Number of retries for the task."
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "child_tasks_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_reference_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Task attrs for application of type object."
                }, 
                "timeout_secs": {
                    "type": "string", 
                    "description": "task timeout."
                }, 
                "type": {
                    "type": "string", 
                    "description": ""
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Task for Application"
        }, 
        "user_metadata": {
            "description": "The user kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when user was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "user", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "user"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "user uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the user is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when user was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the user. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the user. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "user name", 
                    "maxLength": 80
                }
            }, 
            "title": "user metadata"
        }, 
        "layer2_stretch_vpn_connection_info": {
            "description": "Layer2 stretch related entities vpn connection info.", 
            "type": "object", 
            "properties": {
                "peer_connection_reference": {
                    "$ref": "#/definitions/vpn_connection_reference"
                }, 
                "local_vti_ip": {
                    "type": "string"
                }, 
                "connection_reference": {
                    "$ref": "#/definitions/vpn_connection_reference"
                }
            }, 
            "title": "Layer2 stretch related entities vpn connection info"
        }, 
        "blueprint_resources_def_status": {
            "description": "Status of the Blueprint.", 
            "type": "object", 
            "properties": {
                "client_attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Data needed for clients."
                }, 
                "service_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_response"
                    }, 
                    "type": "array", 
                    "description": "Service definitions for Blueprint."
                }, 
                "substrate_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_substrate_response"
                    }, 
                    "type": "array", 
                    "description": "Substrate definitions for Blueprint."
                }, 
                "credential_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_credential_response"
                    }, 
                    "type": "array", 
                    "description": "Credential definitions for Blueprint."
                }, 
                "package_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_response"
                    }, 
                    "type": "array", 
                    "description": "Package definitions for Blueprint."
                }, 
                "app_profile_list": {
                    "items": {
                        "$ref": "#/definitions/app_profile_response"
                    }, 
                    "type": "array", 
                    "description": "App profile definitions for Blueprint."
                }, 
                "published_service_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_response"
                    }, 
                    "type": "array", 
                    "description": "Published service definitions for Blueprint."
                }, 
                "default_credential_local_reference": {
                    "$ref": "#/definitions/app_credential_reference"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of blueprint", 
                    "maxLength": 64
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for app blueprint"
                }, 
                "is_cloned": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Cloned or original blueprint"
                }
            }, 
            "title": "Status of the Blueprint."
        }, 
        "remote_connection_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_connection", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_connection"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "procedural_error_response": {
            "description": "Response for invoking a procedural call.\n", 
            "type": "object", 
            "properties": {
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }
            }, 
            "title": "Procedural API error response"
        }, 
        "filter_expression": {
            "description": "Filter Expression details.", 
            "required": [
                "property_name", 
                "operator", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "operator": {
                    "type": "string", 
                    "description": "Operator to be used for the value on the entity.\nExample, =, cs, >=, etc.\n"
                }, 
                "display_for_value": {
                    "type": "string", 
                    "description": "String corresponding to the value to be displayed on UI."
                }, 
                "value": {
                    "type": "string", 
                    "description": "Value of property."
                }, 
                "property_name": {
                    "type": "string", 
                    "description": "Name of the entity property."
                }, 
                "display_for_operator": {
                    "type": "string", 
                    "description": "String corresponding to the operator to be displayed on UI."
                }
            }, 
            "title": "Filter Expression definition."
        }, 
        "ipfix_exporter_intent_response": {
            "description": "Response object for intentful operations on a ipfix_exporter", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/ipfix_exporter_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/ipfix_exporter"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ipfix_exporter_metadata"
                }
            }, 
            "title": "ipfix_exporter Intent Response"
        }, 
        "common_report_config_intent_response": {
            "description": "Response object for intentful operations on a common_report_config", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/common_report_config_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/common_report_config"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/common_report_config_metadata"
                }
            }, 
            "title": "common_report_config Intent Response"
        }, 
        "virtual_network_intent_input": {
            "description": "An intentful representation of a virtual_network", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/virtual_network"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/virtual_network_metadata"
                }
            }, 
            "title": "virtual_network Intent Entity"
        }, 
        "network_function_chain_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_function_chain", 
                    "x-ntnx-enum": [
                        "network_function_chain"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for network_function_chain list output"
        }, 
        "role_intent_input": {
            "description": "An intentful representation of a role", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/role"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/role_metadata"
                }
            }, 
            "title": "role Intent Entity"
        }, 
        "floating_ip_list_intent_response": {
            "description": "Response object for intentful operation of floating_ips", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/floating_ip_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/floating_ip_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "underlay_subnet_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "underlay_subnet", 
                    "x-ntnx-enum": [
                        "underlay_subnet"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for underlay_subnet list output"
        }, 
        "support_case": {
            "description": "Support Case creation/modification spec.", 
            "required": [
                "resources", 
                "subject"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "Description of the support case.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/support_case_resources"
                }, 
                "subject": {
                    "type": "string", 
                    "description": "Subject of the support case.", 
                    "maxLength": 140
                }
            }, 
            "title": "Support Case creation/modification spec."
        }, 
        "protection_rule_def_status": {
            "description": "Protection Rule creation/modification status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the protection rule."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the protection rule, if in an error state.\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Protection Rule name"
                }, 
                "resources": {
                    "$ref": "#/definitions/protection_rule_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for the protection rule."
                }
            }, 
            "title": "Protection Rule creation/modification status"
        }, 
        "aws_subnet_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_subnet", 
                    "x-ntnx-enum": [
                        "aws_subnet"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for aws_subnet list output"
        }, 
        "blackout_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "blackout", 
                    "x-ntnx-enum": [
                        "blackout"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for blackout list output"
        }, 
        "vpc_resources_def_status": {
            "description": "VPC resources status", 
            "type": "object", 
            "properties": {
                "common_domain_name_server_ip_list": {
                    "items": {
                        "$ref": "#/definitions/address"
                    }, 
                    "type": "array", 
                    "description": "List of domain name server IPs."
                }, 
                "external_subnet_list": {
                    "items": {
                        "$ref": "#/definitions/external_subnet_def_status"
                    }, 
                    "type": "array", 
                    "description": "List of external subnets attached to this VPC."
                }, 
                "nat_ip_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of IP addresses used for SNAT."
                }, 
                "availability_zone_reference_list": {
                    "items": {
                        "$ref": "#/definitions/availability_zone_reference"
                    }, 
                    "type": "array", 
                    "description": "List of availability zones in Xi from which resources are derived (Only supported on Xi)\n"
                }, 
                "vpc_type": {
                    "x-ntnx-enum": [
                        "REGULAR", 
                        "TRANSIT"
                    ], 
                    "type": "string", 
                    "description": "Transit or regular VPC."
                }, 
                "externally_routable_prefix_list": {
                    "items": {
                        "$ref": "#/definitions/ip_subnet"
                    }, 
                    "type": "array", 
                    "description": "CIDR blocks from the VPC which can talk externally without performing NAT. These blocks should be between /16 netmask and /28 netmask and cannot overlap across VPCs. They are effective when the VPC connects to a NAT-less external subnet.\n"
                }
            }, 
            "title": "VPC resources status"
        }, 
        "floating_ip_resources": {
            "description": "Associate Floating IP to NIC", 
            "type": "object", 
            "properties": {
                "external_subnet_reference": {
                    "description": "External subnet from which floating IP is selected.", 
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "vpc_reference": {
                    "description": "VPC in which the private IP exists.", 
                    "$ref": "#/definitions/vpc_reference"
                }, 
                "private_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Private IP with which the floating IP is associated."
                }, 
                "vm_nic_reference": {
                    "description": "NIC with which the floating IP is associated.", 
                    "$ref": "#/definitions/vm_nic_reference"
                }, 
                "floating_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The Floating IP Address."
                }
            }, 
            "title": "Floating IP association request"
        }, 
        "trigger_instance_object": {
            "description": "Trigger instance object.", 
            "required": [
                "action_trigger_type_reference"
            ], 
            "type": "object", 
            "properties": {
                "instance_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Id to uniquely identify trigger in instance list.", 
                    "format": "UUID"
                }, 
                "display_name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Trigger display name.  This is for display name, hence ready-only.\n"
                }, 
                "description": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "The description of the trigger instance in the rule.\n", 
                    "maxLength": 255
                }, 
                "action_trigger_type_reference": {
                    "$ref": "#/definitions/action_trigger_type_reference"
                }, 
                "output_parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/param_descriptor"
                    }, 
                    "readOnly": true, 
                    "description": "The trigger output parameter descriptors.  Came from trigger type.\n"
                }, 
                "input_parameter_values": {
                    "description": "The trigger user entered input parameters.", 
                    "$ref": "#/definitions/component_instance_parameters"
                }
            }, 
            "title": "Trigger instance"
        }, 
        "citrix_resource_location_spec": {
            "description": "Resource Location on Citrix Cloud.", 
            "type": "object", 
            "properties": {
                "id": {
                    "type": "string", 
                    "description": "The resource location id.", 
                    "maxLength": 200
                }, 
                "name": {
                    "type": "string", 
                    "description": "The resource location name.", 
                    "maxLength": 200
                }
            }, 
            "title": "Citrix Resource Location."
        }, 
        "aws_role_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_role", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_role"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "retention_policy": {
            "description": "Retention policy for generated reports. Only one of retention_time_secs and instance_count\nshould be specified.\n", 
            "type": "object", 
            "properties": {
                "retention_time_secs": {
                    "type": "integer", 
                    "description": "Retention period in seconds for the generated reports.", 
                    "format": "int64"
                }, 
                "instance_count": {
                    "type": "integer", 
                    "description": "Number of the instances to be be retained.", 
                    "format": "int64"
                }
            }, 
            "title": "Generated Report retention policy."
        }, 
        "vm_nic_reference": {
            "description": "The reference to a vm_nic", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_nic", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_nic"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vm_nic"
        }, 
        "remote_syslog_module_reference": {
            "description": "The reference to a remote_syslog_module", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_syslog_module", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_syslog_module"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a remote_syslog_module"
        }, 
        "directory_service_user": {
            "properties": {
                "user_principal_name": {
                    "type": "string", 
                    "description": "The UserPrincipalName of the user from the directory service.\n", 
                    "maxLength": 104
                }, 
                "directory_service_reference": {
                    "description": "Directory service reference if the user type is directory service.\n", 
                    "$ref": "#/definitions/directory_service_reference"
                }, 
                "user_attribute_value": {
                    "type": "string", 
                    "description": "The Unique identifier for each user from the directory service.\n", 
                    "maxLength": 104
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "user_principal_name", 
                        "directory_service_reference"
                    ]
                }, 
                {
                    "required": [
                        "user_attribute_value", 
                        "directory_service_reference"
                    ]
                }
            ], 
            "type": "object", 
            "description": "A Directory Service user.", 
            "title": "Directory Service user Definition."
        }, 
        "app_substrate_input": {
            "description": "Substrate definition", 
            "required": [
                "uuid", 
                "name", 
                "type", 
                "variable_list", 
                "action_list"
            ], 
            "type": "object", 
            "properties": {
                "platform_data": {
                    "type": "string", 
                    "description": ""
                }, 
                "instance_address": {
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "instance_id": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "instance_name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "readiness_probe": {
                    "$ref": "#/definitions/app_substrate_readiness_probe"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_substrate_reference"
                }, 
                "os_type": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "VM", 
                        "AHV_VM", 
                        "AWS_VM", 
                        "GCP_VM", 
                        "AZURE_VM", 
                        "EXISTING_VM", 
                        "BARE_METAL", 
                        "GENERIC", 
                        "VMWARE_VM", 
                        "K8S_POD"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "create_spec": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Spec of the substrate"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": "List of variables"
                }, 
                "instance_power_state": {
                    "type": "string", 
                    "description": ""
                }
            }, 
            "title": "Substrate definition"
        }, 
        "recovery_plan": {
            "description": "Recovery Plan creation/modification spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Recovery Plan name", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/recovery_plan_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for the Recovery Plan.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Recovery Plan creation/modification spec"
        }, 
        "vm_recovery_point_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_recovery_point", 
                    "x-ntnx-enum": [
                        "vm_recovery_point"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vm_recovery_point list"
        }, 
        "app_task_resources_def_status": {
            "description": "Libraty task resources definition.", 
            "required": [
                "type", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "target_any_local_reference": {
                    "$ref": "#/definitions/entity_reference"
                }, 
                "retries": {
                    "type": "string", 
                    "description": "Number of retries for the task."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list."
                }, 
                "project_reference_list": {
                    "items": {
                        "$ref": "#/definitions/project_reference"
                    }, 
                    "type": "array", 
                    "description": "The projects this task has been assigned to"
                }, 
                "child_tasks_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Task attrs for application of type object."
                }, 
                "timeout_secs": {
                    "type": "string", 
                    "description": "task timeout."
                }, 
                "type": {
                    "type": "string", 
                    "description": ""
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }
            }, 
            "title": "Library task resources"
        }, 
        "topology_response": {
            "description": "Topology response.", 
            "type": "object", 
            "properties": {
                "vertex_list": {
                    "items": {
                        "$ref": "#/definitions/vertex"
                    }, 
                    "type": "array", 
                    "description": "List containing vertices information in the topology visualization in Security Monitoring.\n"
                }, 
                "edge_list": {
                    "items": {
                        "$ref": "#/definitions/edge"
                    }, 
                    "type": "array", 
                    "description": "List containing edges information in the topology visualization in Security Monitoring.\n"
                }
            }, 
            "title": "Topology Response"
        }, 
        "network_device_reference": {
            "description": "The reference to a network_device", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_device", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_device"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a network_device"
        }, 
        "prism_central_request_status": {
            "description": "Prism central cluster expansion status definition.", 
            "required": [
                "task_uuid", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "task_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Task UUID.", 
                    "format": "UUID"
                }, 
                "resources": {
                    "$ref": "#/definitions/prism_central_nodes"
                }
            }, 
            "title": "Prism central cluster expansion status"
        }, 
        "vpc_route_table": {
            "description": "An intentful representation of a vpc_route_table spec", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for vpc_route_table.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/vpc_route_table_resources"
                }, 
                "name": {
                    "type": "string", 
                    "description": "vpc_route_table Name.", 
                    "maxLength": 256
                }
            }, 
            "title": "vpc_route_table Intent Spec with placement specified"
        }, 
        "ipfix_exporter_resources": {
            "description": "IPFix exporter API resources definition", 
            "type": "object", 
            "properties": {
                "collector_ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IP address of the IPFix collector"
                }, 
                "collector_protocol": {
                    "x-ntnx-enum": [
                        "UDP", 
                        "TCP"
                    ], 
                    "type": "string", 
                    "description": "Network Protocol used by the IPFix collector"
                }, 
                "collector_port": {
                    "type": "integer", 
                    "description": "Port of the IPFix collector", 
                    "format": "int32"
                }
            }, 
            "title": "IPFix exporter API resources"
        }, 
        "ssh_user_list_intent_response": {
            "description": "Response object for intentful operation of ssh_users", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/ssh_user_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ssh_user_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "account_metadata": {
            "description": "The account kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when account was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "account", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "account"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "account uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the account is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when account was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the account. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the account. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "account name", 
                    "maxLength": 80
                }
            }, 
            "title": "account metadata"
        }, 
        "ca_chain_spec": {
            "description": "CA chain spec", 
            "required": [
                "name", 
                "ca_chain"
            ], 
            "type": "object", 
            "properties": {
                "ca_chain": {
                    "type": "string", 
                    "description": "Content of CA chain", 
                    "format": "byte"
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the CA Chain file", 
                    "maxLength": 64
                }
            }, 
            "title": "CA chain spec"
        }, 
        "metadata": {
            "description": "Result metadata object definition.", 
            "type": "object", 
            "properties": {
                "instance_list": {
                    "items": {
                        "$ref": "#/definitions/entity_metadata"
                    }, 
                    "type": "array", 
                    "description": "List of entity instances."
                }, 
                "user_query": {
                    "type": "string", 
                    "description": "User query in simple text."
                }, 
                "filter_list": {
                    "items": {
                        "$ref": "#/definitions/expression"
                    }, 
                    "type": "array", 
                    "description": "List of filters."
                }, 
                "entity_type": {
                    "type": "string", 
                    "description": "Type of the entity."
                }
            }, 
            "title": "Metadata Defintion"
        }, 
        "app_runlog_output_status": {
            "description": "Runlog output", 
            "required": [
                "output_list"
            ], 
            "type": "object", 
            "properties": {
                "output_list": {
                    "items": {
                        "$ref": "#/definitions/app_runlog_output"
                    }, 
                    "type": "array", 
                    "description": "application runlog resources"
                }
            }, 
            "title": "Runlog output"
        }, 
        "ssp_migration_status": {
            "description": "SSP configuration migration state.", 
            "type": "object", 
            "properties": {
                "task_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Resultant task uuid for the submitted request.", 
                    "format": "UUID"
                }
            }, 
            "title": "SSP configuration migration state."
        }, 
        "widget_data_projection": {
            "description": "Filtering, sorting and limit properties for the data to collected.", 
            "type": "object", 
            "properties": {
                "filter_criteria": {
                    "type": "string", 
                    "description": "FIQL criteria that will be used to filter the returned data."
                }, 
                "sort_key": {
                    "x-ntnx-enum": [
                        "MAX", 
                        "FIRST", 
                        "MIN", 
                        "LAST", 
                        "LATEST"
                    ], 
                    "type": "string", 
                    "description": "Aggregation to be used while sorting time-series data."
                }, 
                "sort_column": {
                    "type": "string", 
                    "description": "Entity Property based on which the result data is to be sorted."
                }, 
                "sort_order": {
                    "x-ntnx-enum": [
                        "ASCENDING", 
                        "DESCENDING"
                    ], 
                    "type": "string", 
                    "description": "Order of sorting."
                }, 
                "limit": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Limit on the maximum number of entities to be represented in the\nwidget. A limit value of more than 10 would not be entertained.\n", 
                    "format": "int64"
                }, 
                "custom_key_values": {
                    "$ref": "#/definitions/generic_key_value_pair"
                }
            }, 
            "title": "Widget Data Projection."
        }, 
        "file_item": {
            "description": "An intentful representation of a file_item spec", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "file_item Name.", 
                    "maxLength": 256
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for file_item.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/file_item_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "file_item Intent Spec with placement specified"
        }, 
        "remote_syslog_server_intent_input": {
            "description": "An intentful representation of a remote_syslog_server", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/remote_syslog_server"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_syslog_server_metadata"
                }
            }, 
            "title": "remote_syslog_server Intent Entity"
        }, 
        "prism_central_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "prism_central", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "prism_central"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "recovery_plan_entities": {
            "description": "Entities associated with Recovery Plan. It includes the live entities and the entites for which Recovery Points are available.\n", 
            "required": [
                "entities_per_availability_zone_list"
            ], 
            "type": "object", 
            "properties": {
                "entities_per_availability_zone_list": {
                    "items": {
                        "required": [
                            "availability_zone_url"
                        ], 
                        "type": "object", 
                        "properties": {
                            "availability_zone_url": {
                                "type": "string", 
                                "description": "URL of the Availability Zone.\n"
                            }, 
                            "availability_zone_order_list": {
                                "items": {
                                    "properties": {
                                        "availability_zone_list": {
                                            "items": {
                                                "type": "object", 
                                                "properties": {
                                                    "availability_zone_url": {
                                                        "type": "string", 
                                                        "description": "URL of the Availability Zone.\n"
                                                    }
                                                }
                                            }, 
                                            "type": "array", 
                                            "description": "List of Availability Zones."
                                        }
                                    }
                                }, 
                                "type": "array", 
                                "description": "List of recovery Availability Zone orders for entities in the Recovery Plan. More than one entry in this list indicates entities in Recovery Plan are protected by the Protection Rules with different recovery Availability Zone order and makes Recovery Plan invalid.\n"
                            }, 
                            "entity_list": {
                                "items": {
                                    "required": [
                                        "any_entity_reference", 
                                        "is_recovery_point"
                                    ], 
                                    "properties": {
                                        "protection_status": {
                                            "x-ntnx-enum": [
                                                "PROTECTED", 
                                                "UNPROTECTED"
                                            ], 
                                            "type": "string", 
                                            "description": "Protection status of the entity."
                                        }, 
                                        "recoverability": {
                                            "type": "object", 
                                            "description": "Recoverability of the entity. Applicable only for the entities for which synchronous replication is enabled.\n", 
                                            "properties": {
                                                "status": {
                                                    "x-ntnx-enum": [
                                                        "RECOVERABLE", 
                                                        "UNRECOVERABLE"
                                                    ], 
                                                    "type": "string", 
                                                    "description": "Recoverability status of the entity. Below is allowed list of recoverability statuses. RECOVERABLE - Entity is recoverable. UNRECOVERABLE - Entity is not recoverable.\n"
                                                }, 
                                                "reason": {
                                                    "type": "string", 
                                                    "description": "Reason behind entity being unrecoverable or partially recoverable.\n", 
                                                    "maxLength": 256
                                                }
                                            }
                                        }, 
                                        "recovery_availability_zone_order_index": {
                                            "type": "integer", 
                                            "description": "Index of recovery Availability Zone order for this entity in availability_zone_order_list. Index starts at 0.\n", 
                                            "format": "int32"
                                        }, 
                                        "is_recovery_point": {
                                            "type": "boolean", 
                                            "description": "On the Availability Zone, whether the live entity is present or the Recovery Points for the entity are present. This will be set to true, only if the Recovery Points for the entity are present on the Availability Zone and not the live entity.\n"
                                        }, 
                                        "replication_status": {
                                            "x-ntnx-enum": [
                                                "SYNCED", 
                                                "SYNCING", 
                                                "OUT_OF_SYNC"
                                            ], 
                                            "type": "string", 
                                            "description": "Replication status of the entity for which synchronous replication is enabled.\n"
                                        }, 
                                        "any_entity_reference": {
                                            "description": "Reference to the entity.", 
                                            "$ref": "#/definitions/reference"
                                        }
                                    }
                                }, 
                                "type": "array", 
                                "description": "List of protected entities associated with Recovery Plan. This list includes the entities which are live and the entities for which Recovery Points are present on the Availability Zone.\n"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "List of entities and recovery Availability Zones order list per local Availability Zone. In case of public cloud, entity list and recovery Availability Zones order for each of the Availability Zones will be reported. For example, Let AZ1 and AZ2 be the two Availability Zones for a public cloud and OnPrem be the on-premise Availability Zone. If VMs VM1 and VM2 on OnPrem is protected by a Protection Rule with Availabilty Zone order [OnPrem, AZ1, AZ2], then entities_per_availability_zone_list will be [{AZ1, [[OnPrem, AZ1, AZ2]], [{VM1}, {VM2}]},\n {AZ2, [[OnPrem, AZ1, AZ2]], [{VM1}, {VM2}]}].\nAll the Availability Zones should have same Availability Zone order for a valid Recovery Plan.\n"
                }
            }, 
            "title": "Entities associated with Recovery Plan"
        }, 
        "vg_recovery_point_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vg_recovery_point", 
                    "x-ntnx-enum": [
                        "vg_recovery_point"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vg_recovery_point list"
        }, 
        "query_term": {
            "description": "Query term object definition. This essentially holds the\nvarious interpretation of a single query term.\n", 
            "type": "object", 
            "properties": {
                "term": {
                    "type": "string", 
                    "description": "User passed string for the query term."
                }, 
                "token_list": {
                    "items": {
                        "$ref": "#/definitions/token"
                    }, 
                    "type": "array", 
                    "description": "All possible interpretations of the term."
                }
            }, 
            "title": "Query Term Definition"
        }, 
        "app_service_port": {
            "description": "Port for Application Service.", 
            "required": [
                "target_port", 
                "protocol"
            ], 
            "type": "object", 
            "properties": {
                "protocol": {
                    "type": "string", 
                    "description": ""
                }, 
                "exposed_port": {
                    "type": "string", 
                    "description": ""
                }, 
                "exposed_address": {
                    "type": "string", 
                    "description": ""
                }, 
                "target_port": {
                    "type": "string", 
                    "description": ""
                }, 
                "endpoint_name": {
                    "type": "string", 
                    "description": ""
                }, 
                "container_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s continaer spec"
                }
            }, 
            "title": "Port for Application Service."
        }, 
        "availability_zone_intent_resource": {
            "description": "Response object for intentful operations on a availability_zone", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/availability_zone_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/availability_zone"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/availability_zone_metadata"
                }
            }, 
            "title": "availability_zone Intent Response"
        }, 
        "ipfix_exporter_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ipfix_exporter", 
                    "x-ntnx-enum": [
                        "ipfix_exporter"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for ipfix_exporter list output"
        }, 
        "blueprint_intent_input": {
            "description": "An intentful representation of a blueprint", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/blueprint"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "blueprint Intent Entity"
        }, 
        "cloud_trust_def_status": {
            "description": "Cloud Pairing status.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Cloud Trust name."
                }, 
                "resources": {
                    "$ref": "#/definitions/cloud_trust_response"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for the cloud trust."
                }
            }, 
            "title": "Cloud Pairing status."
        }, 
        "capability_response": {
            "description": "Generic capabilties object response definition", 
            "type": "object", 
            "properties": {
                "capabilities": {
                    "items": {
                        "$ref": "#/definitions/capability"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Capabilities response"
        }, 
        "internal_routing_protocol_config": {
            "properties": {
                "local_prefix_list": {
                    "items": {
                        "$ref": "#/definitions/ip_subnet"
                    }, 
                    "type": "array", 
                    "description": "list of local prefixes to be advertised over eBGP"
                }, 
                "ibgp_config_list": {
                    "items": {
                        "$ref": "#/definitions/bgp_config"
                    }, 
                    "type": "array", 
                    "description": "iBGP configuration."
                }, 
                "ospf_config": {
                    "$ref": "#/definitions/ospf_config"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "ospf_config"
                    ]
                }, 
                {
                    "required": [
                        "ibgp_config_list"
                    ]
                }, 
                {
                    "required": [
                        "local_prefix_list"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Describes the routing protocol configuration spec needed by this gateway\nto peer and learn routes from internal routers using either iBGP or OSFP.\n", 
            "title": "Internal routing protocol (ibgp/ospf) config spec"
        }, 
        "aws_elastic_ip_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_elastic_ip", 
                    "x-ntnx-enum": [
                        "aws_elastic_ip"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for aws_elastic_ip list output"
        }, 
        "recovery_plan_l2_stretch_config": {
            "description": "Configuration for the Layer2 stretch of the subnet.", 
            "required": [
                "local_vtep_gateway_config", 
                "remote_vtep_gateway_reference", 
                "local_vtep_interface_ip_address", 
                "remote_vtep_interface_ip_address"
            ], 
            "type": "object", 
            "properties": {
                "local_vtep_interface_ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "VTEP Interface IP address on site for which subnet configuration is being specified.\n"
                }, 
                "remote_vtep_gateway_reference": {
                    "description": "Reference to the VTEP Gateway on site to which subnet is being stretched.\n", 
                    "$ref": "#/definitions/vtep_gateway_reference"
                }, 
                "local_vtep_gateway_config": {
                    "description": "Configuration of the VTEP Gateway.", 
                    "type": "object", 
                    "properties": {
                        "name": {
                            "type": "string", 
                            "description": "VTEP Gateway name."
                        }
                    }, 
                    "title": "VTEP Gateway configuration"
                }, 
                "remote_vtep_interface_ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "VTEP Interface IP address on site to which subnet is extended.\n"
                }
            }, 
            "title": "Configuration for creating Layer2 stretch for the subnet."
        }, 
        "rewrite_rule": {
            "description": "Rule to rewrite api endpoints.", 
            "required": [
                "regex", 
                "replacement"
            ], 
            "type": "object", 
            "properties": {
                "regex": {
                    "type": "string", 
                    "maxLength": 260
                }, 
                "replacement": {
                    "type": "string", 
                    "maxLength": 260
                }
            }, 
            "title": "Rewrite rule"
        }, 
        "project_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "project", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "project"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "recovery_plan_job_step_execution_status": {
            "description": "A step executes an action and can have sub-steps required to perfom the action. Each step has its own UUID, parent UUID and status of the action it is/was performing.\n", 
            "required": [
                "step_uuid", 
                "operation_type", 
                "status"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "x-ntnx-enum": [
                        "QUEUED", 
                        "RUNNING", 
                        "COMPLETED", 
                        "FAILED", 
                        "ABORTED", 
                        "COMPLETED_WITH_WARNING"
                    ], 
                    "type": "string", 
                    "description": "Status of this step."
                }, 
                "error_detail": {
                    "type": "string", 
                    "description": "The error detail for the step failure."
                }, 
                "any_entity_reference_list": {
                    "items": {
                        "$ref": "#/definitions/reference"
                    }, 
                    "type": "array", 
                    "description": "Reference to the list of the entities on which the step is performing action.\n"
                }, 
                "start_time": {
                    "type": "string", 
                    "description": "Time when this step started.", 
                    "format": "date-time"
                }, 
                "recovered_entity_info_list": {
                    "items": {
                        "$ref": "#/definitions/recovered_entity_information"
                    }, 
                    "type": "array", 
                    "description": "List containing the details about the recovered entities.\n"
                }, 
                "percentage_complete": {
                    "type": "integer", 
                    "description": "Percentage of step completed.", 
                    "format": "int32"
                }, 
                "step_sequence_number": {
                    "type": "integer", 
                    "description": "Sequence number of the step among its siblings. This can be used for ordering the sub-steps for a step.\n", 
                    "format": "int64"
                }, 
                "end_time": {
                    "type": "string", 
                    "description": "Time when this step ended.", 
                    "format": "date-time"
                }, 
                "operation_type": {
                    "x-ntnx-enum": [
                        "DELAY", 
                        "STAGE_RECOVERY", 
                        "ENTITY_RECOVERY", 
                        "ENTITY_MIGRATION", 
                        "ENTITY_RESTORATION", 
                        "ENTITY_SNAPSHOT_SYNC", 
                        "VM_POWER_ON", 
                        "ASSIGN_FLOATING_IP", 
                        "IP_CUSTOMIZATION", 
                        "NETWORK_CREATION", 
                        "NETWORK_DELETION", 
                        "ENTITIES_CLEANUP", 
                        "SCRIPT_EXECUTION", 
                        "RESOURCE_RESERVATION", 
                        "AUDIT", 
                        "SYNC_RECOVERY_POINTS", 
                        "VM_VOLUME_ATTACHMENT"
                    ], 
                    "type": "string", 
                    "description": "Type of operation being performed."
                }, 
                "parent_step_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the parent step.\n", 
                    "format": "UUID"
                }, 
                "message": {
                    "type": "string", 
                    "description": "User readable message for the action being done for the step.\n"
                }, 
                "error_code": {
                    "x-ntnx-enum": [
                        "RECOVERY_POINT_CREATION_FAILED", 
                        "RECOVERY_POINT_REPLICATION_FAILED", 
                        "AZ_NOT_REACHABLE", 
                        "OPERATION_TIMED_OUT", 
                        "ENTITY_NOT_FOUND", 
                        "VNIC_ATTACHMENT_FAILED", 
                        "INTERNAL_ERROR"
                    ], 
                    "type": "string", 
                    "description": "The error code for the step failure."
                }, 
                "step_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of a step.", 
                    "format": "UUID"
                }
            }, 
            "title": "Execution status of a step."
        }, 
        "routing_policy_intent_resource": {
            "description": "Response object for intentful operations on a routing_policy", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/routing_policy_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/routing_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/routing_policy_metadata"
                }
            }, 
            "title": "routing_policy Intent Response"
        }, 
        "report_instance_intent_input": {
            "description": "An intentful representation of a report_instance", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/report_instance"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/report_instance_metadata"
                }
            }, 
            "title": "report_instance Intent Entity"
        }, 
        "app_action_input": {
            "description": "Action definition for Application", 
            "type": "object", 
            "properties": {
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "critical": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "action critical flag"
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "action attrs"
                }, 
                "runbook": {
                    "description": "Action runbooks\n", 
                    "$ref": "#/definitions/app_runbook_input"
                }, 
                "type": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Action for Application"
        }, 
        "dhcp_options": {
            "description": "Spec for defining DHCP options.", 
            "type": "object", 
            "properties": {
                "domain_name_server_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "maxItems": 32
                }, 
                "boot_file_name": {
                    "type": "string"
                }, 
                "domain_search_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "maxItems": 32
                }, 
                "domain_name": {
                    "type": "string"
                }, 
                "tftp_server_name": {
                    "type": "string"
                }
            }, 
            "title": "DHCP options"
        }, 
        "project_intent_input": {
            "description": "An intentful representation of a project", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/project"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/project_metadata"
                }
            }, 
            "title": "project Intent Entity"
        }, 
        "account_list_intent_response": {
            "description": "Response object for intentful operation of accounts", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/account_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/account_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "vm_disk_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_disk", 
                    "x-ntnx-enum": [
                        "vm_disk"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for vm_disk list output"
        }, 
        "app_service_element": {
            "description": "Service definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "action_list", 
                "variable_list"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for service"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Service element for Application"
        }, 
        "vpc": {
            "description": "VPC input spec", 
            "required": [
                "name"
            ], 
            "properties": {
                "name": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/vpc_resources"
                }, 
                "description": {
                    "type": "string", 
                    "maxLength": 1000
                }
            }, 
            "title": "VPC spec"
        }, 
        "host_intent_response": {
            "description": "Response object for intentful operations on a host", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/host_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/host"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/host_metadata"
                }
            }, 
            "title": "host Intent Response"
        }, 
        "marketplace_item_def_status": {
            "description": "Detailed information about marketplace item", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Marketplace item name"
                }, 
                "resources": {
                    "$ref": "#/definitions/marketplace_item_output_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Marketplace item description"
                }
            }, 
            "title": "Marketplace item information"
        }, 
        "mh_vm_storage_config_status": {
            "description": "Current state of storage parameters", 
            "type": "object", 
            "properties": {
                "qos_policy": {
                    "description": "Storage QoS parameters applied on the VM.", 
                    "$ref": "#/definitions/storage_qos_policy_config_output"
                }, 
                "flash_mode": {
                    "description": "Indicates whether Flash Mode is enabled or disabled on the VM.\nWhen enabled, virtual disks of VM are pinned to the hot tier.\n", 
                    "$ref": "#/definitions/flash_mode"
                }
            }, 
            "title": "VM Storage Config output"
        }, 
        "entity_sync_rule_intent_input": {
            "description": "An intentful representation of a entity_sync_rule", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/entity_sync_rule"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/entity_sync_rule_metadata"
                }
            }, 
            "title": "entity_sync_rule Intent Entity"
        }, 
        "environment_list_intent_response": {
            "description": "Response object for intentful operation of environments", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/environment_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/environment_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "auto_completion": {
            "description": "Auto completion object definition.", 
            "type": "object", 
            "properties": {
                "search_type": {
                    "x-ntnx-enum": [
                        "SEARCH_FOR", 
                        "STAY_ON"
                    ], 
                    "type": "string", 
                    "description": "Search type for the autocompletion.\n"
                }, 
                "complete_query": {
                    "type": "string", 
                    "description": "The complete query corresponding the the auto-completion."
                }, 
                "query_term_list": {
                    "items": {
                        "$ref": "#/definitions/query_term"
                    }, 
                    "type": "array", 
                    "description": "Structured representation that infers query intent unambiguously. Client will echo this information back to the backend. Essentially, it is like a search result link. The list has an item corresponding to every query term. One user query is nothing but a collection of multiple query terms.\n"
                }, 
                "entity_type": {
                    "type": "string", 
                    "description": "Enity type or focus for the autocompletion."
                }
            }, 
            "title": "Auto Completion Definition"
        }, 
        "identity_provider_intent_resource": {
            "description": "Response object for intentful operations on a identity_provider", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/identity_provider_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/identity_provider"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/identity_provider_metadata"
                }
            }, 
            "title": "identity_provider Intent Response"
        }, 
        "ngt_metadata": {
            "description": "The ngt kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when ngt was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "ngt", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ngt"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "ngt uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the ngt is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when ngt was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the ngt. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the ngt. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "ngt name", 
                    "maxLength": 80
                }
            }, 
            "title": "ngt metadata"
        }, 
        "support_case_def_status": {
            "description": "Support Case creation/modification spec.", 
            "required": [
                "resources", 
                "subject"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The state of the support case entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the support case."
                }, 
                "resources": {
                    "$ref": "#/definitions/support_case_response"
                }, 
                "subject": {
                    "type": "string", 
                    "description": "Subject of the support case."
                }
            }, 
            "title": "Support Case creation/modification spec."
        }, 
        "serial_port": {
            "description": "Indicates the configuration of serial ports of the VM.\n", 
            "type": "object", 
            "properties": {
                "index": {
                    "type": "integer", 
                    "description": "Index of the serial port."
                }, 
                "is_connected": {
                    "type": "boolean", 
                    "description": "Indicates whether the serial port connection is connected or not.\n"
                }
            }, 
            "title": "VM serial port connection."
        }, 
        "support_case_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "support_case", 
                    "x-ntnx-enum": [
                        "support_case"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for support_case list output"
        }, 
        "aws_vm_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_vm", 
                    "x-ntnx-enum": [
                        "aws_vm"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for aws_vm list output"
        }, 
        "contact_information": {
            "description": "Contact information object.", 
            "type": "object", 
            "properties": {
                "phone_number": {
                    "type": "string", 
                    "description": "Phone Number of the contact."
                }, 
                "email_address": {
                    "pattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)", 
                    "type": "string", 
                    "description": "Email address of the contact."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the contact."
                }
            }, 
            "title": "Contact Information object."
        }, 
        "marketplace_item_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "marketplace_item", 
                    "x-ntnx-enum": [
                        "marketplace_item"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for marketplace_item list"
        }, 
        "provider_oauth_token": {
            "description": "Oauth token from Oauth2 provider", 
            "required": [
                "access_token", 
                "token_type", 
                "expires_in", 
                "refresh_token", 
                "scope"
            ], 
            "type": "object", 
            "properties": {
                "access_token": {
                    "type": "string", 
                    "description": "access_token to be used for accessing gateway"
                }, 
                "token_type": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Only value possible is \"bearer\"."
                }, 
                "expires_in": {
                    "type": "integer", 
                    "description": "Token expiration time in seconds", 
                    "format": "int64"
                }, 
                "refresh_token": {
                    "type": "string", 
                    "description": "Refresh_token which can used to get new token"
                }, 
                "scope": {
                    "type": "string", 
                    "description": "Scope string with individual scopes separated by space"
                }
            }, 
            "title": "Oauth token from Oauth2 provider"
        }, 
        "image_remote_copy_input": {
            "description": "Specify the remote PC and image(s) from the local cluster to copy onto remote PC's cluster\n", 
            "type": "object", 
            "properties": {
                "image_reference_list": {
                    "items": {
                        "$ref": "#/definitions/image_reference"
                    }, 
                    "type": "array", 
                    "description": "Reference to the images from local PC to be used for remote copying. These images will be copied to the remote PC cluster\n"
                }
            }, 
            "title": "Input for image remote copy operation"
        }, 
        "entity_filter_expression": {
            "description": "Entity Filter Expression is a combination of LHS-Operator-RHS. This filter expression helps express the Filter on actual entities. Example1 - To express All VMs\n  left_hand_side = VM\n  operator = IN\n  right_hand_side = ALL\nExample2 - To express Not VM1 or VM2\n  left_hand_side =  VM\n  operator = NOT_IN\n  right_hand_side = [\"VM1\", \"VM2\"]\n", 
            "required": [
                "left_hand_side", 
                "operator", 
                "right_hand_side"
            ], 
            "type": "object", 
            "properties": {
                "operator": {
                    "x-ntnx-enum": [
                        "IN", 
                        "NOT_IN"
                    ], 
                    "type": "string", 
                    "description": "The operator in the filter expression."
                }, 
                "right_hand_side": {
                    "description": "The Right hand side(RHS) of a filter expression.", 
                    "$ref": "#/definitions/right_hand_side"
                }, 
                "left_hand_side": {
                    "description": "The LHS of the filter expression - the entity type.", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "entity_type"
                            ]
                        }
                    ], 
                    "properties": {
                        "entity_type": {
                            "type": "string", 
                            "description": "The representation of the possible value of an LHS, in this case it is an entity type.A certain entity type e.g. VM Note. To express all entity types, use ALL\n", 
                            "maxLength": 64
                        }
                    }
                }
            }, 
            "title": "Entity Filter Expression."
        }, 
        "underlay_subnet_resources": {
            "description": "Underlay subnet entity definition", 
            "required": [
                "gateway", 
                "netmask"
            ], 
            "type": "object", 
            "properties": {
                "datacenter_reference": {
                    "$ref": "#/definitions/datacenter_reference"
                }, 
                "netmask": {
                    "type": "string", 
                    "description": "Netmask (could be in CIDR or IP format)", 
                    "maxLength": 50
                }, 
                "gateway": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Gateway IP address"
                }
            }, 
            "title": "Underlay subnet entity"
        }, 
        "file_item_resources": {
            "description": "File item spec object", 
            "type": "object", 
            "properties": {
                "checksum": {
                    "description": "Checksum of the file_item. Should only be set when being used to validate an file_item when setting the source of an file_item, otherwise this is generated by file_item service.", 
                    "$ref": "#/definitions/checksum"
                }, 
                "source_uri": {
                    "type": "string", 
                    "description": "URI that points at the file to create the file_item from."
                }, 
                "data_source_reference": {
                    "description": "Reference to VM disk or image. The expected kind for VMs is vm_disk and for Images is image. In case of VM Disk the uuid should be the disk device uuid, where the disk device is from disk_list from VM status. In case of Images the uuid should be the uuid of the image.", 
                    "$ref": "#/definitions/reference"
                }, 
                "source_auth": {
                    "description": "Authentication object needed to fetch the source.", 
                    "$ref": "#/definitions/source_auth"
                }
            }, 
            "title": "File item spec object"
        }, 
        "common_report_config_intent_input": {
            "description": "An intentful representation of a common_report_config", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/common_report_config"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/common_report_config_metadata"
                }
            }, 
            "title": "common_report_config Intent Entity"
        }, 
        "severity": {
            "x-ntnx-enum": [
                "critical", 
                "warning", 
                "info"
            ], 
            "type": "string", 
            "description": "Alert severity", 
            "title": "Alert severity"
        }, 
        "aws_vpc_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_vpc", 
                    "x-ntnx-enum": [
                        "aws_vpc"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for aws_vpc list output"
        }, 
        "streaming_policy_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "streaming_policy", 
                    "x-ntnx-enum": [
                        "streaming_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for streaming_policy list output"
        }, 
        "availability_zone_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "availability_zone", 
                    "x-ntnx-enum": [
                        "availability_zone"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for availability_zone list output"
        }, 
        "ip_config": {
            "description": "IP config.", 
            "type": "object", 
            "properties": {
                "default_gateway_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Default gateway IP address."
                }, 
                "dhcp_server_address": {
                    "$ref": "#/definitions/address"
                }, 
                "pool_list": {
                    "items": {
                        "$ref": "#/definitions/ip_pool"
                    }, 
                    "type": "array"
                }, 
                "prefix_length": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "subnet_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Subnet IP address."
                }, 
                "dhcp_options": {
                    "$ref": "#/definitions/dhcp_options"
                }
            }, 
            "title": "IP config"
        }, 
        "oauth_client_input": {
            "description": "Oauth client information", 
            "required": [
                "client_name", 
                "client_description", 
                "redirect_uris", 
                "default_scopes"
            ], 
            "type": "object", 
            "properties": {
                "client_name": {
                    "type": "string", 
                    "description": "client name of the Oauth Client", 
                    "maxLength": 64
                }, 
                "redirect_uris": {
                    "items": {
                        "type": "string", 
                        "description": "entry for redirect URIs"
                    }, 
                    "type": "array"
                }, 
                "client_description": {
                    "type": "string", 
                    "description": "client description of the Oauth Client", 
                    "maxLength": 1000
                }, 
                "default_scopes": {
                    "items": {
                        "type": "string", 
                        "description": "entry for default scopes"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Oauth client"
        }, 
        "virtual_network": {
            "description": "Virtual network input spec", 
            "required": [
                "name"
            ], 
            "properties": {
                "name": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/virtual_network_resources"
                }, 
                "description": {
                    "type": "string", 
                    "maxLength": 1000
                }
            }, 
            "title": "Virtual network spec"
        }, 
        "app_resources_def_status": {
            "description": "Status for Application.", 
            "required": [
                "variable_list", 
                "deployment_list", 
                "action_list", 
                "credential_list", 
                "app_blueprint_reference", 
                "app_state"
            ], 
            "type": "object", 
            "properties": {
                "app_state": {
                    "type": "string"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of Action for Application."
                }, 
                "source_marketplace_name": {
                    "type": "string", 
                    "description": "Name of the marketplace item used to create this app"
                }, 
                "credential_list": {
                    "items": {
                        "$ref": "#/definitions/app_credential_response"
                    }, 
                    "type": "array", 
                    "description": "Credential list for appspec"
                }, 
                "app_blueprint_config_reference": {
                    "$ref": "#/definitions/blueprint_reference"
                }, 
                "app_blueprint_reference": {
                    "$ref": "#/definitions/blueprint_reference"
                }, 
                "app_profile_config_reference": {
                    "$ref": "#/definitions/app_profile_reference"
                }, 
                "source_marketplace_version": {
                    "type": "string", 
                    "description": "Version of the marketplace item used to create this app"
                }, 
                "client_attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Data needed for clients."
                }, 
                "dependency_list": {
                    "items": {
                        "$ref": "#/definitions/blueprint_dependency_list"
                    }, 
                    "type": "array", 
                    "description": "Dependencies or edges between callrunbook tasks formed by usage of macros in child tasks"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": "List of variables"
                }, 
                "deployment_list": {
                    "items": {
                        "$ref": "#/definitions/app_deployment_response"
                    }, 
                    "type": "array", 
                    "description": "List of Deployment Spec for Application."
                }
            }, 
            "title": "Status for Application."
        }, 
        "parameter_error": {
            "description": "error associated with the parameter", 
            "type": "object", 
            "properties": {
                "error_type": {
                    "x-ntnx-enum": [
                        "VALIDATION"
                    ], 
                    "type": "string", 
                    "description": "type of error like ValidationError"
                }, 
                "error_object": {
                    "description": "error message object.", 
                    "$ref": "#/definitions/error_message_object"
                }, 
                "parameter_name": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "name of the parameter.", 
                    "maxLength": 64
                }
            }, 
            "title": "Parameter error"
        }, 
        "common_report_config_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "common_report_config", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "common_report_config"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "docker_registry_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "docker_registry", 
                    "x-ntnx-enum": [
                        "docker_registry"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for docker_registry list output"
        }, 
        "row_element": {
            "properties": {
                "widget_config": {
                    "$ref": "#/definitions/widget_config"
                }, 
                "section_id": {
                    "type": "string", 
                    "description": "Identifier for the section."
                }, 
                "widget_id": {
                    "type": "string", 
                    "description": "Identifier for a predefined widget."
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "section_id"
                    ]
                }, 
                {
                    "required": [
                        "widget_id"
                    ]
                }, 
                {
                    "required": [
                        "widget_config"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Row Element Details. Each row element consists of either a widget config or a\nsection Id.\n", 
            "title": "Row Element Details."
        }, 
        "image_intent_response": {
            "description": "Response object for intentful operations on a image", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/image_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/image"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/image_metadata"
                }
            }, 
            "title": "image Intent Response"
        }, 
        "action_template_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_template", 
                    "x-ntnx-enum": [
                        "action_template"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for action_template list output"
        }, 
        "vpn_gateway_resources_def_status": {
            "description": "VPN gateway creation/modification status.", 
            "type": "object", 
            "properties": {
                "vpc_reference": {
                    "description": "The VPC this gateway belongs to. Applies only to local gateway entities.\n", 
                    "$ref": "#/definitions/vpc_reference"
                }, 
                "operational_status": {
                    "description": "Operational status of this gateway.", 
                    "$ref": "#/definitions/vpn_component_status"
                }, 
                "gateway_device_vendor": {
                    "type": "string", 
                    "description": "3rd Party VPN Vendor. This could be a traditional device vendor (like Cisco ASA, Fortinet etc.) or one of the public cloud providers (eg: AWS).\n"
                }, 
                "public_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Public IP address of this gateway."
                }, 
                "gateway_type": {
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "REMOTE"
                    ], 
                    "type": "string", 
                    "description": "Whether this is local or remote gateway entity."
                }, 
                "deployment": {
                    "description": "Deployment configuration for this gateway.", 
                    "$ref": "#/definitions/deployment_status"
                }, 
                "internal_routing_protocol_config": {
                    "description": "Describes the routing protocol configuration needed by this gateway to\npeer and learn routes from internal routers using either iBGP or OSFP.\n", 
                    "$ref": "#/definitions/internal_routing_protocol_config_status"
                }, 
                "ebgp_config": {
                    "description": "External BGP configuration needed for this gateway to peer with remote\ngateway and exchange routes.\n", 
                    "$ref": "#/definitions/bgp_config_status"
                }, 
                "virtual_network_reference": {
                    "description": "The virtual network this gateway belongs to. Applies only to local gateway entities. This reference is deprecated, use vpc_reference instead.\n", 
                    "$ref": "#/definitions/virtual_network_reference"
                }
            }, 
            "title": "VPN gateway creation/modification status"
        }, 
        "aws_image_list_intent_response": {
            "description": "AWS VPC entity list.", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/aws_image_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_image_list_metadata_output"
                }
            }, 
            "title": "aws_image entity list"
        }, 
        "entity_sync_input": {
            "description": "Entity sync request parameters.", 
            "type": "object", 
            "properties": {
                "should_override": {
                    "type": "boolean", 
                    "description": "Indicates whether to override entities in case of conflicts.\n"
                }
            }, 
            "title": "Entity sync input definition."
        }, 
        "report_instance_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "report_instance", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "report_instance"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "direct_connect_virtual_interface_intent_input": {
            "description": "An intentful representation of a direct_connect_virtual_interface", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/direct_connect_virtual_interface"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/direct_connect_virtual_interface_metadata"
                }
            }, 
            "title": "direct_connect_virtual_interface Intent Entity"
        }, 
        "app_task_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_task", 
                    "x-ntnx-enum": [
                        "app_task"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for app_task list output"
        }, 
        "audit_parameters": {
            "description": "Parameters associated with the operation captured in the audit.", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Parameter name.", 
                    "maxLength": 64
                }, 
                "value": {
                    "description": "Parameter value.", 
                    "$ref": "#/definitions/param_value"
                }
            }, 
            "title": "Audit operation paramters."
        }, 
        "action_template_reference": {
            "description": "The reference to a action_template", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_template", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "action_template"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a action_template"
        }, 
        "vm_host_affinity_policy_vms_list_metadata_output": {
            "description": "API call for VMs list that returns a list will have this metadata block.\n", 
            "type": "object", 
            "properties": {
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found.", 
                    "format": "int64"
                }, 
                "kind": {
                    "default": "vm", 
                    "x-ntnx-enum": [
                        "vm"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset.", 
                    "format": "int64"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list.", 
                    "format": "int64"
                }
            }, 
            "title": "Metadata for VMs list output."
        }, 
        "volume_spec": {
            "description": "Details of the Volume.", 
            "required": [
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The UUID which is used to uniquely identify this Volume.\n", 
                    "format": "UUID"
                }, 
                "volume_recovery_point_reference": {
                    "description": "Reference to the Volume recovery point.", 
                    "$ref": "#/definitions/volume_recovery_point_reference"
                }, 
                "disk_list": {
                    "items": {
                        "$ref": "#/definitions/disk_spec"
                    }, 
                    "type": "array", 
                    "description": "List of associated Volume virtual disks."
                }
            }, 
            "title": "Volume specification"
        }, 
        "migrate_disk_container_reference": {
            "description": "Specifies the disk and the target container", 
            "required": [
                "disk_uuid_list", 
                "target_container_reference"
            ], 
            "type": "object", 
            "properties": {
                "disk_uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "The VM disks to be migrated"
                }, 
                "target_container_reference": {
                    "description": "Reference to the target container for all disks in disk uuid.\n", 
                    "$ref": "#/definitions/reference"
                }
            }, 
            "title": "Disk and Target Container"
        }, 
        "rackable_unit_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "rackable_unit", 
                    "x-ntnx-enum": [
                        "rackable_unit"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for rackable_unit list"
        }, 
        "cloud_tenant_resources": {
            "description": "Tenant definition.", 
            "required": [
                "uuid", 
                "cloud_tenant_status"
            ], 
            "type": "object", 
            "properties": {
                "cloud_tenant_status": {
                    "$ref": "#/definitions/cld_tenant_status"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the cloud_tenant."
                }
            }, 
            "title": "Tenant definition"
        }, 
        "vm_host_affinity_policy_list_metadata": {
            "description": "API call for VM Host Affinity Policy that returns a list will have this metadata block as input.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_host_affinity_policy", 
                    "x-ntnx-enum": [
                        "vm_host_affinity_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Number of records to retrieve relative to the offset.", 
                    "format": "int64"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list.", 
                    "format": "int64"
                }
            }, 
            "title": "Metadata for VM Host Affinity Policy list"
        }, 
        "vm_host_affinity_policy_get_response": {
            "description": "Response while getting an VM Host Affinity Policy.", 
            "type": "object", 
            "properties": {
                "info": {
                    "$ref": "#/definitions/vm_host_affinity_policy_info"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_host_affinity_policy_get_metadata_output"
                }
            }, 
            "title": "VM Host Affinity Policy get response"
        }, 
        "vpc_route_table_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpc_route_table", 
                    "x-ntnx-enum": [
                        "vpc_route_table"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for vpc_route_table list output"
        }, 
        "support_case_intent_response": {
            "description": "Response object for intentful operations on a support_case", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/support_case_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/support_case"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/support_case_metadata"
                }
            }, 
            "title": "support_case Intent Response"
        }, 
        "storage_policy_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "storage_policy", 
                    "x-ntnx-enum": [
                        "storage_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for storage_policy list"
        }, 
        "user_group_list_intent_response": {
            "description": "Response object for intentful operation of user_groups", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/user_group_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/user_group_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "vm_recovery_point_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_recovery_point", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_recovery_point"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "app_runbook_response": {
            "description": "Runbook definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "task_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "main_task_local_reference": {
                    "$ref": "#/definitions/app_task_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Runbook for Application"
        }, 
        "volume_recovery_point_reference": {
            "description": "The reference to a volume_recovery_point", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "volume_recovery_point", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "volume_recovery_point"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a volume_recovery_point"
        }, 
        "vm_host_affinity_policy_vms_info": {
            "description": "VMs information which are part of VM Host Affinity Policy.", 
            "type": "object", 
            "properties": {
                "status": {
                    "x-ntnx-enum": [
                        "PENDING", 
                        "COMPLIANT", 
                        "NONCOMPLIANT"
                    ], 
                    "type": "string", 
                    "description": "Compliance status."
                }, 
                "host_reference": {
                    "$ref": "#/definitions/host_reference"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "vm_categories": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "VM categories across whom current affinity policy is defined.\n"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason for non-compliance.", 
                    "maxLength": 1000
                }, 
                "vm_reference": {
                    "$ref": "#/definitions/vm_reference"
                }
            }, 
            "title": "VMs info."
        }, 
        "vm_nic_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_nic", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_nic"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "direct_connect_service_provider_list_response": {
            "items": {
                "type": "object", 
                "description": "List of direct connect service providers.", 
                "properties": {
                    "offered_bandwidths": {
                        "items": {
                            "type": "object", 
                            "description": "Offered bandwidth and its availability.", 
                            "properties": {
                                "available": {
                                    "type": "boolean", 
                                    "description": "Flag to indicate if this bandwidth offering is currently available."
                                }, 
                                "bandwidth_mbps": {
                                    "type": "integer", 
                                    "description": "Maximum rate, in Mbps, for which a connection is offered."
                                }
                            }
                        }, 
                        "type": "array"
                    }, 
                    "name": {
                        "type": "string", 
                        "description": "Name of the service provider."
                    }
                }
            }, 
            "type": "array", 
            "description": "Response schema for the API to list direct connect\nservice provider information.\n", 
            "title": "Response schema for the list direct connect service providers API."
        }, 
        "aws_image_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_image", 
                    "x-ntnx-enum": [
                        "aws_image"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for aws_image list output"
        }, 
        "source_auth": {
            "description": "File item source authentication object.", 
            "type": "object", 
            "properties": {
                "aws_auth": {
                    "description": "Access credentials for Amazon AWS (access key and secret key).\n", 
                    "$ref": "#/definitions/aws_credentials"
                }, 
                "basic_auth": {
                    "description": "Basic authentication credentials used to access the source for the file item.", 
                    "$ref": "#/definitions/credentials"
                }
            }, 
            "title": "File item source authentication object."
        }, 
        "image_placement_policy_resources": {
            "description": "Describes the image placement policy spec resource object", 
            "required": [
                "image_entity_filter", 
                "cluster_entity_filter"
            ], 
            "type": "object", 
            "properties": {
                "cluster_entity_filter": {
                    "description": "Category list for filtering clsuters", 
                    "$ref": "#/definitions/placement_entity_filter"
                }, 
                "image_entity_filter": {
                    "description": "Category list for filtering images", 
                    "$ref": "#/definitions/placement_entity_filter"
                }, 
                "placement_type": {
                    "x-ntnx-enum": [
                        "AT_LEAST", 
                        "EXACTLY"
                    ], 
                    "type": "string", 
                    "description": "Describes the image placement semantic. AT_LEAST semantics defines that the image will be attempted to be placed in the set of clusters specified by the cluster category filter but at the same time Image will still be allowed to be copied to other cluster not specified as part of the cluster category filter (for example as a result of VM create workflow). In EXACTLY semantics copying image to any cluster not part of cluster category filter will not be allowed.\n"
                }
            }, 
            "title": "Image placement policy spec resources"
        }, 
        "recovery_plan_job_intent_input": {
            "description": "An intentful representation of a recovery_plan_job", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/recovery_plan_job"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/recovery_plan_job_metadata"
                }
            }, 
            "title": "recovery_plan_job Intent Entity"
        }, 
        "aws_availability_zone_intent_resource": {
            "description": "aws_availability_zone entity", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/aws_availability_zone_def_status"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_availability_zone_metadata"
                }
            }, 
            "title": "aws_availability_zone"
        }, 
        "remote_connection_def_status": {
            "description": "Remote connection status definition", 
            "required": [
                "name", 
                "description", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the remote connection entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Remote connection name"
                }, 
                "resources": {
                    "$ref": "#/definitions/remote_connection_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Remote connection description"
                }
            }, 
            "title": "Remote connection status definition"
        }, 
        "cmsp_network_config": {
            "description": "CMSP Network Configuration for PC VM.", 
            "required": [
                "subnet_mask", 
                "default_gateway"
            ], 
            "type": "object", 
            "properties": {
                "network_id": {
                    "type": "string", 
                    "description": "Network ID for CMSP. UUID for AHV or name for ESXi.\n"
                }, 
                "subnet_mask": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Subnet mask IP address."
                }, 
                "type": {
                    "default": "kFull", 
                    "x-ntnx-enum": [
                        "kFull", 
                        "kPrivateNetwork"
                    ], 
                    "type": "string", 
                    "description": "Network type."
                }, 
                "network_name": {
                    "type": "string", 
                    "description": "Network name for cmsp cluster."
                }, 
                "default_gateway": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Gateway IP address."
                }
            }, 
            "title": "CMSP Network Configuration for PC VM."
        }, 
        "vm_power_state_mechanism": {
            "description": "Indicates the mechanism guiding the VM power state transition. Currently used for the transition to \"OFF\" state.\n", 
            "type": "object", 
            "properties": {
                "guest_transition_config": {
                    "$ref": "#/definitions/vm_guest_power_state_transition_config"
                }, 
                "mechanism": {
                    "x-ntnx-enum": [
                        "ACPI", 
                        "GUEST", 
                        "HARD"
                    ], 
                    "type": "string", 
                    "description": "Power state mechanism (ACPI/GUEST/HARD)."
                }
            }, 
            "title": "VM Power State Mechanism"
        }, 
        "app_deployment_response": {
            "description": "Deployment definition for Application.", 
            "required": [
                "uuid", 
                "name", 
                "min_replicas", 
                "max_replicas", 
                "state", 
                "substrate_configuration", 
                "message_list", 
                "element_list", 
                "current_replicas"
            ], 
            "type": "object", 
            "properties": {
                "percent_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "published_service_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_input"
                    }, 
                    "type": "array", 
                    "description": "List of references for published services"
                }, 
                "fault_domain_scope": {
                    "x-ntnx-enum": [
                        "HOST", 
                        "CLUSTER", 
                        "AZ"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_deployment_element"
                    }, 
                    "type": "array"
                }, 
                "service_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_response"
                    }, 
                    "type": "array", 
                    "description": "List of references for services"
                }, 
                "substrate_configuration": {
                    "$ref": "#/definitions/app_substrate_response"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "package_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_response"
                    }, 
                    "type": "array", 
                    "description": "List of references for the packages"
                }, 
                "min_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Minimum replicas for the deployment."
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "current_replicas": {
                    "type": "integer"
                }, 
                "max_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Maximum replicas for the deployment."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for deployment"
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_blueprint_deployment_reference"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional deployment options"
                }, 
                "num_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Deployment Definition for Application."
        }, 
        "environment_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "environment", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "environment"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "cloud_trust_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cloud_trust", 
                    "x-ntnx-enum": [
                        "cloud_trust"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for cloud_trust list output"
        }, 
        "action_template_intent_resource": {
            "description": "Response object for intentful operations on a action_template", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/action_template_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/action_template"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_template_metadata"
                }
            }, 
            "title": "action_template Intent Response"
        }, 
        "mh_vm_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "mh_vm", 
                    "x-ntnx-enum": [
                        "mh_vm"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for mh_vm list output"
        }, 
        "aws_role_list_intent_response": {
            "description": "AWS VPC entity list.", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/aws_role_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_role_list_metadata_output"
                }
            }, 
            "title": "aws_role entity list"
        }, 
        "aws_machine_type_resources_def_status": {
            "description": "aws_machine_type resources", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "The machine type name."
                }
            }, 
            "title": "aws_machine_type resources"
        }, 
        "entity_info": {
            "description": "Entity information", 
            "type": "object", 
            "properties": {
                "type": {
                    "type": "string", 
                    "description": "Entity type"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Entity name"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Entity UUID", 
                    "format": "UUID"
                }
            }, 
            "title": "Entity name/type/id"
        }, 
        "volume_disk_resource_output": {
            "description": "Volume disk configuration.", 
            "type": "object", 
            "properties": {
                "index": {
                    "type": "integer", 
                    "description": "Index of the volume disk in the group."
                }, 
                "storage_container_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Storage container UUID on which the disk has been created.", 
                    "format": "UUID"
                }, 
                "disk_size_mib": {
                    "type": "integer", 
                    "description": "Size of the disk in MiB.", 
                    "format": "int64"
                }, 
                "disk_size_bytes": {
                    "type": "integer", 
                    "description": "Size of the disk in Bytes.", 
                    "format": "int64"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The device ID which is used to uniquely identify this particular disk.\n", 
                    "format": "UUID"
                }
            }, 
            "title": "Volume disk configuration"
        }, 
        "action_template_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_template", 
                    "x-ntnx-enum": [
                        "action_template"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for action_template list"
        }, 
        "user_intent_response": {
            "description": "Response object for intentful operations on a user", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/user_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/user"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/user_metadata"
                }
            }, 
            "title": "user Intent Response"
        }, 
        "direct_connect_virtual_interface_list_intent_response": {
            "description": "Response object for intentful operation of direct_connect_virtual_interfaces", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/direct_connect_virtual_interface_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/direct_connect_virtual_interface_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "cluster_management_server": {
            "description": "Cluster Management server information.", 
            "required": [
                "ip", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string"
                }, 
                "drs_enabled": {
                    "type": "boolean", 
                    "description": "Denotes if DRS is enabled or not."
                }, 
                "status_list": {
                    "items": {
                        "x-ntnx-enum": [
                            "REGISTERED", 
                            "IN_USE"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Array of management server status: - 'REGISTERED': Indicates whether the server is registered with\n                Nutanix or not.\n- 'IN_USE': Indicates whether any host is managed by this server or\n            not.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "VCENTER"
                    ], 
                    "type": "string"
                }
            }, 
            "title": "Cluster Management Server"
        }, 
        "batch_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "batch", 
                    "x-ntnx-enum": [
                        "batch"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for batch list output"
        }, 
        "ipfix_exporter_intent_input": {
            "description": "An intentful representation of a ipfix_exporter", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/ipfix_exporter"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ipfix_exporter_metadata"
                }
            }, 
            "title": "ipfix_exporter Intent Entity"
        }, 
        "filter": {
            "description": "A filter defines the selection criteria for entities. It consists of two lists of filter expressions. The filter expressions can be of two types, Scope or Entity. The expressions in both these lists are combined with a logical AND.\n", 
            "required": [
                "entity_filter_expression_list"
            ], 
            "type": "object", 
            "properties": {
                "entity_filter_expression_list": {
                    "items": {
                        "$ref": "#/definitions/entity_filter_expression"
                    }, 
                    "type": "array", 
                    "description": "A list of Entity filter expressions."
                }, 
                "scope_filter_expression_list": {
                    "items": {
                        "$ref": "#/definitions/scope_filter_expression"
                    }, 
                    "type": "array", 
                    "description": "A list of Scope filter expressions."
                }
            }, 
            "title": "Filter."
        }, 
        "groups_timevalue_pair": {
            "description": "Time-Value Pair Data.", 
            "type": "object", 
            "properties": {
                "values": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "time": {
                    "type": "integer", 
                    "format": "int64"
                }
            }, 
            "title": "Time-Value Pair"
        }, 
        "identity_provider_user": {
            "description": "An Identity Provider user.", 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "The username from the identity provider. Name Id for SAML Identity Provider.\n", 
                    "maxLength": 104
                }, 
                "identity_provider_reference": {
                    "description": "Identity provider reference.\n", 
                    "$ref": "#/definitions/identity_provider_reference"
                }
            }, 
            "title": "Identity Provider user Definition."
        }, 
        "app_profile_reference_upload": {
            "description": "The reference to a app_profile", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_profile", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_profile"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_profile"
        }, 
        "vm_reference_with_customization": {
            "description": "Spec that describes a VM reference along with its customization config.\n", 
            "required": [
                "vm_reference", 
                "vm_customization"
            ], 
            "type": "object", 
            "properties": {
                "vm_customization": {
                    "$ref": "#/definitions/guest_customization"
                }, 
                "vm_reference": {
                    "$ref": "#/definitions/vm_reference"
                }
            }, 
            "title": "Reference to a VM along with customization spec"
        }, 
        "image_placement_info": {
            "description": "Information about state of the policy", 
            "type": "object", 
            "properties": {
                "complete_policy_cluster_reference_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_reference"
                    }, 
                    "type": "array", 
                    "description": "The complete list of clusters where the image should ideally be placed as part of this policy.\n"
                }, 
                "enforced_policy_cluster_reference_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_reference"
                    }, 
                    "type": "array", 
                    "description": "The list of clusters where the image has been placed as part of enforcing this policy.\n"
                }, 
                "conflicting_image_placement_policy_reference_list": {
                    "items": {
                        "$ref": "#/definitions/image_placement_policy_reference"
                    }, 
                    "type": "array", 
                    "description": "List of policies that conflict with this policy."
                }
            }, 
            "title": "Placement policy Information"
        }, 
        "support_case_template_response": {
            "description": "Support Case template.", 
            "type": "object", 
            "properties": {
                "template": {
                    "type": "string", 
                    "description": "Requested Template."
                }
            }, 
            "title": "Support case template."
        }, 
        "app_task_response_download": {
            "description": "Task definition for Application.", 
            "required": [
                "name", 
                "type", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "target_any_local_reference": {
                    "$ref": "#/definitions/entity_reference"
                }, 
                "retries": {
                    "type": "string", 
                    "description": "Number of retries for the task."
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list."
                }, 
                "child_tasks_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_reference_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Task attrs for application of type object."
                }, 
                "timeout_secs": {
                    "type": "string", 
                    "description": "task timeout."
                }, 
                "type": {
                    "type": "string", 
                    "description": ""
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response_download"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Task for Application"
        }, 
        "multicluster_config_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "multicluster_config", 
                    "x-ntnx-enum": [
                        "multicluster_config"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for multicluster_config list"
        }, 
        "aws_credentials": {
            "description": "Credentials to access AWS", 
            "required": [
                "access_key", 
                "secret_key"
            ], 
            "type": "object", 
            "properties": {
                "access_key": {
                    "type": "string"
                }, 
                "secret_key": {
                    "type": "string"
                }
            }, 
            "title": "AWS Credentials"
        }, 
        "blackout_metadata": {
            "description": "The blackout kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when blackout was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "blackout", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "blackout"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "blackout uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the blackout is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when blackout was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the blackout. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the blackout. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "blackout name", 
                    "maxLength": 80
                }
            }, 
            "title": "blackout metadata"
        }, 
        "blueprint_def_status": {
            "description": "An intentful representation of a blueprint status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "blueprint Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the blueprint."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the blueprint, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/blueprint_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for blueprint."
                }
            }, 
            "title": "blueprint Intent Status with placement specified"
        }, 
        "marketplace_item_config": {
            "description": "Enable or disable Nutanix apps", 
            "required": [
                "enable_nutanix_apps"
            ], 
            "type": "object", 
            "properties": {
                "enable_nutanix_apps": {
                    "type": "boolean", 
                    "description": "Whether to enable or disable Nutanix apps"
                }
            }, 
            "title": "Enable or disable Nutanix apps"
        }, 
        "aws_machine_type_def_status": {
            "description": "aws_machine_type resources status", 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string", 
                    "description": "aws_machine_type name."
                }, 
                "resources": {
                    "$ref": "#/definitions/aws_machine_type_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for aws_machine_type."
                }
            }, 
            "title": "aws_machine_type resources status"
        }, 
        "network_rule_status": {
            "description": "Network rule status", 
            "type": "object", 
            "properties": {
                "protocol": {
                    "x-ntnx-enum": [
                        "ALL", 
                        "ICMP", 
                        "TCP", 
                        "UDP"
                    ], 
                    "type": "string", 
                    "description": "Select a protocol to allow.  Multiple protocols can be allowed by repeating network_rule object.  If a protocol is not configured in the network_rule object then it is allowed."
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description for network security rule that is for inbound or outbound", 
                    "maxLength": 64
                }, 
                "ip_subnet": {
                    "$ref": "#/definitions/ip_subnet"
                }, 
                "tcp_port_range_list": {
                    "items": {
                        "$ref": "#/definitions/port_range_status"
                    }, 
                    "type": "array", 
                    "description": "List of TCP ports that are allowed by this rule."
                }, 
                "udp_port_range_list": {
                    "items": {
                        "$ref": "#/definitions/port_range_status"
                    }, 
                    "type": "array", 
                    "description": "List of UDP ports that are allowed by this rule."
                }, 
                "peer_specification_type": {
                    "x-ntnx-enum": [
                        "ALL", 
                        "FILTER", 
                        "IP_SUBNET"
                    ], 
                    "type": "string", 
                    "description": "The set of categories that matching VMs need to have."
                }, 
                "filter": {
                    "description": "The set of categories that matching VMs need to have.", 
                    "$ref": "#/definitions/category_filter"
                }, 
                "service_group_list": {
                    "items": {
                        "$ref": "#/definitions/service_group_reference"
                    }, 
                    "type": "array", 
                    "description": "List of service groups associated with this rule. The existing fields for protocol or ports is not recommended for and will be deprecated for these new fields at the API level."
                }, 
                "icmp_type_code_list": {
                    "items": {
                        "type": "object", 
                        "properties": {
                            "code": {
                                "type": "integer", 
                                "format": "int32"
                            }, 
                            "type": {
                                "type": "integer", 
                                "format": "int32"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "List of ICMP types and codes allowed by this rule."
                }, 
                "network_function_chain_reference": {
                    "$ref": "#/definitions/network_function_chain_reference"
                }, 
                "expiration_time": {
                    "type": "string", 
                    "description": "Timestamp of expiration time."
                }, 
                "rule_id": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Unique identifier for inbound or outbound rule. This is system generated and used internally. User should not set this field while creating a new rule or should not modify it while updating the existing rule.", 
                    "maximum": 4095, 
                    "format": "int32"
                }, 
                "address_group_inclusion_list": {
                    "items": {
                        "$ref": "#/definitions/address_group_reference"
                    }, 
                    "type": "array", 
                    "description": "List of address groups that are allowed access by this rule"
                }
            }, 
            "title": "Network rule status"
        }, 
        "ngt_policy": {
            "description": "NGT policy spec.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "NGT policy name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/ngt_policy_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for the ngt policy.", 
                    "maxLength": 1000
                }
            }, 
            "title": "NGT policy spec"
        }, 
        "ssh_user_metadata": {
            "description": "The ssh_user kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when ssh_user was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "ssh_user", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ssh_user"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "ssh_user uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the ssh_user is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when ssh_user was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the ssh_user. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the ssh_user. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "ssh_user name", 
                    "maxLength": 80
                }
            }, 
            "title": "ssh_user metadata"
        }, 
        "vpn_gateway_def_status": {
            "description": "An intentful representation of a vpn_gateway status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "vpn_gateway Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the vpn_gateway."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the vpn_gateway, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/vpn_gateway_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for vpn_gateway."
                }
            }, 
            "title": "vpn_gateway Intent Status with placement specified"
        }, 
        "user_input_resource": {
            "properties": {
                "identity_provider_user": {
                    "$ref": "#/definitions/identity_provider_user"
                }, 
                "directory_service_user": {
                    "$ref": "#/definitions/directory_service_user"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "directory_service_user"
                    ]
                }, 
                {
                    "required": [
                        "identity_provider_user"
                    ]
                }
            ], 
            "type": "object", 
            "description": "User Resource Definition.", 
            "title": "User Resource Definition."
        }, 
        "capability_details": {
            "description": "Capabilities specific to cluster", 
            "type": "object", 
            "properties": {
                "source_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The UUID for the cluster that contained capability", 
                    "format": "UUID"
                }, 
                "notes": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Notes related to this capability"
                }, 
                "value": {
                    "description": "Capability value of the specific capability in the cluster", 
                    "$ref": "#/definitions/capability_value"
                }
            }, 
            "title": "Member specific capability object"
        }, 
        "app_service_reference": {
            "description": "The reference to a app_service", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_service", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_service"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_service"
        }, 
        "cloud_config_response": {
            "description": "Nutanix hosted cloud Config response definition.", 
            "required": [
                "url"
            ], 
            "type": "object", 
            "properties": {
                "url": {
                    "type": "string", 
                    "description": "URL of the Nutanix hosted Cloud.", 
                    "maxLength": 2083
                }
            }, 
            "title": "Nutanix Hosted Cloud Config Response."
        }, 
        "blackout_def_status": {
            "description": "Blackout entity status", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "resources": {
                    "$ref": "#/definitions/blackout_resources"
                }
            }, 
            "title": "Blackout entity status"
        }, 
        "storage_policy_resources_def_status": {
            "description": "Storage Policy Resources Status Definition", 
            "type": "object", 
            "properties": {
                "qos": {
                    "type": "object", 
                    "properties": {
                        "throttled_iops": {
                            "default": -1, 
                            "type": "integer", 
                            "description": "Throttled IOPS for the entities being governed. The block size\nfor the IO is 32kB.\n", 
                            "format": "int64"
                        }
                    }, 
                    "title": "Storage QoS parameters for the entities."
                }, 
                "compression": {
                    "type": "object", 
                    "properties": {
                        "state": {
                            "default": "SYSTEM_DERIVED", 
                            "x-ntnx-enum": [
                                "ENABLE", 
                                "DISABLE", 
                                "SYSTEM_DERIVED"
                            ], 
                            "type": "string", 
                            "description": "Enable or disable compression for entities governed by the\npolicy. If user does not have an explicit preference for\ncompression, the system decides an appropriate value.\n"
                        }, 
                        "inline_compression": {
                            "type": "boolean", 
                            "description": "Indicates inline or post-process compression. If compression state\nis SYSTEM_DERIVED, then this field has no significance.\n"
                        }
                    }, 
                    "title": "Compression parameters for the entities."
                }, 
                "encryption": {
                    "type": "object", 
                    "properties": {
                        "state": {
                            "default": "SYSTEM_DERIVED", 
                            "x-ntnx-enum": [
                                "ENABLE", 
                                "SYSTEM_DERIVED"
                            ], 
                            "type": "string", 
                            "description": "Enable encryption for entities. Once enabled, cannot be disabled.\nIf user does not have an explicit preference towards enabling\nencryption, the system decides an appropriate value.\n"
                        }
                    }, 
                    "title": "Encryption parameters for the entities."
                }, 
                "fault_tolerance": {
                    "type": "object", 
                    "properties": {
                        "replication_factor": {
                            "default": -1, 
                            "type": "integer", 
                            "description": "Set replication factor for entities.\n", 
                            "format": "int64"
                        }
                    }, 
                    "title": "Fault tolerance parameters for the entities."
                }, 
                "filter_list": {
                    "items": {
                        "$ref": "#/definitions/filter"
                    }, 
                    "type": "array", 
                    "description": "Regex for entities on which the policy has been applied"
                }, 
                "type": {
                    "default": "USER", 
                    "x-ntnx-enum": [
                        "USER", 
                        "SYSTEM"
                    ], 
                    "type": "string", 
                    "description": "Creator of the storage policy"
                }
            }, 
            "title": "Storage Policy Resources Status Definition"
        }, 
        "prism_central_nodes_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "prism_central_nodes", 
                    "x-ntnx-enum": [
                        "prism_central_nodes"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for prism_central_nodes list output"
        }, 
        "project": {
            "description": "A Project resource.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Project name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "type": "object", 
                    "properties": {
                        "resource_domain": {
                            "$ref": "#/definitions/resource_domain_spec"
                        }, 
                        "account_reference_list": {
                            "items": {
                                "$ref": "#/definitions/account_reference"
                            }, 
                            "type": "array", 
                            "description": "List of accounts associated with the project."
                        }, 
                        "environment_reference_list": {
                            "items": {
                                "$ref": "#/definitions/environment_reference"
                            }, 
                            "type": "array", 
                            "description": "List of environments associated with the project."
                        }, 
                        "identity_providers_reference_list": {
                            "items": {
                                "$ref": "#/definitions/identity_providers_reference"
                            }, 
                            "type": "array", 
                            "description": "List of identity provider references in the project"
                        }, 
                        "user_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_reference"
                            }, 
                            "type": "array", 
                            "description": "List of users in the project."
                        }, 
                        "default_subnet_reference": {
                            "description": "Optional default subnet if one is specified", 
                            "$ref": "#/definitions/subnet_reference"
                        }, 
                        "directory_reference_list": {
                            "items": {
                                "$ref": "#/definitions/directory_reference"
                            }, 
                            "type": "array", 
                            "description": "List of directory references under the project"
                        }, 
                        "tunnel_reference_list": {
                            "items": {
                                "$ref": "#/definitions/tunnel_reference"
                            }, 
                            "type": "array", 
                            "description": "List of tunnels associated with the project."
                        }, 
                        "external_user_group_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_group_reference"
                            }, 
                            "type": "array", 
                            "description": "List of directory service user groups. These groups are not\nmanaged by Nutanix.\n"
                        }, 
                        "default_environment_reference": {
                            "description": "Optional default environment if one is specified", 
                            "$ref": "#/definitions/environment_reference"
                        }, 
                        "cluster_reference_list": {
                            "items": {
                                "$ref": "#/definitions/cluster_reference"
                            }, 
                            "type": "array", 
                            "description": "List of clusters associated with the project."
                        }, 
                        "subnet_reference_list": {
                            "items": {
                                "$ref": "#/definitions/subnet_reference"
                            }, 
                            "type": "array", 
                            "description": "List of subnets for the project."
                        }, 
                        "vpc_reference_list": {
                            "items": {
                                "$ref": "#/definitions/vpc_reference"
                            }, 
                            "type": "array", 
                            "description": "List of VPCs associated with the project."
                        }, 
                        "external_network_list": {
                            "items": {
                                "$ref": "#/definitions/external_network"
                            }, 
                            "type": "array", 
                            "description": "List of external networks associated with the project."
                        }, 
                        "enable_directory_and_identity_provider_whitelist": {
                            "type": "boolean", 
                            "description": "Indicates AD/IDP whitelisting"
                        }
                    }, 
                    "title": "Project Resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Project description.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Project resource spec"
        }, 
        "rack_def_status": {
            "description": "Rack entity status defintion", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The state of the rack entity"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Rack Name"
                }, 
                "resources": {
                    "$ref": "#/definitions/rack_resources"
                }
            }, 
            "title": "Rack Entity Status"
        }, 
        "volume_group_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "volume_group", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "volume_group"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "floating_ip_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "floating_ip", 
                    "x-ntnx-enum": [
                        "floating_ip"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for floating_ip list output"
        }, 
        "permission_def_status": {
            "description": "Permission Status Definition.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the permission entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Permission name."
                }, 
                "resources": {
                    "$ref": "#/definitions/permission_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Human readable description of the permission."
                }
            }, 
            "title": "Permission Status Definition."
        }, 
        "cell_metadata": {
            "description": "The cell kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when cell was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "cell", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cell"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "cell uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the cell is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when cell was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the cell. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the cell. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "cell name", 
                    "maxLength": 80
                }
            }, 
            "title": "cell metadata"
        }, 
        "cloud_tenant": {
            "description": "An intentful representation of a cloud_tenant spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for cloud_tenant.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/cloud_tenant_resources"
                }, 
                "name": {
                    "type": "string", 
                    "description": "cloud_tenant Name.", 
                    "maxLength": 256
                }
            }, 
            "title": "cloud_tenant Intent Spec with placement specified"
        }, 
        "aws_availability_zone_resources_def_status": {
            "description": "aws_availability_zone resources", 
            "type": "object", 
            "properties": {
                "region": {
                    "type": "string", 
                    "description": "Name of the region the zone belongs to."
                }, 
                "state": {
                    "x-ntnx-enum": [
                        "AVAILABLE", 
                        "INFORMATION", 
                        "IMPAIRED", 
                        "UNAVAILABLE"
                    ], 
                    "type": "string", 
                    "description": "The state of the availability zone."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the AWS availability zone."
                }
            }, 
            "title": "aws_availability_zone resources"
        }, 
        "entity_sync_rule_reference": {
            "description": "The reference to a entity_sync_rule", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "entity_sync_rule", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "entity_sync_rule"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a entity_sync_rule"
        }, 
        "account_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "account", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "account"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "vpn_gateway_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpn_gateway", 
                    "x-ntnx-enum": [
                        "vpn_gateway"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for vpn_gateway list output"
        }, 
        "image_placement_policy_def_status": {
            "description": "Image placement policy status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the image placement policy."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the image placement policy, if in an error state."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Image placement policy name."
                }, 
                "resources": {
                    "$ref": "#/definitions/image_placement_policy_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for image placement policy."
                }
            }, 
            "title": "Image placement policy status"
        }, 
        "entity_sync_rule": {
            "description": "Entity sync rule creation/modification spec.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Entity sync rule name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/entity_sync_rule_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for the entity sync rule.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Entity sync rule creation/modification spec"
        }, 
        "alert_def_status": {
            "description": "Alert entity status definition", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "resources": {
                    "$ref": "#/definitions/alert_resources"
                }
            }, 
            "title": "Alert entity status"
        }, 
        "file_item_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "file_item", 
                    "x-ntnx-enum": [
                        "file_item"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for file_item list"
        }, 
        "report_template": {
            "description": "Report Template.", 
            "required": [
                "template_rows"
            ], 
            "type": "object", 
            "properties": {
                "report_customization": {
                    "description": "Report level customizations.", 
                    "$ref": "#/definitions/report_customization"
                }, 
                "template_rows": {
                    "items": {
                        "$ref": "#/definitions/template_row"
                    }, 
                    "type": "array", 
                    "description": "List of template rows."
                }, 
                "sections": {
                    "items": {
                        "$ref": "#/definitions/section"
                    }, 
                    "type": "array", 
                    "description": "List of sections."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the report template.", 
                    "maxLength": 64
                }
            }, 
            "title": "Report Template."
        }, 
        "identity_provider_intent_response": {
            "description": "Response object for intentful operations on a identity_provider", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/identity_provider_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/identity_provider"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/identity_provider_metadata"
                }
            }, 
            "title": "identity_provider Intent Response"
        }, 
        "action_type_reference": {
            "description": "The reference to a action_type", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_type", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "action_type"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a action_type"
        }, 
        "internal_directory_service_response": {
            "description": "Directory service internal response", 
            "type": "object", 
            "properties": {
                "directory_service_config_list": {
                    "items": {
                        "$ref": "#/definitions/internal_directory_service_config"
                    }, 
                    "type": "array", 
                    "description": "Directory service config list"
                }
            }, 
            "title": "Directory service internal response"
        }, 
        "aws_vm_intent_input": {
            "description": "An intentful representation of a aws_vm", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/aws_vm"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_vm_metadata"
                }
            }, 
            "title": "aws_vm Intent Entity"
        }, 
        "resource_charge_metadata": {
            "description": "The resource_charge kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when resource_charge was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "resource_charge", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "resource_charge"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "resource_charge uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the resource_charge is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when resource_charge was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the resource_charge. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the resource_charge. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "resource_charge name", 
                    "maxLength": 80
                }
            }, 
            "title": "resource_charge metadata"
        }, 
        "direct_connect_virtual_interface_intent_resource": {
            "description": "Response object for intentful operations on a direct_connect_virtual_interface", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/direct_connect_virtual_interface_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/direct_connect_virtual_interface"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/direct_connect_virtual_interface_metadata"
                }
            }, 
            "title": "direct_connect_virtual_interface Intent Response"
        }, 
        "cloud_credentials_list_intent_response": {
            "description": "Response object for intentful operation of cloud_credentialss", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/cloud_credentials_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cloud_credentials_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "vm_list_intent_response": {
            "description": "Response object for intentful operation of vms", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/vm_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "subnet_def_status": {
            "description": "An intentful representation of a subnet status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "subnet Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the subnet."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the subnet, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/subnet_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for subnet."
                }
            }, 
            "title": "subnet Intent Status with placement specified"
        }, 
        "app_package_response_download": {
            "description": "Package definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "type", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "image_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s image spec"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for package"
                }, 
                "service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_reference"
                    }, 
                    "type": "array", 
                    "description": "References of the service."
                }, 
                "account_reference": {
                    "$ref": "#/definitions/account_reference_upload"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "version": {
                    "type": "string", 
                    "description": ""
                }, 
                "service_element_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_package_reference_upload"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "SNAPSHOT", 
                        "ISO", 
                        "DEB", 
                        "RPM", 
                        "DOCKER_IMAGE", 
                        "CHEF_COOKBOOK", 
                        "PUPPET_MANIFEST", 
                        "CUSTOM", 
                        "SUBSTRATE_IMAGE", 
                        "K8S_IMAGE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "options": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Details based on type of the package."
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Package for Application"
        }, 
        "rackable_unit_def_status": {
            "description": "Rackable unit entity status definition. A rackable unit is the physical chassis which contains a set of nodes. This entity is currently defined in context of a cluster only. Hence, multiple rackable unit entities may be present with same serial and same model, if they belong to different clusters (when viewed from PC).\n", 
            "required": [
                "serial", 
                "model", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "serial": {
                    "type": "string", 
                    "description": "The rackable unit serial"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "model": {
                    "type": "string", 
                    "description": "The rackable unit model"
                }, 
                "resources": {
                    "$ref": "#/definitions/rackable_unit_resources"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The state of the rackable unit entity"
                }
            }, 
            "title": "Rackable Unit Entity Status"
        }, 
        "aws_key_pair_intent_resource": {
            "description": "aws_key_pair entity", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/aws_key_pair_def_status"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_key_pair_metadata"
                }
            }, 
            "title": "aws_key_pair"
        }, 
        "software_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "software", 
                    "x-ntnx-enum": [
                        "software"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for software list output"
        }, 
        "multicluster_config_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "multicluster_config", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "multicluster_config"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "action_template_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_template", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "action_template"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "batch_reference": {
            "description": "The reference to a batch", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "batch", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "batch"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a batch"
        }, 
        "availability_zone": {
            "description": "Availability Zone creation/modification spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Availability Zone Name"
                }, 
                "resources": {
                    "$ref": "#/definitions/availability_zone_resources_spec"
                }
            }, 
            "title": "Availability Zone creation/modification spec"
        }, 
        "validate_rack_config_output": {
            "description": "Rack Config Validation output.", 
            "type": "object", 
            "properties": {
                "suggestion_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of suggestions describing how the failure in validation can be resolved. Each suggestion describes a specific change in configuration, which can independently resolve the validation failure.\n"
                }, 
                "cause_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of observations in a configuration that contradict each other which causes failure in validation. Fixing one or more items in this list to eliminate the contradiction will result in success in validation.\n"
                }
            }, 
            "title": "Rack Config Validation output"
        }, 
        "action_type_def_status": {
            "description": "Action type entity status definition", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "resources": {
                    "$ref": "#/definitions/action_type"
                }
            }, 
            "title": "Action type entity status"
        }, 
        "report_instance_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "report_instance", 
                    "x-ntnx-enum": [
                        "report_instance"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for report_instance list"
        }, 
        "user_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "user", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "user"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "vpc_route_table_resources": {
            "description": "VPC route table resources", 
            "type": "object", 
            "properties": {
                "static_routes_list": {
                    "items": {
                        "$ref": "#/definitions/route"
                    }, 
                    "type": "array"
                }, 
                "default_route_nexthop": {
                    "description": "Nexthop for default route in the VPC route table (Not supported in Xi).\n", 
                    "$ref": "#/definitions/route_nexthop_reference"
                }
            }, 
            "title": "VPC route table resources"
        }, 
        "identity_provider_metadata": {
            "description": "The identity_provider kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when identity_provider was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "identity_provider", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "identity_provider"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "identity_provider uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the identity_provider is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when identity_provider was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the identity_provider. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the identity_provider. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "identity_provider name", 
                    "maxLength": 80
                }
            }, 
            "title": "identity_provider metadata"
        }, 
        "vm_vtpm_status": {
            "description": "Current status of the vTPM configuration.\n", 
            "type": "object", 
            "properties": {
                "vtpm_enabled": {
                    "type": "boolean", 
                    "description": "Indicates whether virtual trusted platform module is enabled for the the Guest OS.\n"
                }, 
                "data_source_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "version": {
                    "type": "string", 
                    "description": "Virtual trusted platform module version."
                }
            }, 
            "title": "VM vTPM configuration status."
        }, 
        "availability_zone_list_intent_response": {
            "description": "Response object for intentful operation of availability_zones", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/availability_zone_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/availability_zone_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "basic_credential": {
            "description": "Basic Credentials to connect with remote endpoint", 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "username of authorized user on remote cluster,\nmust for BASIC auth_type\n"
                }, 
                "password": {
                    "type": "string", 
                    "description": "password of authorized user on remote cluster,\nmust for BASIC auth_type\n"
                }
            }, 
            "title": "Basic Credentials to connect with remote endpoint"
        }, 
        "cloud_tenant_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cloud_tenant", 
                    "x-ntnx-enum": [
                        "cloud_tenant"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for cloud_tenant list output"
        }, 
        "customization_spec_reference": {
            "description": "The reference to a customization_spec", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "customization_spec", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "customization_spec"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a customization_spec"
        }, 
        "image_reference": {
            "description": "The reference to a image", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "image", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "image"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a image"
        }, 
        "cluster_analysis": {
            "description": "Cluster analysis related values.", 
            "type": "object", 
            "properties": {
                "vm_efficiency_map": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "readOnly": true, 
                    "type": "object", 
                    "description": "Map of cluster efficiency which includes numbers of inefficient\nvms. The value is populated by analytics on PC.\n"
                }
            }, 
            "title": "Cluster Analysis Statistics"
        }, 
        "vpn_connection_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpn_connection", 
                    "x-ntnx-enum": [
                        "vpn_connection"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for vpn_connection list output"
        }, 
        "cluster_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cluster", 
                    "x-ntnx-enum": [
                        "cluster"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for cluster list"
        }, 
        "vpc_intent_input": {
            "description": "An intentful representation of a vpc", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/vpc"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vpc_metadata"
                }
            }, 
            "title": "vpc Intent Entity"
        }, 
        "vm_host_affinity_policy_config": {
            "description": "Defines an affinity policy between a set of VM categories to a set of Host categories.\n", 
            "required": [
                "name", 
                "vm_categories", 
                "host_categories"
            ], 
            "type": "object", 
            "properties": {
                "vm_categories": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "VM categories across whom affinity is being defined.\n"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the policy.", 
                    "maxLength": 1000
                }, 
                "host_categories": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Host categories across whom affinity is being defined.\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the policy.", 
                    "maxLength": 64
                }
            }, 
            "title": "VM Host Affinity Policy input"
        }, 
        "aws_region_def_status": {
            "description": "aws_region resources status", 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string", 
                    "description": "aws_region name."
                }, 
                "resources": {
                    "$ref": "#/definitions/aws_region_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for aws_region."
                }
            }, 
            "title": "aws_region resources status"
        }, 
        "image_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "image", 
                    "x-ntnx-enum": [
                        "image"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for image list output"
        }, 
        "aws_vpc_resources_def_status": {
            "description": "AWS VPC resources", 
            "type": "object", 
            "properties": {
                "instance_tenancy": {
                    "$ref": "#/definitions/instance_tenancy"
                }, 
                "classic_link_enabled": {
                    "type": "boolean", 
                    "description": "Whether ClassicLink is enabled."
                }, 
                "is_default": {
                    "type": "boolean", 
                    "description": "Whether the VPC is the default VPC."
                }, 
                "state": {
                    "$ref": "#/definitions/aws_resource_state"
                }, 
                "cidr_block": {
                    "type": "string", 
                    "description": "The CIDR block for the VPC.", 
                    "maxLength": 64
                }, 
                "tag_list": {
                    "$ref": "#/definitions/aws_tag_list"
                }, 
                "id": {
                    "pattern": "^vpc-[a-f0-9]{1,17}$", 
                    "type": "string", 
                    "description": "The AWS ID of the VPC."
                }
            }, 
            "title": "AWS VPC resources"
        }, 
        "remote_syslog_server_metadata": {
            "description": "The remote_syslog_server kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when remote_syslog_server was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "remote_syslog_server", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_syslog_server"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "remote_syslog_server uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the remote_syslog_server is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when remote_syslog_server was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the remote_syslog_server. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the remote_syslog_server. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "remote_syslog_server name", 
                    "maxLength": 80
                }
            }, 
            "title": "remote_syslog_server metadata"
        }, 
        "permission_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "permission", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "permission"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "action_rule_intent_resource": {
            "description": "Response object for intentful operations on a action_rule", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/action_rule_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/action_rule"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_rule_metadata"
                }
            }, 
            "title": "action_rule Intent Response"
        }, 
        "scope_filter_expression": {
            "description": "The Scope filter expression is a combination of LHS-Operator-RHS. This type of filter expression helps express the \"Context\" part of a Filter. Example1 - To express a context = Belonging to Project P1 or Project P2\n  left_hand_side = PROJECT\n  operator = IN\n  right_hand_side = [\"P1\", \"P2\"]\nExample2 - To express Belonging to 2 categories\n  left_hand_side = CATEGORY\n  operator = IN_ALL\n  right_hand_side = [\"location:nyc\", \"env:prod\"]\n", 
            "required": [
                "left_hand_side", 
                "operator", 
                "right_hand_side"
            ], 
            "type": "object", 
            "properties": {
                "operator": {
                    "x-ntnx-enum": [
                        "IN", 
                        "IN_ALL", 
                        "NOT_IN"
                    ], 
                    "type": "string", 
                    "description": "The operator of the filter expression."
                }, 
                "right_hand_side": {
                    "description": "The Right hand side(RHS) of the scope filter expression.", 
                    "$ref": "#/definitions/scope_right_hand_side"
                }, 
                "left_hand_side": {
                    "type": "string", 
                    "description": "The LHS of the filter expression - the scope type. Following is the list of supported values - * CATEGORY * PROJECT * CLUSTER * VPC * CONNECTIVITY_TYPE\n"
                }
            }, 
            "title": "Scope Filter Expression."
        }, 
        "oauth_reference": {
            "description": "The reference to a oauth", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "oauth", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "oauth"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a oauth"
        }, 
        "network_function_metadata": {
            "description": "The network_function kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when network_function was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "network_function", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_function"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "network_function uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the network_function is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when network_function was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the network_function. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the network_function. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "network_function name", 
                    "maxLength": 80
                }
            }, 
            "title": "network_function metadata"
        }, 
        "cluster_spec": {
            "description": "Cluster Configuration Object.", 
            "type": "object", 
            "properties": {
                "data_store_config": {
                    "$ref": "#/definitions/data_store_config"
                }, 
                "node_spec_list": {
                    "items": {
                        "$ref": "#/definitions/node_spec"
                    }, 
                    "type": "array"
                }, 
                "effective_capacity": {
                    "$ref": "#/definitions/generic_resource_spec"
                }, 
                "resource_list": {
                    "items": {
                        "$ref": "#/definitions/resource_time_series"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Cluster Spec Definition"
        }, 
        "blueprint_upload_output": {
            "description": "The UUID of the newly created AppBlueprint", 
            "type": "object", 
            "properties": {
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "uuid of the newly created AppBlueprint", 
                    "format": "UUID"
                }
            }, 
            "title": "Upload AppBlueprint output"
        }, 
        "audit_def": {
            "description": "Audit entity status definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/audit_resources"
                }
            }, 
            "title": "Audit entity status."
        }, 
        "reference": {
            "description": "Reference to a kind. Either one of (kind, uuid) or url needs to be specified.\n", 
            "type": "object", 
            "properties": {
                "url": {
                    "pattern": "^((((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\/)([\\w\\-\\.]+[^#?\\s]+)(.*)?)(#[\\w\\-]+)?$|(http[s]?:\\/\\/([\\w\\d\\-_\\.])((\\/?\\w+\\.*)*(:[0-9]+)*\\/?)))", 
                    "type": "string", 
                    "description": "GET query on the URL will provide information on the source.\n"
                }, 
                "kind": {
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }
            }, 
            "title": "Reference"
        }, 
        "mcm_config": {
            "description": "MCM config for PC Deployment definition.", 
            "required": [
                "product_name", 
                "deployment_settings", 
                "orchestrator_base_url", 
                "component_registry_base_url"
            ], 
            "type": "object", 
            "properties": {
                "deployment_settings": {
                    "$ref": "#/definitions/deployment_settings"
                }, 
                "product_name": {
                    "type": "string", 
                    "description": "Type of the deployed component. For example Prism Central or Flow Gateway."
                }, 
                "component_registry_base_url": {
                    "pattern": "^((((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\/)([\\w\\-\\.]+[^#?\\s]+)(.*)?)(#[\\w\\-]+)?$|(http[s]?:\\/\\/([\\w\\d\\-_\\.])((\\/?\\w+\\.*)*(:[0-9]+)*\\/?)))", 
                    "type": "string", 
                    "description": "API Keys app base URL.", 
                    "maxLength": 512
                }, 
                "orchestrator_base_url": {
                    "pattern": "^((((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\/)([\\w\\-\\.]+[^#?\\s]+)(.*)?)(#[\\w\\-]+)?$|(http[s]?:\\/\\/([\\w\\d\\-_\\.])((\\/?\\w+\\.*)*(:[0-9]+)*\\/?)))", 
                    "type": "string", 
                    "description": "MCM base URL.", 
                    "maxLength": 512
                }
            }, 
            "title": "MCM config for PC Deployment"
        }, 
        "qos_config": {
            "description": "Quality of Service configuration for the VPN IPSec tunnel.", 
            "type": "object", 
            "properties": {
                "ingress_limit": {
                    "type": "integer", 
                    "description": "Ingress traffic limit. (In Mbits/s)", 
                    "format": "uint64"
                }, 
                "egress_limit": {
                    "type": "integer", 
                    "description": "Egress traffic limit. (In Mbits/s)", 
                    "format": "uint64"
                }
            }, 
            "title": "Quality of Service configuration for the site-to-site VPN tunnel."
        }, 
        "result": {
            "description": "Object describing the search query result.", 
            "type": "object", 
            "properties": {
                "disambiguated_searches": {
                    "$ref": "#/definitions/perspective"
                }, 
                "active_perspective": {
                    "$ref": "#/definitions/perspective"
                }, 
                "perspective_group_list": {
                    "items": {
                        "$ref": "#/definitions/perspective_link_group"
                    }, 
                    "type": "array", 
                    "description": "Each result contains a set of perspectives links eg. summary,\nentities, alerts, metrics, etc.. These are used to populate the left\nhand navigation panel. These perspective links can be grouped together\ninto different groups. So we send back a list of such perspective\ngroups.\n"
                }
            }, 
            "title": "Search Result Definition"
        }, 
        "attachment_reference_input": {
            "properties": {
                "iscsi_initiator_network_id": {
                    "type": "string", 
                    "description": "Ip address of the external client."
                }, 
                "client_secret": {
                    "type": "string", 
                    "description": "Client secret for CHAP authentication."
                }, 
                "vm_reference": {
                    "$ref": "#/definitions/vm_reference"
                }, 
                "iscsi_initiator_name": {
                    "type": "string", 
                    "description": "Name of the iSCSI initiator of the workload outside Nutanix cluster.\n", 
                    "maxLength": 64
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "vm_reference"
                    ]
                }, 
                {
                    "required": [
                        "iscsi_initiator_name"
                    ]
                }, 
                {
                    "required": [
                        "iscsi_initiator_network_id"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Attached iSCSI initiators.", 
            "title": "Attached iSCSI initiators"
        }, 
        "app_profile_input": {
            "description": "App profile resources", 
            "required": [
                "name", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "deployment_create_list": {
                    "items": {
                        "$ref": "#/definitions/blueprint_deployment_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "App profile resource"
        }, 
        "nusights_proxy_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "nusights_proxy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "nusights_proxy"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "action_rule_def_status": {
            "description": "Action rule entity status definition", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "resources": {
                    "$ref": "#/definitions/action_rule_resources"
                }
            }, 
            "title": "Action rule entity status"
        }, 
        "cloud_trust_intent_resource": {
            "description": "Response object for intentful operations on a cloud_trust", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/cloud_trust_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/cloud_trust"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cloud_trust_metadata"
                }
            }, 
            "title": "cloud_trust Intent Response"
        }, 
        "user_info": {
            "description": "Access Control Policy and User status definition.", 
            "type": "object", 
            "properties": {
                "access_control_policy_list": {
                    "items": {
                        "$ref": "#/definitions/access_control_policy_detail"
                    }, 
                    "type": "array", 
                    "description": "The list of Access Control Policies"
                }, 
                "user_details": {
                    "$ref": "#/definitions/user_details_object",
                    "type": "object",
                    "description": "User details of the logged in user"
                }, 
                "user_legacy_name": {
                    "type": "string", 
                    "description": "The legacy name of the logged in user"
                }
            }, 
            "title": "Access Control Policy and User status definition."
        }, 
        "availability_zone_reference": {
            "description": "The reference to a availability_zone", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "availability_zone", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "availability_zone"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a availability_zone"
        }, 
        "vm_host_affinity_legacy_policy_list_metadata_output": {
            "description": "All API calls that return a list will have this metadata block.\n", 
            "type": "object", 
            "properties": {
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found.", 
                    "format": "int64"
                }, 
                "kind": {
                    "default": "vm_host_affinity_legacy_policy", 
                    "x-ntnx-enum": [
                        "vm_host_affinity_legacy_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name."
                }, 
                "length": {
                    "type": "integer", 
                    "description": "Number of records retrieved relative to the offset.", 
                    "format": "int64"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list.", 
                    "format": "int64"
                }
            }, 
            "title": "Metadata for vm_host_affinity_legacy_policy list output"
        }, 
        "remote_connection_intent_input": {
            "description": "An intentful representation of a remote_connection", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/remote_connection"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_connection_metadata"
                }
            }, 
            "title": "remote_connection Intent Entity"
        }, 
        "monetary_value": {
            "description": "Monetary value along with currency details.", 
            "type": "object", 
            "properties": {
                "currency_name": {
                    "x-ntnx-enum": [
                        "DOLLAR"
                    ], 
                    "type": "string"
                }, 
                "amount": {
                    "type": "number", 
                    "description": "amount in currency", 
                    "format": "double"
                }
            }, 
            "title": "Monetary value along with currency details."
        }, 
        "app_deployment_reference": {
            "description": "The reference to a app_deployment", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_deployment", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_deployment"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_deployment"
        }, 
        "oplog_usage": {
            "description": "oplog disk usage.", 
            "type": "object", 
            "properties": {
                "oplog_disk_pct": {
                    "type": "number", 
                    "description": "Oplog disk size used in percentage.", 
                    "format": "float"
                }, 
                "oplog_disk_size": {
                    "type": "integer", 
                    "description": "Size of oplog disk in bytes.", 
                    "format": "int64"
                }
            }, 
            "title": "Host oplog disk usage stats"
        }, 
        "marketplace_item_input_resources": {
            "description": "Description of the marketplace item", 
            "required": [
                "app_blueprint_template", 
                "author"
            ], 
            "type": "object", 
            "properties": {
                "app_blueprint_template": {
                    "type": "object", 
                    "description": "This is an opaque object that represents the information required to launch an app.\n", 
                    "properties": {
                        "status": {
                            "$ref": "#/definitions/blueprint_download_def_status"
                        }, 
                        "spec": {
                            "$ref": "#/definitions/blueprint_upload"
                        }
                    }
                }, 
                "app_state": {
                    "default": "PENDING", 
                    "x-ntnx-enum": [
                        "PENDING", 
                        "ACCEPTED", 
                        "REJECTED", 
                        "PUBLISHED"
                    ], 
                    "type": "string", 
                    "description": "State indicating if marketplace item is approved, pending or rejected\n"
                }, 
                "author": {
                    "type": "string", 
                    "description": "Person or company which developed the app", 
                    "maxLength": 64
                }, 
                "project_reference_list": {
                    "items": {
                        "$ref": "#/definitions/project_reference"
                    }, 
                    "type": "array", 
                    "description": "The projects this marketplace item has been assigned to"
                }, 
                "icon_reference_list": {
                    "items": {
                        "$ref": "#/definitions/marketplace_icon"
                    }, 
                    "type": "array"
                }, 
                "app_group_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID for the group of MPIs which are versions of the same App\n", 
                    "format": "UUID"
                }, 
                "change_log": {
                    "type": "string", 
                    "description": "Change log for this version of the app\n", 
                    "maxLength": 5000
                }, 
                "version": {
                    "type": "string", 
                    "description": "Indicates version of the App that this marketplace item represents\n", 
                    "maxLength": 64
                }, 
                "app_attribute_list": {
                    "items": {
                        "x-ntnx-enum": [
                            "FEATURED"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Attributes of this app."
                }, 
                "app_source": {
                    "default": "LOCAL", 
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "GLOBAL_STORE"
                    ], 
                    "type": "string", 
                    "description": "Indicates whether the app is Global(Marketplace item) or Local(User created)\n"
                }
            }, 
            "title": "Description of the marketplace item"
        }, 
        "recommendation_params": {
            "description": "Recommendation Request Object.", 
            "required": [
                "scenario_uuid"
            ], 
            "type": "object", 
            "properties": {
                "scenario_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "x-example": "0e09cf83-ac68-4f28-af70-6df9a43df4f0", 
                    "format": "UUID"
                }
            }, 
            "title": "Recommendation Request Info."
        }, 
        "floating_ip_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "floating_ip", 
                    "x-ntnx-enum": [
                        "floating_ip"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for floating_ip list"
        }, 
        "routing_policy_def_status": {
            "description": "An intentful representation of a routing_policy status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "routing_policy Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the routing_policy."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the routing_policy, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/routing_policy_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for routing_policy."
                }
            }, 
            "title": "routing_policy Intent Status with placement specified"
        }, 
        "cluster_network": {
            "description": "Cluster network.", 
            "type": "object", 
            "properties": {
                "masquerading_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The cluster NAT'd or proxy IP which maps to the cluster local IP.\n"
                }, 
                "masquerading_port": {
                    "type": "integer", 
                    "description": "Port used together with masquerading_ip to connect to the cluster.\n", 
                    "format": "int32"
                }, 
                "external_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The local IP of cluster visible externally."
                }, 
                "http_proxy_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_network_entity"
                    }, 
                    "type": "array", 
                    "description": "List of proxies to connect to the service centers."
                }, 
                "smtp_server": {
                    "$ref": "#/definitions/smtp_server"
                }, 
                "ntp_server_ip_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The list of IP addresses or FQDNs of the NTP servers."
                }, 
                "external_subnet": {
                    "default": "172.16.0.0/255.240.0.0", 
                    "type": "string", 
                    "description": "External subnet for cross server communication. The format is\nIP/netmask.\n"
                }, 
                "nfs_subnet_whitelist": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Comma separated list of subnets (of the form 'a.b.c.d/l.m.n.o') that\nare allowed to send NFS requests to this container. If not specified,\nthe global NFS whitelist will be looked up for access permission.\nThe internal subnet is always automatically considered part of the\nwhitelist, even if the field below does not explicitly specify it.\nSimilarly, all the hypervisor IPs are considered part of the\nwhitelist. Finally, to permit debugging, all of the SVMs local IPs\nare considered to be implicitly part of the whitelist.\n"
                }, 
                "external_data_services_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The cluster IP address that provides external entities access to\nvarious cluster data services.\n"
                }, 
                "domain_server": {
                    "$ref": "#/definitions/cluster_domain_server"
                }, 
                "fully_qualified_domain_name": {
                    "type": "string", 
                    "description": "fully qualified domain name of the cluster visible externally."
                }, 
                "name_server_ip_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The list of IP addresses of the name servers."
                }, 
                "http_proxy_whitelist": {
                    "items": {
                        "$ref": "#/definitions/http_proxy_whitelist"
                    }, 
                    "type": "array", 
                    "description": "HTTP proxy whitelist."
                }, 
                "internal_subnet": {
                    "default": "192.168.5.0/255.255.255.0", 
                    "type": "string", 
                    "description": "The internal subnet is local to every server - its not visible\noutside.iSCSI requests generated internally within the appliance\n(by user VMs or VMFS) are sent to the internal subnet. The format is\nIP/netmask.\n"
                }, 
                "default_vswitch_config": {
                    "description": "Configuration for the default vswitch (br0) present on all nodes of\nthis cluster. This is considered internal only and is not supported\non this version of AOS.\n", 
                    "$ref": "#/definitions/vswitch_config"
                }
            }, 
            "title": "Cluster Network Configuration"
        }, 
        "directory_service_reference": {
            "description": "The reference to a directory_service", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "directory_service", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "directory_service"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a directory_service"
        }, 
        "resource_domain_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "resource_domain", 
                    "x-ntnx-enum": [
                        "resource_domain"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for resource_domain list output"
        }, 
        "aws_block_device_map": {
            "description": "Describes the EBS Volumes associated.", 
            "type": "object", 
            "properties": {
                "data_disk_list": {
                    "items": {
                        "$ref": "#/definitions/aws_instance_disk"
                    }, 
                    "type": "array", 
                    "description": "Data disks of the instance."
                }, 
                "root_disk": {
                    "description": "Root disk of the instance.", 
                    "$ref": "#/definitions/aws_instance_disk"
                }
            }, 
            "title": "AWS Block Device Map"
        }, 
        "aws_availability_zone_metadata": {
            "description": "The aws_availability_zone kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_availability_zone was last updated\n", 
                    "format": "date-time"
                }, 
                "kind": {
                    "default": "aws_availability_zone", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_availability_zone"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "aws_availability_zone uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the aws_availability_zone is in", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_availability_zone was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the aws_availability_zone"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "aws_availability_zone name"
                }
            }, 
            "title": "aws_availability_zone metadata"
        }, 
        "cluster_intent_response": {
            "description": "Response object for intentful operations on a cluster", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/cluster_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/cluster"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cluster_metadata"
                }
            }, 
            "title": "cluster Intent Response"
        }, 
        "vm_gpu_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_gpu", 
                    "x-ntnx-enum": [
                        "vm_gpu"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vm_gpu list"
        }, 
        "entity_sync_rule_intent_response": {
            "description": "Response object for intentful operations on a entity_sync_rule", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/entity_sync_rule_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/entity_sync_rule"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/entity_sync_rule_metadata"
                }
            }, 
            "title": "entity_sync_rule Intent Response"
        }, 
        "id_categorization_matching_criteria": {
            "description": "The matching criteria used to determine whether an entity will be\ncategorized by identity categorization. If match type is ALL, all\nthe entities will be categorized.\n", 
            "required": [
                "match_entity", 
                "match_field", 
                "match_type"
            ], 
            "type": "object", 
            "properties": {
                "match_field": {
                    "x-ntnx-enum": [
                        "NAME"
                    ], 
                    "type": "string", 
                    "description": "The field to match on. Today only NAME is supported, which matches on\nan entity's name.\n"
                }, 
                "criteria": {
                    "type": "string", 
                    "description": "The criteria to use for matching entities to be categorized. Note\nthat depending on the match type, the usage of this value may differ.\n", 
                    "maxLength": 200
                }, 
                "match_type": {
                    "x-ntnx-enum": [
                        "CONTAINS", 
                        "ALL"
                    ], 
                    "type": "string", 
                    "description": "The type of match. Today only CONTAINS and ALL are supported. CONTAINS\nperforms a substring match on the given entity and field for the\ncriteria value whereas ALL allows all string to match on the given\nentity.\n"
                }, 
                "match_entity": {
                    "x-ntnx-enum": [
                        "VM"
                    ], 
                    "type": "string", 
                    "description": "The entity to perform matching on. Currently, only the target VM that\na logon occurred on is supported.\n"
                }
            }, 
            "title": "Matching Criteria"
        }, 
        "storage_policy_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "storage_policy", 
                    "x-ntnx-enum": [
                        "storage_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for storage_policy list output"
        }, 
        "network_security_rule_reference": {
            "description": "The reference to a network_security_rule", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_security_rule", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_security_rule"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a network_security_rule"
        }, 
        "network_rule": {
            "description": "Network rule", 
            "type": "object", 
            "properties": {
                "protocol": {
                    "x-ntnx-enum": [
                        "ALL", 
                        "ICMP", 
                        "TCP", 
                        "UDP"
                    ], 
                    "type": "string", 
                    "description": "Select a protocol to allow.  Multiple protocols can be allowed by repeating network_rule object.  If a protocol is not configured in the network_rule object then it is allowed."
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description for network security rule that is for inbound or outbound", 
                    "maxLength": 64
                }, 
                "ip_subnet": {
                    "$ref": "#/definitions/ip_subnet"
                }, 
                "tcp_port_range_list": {
                    "items": {
                        "$ref": "#/definitions/port_range"
                    }, 
                    "type": "array", 
                    "description": "List of TCP ports that are allowed by this rule."
                }, 
                "udp_port_range_list": {
                    "items": {
                        "$ref": "#/definitions/port_range"
                    }, 
                    "type": "array", 
                    "description": "List of UDP ports that are allowed by this rule."
                }, 
                "peer_specification_type": {
                    "x-ntnx-enum": [
                        "ALL", 
                        "FILTER", 
                        "IP_SUBNET"
                    ], 
                    "type": "string", 
                    "description": "The set of categories that matching VMs need to have."
                }, 
                "filter": {
                    "description": "The set of categories that matching VMs need to have.", 
                    "$ref": "#/definitions/category_filter"
                }, 
                "service_group_list": {
                    "items": {
                        "$ref": "#/definitions/service_group_reference"
                    }, 
                    "type": "array", 
                    "description": "List of service groups associated with this rule. The exiting fields for protocol or ports is not recommended for use and will be deprecated for these new fields at the API level."
                }, 
                "icmp_type_code_list": {
                    "items": {
                        "type": "object", 
                        "properties": {
                            "code": {
                                "minimum": 0, 
                                "type": "integer", 
                                "maximum": 15, 
                                "format": "int32"
                            }, 
                            "type": {
                                "minimum": 0, 
                                "type": "integer", 
                                "maximum": 43, 
                                "format": "int32"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "List of ICMP types and codes allowed by this rule."
                }, 
                "network_function_chain_reference": {
                    "$ref": "#/definitions/network_function_chain_reference"
                }, 
                "expiration_time": {
                    "type": "string", 
                    "description": "Timestamp of expiration time.", 
                    "maxLength": 64
                }, 
                "rule_id": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Unique identifier for inbound or outbound rule. This is system generated and used internally. User should not set this field while creating a new rule or should not modify it while updating the existing rule.", 
                    "maximum": 4095, 
                    "format": "int32"
                }, 
                "address_group_inclusion_list": {
                    "items": {
                        "$ref": "#/definitions/address_group_reference"
                    }, 
                    "type": "array", 
                    "description": "List of address groups that are allowed access by this rule"
                }
            }, 
            "title": "Network rule"
        }, 
        "cloud_credentials_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cloud_credentials", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cloud_credentials"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "cluster_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cluster", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cluster"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "prism_central_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "prism_central", 
                    "x-ntnx-enum": [
                        "prism_central"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for prism_central list"
        }, 
        "app_deployment_input": {
            "description": "Deployment definition for Application.", 
            "required": [
                "uuid", 
                "name", 
                "min_replicas", 
                "max_replicas", 
                "substrate"
            ], 
            "type": "object", 
            "properties": {
                "percent_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "published_service_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_input"
                    }, 
                    "type": "array", 
                    "description": "List of references for published services"
                }, 
                "substrate": {
                    "$ref": "#/definitions/app_substrate_input"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "service_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_input"
                    }, 
                    "type": "array", 
                    "description": "List of references for services"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "package_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_input"
                    }, 
                    "type": "array", 
                    "description": "List of references for the packages"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "max_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Maximum replicas for the deployment."
                }, 
                "type": {
                    "default": "GREENFIELD", 
                    "x-ntnx-enum": [
                        "BROWNFIELD", 
                        "GREENFIELD", 
                        "K8S_DEPLOYMENT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_blueprint_deployment_reference"
                }, 
                "fault_domain_scope": {
                    "x-ntnx-enum": [
                        "HOST", 
                        "CLUSTER", 
                        "AZ"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "min_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Minimum replicas for the deployment."
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional deployment options"
                }, 
                "num_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "brownfield_instance_list": {
                    "items": {
                        "$ref": "#/definitions/brownfield_instance_input"
                    }, 
                    "type": "array", 
                    "description": "list of brownfield elements"
                }
            }, 
            "title": "Deployment definition for Application."
        }, 
        "cloud_credentials_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cloud_credentials", 
                    "x-ntnx-enum": [
                        "cloud_credentials"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for cloud_credentials list output"
        }, 
        "epoch_config": {
            "description": "Details obtained by user on deploying Epoch AOC.", 
            "type": "object", 
            "properties": {
                "aoc_url": {
                    "type": "string", 
                    "description": "IP address or Fully Qualified Domain Name(FQDN) obtained by user on deploying Epoch AOC.\n"
                }, 
                "org_id": {
                    "type": "string", 
                    "description": "Organization ID obtained by user on deploying Epoch AOC.\n"
                }, 
                "app_key": {
                    "type": "string", 
                    "description": "Application Key obtained by user on deploying Epoch AOC.\n"
                }
            }, 
            "title": "Epoch AOC and IPFix aggregator config info."
        }, 
        "aws_elastic_ip_resources_def_status": {
            "description": "AWS elastic IP creation/modification status.", 
            "type": "object", 
            "properties": {
                "domain": {
                    "x-ntnx-enum": [
                        "STANDARD", 
                        "VPC"
                    ], 
                    "type": "string", 
                    "description": "Indicates whether the address is an EC2 or VPC address."
                }, 
                "public_ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The Elastic IP address"
                }, 
                "allocation_id": {
                    "type": "string", 
                    "description": "The allocation AWS ID for the address (only for VPC)"
                }, 
                "instance_id": {
                    "pattern": "^i-[a-f0-9]{1,17}$", 
                    "type": "string", 
                    "description": "The AWS ID of the instance the address is associated with.\n"
                }, 
                "association_id": {
                    "type": "string", 
                    "description": "The association AWS ID for the address (only for VPC)"
                }, 
                "network_interface_id": {
                    "type": "string", 
                    "description": "The network interface (if any) that the address is associated with (only for VPC).\n"
                }, 
                "private_ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The private IP address associated with the Elastic IP (only for VPC)\n"
                }, 
                "network_interface_owner_id": {
                    "type": "string", 
                    "description": "The owner AWS ID (only for VPC)."
                }
            }, 
            "title": "AWS elastic IP creation/modification status"
        }, 
        "groups_bucket_summary_map": {
            "additionalProperties": {
                "type": "integer", 
                "format": "int64"
            }, 
            "type": "object", 
            "description": "Group Bucket Summary Map.", 
            "title": "Group Buckets Summary Map"
        }, 
        "identity_provider_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "identity_provider", 
                    "x-ntnx-enum": [
                        "identity_provider"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for identity_provider list output"
        }, 
        "user_group_reference": {
            "description": "The reference to a user_group", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "user_group", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "user_group"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a user_group"
        }, 
        "aws_image_def_status": {
            "description": "aws_image resources status", 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string", 
                    "description": "aws_image name."
                }, 
                "resources": {
                    "$ref": "#/definitions/aws_image_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for aws_image."
                }
            }, 
            "title": "aws_image resources status"
        }, 
        "vm_recovery_points_override_spec": {
            "description": "Properties that can can be overriden during cloning of recovery point.\n", 
            "required": [
                "expiration_time"
            ], 
            "type": "object", 
            "properties": {
                "expiration_time": {
                    "type": "string", 
                    "description": "The time when this recovery point expires and will be garbage\ncollected. This is in internet date/time format (RFC 3339). For\nexample, 1985-04-12T23:20:50.52Z, this represents 20 minutes and\n50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If not\nset, then the recovery point never expires.\n", 
                    "format": "date-time"
                }
            }, 
            "title": "Recovery point override spec."
        }, 
        "ospf_config": {
            "description": "OSPF configuration for route peering with internal routers.", 
            "type": "object", 
            "properties": {
                "authentication_type": {
                    "x-ntnx-enum": [
                        "PLAIN_TEXT", 
                        "MD5"
                    ], 
                    "type": "string", 
                    "description": "OSPF authentication type."
                }, 
                "area_id": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "OSPF area id of this gateway."
                }, 
                "password": {
                    "type": "string", 
                    "description": "Password for authentication.", 
                    "format": "password"
                }
            }, 
            "title": "OSPF configuration for route peering with internal routers."
        }, 
        "directory_service_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "directory_service", 
                    "x-ntnx-enum": [
                        "directory_service"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for directory_service list"
        }, 
        "billing_invoice_list": {
            "description": "List of all invoices for the current tenant account.", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/billing_invoice"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "List of all invoices."
        }, 
        "remote_syslog_server": {
            "description": "Remote Syslog server creation/modification spec.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/syslog_server_resources"
                }
            }, 
            "title": "Remote Syslog server creation/modification spec."
        }, 
        "cluster_syslog_server_list": {
            "description": "List of clusters registered to PC and their rsyslog servers.", 
            "type": "object", 
            "properties": {
                "pe_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_syslog_server"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "List of clusters registered to PC and their rsyslog servers."
        }, 
        "protection_policy_state": {
            "description": "State of enforced policy on an entity.", 
            "required": [
                "compliance_status", 
                "enforcement_mode", 
                "policy_reference"
            ], 
            "type": "object", 
            "properties": {
                "policy_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "policy_info": {
                    "$ref": "#/definitions/protection_info"
                }, 
                "compliance_status": {
                    "description": "This field indicates whether the given entity is compliant with the specified policy or not. It will be in unknown state if the current compliance state is not known.\n", 
                    "$ref": "#/definitions/policy_compliance_state"
                }, 
                "enforcement_mode": {
                    "x-ntnx-enum": [
                        "MONITORING", 
                        "ENFORCING", 
                        "ENFORCEMENT_FAILED"
                    ], 
                    "type": "string", 
                    "description": "Policy enforcement mode informs us about what the policy engine is currently doing to enforce the policy on the entity. Monitoring indicates that the policy engine is simply monitoring the entity's state. Enforcing means that the policy engine is currently trying to enforce the policy on the entity. Enforcement failed indicates that the policy engine encountered a non-transient error and requires user intervention to fix the problem, error message gives the reason for error in this case.\n"
                }, 
                "error_message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Policy State"
        }, 
        "role_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "role", 
                    "x-ntnx-enum": [
                        "role"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for role list"
        }, 
        "guest_tools_spec": {
            "description": "Information regarding guest tools.", 
            "type": "object", 
            "properties": {
                "nutanix_guest_tools": {
                    "description": "Nutanix Guest Tools information", 
                    "$ref": "#/definitions/nutanix_guest_tools_spec"
                }
            }, 
            "title": "Guest Tools information"
        }, 
        "layer2_stretch": {
            "description": "An intentful representation of a layer2_stretch spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for layer2_stretch.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/layer2_stretch_resources"
                }, 
                "name": {
                    "type": "string", 
                    "description": "layer2_stretch Name.", 
                    "maxLength": 256
                }
            }, 
            "title": "layer2_stretch Intent Spec with placement specified"
        }, 
        "prism_central": {
            "description": "Prism central deployment definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "required": [
                        "version", 
                        "pc_vm_list"
                    ], 
                    "type": "object", 
                    "description": "Prism central deployment resources.", 
                    "properties": {
                        "should_auto_register": {
                            "default": false, 
                            "type": "boolean", 
                            "description": "Indicates if the new prism central should be automatically register to the cluster.\n"
                        }, 
                        "initial_password": {
                            "minLength": 1, 
                            "maxLength": 50, 
                            "type": "string", 
                            "description": "Initial boot up password for new created Prism Central.", 
                            "format": "password"
                        }, 
                        "is_registered_to_hosting_pe": {
                            "default": false, 
                            "type": "boolean", 
                            "description": "If this prism central vm is registered to hosting PE."
                        }, 
                        "cmsp_config": {
                            "$ref": "#/definitions/cmsp_config"
                        }, 
                        "mcm_config": {
                            "$ref": "#/definitions/mcm_config"
                        }, 
                        "pc_size": {
                            "x-ntnx-enum": [
                                "kUnknown", 
                                "kTiny", 
                                "kSmall", 
                                "kLarge", 
                                "kXLarge"
                            ], 
                            "type": "string", 
                            "description": "Size of the PC being deployed(tiny/small/large/XL)"
                        }, 
                        "environment": {
                            "x-ntnx-enum": [
                                "kOnPrem", 
                                "kAzure", 
                                "kAws", 
                                "KAzureNative"
                            ], 
                            "type": "string", 
                            "description": "The MCM environment config."
                        }, 
                        "version": {
                            "type": "string", 
                            "description": "The desired version of Prism Central."
                        }, 
                        "pc_vm_list": {
                            "items": {
                                "$ref": "#/definitions/pc_vm"
                            }, 
                            "type": "array"
                        }, 
                        "cluster_uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "description": "The Cluster UUID for the Prism Central Deployment.", 
                            "format": "UUID"
                        }, 
                        "type": {
                            "default": "PC", 
                            "x-ntnx-enum": [
                                "PC", 
                                "XiPC"
                            ], 
                            "type": "string", 
                            "description": "The type of the Prism Central cluster."
                        }, 
                        "virtual_ip": {
                            "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                            "type": "string", 
                            "description": "The desired virtual IP address of Prism Central cluster.\n"
                        }
                    }
                }
            }, 
            "title": "Prism Central"
        }, 
        "availability_zone_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "availability_zone", 
                    "x-ntnx-enum": [
                        "availability_zone"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for availability_zone list"
        }, 
        "storage_policy_resources": {
            "description": "Storage Policy Resources Definition", 
            "type": "object", 
            "properties": {
                "encryption": {
                    "type": "object", 
                    "properties": {
                        "state": {
                            "default": "SYSTEM_DERIVED", 
                            "x-ntnx-enum": [
                                "ENABLE", 
                                "SYSTEM_DERIVED"
                            ], 
                            "type": "string", 
                            "description": "Enable encryption for entities. Once enabled, cannot be disabled.\nIf user does not have an explicit preference towards enabling\nencryption, the system decides an appropriate value.\n"
                        }
                    }, 
                    "title": "Encryption parameters for the entities."
                }, 
                "fault_tolerance": {
                    "type": "object", 
                    "properties": {
                        "replication_factor": {
                            "default": -1, 
                            "type": "integer", 
                            "description": "Set replication factor for entities.\n", 
                            "format": "int64"
                        }
                    }, 
                    "title": "Fault tolerance parameters for the entities."
                }, 
                "qos": {
                    "type": "object", 
                    "properties": {
                        "throttled_iops": {
                            "default": -1, 
                            "type": "integer", 
                            "description": "Throttled IOPS for the entities being governed. The block size\nfor the IO is 32kB.\n", 
                            "format": "int64"
                        }
                    }, 
                    "title": "Storage QoS parameters for the entities."
                }, 
                "compression": {
                    "type": "object", 
                    "properties": {
                        "state": {
                            "default": "SYSTEM_DERIVED", 
                            "x-ntnx-enum": [
                                "ENABLE", 
                                "DISABLE", 
                                "SYSTEM_DERIVED"
                            ], 
                            "type": "string", 
                            "description": "Enable or disable compression for entities governed by the\npolicy. If user does not have an explicit preference for\ncompression, the system decides an appropriate value.\n"
                        }, 
                        "inline_compression": {
                            "type": "boolean", 
                            "description": "Indicates inline or post-process compression. If compression state\nis SYSTEM_DERIVED, then this field has no significance.\n"
                        }
                    }, 
                    "title": "Compression parameters for the entities."
                }, 
                "filter_list": {
                    "items": {
                        "$ref": "#/definitions/filter"
                    }, 
                    "type": "array", 
                    "description": "Regex for entities on which the policy is to be applied"
                }
            }, 
            "title": "Storage Policy Resources"
        }, 
        "category_mapping": {
            "description": "An intentful representation of a category_mapping spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for category_mapping.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/category_mapping_resources"
                }, 
                "name": {
                    "type": "string", 
                    "description": "category_mapping Name.", 
                    "maxLength": 256
                }
            }, 
            "title": "category_mapping Intent Spec with placement specified"
        }, 
        "app_published_service_element": {
            "description": "Published service element", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "action_list", 
                "variable_list"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "default": "K8S_SERVICE", 
                    "x-ntnx-enum": [
                        "K8S_SERVICE"
                    ], 
                    "type": "string", 
                    "description": "Type of published service"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for service"
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional published service options"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Published service element definition"
        }, 
        "custom_generic_key_value_pair": {
            "additionalProperties": {
                "type": "string"
            }, 
            "type": "object", 
            "description": "Generic key value pair used for custom attributes", 
            "title": "Generic key value pair"
        }, 
        "aws_volume_type_list_intent_response": {
            "description": "AWS VPC entity list.", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/aws_volume_type_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_volume_type_list_metadata_output"
                }
            }, 
            "title": "aws_volume_type entity list"
        }, 
        "file_location": {
            "description": "The reference to a ndfs file location in a cluster", 
            "required": [
                "container_name", 
                "relative_path"
            ], 
            "type": "object", 
            "properties": {
                "relative_path": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The file path"
                }, 
                "container_name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The container name", 
                    "maxLength": 128
                }
            }, 
            "title": "Reference to a nfs file"
        }, 
        "aws_vpc_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_vpc", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_vpc"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "audit_user": {
            "description": "Reference to the user who initiated the operation being audited.", 
            "type": "object", 
            "properties": {
                "ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The IP address from where the operation was triggered."
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the authenticated user who initiated the operation."
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the authenticated user who initiated the operation.", 
                    "format": "UUID"
                }
            }, 
            "title": "Audit user."
        }, 
        "query_request": {
            "description": "Query request.", 
            "type": "object", 
            "properties": {
                "filter_criteria": {
                    "type": "string", 
                    "description": "FIQL filter criteria that will be used to form the filter field for the backend queries.\n"
                }, 
                "interval_start_ms": {
                    "type": "integer", 
                    "description": "For a time-series query, the start of the interval since epoch in ms.\n", 
                    "format": "int64"
                }, 
                "entity_type": {
                    "type": "string", 
                    "description": "Helps identify the query to be executed in Security Monitoring.\n"
                }, 
                "group_member_offset": {
                    "type": "integer", 
                    "description": "The offset into the total member set to return per group.", 
                    "format": "int64"
                }, 
                "group_member_count": {
                    "type": "integer", 
                    "description": "The maximum number of members to return per group.", 
                    "format": "int64"
                }, 
                "group_member_sort_order": {
                    "x-ntnx-enum": [
                        "ASCENDING", 
                        "DESCENDING"
                    ], 
                    "type": "string", 
                    "description": "Sort order for entities and entity groups."
                }, 
                "query_name": {
                    "type": "string", 
                    "description": "A custom name to use for tagging the query when debugging."
                }, 
                "group_member_attributes": {
                    "items": {
                        "$ref": "#/definitions/group_requested_attribute"
                    }, 
                    "type": "array"
                }, 
                "group_member_sort_attribute": {
                    "type": "string", 
                    "description": "The name of the attribute that will be used to sort group members.\n"
                }, 
                "interval_end_ms": {
                    "type": "integer", 
                    "description": "For a time-series query, the end of the interval since epoch in ms.\n", 
                    "format": "int64"
                }
            }, 
            "title": "Query Request"
        }, 
        "identity_providers_reference": {
            "description": "Identity Provider resource.", 
            "type": "object", 
            "properties": {
                "kind": {
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Identity Provider Reference"
        }, 
        "app_actionrun_args": {
            "description": "Argument format for action run", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the Argument field.", 
                    "maxLength": 64
                }, 
                "value": {
                    "type": "string", 
                    "description": "Value of the Argument field."
                }
            }, 
            "title": "Argument format for action run"
        }, 
        "group_query": {
            "type": "object", 
            "description": "Group query object definition. Making it opaque in the first\nrelease. This will have the details of the parameters which are\npresent in group query.\n", 
            "title": "Group Query Definition"
        }, 
        "app_intent_input": {
            "description": "An intentful representation of a app", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/app"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/app_metadata"
                }
            }, 
            "title": "app Intent Entity"
        }, 
        "routing_policy_counters": {
            "description": "Number of packets and bytes hitting the rule.", 
            "type": "object", 
            "properties": {
                "packet_count": {
                    "type": "integer", 
                    "format": "uint64"
                }, 
                "byte_count": {
                    "type": "integer", 
                    "format": "uint64"
                }
            }, 
            "title": "Policy counters"
        }, 
        "vm_recovery_point": {
            "description": "The input object that defines a vm recovery point.", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the recovery point.", 
                    "maxLength": 64
                }, 
                "cluster_reference": {
                    "description": "Reference to the cluster in the availability zone where this recovery\npoint is located.\n", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "type": "object", 
                    "properties": {
                        "source_cluster_reference": {
                            "description": "Reference to the cluster in the source availability zone.\n", 
                            "$ref": "#/definitions/cluster_reference"
                        }, 
                        "source_availability_zone_reference": {
                            "description": "Reference to the availability zone where the source recovery\npoint exists. This need to be set to copy a recovery from some\nother location.\n", 
                            "$ref": "#/definitions/availability_zone_reference"
                        }, 
                        "parent_vm_reference": {
                            "description": "Reference to vm that this recovery point is a snapshot of.\n", 
                            "$ref": "#/definitions/vm_reference"
                        }, 
                        "recovery_point_type": {
                            "x-ntnx-enum": [
                                "CRASH_CONSISTENT", 
                                "APPLICATION_CONSISTENT", 
                                "LIVE"
                            ], 
                            "type": "string", 
                            "description": "Crash consistent or Application Consistent recovery point"
                        }, 
                        "creation_time": {
                            "type": "string", 
                            "description": "The time when the the recovery point is created. This is in internet\ndate/time format (RFC 3339). For example, 1985-04-12T23:20:50.52Z,\nthis represents 20 minutes and 50.52 seconds after the 23rd hour of\nApril 12th, 1985 in UTC.\n", 
                            "format": "date-time"
                        }, 
                        "vm_recovery_point_location_agnostic_uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "description": "Location agnostic UUID of the recovery point. If a recovery\npoint is replicated to a different clusters, then all the\ninstances of same recovery point will share this UUID.\n"
                        }, 
                        "expiration_time": {
                            "type": "string", 
                            "description": "The time when this recovery point expires and will be garbage\ncollected. This is in internet date/time format (RFC 3339). For\nexample, 1985-04-12T23:20:50.52Z, this represents 20 minutes and\n50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If not\nset, then the recovery point never expires.\n", 
                            "format": "date-time"
                        }
                    }, 
                    "title": "Recovery point resources"
                }, 
                "availability_zone_reference": {
                    "description": "Reference to the availability zone where this recovery point is\nlocated\n", 
                    "$ref": "#/definitions/availability_zone_reference"
                }
            }, 
            "title": "vm recovery point input definitions"
        }, 
        "cell_intent_response": {
            "description": "Response object for intentful operations on a cell", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/cell_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/cell"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cell_metadata"
                }
            }, 
            "title": "cell Intent Response"
        }, 
        "marketplace_item_output_resources": {
            "description": "Description of the marketplace item", 
            "required": [
                "app_blueprint_template", 
                "author"
            ], 
            "type": "object", 
            "properties": {
                "app_blueprint_template": {
                    "type": "object", 
                    "description": "This is an opaque object that represents the information required to launch an app.\n", 
                    "properties": {
                        "status": {
                            "$ref": "#/definitions/blueprint_download_def_status"
                        }, 
                        "spec": {
                            "$ref": "#/definitions/blueprint_upload"
                        }
                    }
                }, 
                "app_state": {
                    "default": "PENDING", 
                    "x-ntnx-enum": [
                        "PENDING", 
                        "ACCEPTED", 
                        "REJECTED", 
                        "PUBLISHED"
                    ], 
                    "type": "string", 
                    "description": "State indicating if marketplace item is approved, pending or rejected\n"
                }, 
                "author": {
                    "type": "string", 
                    "description": "Person or company which developed the app"
                }, 
                "project_reference_list": {
                    "items": {
                        "$ref": "#/definitions/project_reference"
                    }, 
                    "type": "array", 
                    "description": "The projects this marketplace item has been assigned to"
                }, 
                "icon_reference_list": {
                    "items": {
                        "$ref": "#/definitions/marketplace_icon"
                    }, 
                    "type": "array"
                }, 
                "app_group_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID for the group of MPIs which are versions of the same App\n", 
                    "format": "UUID"
                }, 
                "change_log": {
                    "type": "string", 
                    "description": "Change log for this version of the app\n", 
                    "maxLength": 5000
                }, 
                "version": {
                    "type": "string", 
                    "description": "Indicates version of the App that this marketplace item represents\n", 
                    "maxLength": 64
                }, 
                "app_attribute_list": {
                    "items": {
                        "x-ntnx-enum": [
                            "FEATURED"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Attributes of this app."
                }, 
                "app_source": {
                    "default": "LOCAL", 
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "GLOBAL_STORE"
                    ], 
                    "type": "string", 
                    "description": "Indicates whether the app is Global(Marketplace item) or Local(User created)\n"
                }
            }, 
            "title": "Description of the marketplace item"
        }, 
        "flash_mode": {
            "x-ntnx-enum": [
                "ENABLED", 
                "DISABLED"
            ], 
            "type": "string", 
            "description": "State of the storage policy to pin virtual disks to the hot tier.\nWhen specified as a VM attribute, the storage policy applies to all\nvirtual disks of the VM unless overridden by the same attribute\nspecified for a virtual disk.\n", 
            "title": "Flash Mode"
        }, 
        "permission_resources": {
            "description": "Permission resources definition.", 
            "required": [
                "operation", 
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "fields": {
                    "description": "The fields that can/cannot be accessed during the specified operation. field_name_list will be a list of fields. e.g. if field_mode = disallowed, field_name_list = [\"xyz\"] then the list of allowed fields is ALL fields minus xyz\n", 
                    "required": [
                        "field_mode", 
                        "field_name_list"
                    ], 
                    "type": "object", 
                    "properties": {
                        "field_mode": {
                            "x-ntnx-enum": [
                                "ALLOWED", 
                                "DISALLOWED", 
                                "NONE"
                            ], 
                            "type": "string", 
                            "description": "Allow or disallow the fields mentioned."
                        }, 
                        "field_name_list": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "The list of fields."
                        }
                    }, 
                    "title": "The fields that can be allowed or disallowed during an operation."
                }, 
                "operation": {
                    "type": "string", 
                    "description": "The operation that is being performed on a given kind."
                }, 
                "kind": {
                    "type": "string", 
                    "description": "The kind on which the operation is being performed."
                }
            }, 
            "title": "Permission entity resources."
        }, 
        "mh_vm_storage_config": {
            "description": "User inputs of different storage parameters", 
            "type": "object", 
            "properties": {
                "qos_policy": {
                    "description": "Storage QoS parameters to be applied on the VM.\nThe parameters are reset if the default values are passed.\n", 
                    "$ref": "#/definitions/storage_qos_policy_config_input"
                }, 
                "flash_mode": {
                    "description": "State of the storage policy to pin virtual disks of the VM to the\nhot tier.\n", 
                    "$ref": "#/definitions/flash_mode"
                }
            }, 
            "title": "VM Storage Config input"
        }, 
        "report_instance_list_intent_response": {
            "description": "Response object for intentful operation of report_instances", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/report_instance_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/report_instance_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "aws_vm_resources_def_status": {
            "description": "VM Resources Status Definition.", 
            "type": "object", 
            "properties": {
                "root_device_type": {
                    "x-ntnx-enum": [
                        "EBS", 
                        "INSTANCE_STORE"
                    ], 
                    "type": "string", 
                    "description": "The root device type"
                }, 
                "private_dns_name": {
                    "type": "string", 
                    "description": "The private DNS name of the instance."
                }, 
                "availability_zone": {
                    "type": "string", 
                    "description": "The zone on which the instance is created"
                }, 
                "block_device_map": {
                    "$ref": "#/definitions/aws_block_device_map_output_status"
                }, 
                "id": {
                    "pattern": "^i-[a-f0-9]{1,17}$", 
                    "type": "string", 
                    "description": "The AWS ID of the instance."
                }, 
                "subnet_id": {
                    "pattern": "^subnet-[a-f0-9]{1,17}$", 
                    "type": "string", 
                    "description": "The subnet within the VPC the instance belongs to."
                }, 
                "platform": {
                    "type": "string", 
                    "description": "Platform of the instance e.g. Windows"
                }, 
                "state": {
                    "x-ntnx-enum": [
                        "PENDING", 
                        "RUNNING", 
                        "SHUTTING_DOWN", 
                        "TERMINATED", 
                        "STOPPING", 
                        "STOPPED"
                    ], 
                    "type": "string", 
                    "description": "Instance's current state."
                }, 
                "console_output": {
                    "type": "string", 
                    "description": "Console output of the instance", 
                    "format": "bytes"
                }, 
                "public_ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The public IP of the instance"
                }, 
                "key_name": {
                    "type": "string", 
                    "description": "The name of the key pair used to launch the instance"
                }, 
                "image_id": {
                    "pattern": "^ami-[a-f0-9]{1,17}$", 
                    "type": "string", 
                    "description": "The AWS ID of the AMI on the instance."
                }, 
                "public_dns_name": {
                    "type": "string", 
                    "description": "The public DNS name of the instance."
                }, 
                "account_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The AWS account to which the instance belongs.", 
                    "format": "UUID"
                }, 
                "instance_profile_name": {
                    "type": "string", 
                    "description": "The name of the IAM Instance Profile (IIP) associated with the\ninstance.\n"
                }, 
                "region": {
                    "pattern": "^[a-z]{2}-[a-z\\-]*-[1-9]{1}$", 
                    "type": "string", 
                    "description": "The region to which the instance belongs."
                }, 
                "launch_time": {
                    "type": "string", 
                    "description": "The time the instance was launched"
                }, 
                "instance_initiated_shutdown_behavior": {
                    "x-ntnx-enum": [
                        "STOP", 
                        "TERMINATE"
                    ], 
                    "type": "string", 
                    "description": "Specifies whether the instance stops or terminates on instance-initiated shutdown.\n"
                }, 
                "instance_type": {
                    "type": "string", 
                    "description": "The type of instance e.g.'t1.micro', 'm1.small'", 
                    "maxLength": 64
                }, 
                "security_group_list": {
                    "description": "AWS IDs of the security groups associated with the instance.\n", 
                    "$ref": "#/definitions/aws_security_group_list"
                }, 
                "private_ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The specific available IP from the subnet assigned to the instance.\n"
                }, 
                "vpc_id": {
                    "pattern": "^vpc-[a-f0-9]{1,17}$", 
                    "type": "string", 
                    "description": "The VPC AWS ID, if running in VPC."
                }, 
                "tag_list": {
                    "$ref": "#/definitions/aws_tag_list"
                }
            }, 
            "title": "VM Resources Status Definition"
        }, 
        "root_certificate": {
            "description": "Payload for multicluster configuration request.", 
            "required": [
                "local_gateway_role"
            ], 
            "type": "object", 
            "properties": {
                "certificate_chain": {
                    "items": {
                        "$ref": "#/definitions/certificate"
                    }, 
                    "type": "array", 
                    "description": "A certificate chain for validating JWT. At the beginning of this chain is an end-entity certificate whose private key is used to sign the JWT. The end of the chain is the root certificate. If this is passed from one PC to another PC, the root certificate in this chain should be the same as the root certificate to be configured. The chain guarantee the sender owns the end-entity certificate signed by the root certificate to be configured. If this is passed from one PC to PE, the root certificate in the chain on PC should be trusted by PE. This is to verify that the PC sending the root certificate to be configured is trusted by the PE."
                }, 
                "local_gateway_role": {
                    "x-ntnx-enum": [
                        "INITIATOR", 
                        "ACCEPTOR"
                    ], 
                    "type": "string", 
                    "description": "Local gateway role in handling root certificate configurations.\n"
                }, 
                "jwt": {
                    "maxLength": 10240, 
                    "type": "string", 
                    "description": "JWT for validating the attached root certificate.", 
                    "format": "byte"
                }, 
                "certificate": {
                    "description": "The root certificate to be configured.", 
                    "$ref": "#/definitions/certificate"
                }
            }, 
            "title": "Root certificates for multicluster configurations"
        }, 
        "environment_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "environment", 
                    "x-ntnx-enum": [
                        "environment"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for environment list output"
        }, 
        "vm_host_affinity_legacy_policy_info": {
            "description": "Response while getting an VM Host Affinity Legacy Policy.", 
            "type": "object", 
            "properties": {
                "config": {
                    "$ref": "#/definitions/vm_host_affinity_legacy_policy_config"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_host_affinity_legacy_policy_metadata"
                }
            }, 
            "title": "VM Host Affinity Legacy Policy get response"
        }, 
        "remote_syslog_module_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_syslog_module", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_syslog_module"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "app_substrate_response_download": {
            "description": "Substrate info for deployment", 
            "required": [
                "uuid", 
                "name", 
                "type", 
                "variable_list", 
                "action_list", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "platform_data": {
                    "type": "string", 
                    "description": ""
                }, 
                "instance_address": {
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_substrate_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "instance_id": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "account_reference": {
                    "$ref": "#/definitions/account_reference_upload"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "instance_name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "readiness_probe": {
                    "$ref": "#/definitions/app_substrate_readiness_probe"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_substrate_reference_upload"
                }, 
                "os_type": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "VM", 
                        "AHV_VM", 
                        "AWS_VM", 
                        "GCP_VM", 
                        "AZURE_VM", 
                        "EXISTING_VM", 
                        "BARE_METAL", 
                        "GENERIC", 
                        "VMWARE_VM", 
                        "K8S_POD"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "create_spec": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Spec of the substrate"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": "List of variables"
                }, 
                "instance_power_state": {
                    "type": "string", 
                    "description": ""
                }
            }, 
            "title": "Deployment Sustrate Definition for Application."
        }, 
        "aws_role_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_role", 
                    "x-ntnx-enum": [
                        "aws_role"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for aws_role list"
        }, 
        "layer2_stretch_intent_resource": {
            "description": "Response object for intentful operations on a layer2_stretch", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/layer2_stretch_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/layer2_stretch"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/layer2_stretch_metadata"
                }
            }, 
            "title": "layer2_stretch Intent Response"
        }, 
        "support_case_list_intent_response": {
            "description": "Response object for intentful operation of support_cases", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/support_case_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/support_case_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "action_rule_result_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_rule_result", 
                    "x-ntnx-enum": [
                        "action_rule_result"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for action_rule_result list"
        }, 
        "vm_nic": {
            "description": "Virtual Machine NIC.", 
            "type": "object", 
            "properties": {
                "nic_type": {
                    "x-ntnx-enum": [
                        "NORMAL_NIC", 
                        "DIRECT_NIC", 
                        "NETWORK_FUNCTION_NIC", 
                        "SPAN_DESTINATION_NIC"
                    ], 
                    "type": "string", 
                    "description": "The type of this NIC. Defaults to NORMAL_NIC."
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The NIC's UUID, which is used to uniquely identify this particular NIC. This UUID may be used to refer to the NIC outside the context of the particular VM it is attached to.\n", 
                    "format": "UUID"
                }, 
                "ip_endpoint_list": {
                    "items": {
                        "$ref": "#/definitions/ip_address"
                    }, 
                    "type": "array", 
                    "description": "IP endpoints for the adapter. Currently, IPv4 addresses are\nsupported.\n"
                }, 
                "num_queues": {
                    "type": "integer", 
                    "description": "The number of tx/rx queue pairs for this NIC.\n"
                }, 
                "secondary_ip_address_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Secondary IPv4 Addresses for this NIC.", 
                    "maxItems": 100
                }, 
                "network_function_nic_type": {
                    "x-ntnx-enum": [
                        "INGRESS", 
                        "EGRESS", 
                        "TAP"
                    ], 
                    "type": "string", 
                    "description": "The type of this Network function NIC. Defaults to INGRESS.\n"
                }, 
                "network_function_chain_reference": {
                    "$ref": "#/definitions/network_function_chain_reference"
                }, 
                "vlan_mode": {
                    "x-ntnx-enum": [
                        "ACCESS", 
                        "TRUNKED"
                    ], 
                    "type": "string", 
                    "description": "By default, all virtual NICs are created in ACCESS mode, which permits only one VLAN per virtual network. TRUNKED mode allows multiple VLANs on a single VM NIC for network-aware user VMs.\n"
                }, 
                "mac_address": {
                    "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$", 
                    "type": "string", 
                    "description": "The MAC address for the adapter.", 
                    "x-example": "50:6b:8d:ee:de:2b"
                }, 
                "subnet_reference": {
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "model": {
                    "x-ntnx-enum": [
                        "VIRTIO", 
                        "E1000"
                    ], 
                    "type": "string", 
                    "description": "The model of this NIC."
                }, 
                "is_connected": {
                    "type": "boolean", 
                    "description": "Whether or not the NIC is connected. True by default."
                }, 
                "trunked_vlan_list": {
                    "items": {
                        "type": "integer"
                    }, 
                    "type": "array", 
                    "description": "List of networks to trunk if vlan_mode is TRUNKED. If empty and VLAN mode is TRUNKED, all VLANs are trunked.\n"
                }
            }, 
            "title": "Virtual Machine NIC"
        }, 
        "recovery_plan_reference": {
            "description": "The reference to a recovery_plan", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "recovery_plan", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "recovery_plan"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a recovery_plan"
        }, 
        "action_type_intent_resource": {
            "description": "Response object for intentful operations on a action_type", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/action_type_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/action_type"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_type_metadata"
                }
            }, 
            "title": "action_type Intent Response"
        }, 
        "ssh_user_details": {
            "description": "SSH User details", 
            "required": [
                "username", 
                "user_uuid", 
                "entity_list", 
                "access_request_uuid"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "SSH User name"
                }, 
                "user_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "SSH User UUID", 
                    "format": "UUID"
                }, 
                "access_request_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the access request requesting SSH access", 
                    "format": "UUID"
                }, 
                "entity_list": {
                    "items": {
                        "type": "object", 
                        "properties": {
                            "entity_uuid": {
                                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                "type": "string", 
                                "description": "Entity UUID"
                            }, 
                            "entity_ip": {
                                "type": "string", 
                                "description": "Entity IP Address"
                            }, 
                            "entity_type": {
                                "x-ntnx-enum": [
                                    "CVM", 
                                    "PRISM_CENTRAL", 
                                    "HYPERVISOR"
                                ], 
                                "type": "string", 
                                "description": "Entity IP Address"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "List of IP addresses to the entity which the user requested access to"
                }
            }, 
            "title": "SSH User details"
        }, 
        "app_cost_input_upload": {
            "description": "Cost definition for Application", 
            "required": [
                "name", 
                "type", 
                "interval", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "interval": {
                    "x-ntnx-enum": [
                        "HOUR", 
                        "WEEK", 
                        "MONTH"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "value": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "LIVE", 
                        "STATIC"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Cost for Application"
        }, 
        "remote_syslog_module_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_syslog_module", 
                    "x-ntnx-enum": [
                        "remote_syslog_module"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for remote_syslog_module list"
        }, 
        "ip_subnet": {
            "description": "IP subnet provided as an address and prefix length.", 
            "type": "object", 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IPV4 address."
                }, 
                "prefix_length": {
                    "minimum": 0, 
                    "type": "integer", 
                    "maximum": 32, 
                    "format": "int32"
                }
            }, 
            "title": "IP subnet."
        }, 
        "replicate_recovery_point_input": {
            "description": "Input for replicating a Recovery Point.", 
            "required": [
                "source_availability_zone_reference", 
                "target_availability_zone_reference"
            ], 
            "type": "object", 
            "properties": {
                "source_availability_zone_reference": {
                    "description": "Reference to the source Availability Zone where the Recovery Point\nwhich are to be replicated resides.\n", 
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "target_cluster_reference": {
                    "description": "Reference to the cluster on the target.\n", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "target_availability_zone_reference": {
                    "description": "Reference to the target Availability Zone where the Recovery Point\nneed to be replicated.\n", 
                    "$ref": "#/definitions/availability_zone_reference"
                }
            }, 
            "title": "Input for replicating a Recovery Point."
        }, 
        "cluster_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cluster", 
                    "x-ntnx-enum": [
                        "cluster"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for cluster list output"
        }, 
        "service_group_list_metadata": {
            "description": "Api calls that return a list have this metadata block as input", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "service_group", 
                    "x-ntnx-enum": [
                        "service_group"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to on which the sort is performed"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for service_group list"
        }, 
        "remote_connection_resources": {
            "description": "Remote connection resources", 
            "type": "object", 
            "properties": {
                "remote_credential": {
                    "$ref": "#/definitions/remote_connection_credential"
                }, 
                "role": {
                    "default": "INITIATOR", 
                    "x-ntnx-enum": [
                        "INITIATOR", 
                        "ACCEPTOR"
                    ], 
                    "type": "string", 
                    "description": "Role of the cluster in remote connection"
                }, 
                "remote_address": {
                    "$ref": "#/definitions/address"
                }, 
                "local_connection_info": {
                    "$ref": "#/definitions/remote_connection_info"
                }, 
                "remote_connection_info": {
                    "$ref": "#/definitions/remote_connection_info"
                }
            }, 
            "title": "Remote connection resources"
        }, 
        "docker_registry_resources": {
            "description": "Docker registry resources", 
            "required": [
                "username", 
                "url", 
                "password"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "User name of the docker registry", 
                    "maxLength": 64
                }, 
                "is_enabled": {
                    "type": "boolean", 
                    "description": "Flag to indicate whether the docker registry is enabled or not.\nIf unset, defaults to False.\n"
                }, 
                "certificate": {
                    "type": "string", 
                    "description": "Certificate required for the private docker registry"
                }, 
                "url": {
                    "type": "string", 
                    "description": "URL of the docker registry"
                }, 
                "password": {
                    "type": "string", 
                    "description": "Password of the user for the docker registry"
                }, 
                "is_system_default": {
                    "readOnly": true, 
                    "type": "boolean", 
                    "description": "Flag to indicate whether the docker registry is a system default\n"
                }
            }, 
            "title": "Docker Registry Resources"
        }, 
        "app_resources": {
            "description": "Resources for Application.", 
            "required": [
                "variable_list", 
                "deployment_list", 
                "action_list", 
                "credential_list"
            ], 
            "type": "object", 
            "properties": {
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input"
                    }, 
                    "type": "array", 
                    "description": "List of Action for Application."
                }, 
                "credential_list": {
                    "items": {
                        "$ref": "#/definitions/app_credential_input"
                    }, 
                    "type": "array", 
                    "description": "Credential list for appspec"
                }, 
                "app_blueprint_config_reference": {
                    "$ref": "#/definitions/blueprint_reference"
                }, 
                "app_blueprint_reference": {
                    "$ref": "#/definitions/blueprint_reference"
                }, 
                "app_profile_config_reference": {
                    "$ref": "#/definitions/app_profile_reference"
                }, 
                "client_attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Data needed for clients."
                }, 
                "dependency_list": {
                    "items": {
                        "$ref": "#/definitions/blueprint_dependency_list"
                    }, 
                    "type": "array", 
                    "description": "Dependencies or edges between callrunbook tasks formed by usage of macros in child tasks"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": "List of variables"
                }, 
                "deployment_list": {
                    "items": {
                        "$ref": "#/definitions/app_deployment_input"
                    }, 
                    "type": "array", 
                    "description": "List of Deployment Spec for Application."
                }
            }, 
            "title": "Resources for Application."
        }, 
        "public_key": {
            "description": "Public Key", 
            "required": [
                "name", 
                "key"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "key": {
                    "type": "string"
                }
            }, 
            "title": "Public Key"
        }, 
        "ipfix_exporter_metadata": {
            "description": "The ipfix_exporter kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when ipfix_exporter was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "ipfix_exporter", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ipfix_exporter"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "ipfix_exporter uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the ipfix_exporter is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when ipfix_exporter was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the ipfix_exporter. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the ipfix_exporter. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "ipfix_exporter name", 
                    "maxLength": 80
                }
            }, 
            "title": "ipfix_exporter metadata"
        }, 
        "environment_intent_response": {
            "description": "Response object for intentful operations on a environment", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/environment_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/environment"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/environment_metadata"
                }
            }, 
            "title": "environment Intent Response"
        }, 
        "blueprint_list_intent_response": {
            "description": "Response object for intentful operation of blueprints", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/blueprint_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "aws_subnet_resources_def_status": {
            "description": "AWS Subnet creation/modification status.", 
            "type": "object", 
            "properties": {
                "vpc_id": {
                    "pattern": "^vpc-[a-f0-9]{1,17}$", 
                    "type": "string", 
                    "description": "The AWS ID of the VPC the subnet is in."
                }, 
                "cidr_block": {
                    "type": "string", 
                    "description": "The CIDR block assigned to the subnet.", 
                    "maxLength": 64
                }, 
                "tag_list": {
                    "$ref": "#/definitions/aws_tag_list"
                }, 
                "id": {
                    "pattern": "^subnet-[a-f0-9]{1,17}$", 
                    "type": "string", 
                    "description": "The AWS ID of the subnet."
                }, 
                "state": {
                    "$ref": "#/definitions/aws_resource_state"
                }
            }, 
            "title": "AWS subnet creation/modification status"
        }, 
        "ssh_user_request_details": {
            "description": "SSH User Request details", 
            "required": [
                "username", 
                "user_uuid", 
                "user_key", 
                "user_key_name", 
                "entity_list", 
                "access_request_uuid"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "SSH User name"
                }, 
                "entity_list": {
                    "items": {
                        "required": [
                            "entity_ip", 
                            "entity_type"
                        ], 
                        "type": "object", 
                        "properties": {
                            "entity_uuid": {
                                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                "type": "string", 
                                "description": "Entity UUID"
                            }, 
                            "entity_ip": {
                                "type": "string", 
                                "description": "Entity IP Address"
                            }, 
                            "entity_type": {
                                "x-ntnx-enum": [
                                    "CVM", 
                                    "PRISM_CENTRAL", 
                                    "HYPERVISOR"
                                ], 
                                "type": "string", 
                                "description": "Entity type"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "List containing entity IP and entity type for each entity"
                }, 
                "user_key_name": {
                    "type": "string", 
                    "description": "Name for the user key to add"
                }, 
                "user_key": {
                    "type": "string", 
                    "description": "key to add for the user"
                }, 
                "user_unix_id": {
                    "type": "integer", 
                    "description": "Linux UID for user"
                }, 
                "access_request_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the access request requesting SSH access", 
                    "format": "UUID"
                }, 
                "user_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "SSH User UUID", 
                    "format": "UUID"
                }
            }, 
            "title": "SSH User Request details"
        }, 
        "oss_service_config_input": {
            "description": "Input body to configure Bucket Service Manager service.", 
            "required": [
                "state"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "x-ntnx-enum": [
                        "ENABLE"
                    ], 
                    "type": "string", 
                    "description": "The desired state of Bucket Service Manager service."
                }
            }, 
            "title": "Bucket Service Manager service configuration."
        }, 
        "rackable_unit_metadata": {
            "description": "The rackable_unit kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when rackable_unit was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "rackable_unit", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "rackable_unit"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "rackable_unit uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the rackable_unit is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when rackable_unit was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the rackable_unit. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the rackable_unit. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "rackable_unit name", 
                    "maxLength": 80
                }
            }, 
            "title": "rackable_unit metadata"
        }, 
        "network_device_intent_input": {
            "description": "An intentful representation of a network_device", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/network_device"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/network_device_metadata"
                }
            }, 
            "title": "network_device Intent Entity"
        }, 
        "image_spec": {
            "description": "Image source and path", 
            "required": [
                "source", 
                "path"
            ], 
            "type": "object", 
            "properties": {
                "source": {
                    "x-ntnx-enum": [
                        "kLocalImage", 
                        "kNdfsImage"
                    ], 
                    "type": "string", 
                    "description": "Source of a image"
                }, 
                "path": {
                    "type": "string", 
                    "description": "Path of image, can be local image or NDFS path"
                }
            }, 
            "title": "Image specs"
        }, 
        "xfit_service_input": {
            "description": "Input body to configure xfit service.", 
            "type": "object", 
            "properties": {
                "state": {
                    "x-ntnx-enum": [
                        "ENABLE"
                    ], 
                    "type": "string", 
                    "description": "The desired state of xfit service."
                }, 
                "validation_only": {
                    "type": "boolean", 
                    "description": "Flag indicating whether to do Xfit enablement validation only.\n"
                }
            }, 
            "title": "Xfit service configuration."
        }, 
        "action_instance_object": {
            "description": "Action instance object.", 
            "required": [
                "action_type_reference", 
                "instance_uuid", 
                "should_continue_on_failure"
            ], 
            "type": "object", 
            "properties": {
                "instance_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Id to uniquely identify action in instance list.", 
                    "format": "UUID"
                }, 
                "action_type_reference": {
                    "$ref": "#/definitions/action_type_reference"
                }, 
                "display_name": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "Each action instance already has a default display name from action\ntype.  However, users could change an action instance with a different\ndisplay name.\n", 
                    "maxLength": 255
                }, 
                "description": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "The description of the action instance in the rule.  For example,\nan action instance is used twice in a rule, each serves different\npurpose, it could use this field to describe the purpose.\n", 
                    "maxLength": 255
                }, 
                "child_action_uuids": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "List of possible actions that will be executed after this action."
                }, 
                "max_retries": {
                    "type": "integer", 
                    "description": "This field applies to on_timeout enum retry choice.  When this\naction execution times out, the rule execution will retry the\nexecution until the max retry number is exceeded.\n", 
                    "maximum": 5, 
                    "format": "int32"
                }, 
                "output_parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/param_descriptor"
                    }, 
                    "description": "The action output parameter descriptors."
                }, 
                "input_parameter_values": {
                    "description": "The action user entered input parameters.", 
                    "$ref": "#/definitions/component_instance_parameters"
                }, 
                "should_continue_on_failure": {
                    "type": "boolean", 
                    "description": "When this action execution fails, the rule execution should\ncontinue to the next action or not.\n"
                }
            }, 
            "title": "Action instance"
        }, 
        "software_reference": {
            "description": "The reference to a software", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "software", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "software"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a software"
        }, 
        "audit_reference": {
            "description": "The reference to a audit", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "audit", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "audit"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a audit"
        }, 
        "report_config": {
            "description": "Report Config creation/modification spec.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the report config.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "description": "Report config resources definition.", 
                    "required": [
                        "template"
                    ], 
                    "type": "object", 
                    "properties": {
                        "retention_policy": {
                            "$ref": "#/definitions/retention_policy"
                        }, 
                        "description": {
                            "type": "string", 
                            "description": "Description of the common report config.", 
                            "maxLength": 1000
                        }, 
                        "end_time_offset_secs": {
                            "type": "integer", 
                            "description": "End time for data collection during report generation.", 
                            "format": "int64"
                        }, 
                        "schedule": {
                            "$ref": "#/definitions/schedule"
                        }, 
                        "template_spec_version": {
                            "type": "string", 
                            "description": "Version of the template spec."
                        }, 
                        "start_time_offset_secs": {
                            "type": "integer", 
                            "description": "Start time for data collection during report generation.", 
                            "format": "int64"
                        }, 
                        "generation_format": {
                            "items": {
                                "x-ntnx-enum": [
                                    "PDF", 
                                    "CSV"
                                ], 
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "List specifying the formats in which report is to be created."
                        }, 
                        "template": {
                            "$ref": "#/definitions/report_template"
                        }, 
                        "timezone": {
                            "type": "string", 
                            "description": "Timezone in which report is to be generated. This is the list\nsupported by pytz.all_timezones. For more info, check\nhttps://pytz.sourceforge.net\n"
                        }, 
                        "notification_policy": {
                            "$ref": "#/definitions/notification_policy"
                        }
                    }, 
                    "title": "Report Config Resources."
                }
            }, 
            "title": "Report Config creation/modification spec"
        }, 
        "app_variable_input": {
            "description": "Variable definition for application.", 
            "required": [
                "name", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "val_type": {
                    "x-ntnx-enum": [
                        "STRING", 
                        "INT", 
                        "LIST", 
                        "DICT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "value": {
                    "type": "string", 
                    "description": ""
                }, 
                "label": {
                    "type": "string", 
                    "description": ""
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "SECRET", 
                        "EXTERNAL_STORE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Variable definition for application."
        }, 
        "security_planning_cluster_capability_status": {
            "description": "The capability of a cluster for a Flow Security Planning - whether a cluster is capable for enabling a Security Planning or not.\n", 
            "type": "object", 
            "properties": {
                "local_cluster_prechecks": {
                    "description": "Local Cluster Prechecks", 
                    "$ref": "#/definitions/security_planning_prechecks"
                }, 
                "cluster_capability_list": {
                    "items": {
                        "$ref": "#/definitions/security_planning_cluster_capability"
                    }, 
                    "type": "array", 
                    "description": "Capability of the feature per cluster managed by Prism Central.\n"
                }
            }, 
            "title": "The capability status of a cluster for Flow Security Planning."
        }, 
        "network_function_chain_intent_resource": {
            "description": "Response object for intentful operations on a network_function_chain", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/network_function_chain_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/network_function_chain"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/network_function_chain_metadata"
                }
            }, 
            "title": "network_function_chain Intent Response"
        }, 
        "volume_group_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "volume_group", 
                    "x-ntnx-enum": [
                        "volume_group"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for volume_group list"
        }, 
        "project_internal_intent_response": {
            "description": "Response object for intentful operations on a Project", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/project_internal_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/project_internal"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/project_metadata"
                }
            }, 
            "title": "Project Intent Response"
        }, 
        "category_value": {
            "description": "Category value definition.", 
            "type": "object", 
            "properties": {
                "assignment_rule": {
                    "$ref": "#/definitions/assignment_rule"
                }, 
                "value": {
                    "type": "string", 
                    "description": "Value for the category.", 
                    "maxLength": 64
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the category value.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Category Value definition."
        }, 
        "address_group_response_resource": {
            "description": "Response object for operations on a address group", 
            "type": "object", 
            "properties": {
                "address_group": {
                    "$ref": "#/definitions/address_group"
                }, 
                "associated_policies_list": {
                    "items": {
                        "$ref": "#/definitions/reference"
                    }, 
                    "type": "array", 
                    "description": "The policies where the address_group is being used"
                }
            }, 
            "title": "Address Group resource object"
        }, 
        "disk_address": {
            "description": "Disk Address.", 
            "required": [
                "adapter_type", 
                "device_index"
            ], 
            "type": "object", 
            "properties": {
                "device_index": {
                    "type": "integer"
                }, 
                "adapter_type": {
                    "x-ntnx-enum": [
                        "SCSI", 
                        "IDE", 
                        "PCI", 
                        "SATA", 
                        "SPAPR"
                    ], 
                    "type": "string"
                }
            }, 
            "title": "Disk Address"
        }, 
        "network_device_resources": {
            "description": "Network device entity definition", 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "maxLength": 500
                }, 
                "current_firmware_version": {
                    "type": "string", 
                    "description": "The current firmware version", 
                    "maxLength": 50
                }, 
                "device_class": {
                    "type": "string", 
                    "description": "A well known string for network device class information", 
                    "maxLength": 100
                }, 
                "component": {
                    "$ref": "#/definitions/datacenter_component"
                }, 
                "ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "device IP address"
                }, 
                "upgrade_status": {
                    "type": "string", 
                    "description": "upgrade status", 
                    "maxLength": 25
                }, 
                "rack_reference": {
                    "$ref": "#/definitions/rack_reference"
                }, 
                "model": {
                    "type": "string", 
                    "description": "device model", 
                    "maxLength": 50
                }, 
                "device_serial": {
                    "type": "string", 
                    "description": "Device serial number", 
                    "maxLength": 100
                }, 
                "target_firmware_version": {
                    "type": "string", 
                    "description": "The target firmware version", 
                    "maxLength": 50
                }
            }, 
            "title": "Network Device Entity"
        }, 
        "action_type": {
            "description": "Action type entity definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/action_service_component_type"
                }
            }, 
            "title": "Action type entity"
        }, 
        "layer2_stretch_resources": {
            "description": "Layer2 stretch creation spec.", 
            "required": [
                "local_site_params", 
                "remote_site_params"
            ], 
            "type": "object", 
            "properties": {
                "local_site_params": {
                    "$ref": "#/definitions/stretch_site_params"
                }, 
                "remote_site_params": {
                    "$ref": "#/definitions/stretch_site_params"
                }
            }, 
            "title": "Layer2 stretch creation spec"
        }, 
        "prism_central_nodes_metadata": {
            "description": "The prism_central_nodes kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when prism_central_nodes was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "prism_central_nodes", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "prism_central_nodes"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "prism_central_nodes uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the prism_central_nodes is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when prism_central_nodes was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the prism_central_nodes. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the prism_central_nodes. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "prism_central_nodes name", 
                    "maxLength": 80
                }
            }, 
            "title": "prism_central_nodes metadata"
        }, 
        "common_report_config_list_intent_response": {
            "description": "Response object for intentful operation of common_report_configs", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/common_report_config_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/common_report_config_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "aws_region_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_region", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_region"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "vpc_route_table_resources_def_status": {
            "description": "VPC route table resources status", 
            "type": "object", 
            "properties": {
                "static_routes_list": {
                    "items": {
                        "$ref": "#/definitions/route_status"
                    }, 
                    "type": "array", 
                    "description": "Set of statically configured routes in this table."
                }, 
                "dynamic_routes_list": {
                    "items": {
                        "$ref": "#/definitions/route_status"
                    }, 
                    "type": "array", 
                    "description": "Set of dynamically received routes in this table."
                }, 
                "default_route": {
                    "description": "Default route configured in this table (Not shown for Xi).\n", 
                    "$ref": "#/definitions/route_status"
                }, 
                "local_routes_list": {
                    "items": {
                        "$ref": "#/definitions/route_status"
                    }, 
                    "type": "array", 
                    "description": "Set of locally defined routes in this table."
                }
            }, 
            "title": "VPC route table resources status"
        }, 
        "action_service_file_value": {
            "description": "File value", 
            "type": "object", 
            "properties": {
                "file_data": {
                    "type": "string", 
                    "description": "File data", 
                    "format": "byte"
                }, 
                "file_name": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "File name", 
                    "maxLength": 256
                }
            }, 
            "title": "File"
        }, 
        "vm_disk_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_disk", 
                    "x-ntnx-enum": [
                        "vm_disk"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vm_disk list"
        }, 
        "report_config_intent_input": {
            "description": "An intentful representation of a report_config", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/report_config"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/report_config_metadata"
                }
            }, 
            "title": "report_config Intent Entity"
        }, 
        "environment_def_status": {
            "description": "An intentful representation of a environment status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "environment Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the environment."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the environment, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/environment_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for environment."
                }
            }, 
            "title": "environment Intent Status with placement specified"
        }, 
        "vpn_connection_intent_response": {
            "description": "Response object for intentful operations on a vpn_connection", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vpn_connection_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vpn_connection"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vpn_connection_metadata"
                }
            }, 
            "title": "vpn_connection Intent Response"
        }, 
        "direct_connect_resources": {
            "description": "Direct connect spec", 
            "required": [
                "service_provider", 
                "bandwidth_mbps"
            ], 
            "type": "object", 
            "properties": {
                "vpc_reference": {
                    "description": "VPC reference.", 
                    "$ref": "#/definitions/vpc_reference"
                }, 
                "service_provider": {
                    "type": "string", 
                    "description": "The name of the service provider to be utilized for this direct\nconnnect.\n", 
                    "maxLength": 64
                }, 
                "virtual_network_reference": {
                    "description": "Virtual Network reference. This reference is deprecated, use vpc_reference instead.\n", 
                    "$ref": "#/definitions/virtual_network_reference"
                }, 
                "bandwidth_mbps": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Direct connect total bandwidth in Mbps.", 
                    "format": "int32"
                }
            }, 
            "title": "Direct connect create/modify spec"
        }, 
        "cluster_operation_mode": {
            "x-ntnx-enum": [
                "NORMAL", 
                "READ_ONLY", 
                "STAND_ALONE", 
                "SWITCH_TO_TWO_NODE", 
                "OVERRIDE"
            ], 
            "type": "string", 
            "description": "Cluster operation mode. - 'NORMAL': Cluster is operating normally. - 'READ_ONLY': Cluster is operating in read only mode. - 'STAND_ALONE': Only one node is operational in the cluster. This is\n                 valid only for single node or two node clusters.\n- 'SWITCH_TO_TWO_NODE': Cluster is moving from single node to two node\n                        cluster.\n- 'OVERRIDE': Valid only for single node cluster. If the user wants to\n              run vms on a single node cluster in read only mode, he\n              can set the cluster peration mode to override. Writes\n              will be allowed in override mode.\n", 
            "title": "Cluster operation mode"
        }, 
        "app_task_share_resources": {
            "description": "Libraty task resources definition.", 
            "required": [
                "type"
            ], 
            "type": "object", 
            "properties": {
                "target_any_local_reference": {
                    "$ref": "#/definitions/entity_reference"
                }, 
                "retries": {
                    "type": "string", 
                    "description": "Number of retries for the task."
                }, 
                "project_reference_list": {
                    "items": {
                        "$ref": "#/definitions/project_reference"
                    }, 
                    "type": "array", 
                    "description": "The projects this task has been assigned to"
                }, 
                "child_tasks_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Task attrs for application of type object."
                }, 
                "timeout_secs": {
                    "type": "string", 
                    "description": "task timeout."
                }, 
                "type": {
                    "type": "string", 
                    "description": ""
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }
            }, 
            "title": "Library task resources"
        }, 
        "storage_qos_policy_config_output": {
            "description": "QoS parameters being enforced", 
            "type": "object", 
            "properties": {
                "throttled_iops": {
                    "type": "integer", 
                    "description": "Throttled iops for the entities being governed.\nThe block size for the IO is 32kB.\n", 
                    "format": "int64"
                }
            }, 
            "title": "Storage Qos Configuration Output"
        }, 
        "remote_syslog_module_metadata": {
            "description": "The remote_syslog_module kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when remote_syslog_module was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "remote_syslog_module", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_syslog_module"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "remote_syslog_module uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the remote_syslog_module is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when remote_syslog_module was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the remote_syslog_module. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the remote_syslog_module. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "remote_syslog_module name", 
                    "maxLength": 80
                }
            }, 
            "title": "remote_syslog_module metadata"
        }, 
        "oauth_client_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "oauth_client", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "oauth_client"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "storage_policy_intent_input": {
            "description": "An intentful representation of a storage_policy", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/storage_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/storage_policy_metadata"
                }
            }, 
            "title": "storage_policy Intent Entity"
        }, 
        "vpc_list_intent_response": {
            "description": "Response object for intentful operation of vpcs", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/vpc_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vpc_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "nutanix_guest_tools_spec": {
            "description": "Information regarding Nutanix Guest Tools.", 
            "type": "object", 
            "properties": {
                "ngt_state": {
                    "x-ntnx-enum": [
                        "INSTALLED", 
                        "UNINSTALLED"
                    ], 
                    "type": "string", 
                    "description": "Nutanix guest tools is installed or not."
                }, 
                "iso_mount_state": {
                    "x-ntnx-enum": [
                        "MOUNTED", 
                        "UNMOUNTED"
                    ], 
                    "type": "string", 
                    "description": "Desired mount state of Nutanix Guest Tools ISO.\n"
                }, 
                "state": {
                    "x-ntnx-enum": [
                        "ENABLED", 
                        "DISABLED"
                    ], 
                    "type": "string", 
                    "description": "Nutanix Guest Tools is enabled or not."
                }, 
                "version": {
                    "type": "string", 
                    "description": "Desired Version of Nutanix Guest Tools installed on the VM."
                }, 
                "enabled_capability_list": {
                    "items": {
                        "x-ntnx-enum": [
                            "SELF_SERVICE_RESTORE", 
                            "VSS_SNAPSHOT"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Application names that are enabled."
                }, 
                "credentials": {
                    "description": "Administrator Credentials of UVM. This is required for installing Nutanix Guest Tools on the UVM.\n", 
                    "$ref": "#/definitions/credentials"
                }
            }, 
            "title": "Nutanix Guest Tools information"
        }, 
        "deployment_settings": {
            "description": "MCM deployment settings.", 
            "required": [
                "my_ntnx_token", 
                "system_id"
            ], 
            "type": "object", 
            "properties": {
                "system_id": {
                    "type": "string", 
                    "description": "Unique identifier for the deployment assigned by MCM."
                }, 
                "my_ntnx_token": {
                    "$ref": "#/definitions/my_ntnx_token"
                }
            }, 
            "title": "MCM deployment settings."
        }, 
        "remote_syslog_module_def_status": {
            "description": "Remote Syslog module list creation/modification status", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/remote_syslog_module_resources"
                }
            }, 
            "title": "Remote Syslog module list creation/modification status"
        }, 
        "volume_group_reference": {
            "description": "The reference to a volume_group", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "volume_group", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "volume_group"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a volume_group"
        }, 
        "file_item_intent_response": {
            "description": "Response object for intentful operations on a file_item", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/file_item_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/file_item"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/file_item_metadata"
                }
            }, 
            "title": "file_item Intent Response"
        }, 
        "blueprint_download_def_status": {
            "description": "App blueprint download status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string"
                }, 
                "state": {
                    "type": "string"
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/blueprint_download_resources_def_status"
                }, 
                "description": {
                    "type": "string"
                }
            }, 
            "title": "App blueprint download status"
        }, 
        "vpn_connection": {
            "description": "An intentful representation of a vpn_connection spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for vpn_connection.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/vpn_connection_resources"
                }, 
                "name": {
                    "type": "string", 
                    "description": "vpn_connection Name.", 
                    "maxLength": 256
                }
            }, 
            "title": "vpn_connection Intent Spec with placement specified"
        }, 
        "aws_vpc_intent_resource": {
            "description": "aws_vpc entity", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/aws_vpc_def_status"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_vpc_metadata"
                }
            }, 
            "title": "aws_vpc"
        }, 
        "rack_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "rack", 
                    "x-ntnx-enum": [
                        "rack"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for rack list output"
        }, 
        "nusights_proxy_reference": {
            "description": "The reference to a nusights_proxy", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "nusights_proxy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "nusights_proxy"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a nusights_proxy"
        }, 
        "recovery_plan_job_resources": {
            "description": "Recovery Plan Job resources definition.", 
            "required": [
                "recovery_plan_reference", 
                "execution_parameters"
            ], 
            "type": "object", 
            "properties": {
                "recovery_plan_reference": {
                    "description": "Reference to the Recovery Plan for which this Recovery Plan Job is created.\n", 
                    "$ref": "#/definitions/recovery_plan_reference"
                }, 
                "execution_parameters": {
                    "required": [
                        "failed_availability_zone_list", 
                        "recovery_availability_zone_list", 
                        "action_type"
                    ], 
                    "type": "object", 
                    "description": "Parameters for execution of the Recovery Plan Job.\n", 
                    "properties": {
                        "recovery_availability_zone_list": {
                            "items": {
                                "$ref": "#/definitions/availability_zone_information"
                            }, 
                            "type": "array", 
                            "description": "Availability Zones wherein entities need to be recovered.\n"
                        }, 
                        "failed_availability_zone_list": {
                            "items": {
                                "$ref": "#/definitions/availability_zone_information"
                            }, 
                            "type": "array", 
                            "description": "Availability Zones that have failed.\n"
                        }, 
                        "recovery_reference_time": {
                            "type": "string", 
                            "description": "Time with respect to which Recovery Plan Job has to be executed. This time will be used as reference time with respect to which latest snapshot will have to be restored in case of failover. For example, if failover is required to be done using snapshot created on or before yesterday '2:00' PM, then recovery_reference_time will be set to this time.\n", 
                            "format": "date-time"
                        }, 
                        "action_type": {
                            "x-ntnx-enum": [
                                "VALIDATE", 
                                "MIGRATE", 
                                "FAILOVER", 
                                "TEST_FAILOVER", 
                                "LIVE_MIGRATE"
                            ], 
                            "type": "string", 
                            "description": "Type of action performed by the Recovery Plan Job. VALIDATE - Performs the validation of the Recovery Plan.\n           The validation includes checks for the presence of\n           entities, networks, categories etc. referenced in the\n           Recovery Plan.\nMIGRATE - VM would be powered off on the sourece before migrating\n          it to the recovery Availability Zone.\nFAILOVER - Restore the entity from the recovery points on the\n           recovery Availability Zone.\nTEST_FAILOVER - Same as FAILOVER but on a test network. LIVE_MIGRATE - Migrate without powering off the VM.\n"
                        }, 
                        "should_continue_on_validation_failure": {
                            "default": false, 
                            "type": "boolean", 
                            "description": "Whether to ignore the validation failures(e.g. Network mapping is missing for some networks on failed Availability Zone, Virtual network missing.) for the Recovery Plan actions MIGRATE, FAILOVER, TEST_FAILOVER and execute the Recovery Plan.\n"
                        }
                    }
                }
            }, 
            "title": "Recovery Plan Job resources definition."
        }, 
        "remote_connection_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_connection", 
                    "x-ntnx-enum": [
                        "remote_connection"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for remote_connection list output"
        }, 
        "oauth_client_response": {
            "description": "Oauth client information", 
            "required": [
                "client_id", 
                "client_secret", 
                "client_name", 
                "client_description", 
                "redirect_uris", 
                "default_scopes"
            ], 
            "type": "object", 
            "properties": {
                "redirect_uris": {
                    "items": {
                        "type": "string", 
                        "description": "entry for redirect URIs"
                    }, 
                    "type": "array"
                }, 
                "client_name": {
                    "type": "string", 
                    "description": "client name of the Oauth Client", 
                    "maxLength": 64
                }, 
                "client_id": {
                    "type": "string", 
                    "description": "client id of the Oauth Client"
                }, 
                "client_secret": {
                    "type": "string", 
                    "description": "client secret of the Oauth Client"
                }, 
                "client_description": {
                    "type": "string", 
                    "description": "client description of the Oauth Client", 
                    "maxLength": 1000
                }, 
                "default_scopes": {
                    "items": {
                        "type": "string", 
                        "description": "entry for default scopes"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Oauth Client response"
        }, 
        "icmp": {
            "description": "ICMP parameters to be matched in routing policy.", 
            "type": "object", 
            "properties": {
                "icmp_code": {
                    "minimum": 0, 
                    "type": "integer", 
                    "maximum": 255, 
                    "format": "uint8"
                }, 
                "icmp_type": {
                    "minimum": 0, 
                    "type": "integer", 
                    "maximum": 255, 
                    "format": "uint8"
                }
            }, 
            "title": "ICMP parameters"
        }, 
        "page_metadata": {
            "description": "Page metadata object defintion.", 
            "type": "object", 
            "properties": {
                "entity_type": {
                    "type": "string", 
                    "description": "Type of the entity represented in page."
                }, 
                "target_id": {
                    "type": "string", 
                    "description": "Target Id for the UI page."
                }, 
                "target_tab_id": {
                    "type": "string", 
                    "description": "Tab id of the page in UI."
                }, 
                "params": {
                    "items": {
                        "$ref": "#/definitions/expression"
                    }, 
                    "type": "array", 
                    "description": "List of expressions required for page."
                }, 
                "query": {
                    "type": "string", 
                    "description": "Query in simple text."
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of the page."
                }
            }, 
            "title": "Page Metadata Definition"
        }, 
        "vpc_reference": {
            "description": "The reference to a vpc", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpc", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vpc"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vpc"
        }, 
        "versions": {
            "description": "Supported API Versions", 
            "required": [
                "major_version", 
                "minor_version"
            ], 
            "type": "object", 
            "properties": {
                "major_version": {
                    "type": "string", 
                    "description": "The major number of the API", 
                    "format": "integer"
                }, 
                "minor_version": {
                    "type": "string", 
                    "description": "The minor number of the API", 
                    "format": "integer"
                }
            }, 
            "title": "Versions"
        }, 
        "identifier_response": {
            "description": "A list of UUID5 corresponding to the provided names.", 
            "type": "object", 
            "properties": {
                "name_uuid_list": {
                    "items": {
                        "$ref": "#/definitions/name_identifier_map"
                    }, 
                    "type": "array", 
                    "description": "The list of name to salted UUID5 mapping(s)."
                }
            }, 
            "title": "A list of UUID5 corresponding to the provided names."
        }, 
        "vm_disk_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_disk", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_disk"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "vpn_gateway_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpn_gateway", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vpn_gateway"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "aws_availability_zone_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_availability_zone", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_availability_zone"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "remote_syslog_module_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_syslog_module", 
                    "x-ntnx-enum": [
                        "remote_syslog_module"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for remote_syslog_module list output"
        }, 
        "api_response": {
            "description": "API Response", 
            "required": [
                "path_and_params", 
                "api_response", 
                "status"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "type": "string"
                }, 
                "api_response": {
                    "additionalProperties": {
                        "type": "object"
                    }, 
                    "type": "object"
                }, 
                "path_and_params": {
                    "type": "string", 
                    "description": "The part of API response that contains information such as the path\nand query.\n"
                }
            }, 
            "title": "API response"
        }, 
        "vm_vtpm_config": {
            "description": "Indicates how VM vTPM should be configured.\n", 
            "type": "object", 
            "properties": {
                "vtpm_enabled": {
                    "type": "boolean", 
                    "description": "Indicates whether virtual trusted platform module should be enabled for the Guest OS.\n"
                }, 
                "data_source_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "vtpm_secret": {
                    "type": "string", 
                    "description": "Virtual trusted platform module secret."
                }
            }, 
            "title": "VM vTPM configuration."
        }, 
        "project_internal_intent_input": {
            "description": "An intentful representation of a Project", 
            "required": [
                "api_version", 
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/project_internal"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/project_metadata"
                }
            }, 
            "title": "Project Intent Entity"
        }, 
        "routing_policy_intent_response": {
            "description": "Response object for intentful operations on a routing_policy", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/routing_policy_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/routing_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/routing_policy_metadata"
                }
            }, 
            "title": "routing_policy Intent Response"
        }, 
        "file_item_resources_def_status": {
            "description": "File item object", 
            "type": "object", 
            "properties": {
                "retrieval_uri_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of URIs where the raw file_item data can be accessed."
                }, 
                "checksum": {
                    "description": "Checksum of the file_item. Should only be set when being used to validate an file_item when setting the source of an file_item, otherwise this is generated by file_item service.", 
                    "$ref": "#/definitions/checksum"
                }, 
                "source_uri": {
                    "type": "string", 
                    "description": "URI that points at the file to create the file_item from."
                }, 
                "source_auth": {
                    "description": "Authentication object needed to fetch the source.", 
                    "$ref": "#/definitions/source_auth"
                }, 
                "size_bytes": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "data_source_reference": {
                    "description": "Reference to VM disk or image. The expected kind for VMs is vm_disk and for Images is image. In case of VM Disk the uuid should be the disk device uuid, where the disk device is from disk_list from VM status. In case of Images the uuid should be the uuid of the image.", 
                    "$ref": "#/definitions/reference"
                }
            }, 
            "title": "File item object"
        }, 
        "app_task_resources": {
            "description": "Libraty task resources definition.", 
            "required": [
                "type"
            ], 
            "type": "object", 
            "properties": {
                "target_any_local_reference": {
                    "$ref": "#/definitions/entity_reference"
                }, 
                "retries": {
                    "type": "string", 
                    "description": "Number of retries for the task."
                }, 
                "child_tasks_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Task attrs for application of type object."
                }, 
                "timeout_secs": {
                    "type": "string", 
                    "description": "task timeout."
                }, 
                "type": {
                    "type": "string", 
                    "description": ""
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }
            }, 
            "title": "Library task resources"
        }, 
        "nutanix_guest_tools_status": {
            "description": "Information regarding Nutanix Guest Tools.", 
            "type": "object", 
            "properties": {
                "available_version": {
                    "type": "string", 
                    "description": "Version of Nutanix Guest Tools available on the cluster."
                }, 
                "ngt_state": {
                    "x-ntnx-enum": [
                        "INSTALLED", 
                        "UNINSTALLED"
                    ], 
                    "type": "string", 
                    "description": "Nutanix guest tools is installed or not."
                }, 
                "iso_mount_state": {
                    "x-ntnx-enum": [
                        "MOUNTED", 
                        "UNMOUNTED"
                    ], 
                    "type": "string", 
                    "description": "Desired mount state of Nutanix Guest Tools ISO.\n"
                }, 
                "guest_os_version": {
                    "type": "string", 
                    "description": "Version of the operating system on the VM."
                }, 
                "state": {
                    "x-ntnx-enum": [
                        "ENABLED", 
                        "DISABLED"
                    ], 
                    "type": "string", 
                    "description": "Nutanix Guest Tools is enabled or not."
                }, 
                "version": {
                    "type": "string", 
                    "description": "Version of Nutanix Guest Tools installed on the VM."
                }, 
                "enabled_capability_list": {
                    "items": {
                        "x-ntnx-enum": [
                            "SELF_SERVICE_RESTORE", 
                            "VSS_SNAPSHOT"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Application names that are enabled."
                }, 
                "credentials": {
                    "description": "Administrator Credentials of UVM. This is required for installing Nutanix Guest Tools on the UVM.\n", 
                    "$ref": "#/definitions/credentials"
                }, 
                "vss_snapshot_capable": {
                    "type": "boolean", 
                    "description": "Whether the VM is configured to take VSS snapshots through NGT.\n"
                }, 
                "is_reachable": {
                    "type": "boolean", 
                    "description": "Communication from VM to CVM is active or not."
                }, 
                "vm_mobility_drivers_installed": {
                    "type": "boolean", 
                    "description": "Whether VM mobility drivers are installed in the VM."
                }
            }, 
            "title": "Nutanix Guest Tools status"
        }, 
        "role": {
            "description": "Role Input Definition.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Role name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "type": "object", 
                    "properties": {
                        "permission_reference_list": {
                            "items": {
                                "$ref": "#/definitions/permission_reference"
                            }, 
                            "type": "array", 
                            "description": "List of permission references."
                        }
                    }, 
                    "title": "Role Resources."
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for the role.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Role."
        }, 
        "network_security_rule_resources_status": {
            "properties": {
                "allow_ipv6_traffic": {
                    "type": "boolean"
                }, 
                "is_policy_hitlog_enabled": {
                    "type": "boolean"
                }, 
                "quarantine_rule": {
                    "description": "These rules are used for quarantining suspected VMs. Target group is a required attribute.  Empty inbound_allow_list will not allow anything into target group. Empty outbound_allow_list will allow everything from target group.\n", 
                    "type": "object", 
                    "properties": {
                        "action": {
                            "x-ntnx-enum": [
                                "APPLY", 
                                "MONITOR"
                            ], 
                            "type": "string", 
                            "description": "Type of action."
                        }, 
                        "outbound_allow_list": {
                            "items": {
                                "$ref": "#/definitions/network_rule_status"
                            }, 
                            "type": "array"
                        }, 
                        "target_group": {
                            "$ref": "#/definitions/target_group"
                        }, 
                        "inbound_allow_list": {
                            "items": {
                                "$ref": "#/definitions/network_rule_status"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "title": "Quarantine rule"
                }, 
                "isolation_rule": {
                    "description": "These rules are used for environmental isolation.", 
                    "type": "object", 
                    "properties": {
                        "action": {
                            "x-ntnx-enum": [
                                "APPLY", 
                                "MONITOR"
                            ], 
                            "type": "string", 
                            "description": "Type of action."
                        }, 
                        "first_entity_filter": {
                            "description": "The set of categories that matching VMs need to have.", 
                            "$ref": "#/definitions/category_filter"
                        }, 
                        "second_entity_filter": {
                            "description": "The set of categories that matching VMs need to have.", 
                            "$ref": "#/definitions/category_filter"
                        }
                    }, 
                    "title": "Isolation rule"
                }, 
                "app_rule": {
                    "description": "These rules govern what flows are allowed for app rules. Target group is a required attribute. Empty inbound_allow_list will not allow anything into the target group. Empty outbound_allow_list will not allow anything from the target group.\n", 
                    "type": "object", 
                    "properties": {
                        "action": {
                            "x-ntnx-enum": [
                                "APPLY", 
                                "MONITOR"
                            ], 
                            "type": "string", 
                            "description": "Type of deployment of the rule."
                        }, 
                        "outbound_allow_list": {
                            "items": {
                                "$ref": "#/definitions/network_rule_status"
                            }, 
                            "type": "array"
                        }, 
                        "target_group": {
                            "$ref": "#/definitions/target_group"
                        }, 
                        "inbound_allow_list": {
                            "items": {
                                "$ref": "#/definitions/network_rule_status"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "title": "App rule"
                }, 
                "ad_rule": {
                    "description": "These rules govern what flows are allowed for AD categories. Target group is a required attribute. Empty inbound_allow_list will not allow anything into the target group. Empty outbound_allow_list will not allow anything from the target group.\n", 
                    "type": "object", 
                    "properties": {
                        "action": {
                            "x-ntnx-enum": [
                                "APPLY", 
                                "MONITOR"
                            ], 
                            "type": "string", 
                            "description": "Type of deployment of the rule."
                        }, 
                        "outbound_allow_list": {
                            "items": {
                                "$ref": "#/definitions/network_rule_status"
                            }, 
                            "type": "array"
                        }, 
                        "target_group": {
                            "$ref": "#/definitions/target_group"
                        }, 
                        "inbound_allow_list": {
                            "items": {
                                "$ref": "#/definitions/network_rule_status"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "title": "AD rule"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "ad_rule"
                    ]
                }, 
                {
                    "required": [
                        "app_rule"
                    ]
                }, 
                {
                    "required": [
                        "isolation_rule"
                    ]
                }, 
                {
                    "required": [
                        "quarantine_rule"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Network security rule resources", 
            "title": "Network security rule resources"
        }, 
        "timeseries_response": {
            "description": "Timeseries response object defintion.", 
            "type": "object", 
            "properties": {
                "type": {
                    "type": "string", 
                    "description": "Type of the timeseries response."
                }, 
                "result": {
                    "$ref": "#/definitions/group_query"
                }
            }, 
            "title": "Timeseries  Response Definition"
        }, 
        "node": {
            "description": "Node information", 
            "required": [
                "host_reference"
            ], 
            "type": "object", 
            "properties": {
                "host_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Node IP Address"
                }
            }, 
            "title": "Node information."
        }, 
        "ngt_policy_list_intent_response": {
            "description": "Response object for intentful operation of ngt_policys", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/ngt_policy_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ngt_policy_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "aws_role_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_role", 
                    "x-ntnx-enum": [
                        "aws_role"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for aws_role list output"
        }, 
        "vm_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm", 
                    "x-ntnx-enum": [
                        "vm"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for vm list output"
        }, 
        "mh_vm_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "mh_vm", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "mh_vm"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "mh_vm_nic_override": {
            "description": "Virtual NIC.", 
            "type": "object", 
            "properties": {
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the Virtual NIC.", 
                    "format": "UUID"
                }, 
                "adapter_type": {
                    "x-ntnx-enum": [
                        "E1000", 
                        "E1000E", 
                        "PCNET32", 
                        "VMXNET", 
                        "VMXNET2", 
                        "VMXNET3"
                    ], 
                    "type": "string", 
                    "description": "Adapter type."
                }, 
                "mac_address_type": {
                    "x-ntnx-enum": [
                        "STATIC"
                    ], 
                    "type": "string", 
                    "description": "The MAC address type for the Virtual NIC."
                }, 
                "mac_address": {
                    "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$", 
                    "type": "string", 
                    "description": "The MAC address for the Virtual NIC.", 
                    "x-example": "50:6b:8d:ee:de:2b"
                }, 
                "subnet_reference": {
                    "description": "Identifier for the network this Virtual NIC will be placed on.\n", 
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "is_connected": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Whether or not the Virtual NIC is connected."
                }
            }, 
            "title": "Virtual NIC"
        }, 
        "cloud_credentials_intent_resource": {
            "description": "Response object for intentful operations on a cloud_credentials", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/cloud_credentials_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/cloud_credentials"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cloud_credentials_metadata"
                }
            }, 
            "title": "cloud_credentials Intent Response"
        }, 
        "disk_def_status": {
            "description": "Disk object.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the disk."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the disk, if in an error state."
                }, 
                "resources": {
                    "type": "object", 
                    "description": "Disk resources.", 
                    "properties": {
                        "host_reference": {
                            "$ref": "#/definitions/reference"
                        }, 
                        "enabled_features_list": {
                            "items": {
                                "x-ntnx-enum": [
                                    "CAN_ADD_AS_NEW_DISK", 
                                    "CAN_ADD_AS_OLD_DISK", 
                                    "BOOT_DISK", 
                                    "ONLY_BOOT_DISK", 
                                    "SELF_ENCRYPTING_ENABLED", 
                                    "PASSWORD_PROTECTED", 
                                    "SELF_MANAGED_NVME"
                                ], 
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "Disk feature flags\n- 'CanAddAsNewDisk': Flag to indicate if this disk can be added as\n   new disk.\n- 'CanAddAsOldDisk': Flag to indicate if the disk can be added as\n   old disk.\n- 'BootDisk': Flag to indicate if its a boot disk.\n- 'OnlyBootDisk': Flag to indicate if the disk is boot only and\n   no disk operation to be run on it.\n- 'SelfEncryptingEnabled': Flag to indicate if the disk has self\n   encryption enabled.\n- 'PasswordProtected': Flag to indicate if the disk is password\n   protected.\n- 'SelfManagedNvme': Flag to indicate if the NVMe disk is self\n  managed and no host/CVM reboot required.\n"
                        }, 
                        "vendor": {
                            "type": "string", 
                            "description": "Disk vendor."
                        }, 
                        "mount_path": {
                            "type": "string", 
                            "description": "Mount path."
                        }, 
                        "storage_pool_uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "description": "Storage pool uuid.", 
                            "format": "UUID"
                        }, 
                        "state_list": {
                            "$ref": "#/definitions/disk_state_list"
                        }, 
                        "storage_tier_type": {
                            "x-ntnx-enum": [
                                "PCIE_SSD", 
                                "SATA_SSD", 
                                "HDD"
                            ], 
                            "type": "string", 
                            "description": "Storage tier type."
                        }, 
                        "size_bytes": {
                            "type": "integer", 
                            "description": "Disk size in bytes.", 
                            "format": "int64"
                        }, 
                        "slot_number": {
                            "type": "integer", 
                            "description": "Disk location in a node.", 
                            "format": "int32"
                        }, 
                        "serial_number": {
                            "type": "string", 
                            "description": "Disk serial number."
                        }, 
                        "model": {
                            "type": "string", 
                            "description": "Disk model."
                        }, 
                        "firmware_version": {
                            "type": "string", 
                            "description": "Firmware version."
                        }
                    }
                }
            }, 
            "title": "Disk object"
        }, 
        "image_placement_policy": {
            "description": "Image placement policy", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Image placement policy name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/image_placement_policy_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for Image placement policy.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Image placement policy"
        }, 
        "directory_service_intent_input": {
            "description": "An intentful representation of a directory_service", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/directory_service"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/directory_service_metadata"
                }
            }, 
            "title": "directory_service Intent Entity"
        }, 
        "ngt_policy_resources": {
            "description": "NGT policy resources definition.", 
            "required": [
                "type"
            ], 
            "type": "object", 
            "properties": {
                "type": {
                    "x-ntnx-enum": [
                        "REBOOT"
                    ], 
                    "type": "string", 
                    "description": "The type of ngt policy."
                }, 
                "parameters": {
                    "description": "The parameters based on policy rule to be applied.", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "reboot_ngt_policy_parameters"
                            ]
                        }
                    ], 
                    "properties": {
                        "reboot_ngt_policy_parameters": {
                            "$ref": "#/definitions/reboot_ngt_policy_parameters"
                        }
                    }
                }, 
                "filter_list": {
                    "items": {
                        "$ref": "#/definitions/filter"
                    }, 
                    "type": "array", 
                    "description": "List of entities on which the policy is to be applied."
                }
            }, 
            "title": "NGT policy Resources"
        }, 
        "tunnel_reference_upload": {
            "description": "The reference to a tunnel", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "tunnel", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "tunnel"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a tunnel"
        }, 
        "vcenter_deployment_details": {
            "description": "vCenter specific information required to deploy the VPN VM\non on-prem ESXi clusters.\n", 
            "type": "object", 
            "properties": {
                "vcenter_network_name": {
                    "type": "string", 
                    "description": "vcenter network name to which the vpn vm nic is attached.\n"
                }, 
                "vcenter_datacenter_name": {
                    "type": "string", 
                    "description": "vcenter datacenter that the cluster belongs to. required when\ninteracting with vcenter apis to deploy the vpn vm.\n"
                }, 
                "vcenter_datastore_name": {
                    "type": "string", 
                    "description": "vcenter datastore to which the vpn disks and images will be\nuploaded during deployment.\n"
                }
            }, 
            "title": "vCenter specific deployment information"
        }, 
        "availability_zone_intent_input": {
            "description": "An intentful representation of a availability_zone", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/availability_zone"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/availability_zone_metadata"
                }
            }, 
            "title": "availability_zone Intent Entity"
        }, 
        "ltss_service_info": {
            "description": "This contains the list of handles to connect to various LTSS services.\nThese handles are in the form of IP/FQDN:port.\n", 
            "type": "object", 
            "properties": {
                "ltss_control_service_handle_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The list of handles to contact the LTSS control service."
                }, 
                "ltss_data_service_handle_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The list of handles to contact the LTSS data service."
                }
            }, 
            "title": "LTSS service information."
        }, 
        "qos_config_status": {
            "description": "Quality of Service configuration for the VPN IPSec tunnel.", 
            "type": "object", 
            "properties": {
                "ingress_limit": {
                    "type": "integer", 
                    "description": "Ingress traffic limit. (In Mbits/s)", 
                    "format": "uint64"
                }, 
                "egress_limit": {
                    "type": "integer", 
                    "description": "Egress traffic limit. (In Mbits/s)", 
                    "format": "uint64"
                }
            }, 
            "title": "Quality of Service configuration for the site-to-site VPN tunnel."
        }, 
        "user_group_intent_resource": {
            "description": "Response object for intentful operations on a user_group", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/user_group_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/user_group"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/user_group_metadata"
                }
            }, 
            "title": "user_group Intent Response"
        }, 
        "app_task_list_intent_response": {
            "description": "Response object for intentful operation of app_tasks", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/app_task_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/app_task_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "user_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "user", 
                    "x-ntnx-enum": [
                        "user"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for user list output"
        }, 
        "cloud_tenant_list_intent_response": {
            "description": "Response object for intentful operation of cloud_tenants", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/cloud_tenant_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cloud_tenant_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "alert_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "alert", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "alert"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "volume_reference": {
            "description": "The reference to a volume", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "volume", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "volume"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a volume"
        }, 
        "recovery_plan_resources": {
            "description": "Recovery Plan resources", 
            "type": "object", 
            "properties": {
                "volume_group_recovery_info_list": {
                    "items": {
                        "$ref": "#/definitions/recovery_plan_volume_group_recovery_info"
                    }, 
                    "type": "array", 
                    "description": "Information about Volume Groups to be recovered."
                }, 
                "stage_list": {
                    "items": {
                        "$ref": "#/definitions/recovery_plan_stage"
                    }, 
                    "type": "array", 
                    "description": "Input for the stages of the Recovery Plan. Each stage will perform a predefined type of task. For example, a stage can perform the recovery of the entities specified in a stage.\n"
                }, 
                "parameters": {
                    "type": "object", 
                    "description": "Parameters for the Recovery Plan.\n", 
                    "properties": {
                        "floating_ip_assignment_list": {
                            "items": {
                                "required": [
                                    "availability_zone_url"
                                ], 
                                "type": "object", 
                                "properties": {
                                    "availability_zone_url": {
                                        "type": "string", 
                                        "description": "URL of the Availability Zone.\n"
                                    }, 
                                    "vm_ip_assignment_list": {
                                        "items": {
                                            "required": [
                                                "vm_reference", 
                                                "vm_nic_information"
                                            ], 
                                            "type": "object", 
                                            "properties": {
                                                "test_floating_ip_config": {
                                                    "description": "Configuration for floating IP assignment on test failover.\n", 
                                                    "$ref": "#/definitions/recovery_plan_floating_ip_config"
                                                }, 
                                                "recovery_floating_ip_config": {
                                                    "description": "Configuration for floating IP assignment on failover.\n", 
                                                    "$ref": "#/definitions/recovery_plan_floating_ip_config"
                                                }, 
                                                "vm_reference": {
                                                    "description": "Reference to the VM entity.", 
                                                    "$ref": "#/definitions/vm_reference"
                                                }, 
                                                "vm_nic_information": {
                                                    "required": [
                                                        "uuid"
                                                    ], 
                                                    "type": "object", 
                                                    "description": "Information about vnic to which floating IP has to be assigned.\n", 
                                                    "properties": {
                                                        "ip": {
                                                            "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                                                            "type": "string", 
                                                            "description": "IP address associated with vnic for which floating IP has to be assigned on failover.\n"
                                                        }, 
                                                        "uuid": {
                                                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                                            "type": "string", 
                                                            "description": "Uuid of the vnic of the VM to which floating IP has to be assigned.\n", 
                                                            "format": "UUID"
                                                        }
                                                    }
                                                }
                                            }
                                        }, 
                                        "type": "array", 
                                        "description": "IP assignment for VMs upon recovery in the specified Availability Zone.\n"
                                    }
                                }
                            }, 
                            "type": "array", 
                            "description": "Floating IP assignment for VMs upon recovery in an Availability Zone. For example, Let RFIP1 and TFIP1 denote the recovery and test floating IPs respectively on AZ1 and RFIP2 and TFIP2 denote the recovery and test floating IPs respectively on AZ2. Let's say that we want to specify floating IP mapping for VM1, which is present on AZ1 and has a vNIC1 attached to it. Following matrix specifies the mapping: [(AZ1: [(VM1 vNIC1 RFIP1 TFIP1)]), AZ2: [(VM1 vNIC1 RFIP2 TFIP2)]] As per the above matrix, while performing planned/unplanned failover action from Availability Zone AZ1 to AZ2, vNIC1 will recover on AZ2 with RFIP2. In case of test failover, vNIC1 will recover on AZ2 with TFIP2.\n"
                        }, 
                        "witness_configuration_list": {
                            "items": {
                                "$ref": "#/definitions/witness_configuration"
                            }, 
                            "type": "array", 
                            "description": "A list containing witness configuration.\n", 
                            "maxItems": 1
                        }, 
                        "cutover_mode": {
                            "x-ntnx-enum": [
                                "EARLY", 
                                "LATE"
                            ], 
                            "type": "string", 
                            "description": "An option to specify cutover mode for VM/Volume Group when restoring data from recovery point present at any storage over the network. EARLY - VM/Volume Group will be made available for active\n  consumption before completely hydrating the data for them from\n  the recovery point available over the remote network storage.\n  Hydration of data will keep happening in the background for the\n  recovered VMs/Volume Groups.\nLATE - VM/Volume Group will be made available for active\n  consumption after completely hydrating the data for them from\n  the recovery point available over the remote network storage.\n"
                        }, 
                        "network_mapping_list": {
                            "items": {
                                "type": "object", 
                                "properties": {
                                    "are_networks_stretched": {
                                        "type": "boolean", 
                                        "description": "Whether the networks across the Availability Zones in above mapping are stretched.\n"
                                    }, 
                                    "availability_zone_network_mapping_list": {
                                        "items": {
                                            "required": [
                                                "availability_zone_url"
                                            ], 
                                            "type": "object", 
                                            "properties": {
                                                "recovery_ip_assignment_list": {
                                                    "items": {
                                                        "$ref": "#/definitions/recovery_plan_vm_ip_assignment"
                                                    }, 
                                                    "type": "array", 
                                                    "description": "Static IP configuration for the VMs to be applied post recovery in the recovery network for migrate/ failover action on the Recovery Plan.\n"
                                                }, 
                                                "test_ip_assignment_list": {
                                                    "items": {
                                                        "$ref": "#/definitions/recovery_plan_vm_ip_assignment"
                                                    }, 
                                                    "type": "array", 
                                                    "description": "Static IP configuration for the VMs to be applied post recovery in the test network for test failover action on the Recovery Plan.\n"
                                                }, 
                                                "availability_zone_url": {
                                                    "type": "string", 
                                                    "description": "URL of the Availability Zone.\n"
                                                }, 
                                                "recovery_network": {
                                                    "description": "Network in which VMs will be recovered on migrate/ failover action on the Recovery Plan.\n", 
                                                    "$ref": "#/definitions/recovery_plan_network"
                                                }, 
                                                "test_network": {
                                                    "description": "Network in which VMs will be recovered on test failover action on the Recovery Plan.\n", 
                                                    "$ref": "#/definitions/recovery_plan_network"
                                                }, 
                                                "cluster_reference_list": {
                                                    "items": {
                                                        "$ref": "#/definitions/cluster_reference"
                                                    }, 
                                                    "type": "array", 
                                                    "description": "The clusters where the recovery and test networks reside. This is required to specify network mapping across clusters for a Recovery Plan created to handle failover within the same Availability Zone.\n"
                                                }
                                            }
                                        }, 
                                        "type": "array", 
                                        "description": "Mapping of networks across the Availability Zones.\n"
                                    }
                                }
                            }, 
                            "type": "array", 
                            "description": "Network mappings to be used for the Recovery Plan. This will be represented by array of network mappings across the Availability Zones. Each entry of network mapping will have Availability Zone URL, recovery and test network information, static IP assignment for the VMs for the recovery and test networks. For example, Let RNx, TNx denote the recovery and test network information and RIPMx, TIPMx denote the static IP assignment for the VMs. As per below matrix, while performing failover action from Availability Zone AZ1 to AZ2, RN1 will be mapped to RN4 and static IP \"a.b.c.d\" of the VM with reference VMx will be mapped to \"i.j.k.l\". On performing test failover from AZ1 to AZ2, RN1 will be mapped to TN4 and static IP \"a.b.c.d\" of the VM with reference VMx will be mapped to \"I.J.K.L\". [[(AZ1 URL, RN1, TN1, [{VMx, \"a.b.c.d\"}, {VMy, \"e.f.g.h\"}],\n   [{VMx, \"A.B.C.D\"}, {VMy, \"E.F.G.H\"}]),\n  (AZ2 URL, RN4, TN4, [{VMx, \"i.j.k.l\"}, {VMy, \"m.n.p.q\"}],\n   [{VMx, \"I.J.K.L\"}, {VMy, \"M.N.P.Q\"}]),\n  (AZ3 URL, RN7, TN7)],\n [(AZ1 URL, RN2, TN2), (AZ2 URL, RN5, TN5),\n  (AZ3 URL, RN8, TN8)],\n [(AZ1 URL, RN3, TN3), (AZ2 URL, RN6, TN6)]]\nThe order of the static IP assignment for the VMs should remain same across all the networks provided in a network mapping. It forms a matrix containing IP mapping for the VMs across the Availability Zones. If a VM has multiple static IP addresses, static IP mapping will happen on the array indices. For example, Let IPrxy denote an IP address in subnet RNz and IPtxy denote an IP address in the subnet TNz. Lets VMx has two static IP address and VMy, VMz has one static IP associated with a vNIC created in network RN1. The IP mapping for the VMs will be as below.\n    AZ1, RN1        AZ1, TN1        AZ2, RN3        AZ2, TN2\n[(VMx, [IPr11]), (VMx, [IPt11]), (VMx, [IPr12]), (VMx,  [IPt12])] [(VMy, [IPr21]), (VMy, [IPt21]), (VMy, [IPr22]), (VMy,  [IPt22])] [(VMz, [IPr31]), (VMz, [IPt31]), (VMz, [IPr32]), (VMz,  [IPt32])]\nIn case of recovery of VMs from one Prism Element to the other within the same Availability Zone, a list of cluster references where the network exists can be specified. The network mapping to be used for a vNIC is decided as follows -\n1. If a VM that has a vNIC in a network N1 on cluster C1, then\n   the network mapping of N1 that has C1 in the cluster\n   references list will be used.\n\n2. In case there is no network mapping for N1 with cluster C1,\n   the default mapping of N1 for the Availability Zone (in which\n   cluster is not specified), will be used if present.\n"
                        }, 
                        "data_service_ip_mapping_list": {
                            "items": {
                                "type": "object", 
                                "properties": {
                                    "data_service_ip_mapping": {
                                        "minItems": 2, 
                                        "items": {
                                            "$ref": "#/definitions/recovery_plan_data_service_ip_config"
                                        }, 
                                        "type": "array", 
                                        "description": "Data Services IP address mapping, each entry in this mapping will include Availability Zone URL, Cluster reference, recovery and test data services IP. During the Volume Groups attachment step of Recovery Plan failover operation , the data service IP specified for the target Cluster will be reconfigured in the VMs.\n", 
                                        "maxItems": 2
                                    }
                                }
                            }, 
                            "type": "array", 
                            "description": "IP address mappings for attaching Volume Groups to VMs upon failover.\n"
                        }, 
                        "availability_zone_list": {
                            "items": {
                                "$ref": "#/definitions/availability_zone_information"
                            }, 
                            "type": "array", 
                            "description": "A list containing information about primary and secondary Availability zones.\n"
                        }, 
                        "primary_location_index": {
                            "type": "integer", 
                            "description": "This field should be set to the index of the Availability Zone in the availability_zone_list which should be considered as a protected Availability Zone.\n"
                        }
                    }
                }
            }, 
            "title": "Recovery Plan resources"
        }, 
        "app_published_service_input": {
            "description": "Published service definition", 
            "required": [
                "name", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input"
                    }, 
                    "type": "array", 
                    "description": "List of references to service action\n"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_published_service_reference"
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "type": {
                    "default": "K8S_SERVICE", 
                    "x-ntnx-enum": [
                        "K8S_SERVICE"
                    ], 
                    "type": "string", 
                    "description": "Type of published service"
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional published service options"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Published service definition"
        }, 
        "environment": {
            "description": "An intentful representation of a environment spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "environment Name.", 
                    "maxLength": 256
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for environment.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/environment_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "environment Intent Spec with placement specified"
        }, 
        "customization_spec_metadata": {
            "description": "The customization_spec kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when customization_spec was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "customization_spec", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "customization_spec"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "customization_spec uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the customization_spec is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when customization_spec was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the customization_spec. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the customization_spec. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "customization_spec name", 
                    "maxLength": 80
                }
            }, 
            "title": "customization_spec metadata"
        }, 
        "app_package_reference": {
            "description": "The reference to a app_package", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_package", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_package"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_package"
        }, 
        "disaster_recovery_service_config_input": {
            "description": "Input body to configure Disaster Recovery service.", 
            "required": [
                "state"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "x-ntnx-enum": [
                        "ENABLE"
                    ], 
                    "type": "string", 
                    "description": "The desired state of Disaster Recovery service."
                }
            }, 
            "title": "Disaster Recovery service configuration."
        }, 
        "role_intent_resource": {
            "description": "Response object for intentful operations on a role", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/role_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/role"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/role_metadata"
                }
            }, 
            "title": "role Intent Response"
        }, 
        "ngt_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ngt", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ngt"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "aws_elastic_ip_def_status": {
            "description": "aws_elastic_ip resources status", 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string", 
                    "description": "aws_elastic_ip name."
                }, 
                "resources": {
                    "$ref": "#/definitions/aws_elastic_ip_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for aws_elastic_ip."
                }
            }, 
            "title": "aws_elastic_ip resources status"
        }, 
        "ip_address": {
            "description": "An IP address.", 
            "type": "object", 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Address string."
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "ASSIGNED", 
                        "LEARNED"
                    ], 
                    "type": "string", 
                    "description": "Address type. It can only be \"ASSIGNED\" in the spec. If no type is\nspecified in the spec, the default type is set to \"ASSIGNED\".\n"
                }, 
                "gateway_address_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Gateway IP addresses matching the subnet."
                }, 
                "prefix_length": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Prefix length for the IP address.", 
                    "maximum": 32, 
                    "format": "int32"
                }, 
                "ip_type": {
                    "x-ntnx-enum": [
                        "DHCP", 
                        "STATIC"
                    ], 
                    "type": "string", 
                    "description": "Indicates whether IP address is DHCP or Static."
                }
            }, 
            "title": "IP Address"
        }, 
        "aws_security_group_def_status": {
            "description": "aws_security_group resources status", 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string", 
                    "description": "aws_security_group name."
                }, 
                "resources": {
                    "$ref": "#/definitions/aws_security_group_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for aws_security_group."
                }
            }, 
            "title": "aws_security_group resources status"
        }, 
        "prism_central_nodes_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "prism_central_nodes", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "prism_central_nodes"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "files_manager_service_config_input": {
            "description": "Input body to configure Files Manager service.", 
            "required": [
                "state"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "x-ntnx-enum": [
                        "ENABLE"
                    ], 
                    "type": "string", 
                    "description": "The desired state of Files Manager service."
                }
            }, 
            "title": "Files Manager service configuration."
        }, 
        "vm_host_affinity_policy_create_input": {
            "description": "Defines an affinity policy between a set of VM categories to a set of Host categories.\n", 
            "required": [
                "config"
            ], 
            "type": "object", 
            "properties": {
                "config": {
                    "$ref": "#/definitions/vm_host_affinity_policy_config"
                }
            }, 
            "title": "VM Host Affinity Policy create input"
        }, 
        "aws_region_list_intent_response": {
            "description": "AWS VPC entity list.", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/aws_region_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_region_list_metadata_output"
                }
            }, 
            "title": "aws_region entity list"
        }, 
        "vpc_route_table_def_status": {
            "description": "An intentful representation of a vpc_route_table status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "vpc_route_table Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the vpc_route_table."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the vpc_route_table, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/vpc_route_table_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for vpc_route_table."
                }
            }, 
            "title": "vpc_route_table Intent Status with placement specified"
        }, 
        "streaming_policy": {
            "description": "Streaming Policy Entity", 
            "required": [
                "name", 
                "description", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Policy name", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/streaming_policy_request_details"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Policy description", 
                    "maxLength": 1000
                }
            }, 
            "title": "Streaming Policy Entity"
        }, 
        "datacenter_def_status": {
            "description": "Datacenter entity status definition", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "The datacenter name", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/datacenter_resources"
                }
            }, 
            "title": "Datacenter Entity Status"
        }, 
        "remote_syslog_server_intent_resource": {
            "description": "Response object for intentful operations on a remote_syslog_server", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/remote_syslog_server_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/remote_syslog_server"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_syslog_server_metadata"
                }
            }, 
            "title": "remote_syslog_server Intent Response"
        }, 
        "streaming_policy_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "streaming_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "streaming_policy"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "task_poll_input": {
            "description": "Input for a task poll", 
            "required": [
                "poll_timeout_seconds", 
                "task_uuid_list"
            ], 
            "type": "object", 
            "properties": {
                "poll_timeout_seconds": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Poll timeout in seconds", 
                    "maximum": 30, 
                    "format": "int32"
                }, 
                "task_uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "List of task UUIDs to poll on", 
                    "title": "List of task UUIDs to poll on"
                }
            }, 
            "title": "Input for the task poll"
        }, 
        "resource_domain_reference": {
            "description": "The reference to a resource_domain", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "resource_domain", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "resource_domain"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a resource_domain"
        }, 
        "underlay_subnet_intent_resource": {
            "description": "Response object for intentful operations on a underlay_subnet", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/underlay_subnet_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/underlay_subnet"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/underlay_subnet_metadata"
                }
            }, 
            "title": "underlay_subnet Intent Response"
        }, 
        "app_published_service_reference": {
            "description": "The reference to a app_published_service", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_published_service", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_published_service"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_published_service"
        }, 
        "cluster_list_intent_response": {
            "description": "Response object for intentful operation of clusters", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/cluster_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cluster_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "cluster_capability_status": {
            "description": "The capability of a cluster for a feature - whether a cluster is capable for enabling a feature or not.\n", 
            "type": "object", 
            "properties": {
                "cluster_capability_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_capability"
                    }, 
                    "type": "array", 
                    "description": "Capability of the feature per cluster managed by Prism Central.\n"
                }
            }, 
            "title": "The capability status of a cluster for a feature."
        }, 
        "rackable_unit": {
            "description": "Rackable Unit entity definition", 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/rackable_unit_resources"
                }
            }, 
            "title": "Rackable Unit Entity"
        }, 
        "aws_image_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_image", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_image"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "access_control_policy_list_intent_response": {
            "description": "Response object for intentful operation of access_control_policys", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/access_control_policy_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/access_control_policy_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "app_credential_response_download": {
            "description": "Credential definition for Application", 
            "required": [
                "name", 
                "type", 
                "username", 
                "secret"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "secret": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Credential secret object"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "PASSWORD", 
                        "KEY"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "passphrase": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Credential passphrase object associated with the provided key"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Credential for Application"
        }, 
        "tenant_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "tenant", 
                    "x-ntnx-enum": [
                        "tenant"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for tenant list"
        }, 
        "blueprint_pending_launches_response": {
            "description": "Response containing status, milestone reached and application uuid", 
            "required": [
                "state", 
                "milestone", 
                "bp_name", 
                "app_name"
            ], 
            "type": "object", 
            "properties": {
                "application_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "application uuid present after the status moves to success", 
                    "format": "UUID"
                }, 
                "app_name": {
                    "type": "string", 
                    "description": "name of the application"
                }, 
                "state": {
                    "type": "string", 
                    "description": "state of launch which can be pending, running, success, failure"
                }, 
                "blueprint_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "blueprint uuid", 
                    "format": "UUID"
                }, 
                "details": {
                    "type": "string", 
                    "description": "additional details about the status of launch"
                }, 
                "milestone": {
                    "type": "string", 
                    "description": "gives more granularity in status"
                }, 
                "bp_name": {
                    "type": "string", 
                    "description": "name of the blueprint"
                }
            }, 
            "title": "Response containing the state of the launch"
        }, 
        "aws_availability_zone_def_status": {
            "description": "aws_availability_zone resources status", 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string", 
                    "description": "aws_availability_zone name."
                }, 
                "resources": {
                    "$ref": "#/definitions/aws_availability_zone_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for aws_availability_zone."
                }
            }, 
            "title": "aws_availability_zone resources status"
        }, 
        "entity_sync_rule_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "entity_sync_rule", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "entity_sync_rule"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "ssh_user_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ssh_user", 
                    "x-ntnx-enum": [
                        "ssh_user"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for ssh_user list"
        }, 
        "vm_export_input": {
            "description": "Input object for the create OVA API.\n", 
            "required": [
                "name", 
                "disk_file_format"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the OVA.", 
                    "maxLength": 64
                }, 
                "disk_file_format": {
                    "x-ntnx-enum": [
                        "QCOW2", 
                        "VMDK"
                    ], 
                    "type": "string", 
                    "description": "File format of disk in OVA."
                }
            }, 
            "title": "Create OVA API input"
        }, 
        "vm_set_power_state_response": {
            "description": "Response for an accepted VM power state change request.", 
            "type": "object", 
            "properties": {
                "task_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The UUID of the power state task.", 
                    "format": "UUID"
                }
            }, 
            "title": "VM power state change response."
        }, 
        "aws_security_group_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_security_group", 
                    "x-ntnx-enum": [
                        "aws_security_group"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for aws_security_group list"
        }, 
        "rackable_unit_reference": {
            "description": "The reference to a rackable_unit", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "rackable_unit", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "rackable_unit"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a rackable_unit"
        }, 
        "floating_ip": {
            "description": "An intentful representation of a floating_ip spec", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for floating_ip.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/floating_ip_resources"
                }, 
                "name": {
                    "type": "string", 
                    "description": "floating_ip Name.", 
                    "maxLength": 256
                }
            }, 
            "title": "floating_ip Intent Spec with placement specified"
        }, 
        "user_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "user", 
                    "x-ntnx-enum": [
                        "user"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for user list"
        }, 
        "address": {
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IPV4 address."
                }, 
                "is_backup": {
                    "type": "boolean", 
                    "description": "Whether this address is a backup or not."
                }, 
                "fqdn": {
                    "type": "string", 
                    "description": "Fully qualified domain name."
                }, 
                "ip6_range": {
                    "pattern": "^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*(\\/(\\d|\\d\\d|1[0-1]\\d|12[0-8]))$", 
                    "type": "string", 
                    "description": "IPV6 address range."
                }, 
                "ip_range": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\/(\\d|[1-2]\\d|3[0-2]))$", 
                    "type": "string", 
                    "description": "IPV4 address range."
                }, 
                "ipv6": {
                    "pattern": "(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))", 
                    "type": "string", 
                    "description": "IPV6 address."
                }, 
                "port": {
                    "type": "integer", 
                    "description": "Port Number", 
                    "format": "int32"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "ip"
                    ]
                }, 
                {
                    "required": [
                        "ip_range"
                    ]
                }, 
                {
                    "required": [
                        "ipv6"
                    ]
                }, 
                {
                    "required": [
                        "ipv6_range"
                    ]
                }, 
                {
                    "required": [
                        "fqdn"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Host address.", 
            "title": "Host address."
        }, 
        "vm_update_ip_input": {
            "description": "Input object for the API to update IP addresses. Users can provide the specific IP address they want to request.\n", 
            "type": "object", 
            "properties": {
                "update_list": {
                    "items": {
                        "$ref": "#/definitions/nic_update_ip_info"
                    }, 
                    "type": "array", 
                    "description": "List of NICs to update new IP for."
                }
            }, 
            "title": "VM update IP input."
        }, 
        "alert_intent_response": {
            "description": "Response object for intentful operations on a alert", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/alert_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/alert"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/alert_metadata"
                }
            }, 
            "title": "alert Intent Response"
        }, 
        "image_placement_policy_metadata": {
            "description": "The image_placement_policy kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when image_placement_policy was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "image_placement_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "image_placement_policy"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "image_placement_policy uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the image_placement_policy is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when image_placement_policy was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the image_placement_policy. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the image_placement_policy. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "image_placement_policy name", 
                    "maxLength": 80
                }
            }, 
            "title": "image_placement_policy metadata"
        }, 
        "idempotence_identifiers_metadata": {
            "description": "The idempotence_identifiers kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when idempotence_identifiers was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "idempotence_identifiers", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "idempotence_identifiers"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "idempotence_identifiers uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the idempotence_identifiers is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when idempotence_identifiers was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the idempotence_identifiers. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the idempotence_identifiers. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "idempotence_identifiers name", 
                    "maxLength": 80
                }
            }, 
            "title": "idempotence_identifiers metadata"
        }, 
        "checksum": {
            "description": "Image checksum", 
            "required": [
                "checksum_algorithm", 
                "checksum_value"
            ], 
            "properties": {
                "checksum_algorithm": {
                    "$ref": "#/definitions/checksum_algorithm"
                }, 
                "checksum_value": {
                    "type": "string", 
                    "format": "bytes"
                }
            }, 
            "title": "Image checksum"
        }, 
        "rule_execution_plan": {
            "description": "The Plan includes the list of actions to be executed, as well as the rule\ntype and any other parameters required for the execution of the particular\nrule type.\n", 
            "required": [
                "action_list"
            ], 
            "type": "object", 
            "properties": {
                "rule_type": {
                    "x-ntnx-enum": [
                        "XPLAY", 
                        "XNOTIFY", 
                        "XPILOT"
                    ], 
                    "type": "string", 
                    "description": "Action rule types associated with this rule."
                }, 
                "execution_user_reference": {
                    "description": "This will incidate who this rule_result will be executed on behalf of.\nIt will be a user uuid.\n", 
                    "$ref": "#/definitions/user_reference"
                }, 
                "x_pilot_params": {
                    "description": "Parameters required for XPilot enabled rule.", 
                    "$ref": "#/definitions/action_rule_x_pilot_params"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/action_instance_object"
                    }, 
                    "type": "array", 
                    "description": "The list of actions to be executed."
                }, 
                "post_execution_action_list": {
                    "items": {
                        "$ref": "#/definitions/action_instance_object"
                    }, 
                    "type": "array", 
                    "description": "The list of actions to be executed in the end."
                }
            }, 
            "title": "Rule Execution plan."
        }, 
        "subnet_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "subnet", 
                    "x-ntnx-enum": [
                        "subnet"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for subnet list"
        }, 
        "vm_clone_input": {
            "description": "Input object for the clone API. User can provide the optional UUID of the vm that will be created as a result of this operation.\n", 
            "type": "object", 
            "properties": {
                "metadata": {
                    "type": "object", 
                    "properties": {
                        "uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "format": "UUID"
                        }, 
                        "entity_version": {
                            "type": "string", 
                            "description": "Logical entity version of the VM from which to clone the new VM.\n"
                        }
                    }, 
                    "title": "Metadata of the cloned vm."
                }, 
                "override_spec": {
                    "$ref": "#/definitions/vm_clone_override_spec"
                }
            }, 
            "title": "Clone API input"
        }, 
        "ngt_policy_metadata": {
            "description": "The ngt_policy kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when ngt_policy was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "ngt_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ngt_policy"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "ngt_policy uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the ngt_policy is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when ngt_policy was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the ngt_policy. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the ngt_policy. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "ngt_policy name", 
                    "maxLength": 80
                }
            }, 
            "title": "ngt_policy metadata"
        }, 
        "service_group": {
            "description": "Service Group definition", 
            "type": "object", 
            "properties": {
                "service_list": {
                    "items": {
                        "$ref": "#/definitions/flow_service"
                    }, 
                    "type": "array", 
                    "description": "List of port, protocol or icmp codes"
                }, 
                "is_system_defined": {
                    "type": "boolean", 
                    "description": "Specifying whether it is a system defined service group."
                }, 
                "name": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "description": {
                    "type": "string", 
                    "maxLength": 1000
                }
            }, 
            "title": "Service Group"
        }, 
        "file_item_metadata": {
            "description": "The file_item kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when file_item was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "file_item", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "file_item"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "file_item uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the file_item is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when file_item was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the file_item. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the file_item. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "file_item name", 
                    "maxLength": 80
                }
            }, 
            "title": "file_item metadata"
        }, 
        "direct_connect_metadata": {
            "description": "The direct_connect kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when direct_connect was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "direct_connect", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "direct_connect"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "direct_connect uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the direct_connect is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when direct_connect was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the direct_connect. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the direct_connect. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "direct_connect name", 
                    "maxLength": 80
                }
            }, 
            "title": "direct_connect metadata"
        }, 
        "streaming_policy_intent_response": {
            "description": "Response object for intentful operations on a streaming_policy", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/streaming_policy_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/streaming_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/streaming_policy_metadata"
                }
            }, 
            "title": "streaming_policy Intent Response"
        }, 
        "app_actionrun_response": {
            "description": "Response object for action_run, contains action_run_log", 
            "required": [
                "api_version", 
                "metadata", 
                "status", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/app_actionrun_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/app_actionrun_spec"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/app_metadata"
                }
            }, 
            "title": "app actionrun response format"
        }, 
        "vm_set_power_state_input": {
            "description": "Request to change the power state of a VM.", 
            "type": "object", 
            "properties": {
                "task_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The UUID of the task (used for idempotency).", 
                    "format": "UUID"
                }
            }, 
            "title": "VM power state change request."
        }, 
        "image_def_status": {
            "description": "An intentful representation of a image status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "image Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the image."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the image, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/image_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for image."
                }
            }, 
            "title": "image Intent Status with placement specified"
        }, 
        "rackable_unit_list_intent_response": {
            "description": "Response object for intentful operation of rackable_units", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/rackable_unit_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/rackable_unit_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "marketplace_item_render_output": {
            "description": "The UUID of the newly created Marketplace item", 
            "type": "object", 
            "properties": {
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "uuid of the newly created Marketplace item", 
                    "format": "UUID"
                }
            }, 
            "title": "Render marketplace item output"
        }, 
        "cloud_credentials_metadata": {
            "description": "The cloud_credentials kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when cloud_credentials was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "cloud_credentials", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cloud_credentials"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "cloud_credentials uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the cloud_credentials is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when cloud_credentials was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the cloud_credentials. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the cloud_credentials. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "cloud_credentials name", 
                    "maxLength": 80
                }
            }, 
            "title": "cloud_credentials metadata"
        }, 
        "icmp_status": {
            "description": "ICMP parameters to be matched in routing policy.", 
            "type": "object", 
            "properties": {
                "icmp_code": {
                    "type": "integer", 
                    "format": "uint8"
                }, 
                "icmp_type": {
                    "type": "integer", 
                    "format": "uint8"
                }
            }, 
            "title": "ICMP parameters"
        }, 
        "account_def_status": {
            "description": "An intentful representation of a account status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "account Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the account."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the account, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/account_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for account."
                }
            }, 
            "title": "account Intent Status with placement specified"
        }, 
        "validation_result": {
            "description": "Service enablement validation item.", 
            "type": "object", 
            "properties": {
                "has_passed": {
                    "type": "boolean", 
                    "description": "Whether the validation passed."
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason of failed validation. Will only be populated when validation fails.\n"
                }, 
                "name": {
                    "type": "string"
                }
            }, 
            "title": "Service enablement validation item."
        }, 
        "vmware_list_metadata": {
            "description": "All vmware meta api calls  will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vmware meta apis"
        }, 
        "vpn_connection_intent_input": {
            "description": "An intentful representation of a vpn_connection", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/vpn_connection"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vpn_connection_metadata"
                }
            }, 
            "title": "vpn_connection Intent Entity"
        }, 
        "vpn_gateway_intent_response": {
            "description": "Response object for intentful operations on a vpn_gateway", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vpn_gateway_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vpn_gateway"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vpn_gateway_metadata"
                }
            }, 
            "title": "vpn_gateway Intent Response"
        }, 
        "report_config_intent_resource": {
            "description": "Response object for intentful operations on a report_config", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/report_config_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/report_config"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/report_config_metadata"
                }
            }, 
            "title": "report_config Intent Response"
        }, 
        "alert_action_input": {
            "description": "Alert acknowlegement or resolution input parameters.", 
            "type": "object", 
            "properties": {
                "alert_uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "A list of alert UUIDs to be acknowledged or resolved.  If the list is\nempty, that means resolve all alerts in the system.\n"
                }
            }, 
            "title": "Alert acknowlegement or resolution input."
        }, 
        "blueprint_deployment_input_upload": {
            "description": "Deployment definition for Application.", 
            "required": [
                "name", 
                "substrate_local_reference", 
                "min_replicas", 
                "max_replicas"
            ], 
            "type": "object", 
            "properties": {
                "percent_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "fault_domain_scope": {
                    "x-ntnx-enum": [
                        "HOST", 
                        "CLUSTER", 
                        "AZ"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references to action"
                }, 
                "package_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_reference_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references for the packages"
                }, 
                "published_service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_reference_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references for published services"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "max_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Maximum replicas for the deployment."
                }, 
                "type": {
                    "default": "GREENFIELD", 
                    "x-ntnx-enum": [
                        "BROWNFIELD", 
                        "GREENFIELD", 
                        "K8S_DEPLOYMENT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "substrate_local_reference": {
                    "$ref": "#/definitions/app_substrate_reference_upload"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "min_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Minimum replicas for the deployment."
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional deployment options"
                }, 
                "num_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "brownfield_instance_list": {
                    "items": {
                        "$ref": "#/definitions/brownfield_instance_input"
                    }, 
                    "type": "array", 
                    "description": "brownfield map"
                }
            }, 
            "title": "Deployment definition for Application."
        }, 
        "aws_machine_type_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_machine_type", 
                    "x-ntnx-enum": [
                        "aws_machine_type"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for aws_machine_type list output"
        }, 
        "action_service_param_value": {
            "properties": {
                "double_value": {
                    "type": "number", 
                    "format": "double"
                }, 
                "file_value": {
                    "$ref": "#/definitions/action_service_file_value"
                }, 
                "string_value": {
                    "type": "string", 
                    "maxLength": 2000
                }, 
                "bytes_value": {
                    "type": "string", 
                    "format": "byte"
                }, 
                "long_value": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "entity_info": {
                    "$ref": "#/definitions/entity_info"
                }, 
                "bool_value": {
                    "type": "boolean"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "bool_value"
                    ]
                }, 
                {
                    "required": [
                        "long_value"
                    ]
                }, 
                {
                    "required": [
                        "double_value"
                    ]
                }, 
                {
                    "required": [
                        "string_value"
                    ]
                }, 
                {
                    "required": [
                        "entity_info"
                    ]
                }, 
                {
                    "required": [
                        "bytes_value"
                    ]
                }, 
                {
                    "required": [
                        "file_value"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Scalar value object that handles different types", 
            "title": "Value object"
        }, 
        "eb_filter": {
            "description": "Entitybrowser filter object definition.", 
            "type": "object", 
            "properties": {
                "rhs": {
                    "type": "string", 
                    "description": "Right hand side of the filter expression."
                }, 
                "alias_for_lhs": {
                    "type": "string", 
                    "description": "Alias for LHS of the filter expression. Used for Backend\nto tell UI if the filter name UI use to do group does not\nequal to actual one showing search bar and filter panel.\n"
                }, 
                "display_for_operator": {
                    "type": "string", 
                    "description": "Display string for the operator."
                }, 
                "lhs": {
                    "type": "string", 
                    "description": "Left hand side of the filter expression."
                }, 
                "display_for_rhs": {
                    "type": "string", 
                    "description": "Display for RHS value of the filter expression."
                }, 
                "filter_name": {
                    "type": "string", 
                    "description": "Filter Display name."
                }, 
                "operator": {
                    "type": "string", 
                    "description": "Operator that is being used in filter."
                }
            }, 
            "title": "Entitybrowser Filter Definition"
        }, 
        "multicluster_config_intent_input": {
            "description": "An intentful representation of a multicluster config spec.", 
            "required": [
                "api_version", 
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/multicluster_config_spec"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/multicluster_config_metadata"
                }
            }, 
            "title": "Multicluster config intent input"
        }, 
        "billing_invoice_item": {
            "description": "line item of an invoice.", 
            "type": "object", 
            "properties": {
                "charge_type": {
                    "type": "string", 
                    "description": "Nature of the charge."
                }, 
                "subscription_name": {
                    "type": "string", 
                    "description": "Name of the subscription."
                }, 
                "tax_amount": {
                    "description": "Tax amount applicable to this line item.", 
                    "$ref": "#/definitions/monetary_value"
                }, 
                "charge_amount": {
                    "description": "Amount that is due for this line item.", 
                    "$ref": "#/definitions/monetary_value"
                }, 
                "service_end_date": {
                    "type": "string", 
                    "description": "Date on which subscription to the line item ends.", 
                    "format": "date"
                }, 
                "charge_id": {
                    "type": "string", 
                    "description": "Id of the charge plan applicable to the subscription."
                }, 
                "service_start_date": {
                    "type": "string", 
                    "description": "Date on which this service was started.", 
                    "format": "date"
                }, 
                "charge_name": {
                    "type": "string", 
                    "description": "Name of the charge plan applicable to the subscription."
                }, 
                "subscription_id": {
                    "type": "string", 
                    "description": "Id of the subscription."
                }, 
                "processing_type": {
                    "type": "string", 
                    "description": "Type of processing done on the charge."
                }, 
                "charge_date": {
                    "type": "string", 
                    "description": "Date on which this line item will be charged.", 
                    "format": "date"
                }, 
                "charge_description": {
                    "type": "string", 
                    "description": "Description of the charge plan applicable to the subscription.\n"
                }, 
                "quantity": {
                    "type": "integer", 
                    "description": "Number of instances of the line item subscribed.", 
                    "format": "int32"
                }
            }, 
            "title": "line item of an invoice."
        }, 
        "app_profile_input_upload": {
            "description": "App profile resources", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "deployment_create_list": {
                    "items": {
                        "$ref": "#/definitions/blueprint_deployment_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "App profile resource"
        }, 
        "ssl_key_type": {
            "x-ntnx-enum": [
                "RSA_2048", 
                "ECDSA_256", 
                "ECDSA_384", 
                "ECDSA_521", 
                "JKS", 
                "PKCS12", 
                "RSA_PUBLIC", 
                "KRB_KEYTAB", 
                "NONE"
            ], 
            "type": "string", 
            "description": "SSL key type. Key types with RSA_2048, ECDSA_256, ECDSA_384 and ECDSA_521\nare supported for key generation and importing.\n", 
            "title": "SSL key type"
        }, 
        "aws_instance_disk": {
            "description": "AWS Instance Disk", 
            "type": "object", 
            "properties": {
                "size_gb": {
                    "type": "integer", 
                    "description": "Size of volumes in GB.", 
                    "format": "int64"
                }, 
                "volume_type": {
                    "x-ntnx-enum": [
                        "GP2", 
                        "IO1", 
                        "ST1", 
                        "SC1", 
                        "STANDARD"
                    ], 
                    "type": "string", 
                    "description": "Type of the Volume."
                }, 
                "device_name": {
                    "type": "string", 
                    "description": "Device name e.g. /dev/sdb"
                }, 
                "iops": {
                    "type": "integer", 
                    "description": "The requested number of I/O operations per second that the volume can support for provisioned IOPS (SSD) volumes (io1). Minimum = 100 IOPS and Maximum = 20000 IOPS.\n", 
                    "format": "int64"
                }, 
                "snapshot_id": {
                    "type": "string", 
                    "description": "AWS snapshot ID."
                }, 
                "delete_on_termination": {
                    "type": "boolean", 
                    "description": "Status of delete on termination."
                }
            }, 
            "title": "AWS Instance Disk"
        }, 
        "changed_regions_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "changed_regions", 
                    "x-ntnx-enum": [
                        "changed_regions"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for changed_regions list output"
        }, 
        "blueprint_reference": {
            "description": "The reference to a blueprint", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "blueprint", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "blueprint"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a blueprint"
        }, 
        "attribute": {
            "description": "The attributes for the directory service.", 
            "type": "object", 
            "properties": {
                "value_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Value of the attribute."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the attribute."
                }
            }, 
            "title": "Directory service search attributes response"
        }, 
        "aws_image_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_image", 
                    "x-ntnx-enum": [
                        "aws_image"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for aws_image list"
        }, 
        "tenant_metadata": {
            "description": "The tenant kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when tenant was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "tenant", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "tenant"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "tenant uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the tenant is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when tenant was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the tenant. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the tenant. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "tenant name", 
                    "maxLength": 80
                }
            }, 
            "title": "tenant metadata"
        }, 
        "app_actionrun_status": {
            "description": "Status of action_run", 
            "type": "object", 
            "properties": {
                "runlog_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "App creation runlog uuid.", 
                    "format": "UUID"
                }
            }, 
            "title": "Status of action_run"
        }, 
        "entities_with_metrics_result": {
            "type": "object", 
            "description": "Entities with metrics result object defintion. Making it opaque in the\nfirst release conciously. This will have contain the details of entity\nmetadata and metrics.\n", 
            "title": "Entities Metrics Result Defintion"
        }, 
        "node_spec": {
            "description": "node_spec Object.", 
            "type": "object", 
            "properties": {
                "recommended_online_timestamp_secs": {
                    "type": "integer"
                }, 
                "to_removed": {
                    "type": "boolean", 
                    "description": "Indicate if the node is set for removal."
                }, 
                "model": {
                    "type": "string"
                }, 
                "resource_spec": {
                    "$ref": "#/definitions/generic_resource_spec"
                }, 
                "num_of_nodes": {
                    "type": "integer"
                }
            }, 
            "title": "Node Spec Definition"
        }, 
        "entitybrowser_response": {
            "description": "Entitybrowser response object definition.", 
            "type": "object", 
            "properties": {
                "type": {
                    "type": "string", 
                    "description": "Type of the response."
                }, 
                "entity_type": {
                    "type": "string", 
                    "description": "Type of the entity."
                }
            }, 
            "title": "Entitybrowser Response Definition"
        }, 
        "citrix_resource_location": {
            "description": "Resource Location on Citrix Cloud.", 
            "type": "object", 
            "properties": {
                "id": {
                    "type": "string", 
                    "description": "The resource location id."
                }, 
                "name": {
                    "type": "string", 
                    "description": "The resource location name."
                }
            }, 
            "title": "Citrix Resource Location."
        }, 
        "role_acp": {
            "description": "Role Input Definition.", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "permission_uuid_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The list of Permissions."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Role name.", 
                    "maxLength": 64
                }
            }, 
            "title": "Role."
        }, 
        "vpn_gateway_list_intent_response": {
            "description": "Response object for intentful operation of vpn_gateways", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/vpn_gateway_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vpn_gateway_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "resource_domain_resources_status": {
            "description": "The status for a resource domain (limits and values)", 
            "required": [
                "resources"
            ], 
            "properties": {
                "resources": {
                    "items": {
                        "$ref": "#/definitions/resource_utilization_status"
                    }, 
                    "type": "array", 
                    "description": "The utilization/limit for resource types"
                }
            }, 
            "title": "Resource Domain Status"
        }, 
        "common_report_config_intent_resource": {
            "description": "Response object for intentful operations on a common_report_config", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/common_report_config_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/common_report_config"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/common_report_config_metadata"
                }
            }, 
            "title": "common_report_config Intent Response"
        }, 
        "certification_signing_info": {
            "description": "Customer information used in Certificate Signing Request for\ncreating digital certificates.\n", 
            "type": "object", 
            "properties": {
                "city": {
                    "type": "string", 
                    "description": "The Town or City where customer's business is located."
                }, 
                "common_name_suffix": {
                    "type": "string", 
                    "description": "Common name is by default <node_uuid>.nutanix.com, but if a customer\nwants something instead of nutanix.com they can specify it here.\n"
                }, 
                "state": {
                    "type": "string", 
                    "description": "The Province, Region, County or State where customer business is\nis located.\n"
                }, 
                "country_code": {
                    "type": "string", 
                    "description": "Two-letter ISO code for Country where customer's organization is\nlocated.\n"
                }, 
                "common_name": {
                    "type": "string", 
                    "description": "Common name of the organization or host server"
                }, 
                "organization": {
                    "type": "string", 
                    "description": "Name of the customer business."
                }, 
                "email_address": {
                    "type": "string", 
                    "description": "Email address of the certificate administrator."
                }
            }, 
            "title": "Customer information in Certificate Signing Request"
        }, 
        "action_rule_validation_input": {
            "description": "Input for validating the playbook", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "action_rule_reference": {
                    "description": "For existing action rule, this is required.", 
                    "$ref": "#/definitions/action_rule_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/action_rule_resources"
                }
            }, 
            "title": "Action rule validation input"
        }, 
        "vg_recovery_point_metadata": {
            "description": "The vg_recovery_point kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vg_recovery_point was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "vg_recovery_point", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vg_recovery_point"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vg_recovery_point uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the vg_recovery_point is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vg_recovery_point was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vg_recovery_point. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vg_recovery_point. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "vg_recovery_point name", 
                    "maxLength": 80
                }
            }, 
            "title": "vg_recovery_point metadata"
        }, 
        "changed_regions_reference": {
            "description": "The reference to a changed_regions", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "changed_regions", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "changed_regions"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a changed_regions"
        }, 
        "routing_policy_resources_def_status": {
            "description": "Routing policy creation/modification status.", 
            "type": "object", 
            "properties": {
                "service_ip_counters_reverse_direction": {
                    "items": {
                        "description": "Number of packets hitting the service IP.", 
                        "$ref": "#/definitions/service_ip_counters"
                    }, 
                    "type": "array", 
                    "description": "Policy counters for each service IP for reverse direction reroute routing policy. Applicable only if is_bidirectional is true.\n"
                }, 
                "vpc_reference": {
                    "description": "The VPC this routing policy belongs to.\n", 
                    "$ref": "#/definitions/vpc_reference"
                }, 
                "error_message": {
                    "type": "string", 
                    "description": "Error message describing why the routing policy is inactive.\n"
                }, 
                "routing_policy_counters_reverse_direction": {
                    "description": "Number of packets matching the reverse direction routing policy. Applicable only if is_bidirectional is true.\n", 
                    "$ref": "#/definitions/routing_policy_counters"
                }, 
                "destination": {
                    "description": "The destination IP address of traffic that is entering the router.\n", 
                    "$ref": "#/definitions/network_address_status"
                }, 
                "reroute_fallback_counters": {
                    "description": "Number of packets dropped/allowed when service VM is down and reroute_fallback set to drop/allow.\n", 
                    "$ref": "#/definitions/routing_policy_counters"
                }, 
                "service_ip_counters": {
                    "items": {
                        "description": "Number of packets hitting the service IP.", 
                        "$ref": "#/definitions/service_ip_counters"
                    }, 
                    "type": "array", 
                    "description": "Policy counters for each service IP."
                }, 
                "is_bidirectional": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Whether to configure/install policy in reverse direction too (i.e matching traffic from destination to source)\n"
                }, 
                "source": {
                    "description": "The source IP address of traffic that is entering the router.\n", 
                    "$ref": "#/definitions/network_address_status"
                }, 
                "routing_policy_counters": {
                    "description": "Number of packets matching the routing policy.", 
                    "$ref": "#/definitions/routing_policy_counters"
                }, 
                "protocol_parameters": {
                    "description": "IP protocol parameters of traffic entering the router.\n", 
                    "$ref": "#/definitions/protocol_parameters_status"
                }, 
                "virtual_network_reference": {
                    "description": "The virtual network this routing policy belongs to. This reference is deprecated, use vpc_reference instead.\n", 
                    "$ref": "#/definitions/virtual_network_reference"
                }, 
                "reroute_fallback_counters_reverse_direction": {
                    "description": "Number of packets matching the reverse direction routing policy, when reroute_fallback set to drop/allow and service VM is down. Applicable only if is_bidirectional is true.\n", 
                    "$ref": "#/definitions/routing_policy_counters"
                }, 
                "action": {
                    "description": "The action to be taken on traffic entering the router.\n", 
                    "$ref": "#/definitions/routing_policy_action_status"
                }, 
                "protocol_type": {
                    "x-ntnx-enum": [
                        "TCP", 
                        "UDP", 
                        "ICMP", 
                        "PROTOCOL_NUMBER"
                    ], 
                    "type": "string", 
                    "description": "The IP protocol type of traffic that is entering the router.\n"
                }, 
                "priority": {
                    "type": "integer", 
                    "format": "int16"
                }
            }, 
            "title": "Routing policy creation/modification status"
        }, 
        "brownfield_instance_input": {
            "description": "Brownfield instance list", 
            "required": [
                "instance_id"
            ], 
            "type": "object", 
            "properties": {
                "instance_id": {
                    "type": "string", 
                    "description": "Id of the vm", 
                    "maxLength": 64
                }, 
                "instance_name": {
                    "type": "string", 
                    "description": "Name of the vm", 
                    "maxLength": 64
                }, 
                "platform_data": {
                    "additionalProperties": {
                        "type": "string"
                    }
                }, 
                "address": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Address of the vm"
                }
            }, 
            "title": "brownfield instance list"
        }, 
        "alert_state": {
            "description": "The status data construct for acknowledgement and resolution.", 
            "type": "object", 
            "properties": {
                "is_true": {
                    "type": "boolean", 
                    "description": "A boolean status for acknowledgement or resolution"
                }, 
                "is_auto_resolved": {
                    "type": "boolean", 
                    "description": "It is automatically resolved or user manually resolved.  Currently,\nit is limtied to the resolution only.\n"
                }, 
                "user": {
                    "type": "string", 
                    "description": "Name of the user who change this alert status."
                }, 
                "time": {
                    "type": "string", 
                    "description": "The time the alert status was changed.", 
                    "format": "date-time"
                }
            }, 
            "title": "Information about an alert state."
        }, 
        "aws_role_resources_def_status": {
            "description": "aws_role resources", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the AWS role."
                }
            }, 
            "title": "aws_role resources"
        }, 
        "rack_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "rack", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "rack"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "rackable_unit_intent_resource": {
            "description": "Response object for intentful operations on a rackable_unit", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/rackable_unit_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/rackable_unit"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/rackable_unit_metadata"
                }
            }, 
            "title": "rackable_unit Intent Response"
        }, 
        "blueprint_custom_intent_input": {
            "description": "An intentful representation of a blueprint", 
            "required": [
                "api_version", 
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/blueprint"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "blueprint Intent Entity"
        }, 
        "app_intent_response": {
            "description": "Response object for intentful operations on a app", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/app_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/app"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/app_metadata"
                }
            }, 
            "title": "app Intent Response"
        }, 
        "recovery_plan_script_config": {
            "description": "Configuration of the script to be executed inside the guest VM after recovery. The script is expected to be present at following file path as per Operating System: - Production:\n  - Windows : scripts/production/vm_recovery.bat relative to the Nutanix\n    directory in the Program Files\n  - Linux : /usr/local/sbin/production_vm_recovery\n- Test:\n  - Windows : scripts/test/vm_recovery.bat relative to the Nutanix\n    directory in the Program Files\n  - Linux : /usr/local/sbin/test_vm_recovery\n", 
            "required": [
                "enable_script_exec"
            ], 
            "type": "object", 
            "properties": {
                "enable_script_exec": {
                    "type": "boolean", 
                    "description": "Indicates whether to execute script.\n"
                }, 
                "timeout": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "The timeout for the script (seconds).\n", 
                    "format": "int32"
                }
            }, 
            "title": "Script configuration"
        }, 
        "microseg_service_config_input": {
            "properties": {
                "is_validation_only": {
                    "type": "boolean", 
                    "description": "Flag indicating whether to do Microsegmentation enablement validation only.\n"
                }, 
                "state": {
                    "x-ntnx-enum": [
                        "ENABLE", 
                        "DISABLE"
                    ], 
                    "type": "string", 
                    "description": "The desired state of Microsegmentation."
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "state"
                    ]
                }, 
                {
                    "required": [
                        "is_validation_only"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Input body to configure Microsegmentation.", 
            "title": "Microsegmentation configuration."
        }, 
        "network_security_rule_list_intent_response": {
            "description": "Response object for intentful operation of network_security_rules", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/network_security_rule_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/network_security_rule_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "customization_spec_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "customization_spec", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "customization_spec"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "remote_syslog_server_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_syslog_server", 
                    "x-ntnx-enum": [
                        "remote_syslog_server"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for remote_syslog_server list"
        }, 
        "directory_service_ou_input": {
            "description": "A Directory Service organizational unit.", 
            "type": "object", 
            "properties": {
                "distinguished_name": {
                    "type": "string", 
                    "description": "The Distinguished name for the organizational unit.", 
                    "maxLength": 255
                }
            }, 
            "title": "A Directory Service organizational unit."
        }, 
        "floating_ip_reference": {
            "description": "The reference to a floating_ip", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "floating_ip", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "floating_ip"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a floating_ip"
        }, 
        "report_params": {
            "description": "Report Request Object.", 
            "required": [
                "scenario_uuid"
            ], 
            "type": "object", 
            "properties": {
                "locale": {
                    "default": "en-US", 
                    "x-ntnx-enum": [
                        "$unknown", 
                        "en-US", 
                        "ja-JP", 
                        "zh-CN"
                    ], 
                    "type": "string"
                }, 
                "scenario_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "x-example": "0e09cf83-ac68-4f28-af70-6df9a43df4f0", 
                    "format": "UUID"
                }
            }, 
            "title": "Report Request Info."
        }, 
        "vm_spec": {
            "description": "Details of the VM.", 
            "required": [
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The UUID which is used to uniquely identify this VM.\n", 
                    "format": "UUID"
                }, 
                "num_cores_per_vcpu": {
                    "type": "integer", 
                    "description": "Number of cores per vCPU."
                }, 
                "vm_disk_list": {
                    "items": {
                        "$ref": "#/definitions/disk_spec"
                    }, 
                    "type": "array", 
                    "description": "List of associated VM virtual disks."
                }, 
                "vm_recovery_point_reference": {
                    "description": "Reference to the VM recovery point.", 
                    "$ref": "#/definitions/vm_recovery_point_reference"
                }, 
                "num_vcpus": {
                    "type": "integer", 
                    "description": "Number of vCPUs needed."
                }, 
                "memory_bytes": {
                    "type": "integer", 
                    "description": "Amount of memory needed in bytes."
                }, 
                "vm_capability_list": {
                    "items": {
                        "x-ntnx-enum": [
                            "VTPM"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of capabilities VM is configured with."
                }, 
                "virtual_hardware_version": {
                    "type": "integer", 
                    "description": "Virtual hardware version of the VM."
                }, 
                "source_vm_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Source VM UUID of which this VM is clone of.\n", 
                    "format": "UUID"
                }
            }, 
            "title": "VM specification"
        }, 
        "entity": {
            "description": "The response returned for directory service search operation.", 
            "type": "object", 
            "properties": {
                "type": {
                    "type": "string", 
                    "description": "User or group or OU in the directory service."
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the entity in canonical format.", 
                    "maxLength": 64
                }, 
                "attribute_list": {
                    "items": {
                        "$ref": "#/definitions/attribute"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Directory service search response"
        }, 
        "api_request": {
            "description": "API request", 
            "required": [
                "path_and_params", 
                "operation"
            ], 
            "type": "object", 
            "properties": {
                "body": {
                    "additionalProperties": {
                        "type": "object"
                    }, 
                    "type": "object", 
                    "description": "The API request specification."
                }, 
                "operation": {
                    "x-ntnx-enum": [
                        "DELETE", 
                        "GET", 
                        "HEAD", 
                        "PATCH", 
                        "POST", 
                        "PUT"
                    ], 
                    "type": "string", 
                    "description": "The REST method to use."
                }, 
                "path_and_params": {
                    "type": "string", 
                    "description": "The part of the API request that contains information\nsuch as the path and query.\n"
                }
            }, 
            "title": "API request"
        }, 
        "groups_get_entities_request": {
            "description": "Get Entities Request.", 
            "required": [
                "entity_type"
            ], 
            "type": "object", 
            "properties": {
                "number_of_intervals_for_latest_data": {
                    "type": "integer", 
                    "description": "When retrieving latest values, how far back to look as a multiple of the downsampling interval for the metric.\n", 
                    "format": "int32"
                }, 
                "group_sort_attribute": {
                    "type": "string", 
                    "description": "The name of the attribute that will be used to sort groups.\n"
                }, 
                "number_of_buckets": {
                    "type": "integer", 
                    "description": "For grouping, how many groups to return.", 
                    "format": "int32"
                }, 
                "entity_ids": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "A set of entities that the request will be scoped to."
                }, 
                "group_member_attributes": {
                    "items": {
                        "$ref": "#/definitions/groups_requested_attribute"
                    }, 
                    "type": "array"
                }, 
                "group_member_sort_attribute": {
                    "type": "string", 
                    "description": "The name of the attribute that will be used to sort group members.\n"
                }, 
                "bucket_boundary": {
                    "type": "integer", 
                    "description": "For grouping, the boundary to snap to when grouping.", 
                    "format": "int32"
                }, 
                "group_offset": {
                    "type": "integer", 
                    "description": "The offset into the total set of groups to return.", 
                    "format": "int64"
                }, 
                "downsampling_interval": {
                    "type": "integer", 
                    "description": "Downsampling interval to apply to query if override is desired.\n", 
                    "format": "int32"
                }, 
                "interval_start_ms": {
                    "default": 0, 
                    "type": "integer", 
                    "description": "For a time-series query, the start of the interval since the epoch in ms. Default is latest value only.\n", 
                    "format": "int64"
                }, 
                "entity_type": {
                    "type": "string", 
                    "description": "The entity type that will be requested."
                }, 
                "group_member_offset": {
                    "type": "integer", 
                    "description": "The offset into the total member set to return per group.", 
                    "format": "int64"
                }, 
                "grouping_attribute": {
                    "type": "string", 
                    "description": "Attribute that will be used to perform a group-by if needed.\n"
                }, 
                "group_member_sort_downsampling_function": {
                    "$ref": "#/definitions/groups_sort_downsampling_function"
                }, 
                "group_sort_order": {
                    "$ref": "#/definitions/groups_sort_order"
                }, 
                "group_sort_downsample_function": {
                    "$ref": "#/definitions/groups_sort_downsampling_function"
                }, 
                "filter_criteria": {
                    "type": "string", 
                    "description": "FIQL filter criteria that will be used to filter the returned data.\n"
                }, 
                "large_bucket_boundary": {
                    "type": "integer", 
                    "description": "Same as bucket_boundary but supports larger range of values.", 
                    "format": "int64"
                }, 
                "availability_zone_scope": {
                    "default": "LOCAL", 
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "GLOBAL"
                    ], 
                    "type": "string", 
                    "description": "The scope of availability zones from which to fetch the  data.\n"
                }, 
                "group_count": {
                    "type": "integer", 
                    "description": "The maximum number of groups to return in the result.", 
                    "format": "int64"
                }, 
                "group_attributes": {
                    "items": {
                        "$ref": "#/definitions/groups_requested_attribute"
                    }, 
                    "type": "array"
                }, 
                "interval_end_ms": {
                    "default": 0, 
                    "type": "integer", 
                    "description": "For a time-series query, the end of the interval since the epoch in ms. Default is latest value only.\n", 
                    "format": "int64"
                }, 
                "grouping_attribute_type": {
                    "$ref": "#/definitions/groups_attribute_type"
                }, 
                "group_member_count": {
                    "type": "integer", 
                    "description": "The maximum number of members to return per group.", 
                    "format": "int64"
                }, 
                "group_member_sort_order": {
                    "$ref": "#/definitions/groups_sort_order"
                }, 
                "query_name": {
                    "type": "string", 
                    "description": "A custom name to use for tagging the query when debugging."
                }
            }, 
            "title": "Get Entities Request"
        }, 
        "ova_list_response": {
            "description": "Response object for list operation of OVAs", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/ova_get_response"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ova_list_metadata_output"
                }
            }, 
            "title": "OVA list response"
        }, 
        "batch_request": {
            "description": "Request for batch operations.", 
            "required": [
                "api_request_list"
            ], 
            "type": "object", 
            "properties": {
                "execution_order": {
                    "default": "SEQUENTIAL", 
                    "x-ntnx-enum": [
                        "SEQUENTIAL", 
                        "NON_SEQUENTIAL"
                    ], 
                    "type": "string", 
                    "description": "The order of execution of the APIs in the batch. Can be either\nSequential (default value) or Parallel.\n"
                }, 
                "action_on_failure": {
                    "default": "CONTINUE", 
                    "x-ntnx-enum": [
                        "CONTINUE", 
                        "ABORT"
                    ], 
                    "type": "string", 
                    "description": "If the specified parameter is CONTINUE, the remaining APIs in the batch\ncontinue to be executed.\n"
                }, 
                "api_request_list": {
                    "items": {
                        "$ref": "#/definitions/api_request"
                    }, 
                    "type": "array", 
                    "description": "A list of API requests in the batch."
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Batch request"
        }, 
        "vpn_connection_def_status": {
            "description": "An intentful representation of a vpn_connection status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "vpn_connection Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the vpn_connection."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the vpn_connection, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/vpn_connection_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for vpn_connection."
                }
            }, 
            "title": "vpn_connection Intent Status with placement specified"
        }, 
        "syslog_server_resources": {
            "description": "Remote Syslog server API resources definition", 
            "type": "object", 
            "properties": {
                "module_list": {
                    "items": {
                        "$ref": "#/definitions/syslog_module"
                    }, 
                    "type": "array"
                }, 
                "ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IP address of the Remote Syslog server"
                }, 
                "port": {
                    "type": "integer", 
                    "description": "Port of the Remote Syslog server", 
                    "format": "int32"
                }, 
                "server_name": {
                    "type": "string", 
                    "description": "Name of the Remote Syslog server"
                }, 
                "network_protocol": {
                    "x-ntnx-enum": [
                        "UDP", 
                        "TCP", 
                        "RELP"
                    ], 
                    "type": "string", 
                    "description": "Network Protocol to be used"
                }
            }, 
            "title": "Remote Syslog server API resources"
        }, 
        "action_rule_trigger_input": {
            "description": "Input to trigger playbooks on-demand", 
            "type": "object", 
            "properties": {
                "trigger_instance_list": {
                    "items": {
                        "$ref": "#/definitions/component_instance_parameters"
                    }, 
                    "type": "array", 
                    "description": "The trigger output parameters."
                }, 
                "trigger_type": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "The trigger type name", 
                    "maxLength": 64
                }
            }, 
            "title": "Trigger input"
        }, 
        "direct_connect_intent_response": {
            "description": "Response object for intentful operations on a direct_connect", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/direct_connect_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/direct_connect"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/direct_connect_metadata"
                }
            }, 
            "title": "direct_connect Intent Response"
        }, 
        "aws_volume_type_metadata": {
            "description": "The aws_volume_type kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_volume_type was last updated\n", 
                    "format": "date-time"
                }, 
                "kind": {
                    "default": "aws_volume_type", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_volume_type"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "aws_volume_type uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the aws_volume_type is in", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_volume_type was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the aws_volume_type"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "aws_volume_type name"
                }
            }, 
            "title": "aws_volume_type metadata"
        }, 
        "app_substrate_reference_upload": {
            "description": "The reference to a app_substrate", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_substrate", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_substrate"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_substrate"
        }, 
        "app_credential_input_upload": {
            "description": "Credential for application", 
            "required": [
                "name", 
                "type", 
                "username", 
                "secret"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "secret": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Credential secret object"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "PASSWORD", 
                        "KEY"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "passphrase": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Credential passphrase object associated with the provided key"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Credential for application"
        }, 
        "protection_rule_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "protection_rule", 
                    "x-ntnx-enum": [
                        "protection_rule"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for protection_rule list output"
        }, 
        "cluster_intent_resource": {
            "description": "Response object for intentful operations on a cluster", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/cluster_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/cluster"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cluster_metadata"
                }
            }, 
            "title": "cluster Intent Response"
        }, 
        "param_value": {
            "properties": {
                "int_value": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "double_value": {
                    "type": "number", 
                    "format": "double"
                }, 
                "bool_value": {
                    "type": "boolean"
                }, 
                "string_value": {
                    "type": "string"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "bool_value"
                    ]
                }, 
                {
                    "required": [
                        "int_value"
                    ]
                }, 
                {
                    "required": [
                        "double_value"
                    ]
                }, 
                {
                    "required": [
                        "string_value"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Scalar value object that handles different types", 
            "title": "Value object"
        }, 
        "app_runlog_archive_list_response": {
            "description": "App Archive List Response", 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/app_runlog_archive_response"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "App Archive List Response"
        }, 
        "ova_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ova", 
                    "x-ntnx-enum": [
                        "ova"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for ova list output"
        }, 
        "action_rule_x_pilot_params": {
            "description": "Parameters required for XPilot enabled rule", 
            "required": [
                "entity_info", 
                "entity_type", 
                "metric_name"
            ], 
            "type": "object", 
            "properties": {
                "metric_name": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "The name of the KPI that will be monitored", 
                    "maxLength": 128
                }, 
                "entity_type": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "The Type of the entity whose KPI will be monitored", 
                    "maxLength": 64
                }, 
                "min_threshold": {
                    "type": "number", 
                    "description": "Lower Bound for desired KPI value", 
                    "format": "double"
                }, 
                "monitor_duration_mins": {
                    "type": "integer", 
                    "description": "Duration(minutes) for which the playbook will be monitored", 
                    "format": "int64"
                }, 
                "entity_info": {
                    "type": "string", 
                    "description": "The Entity Info of the entity whose KPI will be monitored", 
                    "maxLength": 256
                }, 
                "request_approval_after_each_retry": {
                    "type": "boolean", 
                    "description": "Should XPilot play wait for approval after every retry."
                }, 
                "max_threshold": {
                    "type": "number", 
                    "description": "Upper Bound for desired KPI value", 
                    "format": "double"
                }, 
                "max_retry_count": {
                    "default": 5, 
                    "type": "integer", 
                    "description": "Count of number of times rule can be rerun in case of positive\nfeedback\n", 
                    "format": "int64"
                }
            }, 
            "title": "XPilot Parameters"
        }, 
        "oauth_client_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "oauth_client", 
                    "x-ntnx-enum": [
                        "oauth_client"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for oauth_client list"
        }, 
        "workload": {
            "description": "Workload Object.", 
            "type": "object", 
            "properties": {
                "adjusted_workload": {
                    "$ref": "#/definitions/adjusted_workload"
                }, 
                "sql_workload": {
                    "$ref": "#/definitions/sql_workload"
                }, 
                "workload_name": {
                    "type": "string", 
                    "description": "Workload name."
                }, 
                "exchange_workload": {
                    "$ref": "#/definitions/exchange_workload"
                }, 
                "to_remove": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "The variable to indicated if the workload is used as removed workload."
                }, 
                "enabled": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "The variable to indicate if the workload is enabled."
                }, 
                "splunk_workload": {
                    "$ref": "#/definitions/splunk_workload"
                }, 
                "vdi_workload": {
                    "$ref": "#/definitions/vdi_workload"
                }, 
                "vm_workload": {
                    "$ref": "#/definitions/vm_workload"
                }, 
                "workload_type": {
                    "x-ntnx-enum": [
                        "$unknown", 
                        "vm", 
                        "adjusted", 
                        "vm_category", 
                        "splunk", 
                        "xen", 
                        "vdi", 
                        "exchange", 
                        "virtual_server", 
                        "sql"
                    ], 
                    "type": "string", 
                    "description": "The type of workload."
                }, 
                "resource_requirement": {
                    "description": "The resource requirement for the workload.", 
                    "$ref": "#/definitions/generic_resource_spec"
                }, 
                "schedule_timestamp_sec": {
                    "type": "integer", 
                    "description": "The scheduled timestamp in seconds."
                }, 
                "xen_workload": {
                    "$ref": "#/definitions/xen_workload"
                }, 
                "virtual_server_workload": {
                    "$ref": "#/definitions/virtual_server_workload"
                }, 
                "vm_category_workload": {
                    "$ref": "#/definitions/vm_category_workload"
                }
            }, 
            "title": "Workload Definition"
        }, 
        "address_group_list_response": {
            "description": "List response object for address groups", 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/address_group_response_resource"
                    }, 
                    "type": "array"
                }, 
                "metadata": {
                    "$ref": "#/definitions/address_group_list_metadata"
                }
            }, 
            "title": "Address group list response"
        }, 
        "alert_notification_input": {
            "description": "The information required for creating an alert.", 
            "required": [
                "notification_type", 
                "severity"
            ], 
            "type": "object", 
            "properties": {
                "notification_type": {
                    "type": "string", 
                    "description": "The notification definition for this type of alerts."
                }, 
                "source_entity": {
                    "description": "The entity which causes the alert.", 
                    "$ref": "#/definitions/reference"
                }, 
                "severity": {
                    "description": "Alert instance severity.", 
                    "$ref": "#/definitions/severity"
                }, 
                "parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/param_value"
                    }, 
                    "type": "object", 
                    "description": "Alert notification type specific parameters."
                }
            }, 
            "title": "Alert creation informtion"
        }, 
        "recovery_plan_job_response": {
            "description": "Response for a Recovery Plan Job create/update/delete request.\n", 
            "type": "object", 
            "properties": {
                "task_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the task created for handling the request.\n", 
                    "format": "UUID"
                }
            }, 
            "title": "Response for a Recovery Plan Job create/update/delete request.\n"
        }, 
        "access_control_policy_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "access_control_policy", 
                    "x-ntnx-enum": [
                        "access_control_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for access_control_policy list"
        }, 
        "service_account": {
            "description": "Credentials to connect to the directory service.", 
            "required": [
                "username", 
                "password"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "The username to connect to the directory service."
                }, 
                "password": {
                    "type": "string", 
                    "description": "The password to authenticate the request."
                }
            }, 
            "title": "Directory service service-account"
        }, 
        "remote_syslog_server_intent_response": {
            "description": "Response object for intentful operations on a remote_syslog_server", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/remote_syslog_server_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/remote_syslog_server"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_syslog_server_metadata"
                }
            }, 
            "title": "remote_syslog_server Intent Response"
        }, 
        "app_profile_response_download": {
            "description": "App profile resources", 
            "required": [
                "name", 
                "state", 
                "message_list", 
                "dependency_list"
            ], 
            "type": "object", 
            "properties": {
                "deployment_create_list": {
                    "items": {
                        "$ref": "#/definitions/blueprint_deployment_response_download"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": ""
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response_download"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": ""
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for blueprint deployment"
                }, 
                "dependency_list": {
                    "items": {
                        "$ref": "#/definitions/blueprint_dependency_list"
                    }, 
                    "type": "array"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response_download"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "App profile resources"
        }, 
        "capability_value": {
            "properties": {
                "cap_string_value_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "unknown": {
                    "type": "boolean", 
                    "description": "True if the capability value could not be retrieved or inferred.\n"
                }, 
                "cap_double_value": {
                    "type": "number", 
                    "format": "float"
                }, 
                "cap_bool_value": {
                    "type": "boolean"
                }, 
                "cap_int_value": {
                    "type": "integer"
                }, 
                "cap_string_value": {
                    "type": "string"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "cap_bool_value"
                    ]
                }, 
                {
                    "required": [
                        "cap_int_value"
                    ]
                }, 
                {
                    "required": [
                        "cap_double_value"
                    ]
                }, 
                {
                    "required": [
                        "cap_string_value"
                    ]
                }, 
                {
                    "required": [
                        "cap_string_value_list"
                    ]
                }, 
                {
                    "required": [
                        "unknown"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Value of capability", 
            "title": "Capability value"
        }, 
        "category_mapping_intent_resource": {
            "description": "Response object for intentful operations on a category_mapping", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/category_mapping_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/category_mapping"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/category_mapping_metadata"
                }
            }, 
            "title": "category_mapping Intent Response"
        }, 
        "procedural_response": {
            "description": "Response for invoking a procedural call. Contains a task UUID.\n", 
            "required": [
                "task_uuid"
            ], 
            "type": "object", 
            "properties": {
                "task_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Procedural API response"
        }, 
        "get_info": {
            "description": "Indicates the storage configuration attributes being effective on the\nentity type specified. This state is resultant of storage attributes\nconfigured on the entity and storage policies associated with the entity.\n", 
            "type": "object", 
            "properties": {
                "inline_compression": {
                    "type": "boolean", 
                    "description": "Indicates whether compression is inline or post-process on the\nentity.\n"
                }, 
                "compliance_state": {
                    "default": "IN_PROGRESS", 
                    "x-ntnx-enum": [
                        "IN_PROGRESS", 
                        "COMPLIANT", 
                        "NON_COMPLIANT"
                    ], 
                    "type": "string", 
                    "description": "Compliance state of the entity with the storage policy.\n"
                }, 
                "throttled_iops": {
                    "type": "integer", 
                    "description": "Max IOs the entity is allowed to do in a second.", 
                    "format": "int32"
                }, 
                "active_storage_policy_reference_list": {
                    "items": {
                        "$ref": "#/definitions/reference"
                    }, 
                    "type": "array", 
                    "description": "List of storage policies active on the entity."
                }, 
                "compression_enabled": {
                    "type": "boolean", 
                    "description": "Indicates whether compression is enabled or not on the entity.\n"
                }, 
                "replication_factor": {
                    "type": "integer", 
                    "description": "The replication factor effective on the entity.", 
                    "format": "int64"
                }, 
                "encryption_enabled": {
                    "description": "Indicates whether encryption is enabled or not on the entity.\n", 
                    "type": "boolean"
                }, 
                "non_compliant_error_codes": {
                    "items": {
                        "x-ntnx-enum": [
                            "AOS_INCOMPATIBLE_VERSION", 
                            "UNSUPPORTED_HYPERVISOR", 
                            "CONFIG_OVERRIDE", 
                            "ENCRYPTION_CONFLICT", 
                            "ANOTHER_POLICY_CONFLICT"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Indicates the reasons of non-compliance with the applied policy.\n"
                }
            }, 
            "title": "Effective storage configuration on an entity."
        }, 
        "user_group_output_resource": {
            "description": "User Group Resource Definition.", 
            "required": [
                "display_name"
            ], 
            "type": "object", 
            "properties": {
                "projects_reference_list": {
                    "items": {
                        "$ref": "#/definitions/project_reference"
                    }, 
                    "type": "array", 
                    "description": "A list of projects the user group is part of."
                }, 
                "directory_service_user_group": {
                    "$ref": "#/definitions/directory_service_user_group_status"
                }, 
                "access_control_policy_reference_list": {
                    "items": {
                        "$ref": "#/definitions/access_control_policy_reference"
                    }, 
                    "type": "array", 
                    "description": "List of ACP references."
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "The display name for the user group."
                }, 
                "user_group_type": {
                    "x-ntnx-enum": [
                        "DIRECTORY_SERVICE", 
                        "IDENTITY_PROVIDER"
                    ], 
                    "type": "string"
                }
            }, 
            "title": "user group resource definition."
        }, 
        "permission_intent_response": {
            "description": "Response object for intentful operations on a permission", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/permission_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/permission"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/permission_metadata"
                }
            }, 
            "title": "permission Intent Response"
        }, 
        "recovery_plan_job_execution_status": {
            "description": "Execution of the Recovery Plan is done in three phases Preprocessing, Operation and Postprocessing.\n", 
            "type": "object", 
            "properties": {
                "postprocessing_status": {
                    "description": "Status of steps performed after the recovery of the entities for the Recovery Plan Job. For example, a dynamically created network on failover operation can be deleted when the VMs are migrated back to the source Availability Zone.\n", 
                    "$ref": "#/definitions/recovery_plan_job_phase_execution_status"
                }, 
                "operation_status": {
                    "description": "Status of the steps performed for the recovery of entities for the Recovery Plan Job. For example, VM will be restored from a Recovery point in case of failover.\n", 
                    "$ref": "#/definitions/recovery_plan_job_phase_execution_status"
                }, 
                "preprocessing_status": {
                    "description": "Status of the steps performed before the recovery of VMs for the Recovery Plan Job. For example, a network might be created as part of failover operation on the Recovery Plan before recovery of the VMs.\n", 
                    "$ref": "#/definitions/recovery_plan_job_phase_execution_status"
                }
            }, 
            "title": "Execution status of the Recovery Plan Job"
        }, 
        "dpd_config": {
            "description": "DPD (Dead Peer Detection) related configuration spec for the VPN connections.", 
            "type": "object", 
            "properties": {
                "operation": {
                    "x-ntnx-enum": [
                        "RESTART", 
                        "CLEAR", 
                        "HOLD"
                    ], 
                    "type": "string", 
                    "description": "Operation to be performed on detecting a dead peer."
                }, 
                "interval_secs": {
                    "type": "integer", 
                    "description": "The amount of time the peer waits for traffic before sending a DPD request.", 
                    "format": "uint64"
                }, 
                "timeout_secs": {
                    "type": "integer", 
                    "description": "The maximum amount of time to wait for a DPD response before marking the peer as dead.\n", 
                    "format": "uint64"
                }
            }, 
            "title": "DPD (Dead Peer Detection) related configuration spec for the VPN connection"
        }, 
        "entity_sync_rule_list_intent_response": {
            "description": "Response object for intentful operation of entity_sync_rules", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/entity_sync_rule_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/entity_sync_rule_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "app_task_response": {
            "description": "Task definition for Application.", 
            "required": [
                "name", 
                "uuid", 
                "type", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "target_any_local_reference": {
                    "$ref": "#/definitions/entity_reference"
                }, 
                "retries": {
                    "type": "string", 
                    "description": "Number of retries for the task."
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list."
                }, 
                "child_tasks_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Task attrs for application of type object."
                }, 
                "timeout_secs": {
                    "type": "string", 
                    "description": "task timeout."
                }, 
                "type": {
                    "type": "string", 
                    "description": ""
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Task for Application"
        }, 
        "physical_availability_zone_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "physical_availability_zone", 
                    "x-ntnx-enum": [
                        "physical_availability_zone"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for physical_availability_zone list output"
        }, 
        "blueprint_metadata": {
            "description": "The blueprint kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when blueprint was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "blueprint", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "blueprint"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "blueprint uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the blueprint is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when blueprint was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the blueprint. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the blueprint. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "blueprint name", 
                    "maxLength": 80
                }
            }, 
            "title": "blueprint metadata"
        }, 
        "base_response": {
            "properties": {
                "search_query": {
                    "$ref": "#/definitions/auto_completion"
                }, 
                "composed_result": {
                    "$ref": "#/definitions/composite_response"
                }, 
                "single_result": {
                    "$ref": "#/definitions/single_response"
                }, 
                "title": {
                    "type": "string", 
                    "description": "Title of the Base response."
                }
            }, 
            "x-ntnx-one-of": [
                "single_result", 
                "composed_result"
            ], 
            "type": "object", 
            "description": "Base response object definition.", 
            "title": "Base Response Definition."
        }, 
        "report_customization": {
            "description": "Report-level customizations.", 
            "type": "object", 
            "properties": {
                "footer_html": {
                    "type": "string", 
                    "description": "Custom footer HTML for the report."
                }, 
                "css_style_sheet": {
                    "type": "string", 
                    "description": "Global cascadable style for the report."
                }, 
                "header_html": {
                    "type": "string", 
                    "description": "Custom header HTML for the report."
                }, 
                "logo_image_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Custom logo for the report as selected by the user.", 
                    "format": "UUID"
                }, 
                "overridable_style_sheet": {
                    "type": "string", 
                    "description": "Global overridable style for the report in the form of a\nserialized JSON. This will be used for page number style in header.\n"
                }
            }, 
            "title": "Report customizations."
        }, 
        "app_credential_reference": {
            "description": "The reference to a app_credential", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_credential", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_credential"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_credential"
        }, 
        "category_mapping_resources_def_status": {
            "description": "A mapping from an object to a category value.\n", 
            "type": "object", 
            "properties": {
                "category_value": {
                    "type": "string", 
                    "description": "The value for the category that this mapping is for."
                }, 
                "ad_mapping": {
                    "type": "object", 
                    "description": "A mapping to an object in Active Directory.", 
                    "properties": {
                        "object_identifier": {
                            "type": "string", 
                            "description": "The objectGUID for the object in AD."
                        }, 
                        "object_common_name": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "The CN for the mapped object in AD."
                        }, 
                        "status": {
                            "x-ntnx-enum": [
                                "USABLE", 
                                "DELETED", 
                                "DIRECTORY_NOT_CONFIGURED"
                            ], 
                            "type": "string", 
                            "readOnly": true, 
                            "description": "Whether the mapping is usable or not; USABLE means it is usable. DELETED means the mapped object has been removed from AD, and DIRECTORY_NOT_CONFIGURED means either the directory service the mapping references has been removed or that directory service is not currently in use for identity categorization.\n"
                        }, 
                        "directory_service_reference": {
                            "description": "The directory service that this mapping is for.", 
                            "$ref": "#/definitions/directory_service_reference"
                        }, 
                        "object_path": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "The path for the mapped object in AD."
                        }
                    }
                }, 
                "category_name": {
                    "type": "string", 
                    "description": "The name for the category that this mapping is for."
                }
            }, 
            "title": "Identity Categorization Mapping"
        }, 
        "image_intent_input": {
            "description": "An intentful representation of a image", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/image"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/image_metadata"
                }
            }, 
            "title": "image Intent Entity"
        }, 
        "mh_vm_snapshot_input": {
            "description": "Input object for the snapshot API. User can provide optional UUID of the vm_recovery_point that will be created as a result of this operation.\n", 
            "type": "object", 
            "properties": {
                "expiration_time": {
                    "type": "string", 
                    "description": "The time when this recovery point expires and will be garbage\ncollected. This is in internet date/time format (RFC 3339). If not\nset, then the recovery point never expires.\n", 
                    "format": "date-time"
                }, 
                "vm_recovery_point_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the recovery point.", 
                    "maxLength": 64
                }, 
                "recovery_point_type": {
                    "x-ntnx-enum": [
                        "CRASH_CONSISTENT", 
                        "APPLICATION_CONSISTENT"
                    ], 
                    "type": "string", 
                    "description": "Crash consistent or Application Consistent recovery point"
                }
            }, 
            "title": "Snapshot API input"
        }, 
        "app_deployment_element": {
            "description": "Deployment definition for Application", 
            "required": [
                "substrate_element_local_reference"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional deployment options"
                }, 
                "package_element_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_reference"
                    }, 
                    "type": "array", 
                    "description": "List of references for packages"
                }, 
                "substrate_element_local_reference": {
                    "$ref": "#/definitions/app_substrate_reference"
                }
            }, 
            "title": "Deployment for Application"
        }, 
        "alert_intent_resource": {
            "description": "Response object for intentful operations on a alert", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/alert_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/alert"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/alert_metadata"
                }
            }, 
            "title": "alert Intent Response"
        }, 
        "aws_volume_type_intent_resource": {
            "description": "aws_volume_type entity", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/aws_volume_type_def_status"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_volume_type_metadata"
                }
            }, 
            "title": "aws_volume_type"
        }, 
        "remote_syslog_module_intent_input": {
            "description": "An intentful representation of a remote_syslog_module", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/remote_syslog_module"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_syslog_module_metadata"
                }
            }, 
            "title": "remote_syslog_module Intent Entity"
        }, 
        "ip_usage_stats": {
            "description": "IP address usage stats.", 
            "type": "object", 
            "properties": {
                "num_free_ips": {
                    "type": "integer", 
                    "description": "Number of free IPs in the subnet.", 
                    "format": "int32"
                }, 
                "num_macs": {
                    "type": "integer", 
                    "description": "Number of MACs associated with the subnet.", 
                    "format": "int32"
                }, 
                "num_assigned_ips": {
                    "type": "integer", 
                    "description": "Number of assigned IPs in the subnet.", 
                    "format": "int32"
                }, 
                "ip_pools_stats": {
                    "items": {
                        "$ref": "#/definitions/pool_stats"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "IP address usage stats"
        }, 
        "alert_list_intent_response": {
            "description": "Response object for intentful operation of alerts", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/alert_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/alert_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "blueprint_intent_resource": {
            "description": "Response object for intentful operations on a blueprint", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/blueprint_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/blueprint"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "blueprint Intent Response"
        }, 
        "aws_volume_type_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_volume_type", 
                    "x-ntnx-enum": [
                        "aws_volume_type"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for aws_volume_type list"
        }, 
        "aws_vm_intent_response": {
            "description": "Response object for intentful operations on a aws_vm", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/aws_vm_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/aws_vm"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_vm_metadata"
                }
            }, 
            "title": "aws_vm Intent Response"
        }, 
        "storage_policy_compute_counts_input": {
            "description": "The object governs the response whether the user is interested in all\nrealized entities, and breakup of compliance states amongst them\ngoverned by respective policies. If breakup is requested, the API will\nprovide individual counts of COMPLIANT, NON_COMPLIANT and\nIN_PROGRESS entities governed the policy.\n", 
            "type": "object", 
            "properties": {
                "storage_policy_counts": {
                    "items": {
                        "description": "The object represents whether the total number of realized entities\nbeing governed by the policy need to be computed. It also tracks\nwhether individual counts of COMPLIANT, NON_COMPLIANT and\nIN_PROGRESS entities with the policy.\n", 
                        "type": "object", 
                        "properties": {
                            "vm_counts_input": {
                                "description": "The object represents the inputs dictating the counts\nfor storage policies applied on VMs. It also tracks\nwhether individual counts of COMPLIANT, NON_COMPLIANT\nand IN_PROGRESS entities need to be computed.\n", 
                                "$ref": "#/definitions/entity_counts_input"
                            }, 
                            "storage_policy_uuid": {
                                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                "type": "string", 
                                "description": "UUID of the storage policy.", 
                                "format": "UUID"
                            }, 
                            "vg_counts_input": {
                                "description": "The object represents the inputs dictating the counts\nfor storage policies applied on VGs. It also tracks\nwhether individual counts of COMPLIANT, NON_COMPLIANT\nand IN_PROGRESS entities need to be computed.\n", 
                                "$ref": "#/definitions/entity_counts_input"
                            }
                        }, 
                        "title": "Counts pertaining to respective policies."
                    }, 
                    "type": "array", 
                    "description": "Counts for respective storage policies."
                }
            }, 
            "title": "Counts for respective storage policies pertaining to VM."
        }, 
        "host_gpu": {
            "description": "Host GPU.", 
            "type": "object", 
            "properties": {
                "status": {
                    "x-ntnx-enum": [
                        "UNUSED", 
                        "USED_FOR_PASSTHROUGH", 
                        "USED_FOR_VIRTUAL"
                    ], 
                    "type": "string", 
                    "description": "Current status of the physical GPU."
                }, 
                "assignable": {
                    "type": "boolean", 
                    "description": "Whether this vGPU instance can be allocated to a VM."
                }, 
                "vendor": {
                    "x-ntnx-enum": [
                        "NVIDIA", 
                        "INTEL", 
                        "AMD"
                    ], 
                    "type": "string", 
                    "description": "The vendor of the GPU."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the host GPU."
                }, 
                "index": {
                    "type": "integer", 
                    "description": "The index of the vGPU within physical GPU resource.", 
                    "format": "int32"
                }, 
                "license_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of license types associated with this GPU."
                }, 
                "numa_node": {
                    "type": "integer", 
                    "description": "NUMA node this GPU belongs to.", 
                    "format": "int32"
                }, 
                "max_resolution": {
                    "type": "string", 
                    "description": "Maximum resolution per display head."
                }, 
                "num_vgpus_allocated": {
                    "type": "integer", 
                    "description": "The number of vGPU instances allocated for this physical GPU resource.\n", 
                    "format": "int32"
                }, 
                "consumer_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "pci_address": {
                    "type": "string", 
                    "description": "GPU {segment:bus:device:function} (sbdf) address."
                }, 
                "fraction": {
                    "type": "integer", 
                    "description": "Fraction of the physical GPU.", 
                    "format": "int32"
                }, 
                "mode": {
                    "x-ntnx-enum": [
                        "PASSTHROUGH_GRAPHICS", 
                        "PASSTHROUGH_COMPUTE", 
                        "VIRTUAL"
                    ], 
                    "type": "string", 
                    "description": "The type of this GPU."
                }, 
                "num_virtual_display_heads": {
                    "type": "integer", 
                    "description": "Number of supported virtual display heads.", 
                    "format": "int32"
                }, 
                "guest_driver_version": {
                    "type": "string", 
                    "description": "Last determined guest driver version."
                }, 
                "frame_buffer_size_mib": {
                    "type": "integer", 
                    "description": "GPU frame buffer size in MiB.", 
                    "format": "int64"
                }, 
                "device_id": {
                    "type": "integer", 
                    "description": "The device ID of the GPU.", 
                    "format": "int32"
                }, 
                "max_instances_per_vm": {
                    "type": "integer", 
                    "description": "Maximum number of vGPUs of a GPU type assignable to a VM.", 
                    "format": "int64"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the GPU.", 
                    "format": "UUID"
                }
            }, 
            "title": "Host GPU"
        }, 
        "storage_policy_compute_counts_output": {
            "description": "The object represents the individual number of realized entities\nbeing governed by respective policies. It also tracks the number of\nentities COMPLIANT, NON_COMPLIANT and IN_PROGRESS with the respective\npolicies.\n", 
            "type": "object", 
            "properties": {
                "storage_policy_counts": {
                    "items": {
                        "description": "The object represents the total number of realized entities being\ngoverned by the policy. It also tracks the number of entities\nCOMPLIANT, NON_COMPLIANT and IN_PROGRESS with the policy.\n", 
                        "type": "object", 
                        "properties": {
                            "vg_counts_output": {
                                "description": "The object represents the outputs dictating the counts\nfor storage policies applied on VGs. It also tracks\nindividual counts of COMPLIANT, NON_COMPLIANT\nand IN_PROGRESS entities.\n", 
                                "$ref": "#/definitions/entity_counts_output"
                            }, 
                            "storage_policy_uuid": {
                                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                "type": "string", 
                                "description": "UUID of the storage policy.", 
                                "format": "UUID"
                            }, 
                            "vm_counts_output": {
                                "description": "The object represents the outputs dictating the counts\nfor storage policies applied on VMs. It also tracks\nindividual counts of COMPLIANT, NON_COMPLIANT\nand IN_PROGRESS entities.\n", 
                                "$ref": "#/definitions/entity_counts_output"
                            }
                        }, 
                        "title": "Counts for respective storage policies pertaining to VM."
                    }, 
                    "type": "array", 
                    "description": "Counts for respective storage policies pertaining to VM."
                }
            }, 
            "title": "Counts pertaining to respective policies."
        }, 
        "oauth_generate_token_response": {
            "description": "Oauth token generate response", 
            "required": [
                "client_id", 
                "client_secret", 
                "oauth_token"
            ], 
            "type": "object", 
            "properties": {
                "client_secret": {
                    "type": "string", 
                    "description": "client secret of the Oauth Client"
                }, 
                "oauth_token": {
                    "$ref": "#/definitions/oauth_token"
                }, 
                "client_id": {
                    "type": "string", 
                    "description": "client id of the Oauth Client"
                }
            }, 
            "title": "Oauth token generate response"
        }, 
        "recovery_plan_job_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "recovery_plan_job", 
                    "x-ntnx-enum": [
                        "recovery_plan_job"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for recovery_plan_job list"
        }, 
        "reboot_ngt_policy_parameters": {
            "description": "NGT reboot policy object.", 
            "required": [
                "schedule_type"
            ], 
            "type": "object", 
            "properties": {
                "apply_once": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Flag for policies to be applied only once."
                }, 
                "schedule": {
                    "description": "Schedule for policy enforcement.", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "start_time"
                            ]
                        }, 
                        {
                            "required": [
                                "day_time"
                            ]
                        }
                    ], 
                    "properties": {
                        "start_time": {
                            "type": "string", 
                            "description": "Start time of the schedule.\nThe time should be specified in this manner.\ndate-fullyear(4digit) \"-\" date-month(2digit) \"-\" date-mday(2digit)\n\"T\" time-hour(2digit) \":\" time-minute(2digit) \":\" time-second\n(2digit) [.] \"Z\"  or (\"+\" / \"-\") time-hour(2digit) \":\"\ntime-minute(2digit)\nExamples\n- 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds\n  after the 23rd hour of April 12th, 1985 in UTC.\n- 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57\n  seconds after the 16th hour of December 19th, 1996 with an offset\n  of -08:00 from UTC (Pacific Standard Time).\n  Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.\n", 
                            "format": "date-time"
                        }, 
                        "day_time": {
                            "$ref": "#/definitions/day_time"
                        }
                    }
                }, 
                "schedule_type": {
                    "x-ntnx-enum": [
                        "IMMEDIATE", 
                        "LATER"
                    ], 
                    "type": "string", 
                    "description": "Type of Schedule for policy enforcement."
                }
            }, 
            "title": "Reboot NGT policy parameters"
        }, 
        "user_group_def_status": {
            "description": "User group status definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "resources": {
                    "$ref": "#/definitions/user_group_output_resource"
                }
            }, 
            "title": "user group status definition."
        }, 
        "security_planning_data_collector_upgrade_config_input": {
            "description": "Input to upgrade Data Collector.", 
            "required": [
                "version"
            ], 
            "type": "object", 
            "properties": {
                "version": {
                    "type": "string", 
                    "description": "The version of the data collector that we will be upgrading to\n"
                }
            }, 
            "title": "Security Planning Data Collector Upgrade Config."
        }, 
        "vpn_gateway_intent_input": {
            "description": "An intentful representation of a vpn_gateway", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/vpn_gateway"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vpn_gateway_metadata"
                }
            }, 
            "title": "vpn_gateway Intent Entity"
        }, 
        "network_configuration": {
            "description": "Network configuration of the VM.", 
            "type": "object", 
            "properties": {
                "dns_ip_addresses_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of DNS IP addresses."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the network interface."
                }, 
                "mac_address": {
                    "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$", 
                    "type": "string", 
                    "description": "MAC Address of the network interface.", 
                    "x-example": "50:6b:8d:ee:de:2b"
                }, 
                "dhcp_server_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IP address of the DHCP server."
                }, 
                "default_gateway_address_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Default gateway IP addresses."
                }, 
                "ip_info_list": {
                    "items": {
                        "$ref": "#/definitions/ip_address"
                    }, 
                    "type": "array", 
                    "description": "List of IP information of the network interface."
                }
            }, 
            "title": "Network configuration of the VM."
        }, 
        "query_entities_response": {
            "description": "List of entities with their protection status.\n", 
            "type": "object", 
            "properties": {
                "total_results": {
                    "type": "integer", 
                    "description": "Total number of entities.", 
                    "format": "int32"
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset.", 
                    "format": "int32"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list.", 
                    "format": "int32"
                }, 
                "entity_list": {
                    "items": {
                        "type": "object", 
                        "properties": {
                            "error_reason_list": {
                                "items": {
                                    "type": "object", 
                                    "properties": {
                                        "error_code": {
                                            "x-ntnx-enum": [
                                                "NOT_SUPPORTED", 
                                                "INCOMPATIBLE", 
                                                "CONFLICT", 
                                                "NOT_FOUND", 
                                                "INTERNAL_ERROR"
                                            ], 
                                            "type": "string", 
                                            "description": "Error code that represents a group of errors.\n"
                                        }, 
                                        "error_string": {
                                            "type": "string", 
                                            "description": "Reason of error."
                                        }
                                    }
                                }, 
                                "type": "array", 
                                "description": "List of errors because of which protection of entity is not\npossible.\n"
                            }, 
                            "entity_reference": {
                                "description": "List of references of entities that will be synced.", 
                                "$ref": "#/definitions/reference"
                            }, 
                            "protection_status": {
                                "x-ntnx-enum": [
                                    "CAN_BE_PROTECTED", 
                                    "CANNOT_BE_PROTECTED", 
                                    "PROTECTED", 
                                    "PARTIALLY_PROTECTED", 
                                    "CAN_BE_PARTIALLY_PROTECTED"
                                ], 
                                "type": "string", 
                                "description": "Protection status of the entity. CAN_BE_PROTECTED would mean\nthat there are no errors for this entity and it can be\nprotected. PROTECTED status would mean that the entity is\nprotected by the same protection policy passed in the arg.\nPARTIALLY_PROTECTED would mean that the entity is protected by\nthe same protection policy passed in the arg but also has some\nerrors or warnings associated with it. CANNOT_BE_PROTECTED\nwould mean that the entities aren't protected by the protection\npolicy passed in the arg and have errors associated with it.\nCAN_BE_PARTIALLY_PROTECTED would mean that entity can be\nprotected but has some warnings associated with it.\n"
                            }, 
                            "protection_rule_reference": {
                                "description": "Protection rule reference through which the entity is\nprotected. Blank if the entity is not protected.\n", 
                                "$ref": "#/definitions/protection_rule_reference"
                            }, 
                            "warning_reason_list": {
                                "items": {
                                    "type": "object", 
                                    "properties": {
                                        "warning_string": {
                                            "type": "string", 
                                            "description": "Reason of warning."
                                        }, 
                                        "warning_code": {
                                            "x-ntnx-enum": [
                                                "APP_CONSISTENT_RP_NOT_SUPPORTED"
                                            ], 
                                            "type": "string", 
                                            "description": "Warning code that represents a group of warnings.\n"
                                        }
                                    }
                                }, 
                                "type": "array", 
                                "description": "List of warnings associated with the entity that needs to be\nprotected.\n"
                            }
                        }
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Response of query_entities API"
        }, 
        "recovery_plan_job_intent_resource": {
            "description": "Response object for intentful operations on a recovery_plan_job", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/recovery_plan_job_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/recovery_plan_job"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/recovery_plan_job_metadata"
                }
            }, 
            "title": "recovery_plan_job Intent Response"
        }, 
        "aws_region_intent_resource": {
            "description": "aws_region entity", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/aws_region_def_status"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_region_metadata"
                }
            }, 
            "title": "aws_region"
        }, 
        "multicluster_config_metadata": {
            "description": "The multicluster_config kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when multicluster_config was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "multicluster_config", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "multicluster_config"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "multicluster_config uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the multicluster_config is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when multicluster_config was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the multicluster_config. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the multicluster_config. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "multicluster_config name", 
                    "maxLength": 80
                }
            }, 
            "title": "multicluster_config metadata"
        }, 
        "vpc_resources": {
            "description": "VPC resources", 
            "type": "object", 
            "properties": {
                "common_domain_name_server_ip_list": {
                    "items": {
                        "$ref": "#/definitions/address"
                    }, 
                    "type": "array", 
                    "description": "List of domain name server IPs."
                }, 
                "vpc_type": {
                    "x-ntnx-enum": [
                        "REGULAR", 
                        "TRANSIT"
                    ], 
                    "type": "string", 
                    "description": "Transit or regular VPC."
                }, 
                "external_subnet_list": {
                    "items": {
                        "$ref": "#/definitions/external_subnet"
                    }, 
                    "type": "array", 
                    "description": "List of external subnets attached to this VPC."
                }, 
                "externally_routable_prefix_list": {
                    "items": {
                        "$ref": "#/definitions/ip_subnet"
                    }, 
                    "type": "array", 
                    "description": "CIDR blocks from the VPC which can talk externally without performing NAT. These blocks should be between /16 netmask and /28 netmask and cannot overlap across VPCs. They are effective when the VPC connects to a NAT-less external subnet.\n"
                }, 
                "availability_zone_reference_list": {
                    "items": {
                        "$ref": "#/definitions/availability_zone_reference"
                    }, 
                    "type": "array", 
                    "description": "List of availability zones in Xi from which resources are derived (Only supported on Xi)\n"
                }
            }, 
            "title": "VPC resources"
        }, 
        "ngt_response": {
            "description": "NGT response.", 
            "required": [
                "uuid", 
                "vm_uuid"
            ], 
            "type": "object", 
            "properties": {
                "network_info_list": {
                    "items": {
                        "$ref": "#/definitions/network_configuration"
                    }, 
                    "type": "array", 
                    "description": "List of network configuration of the VMs."
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID", 
                    "format": "UUID"
                }, 
                "vm_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "VM UUID", 
                    "format": "UUID"
                }, 
                "scripts_executable": {
                    "items": {
                        "type": "boolean"
                    }, 
                    "type": "array", 
                    "description": "Executable scripts in the VM."
                }, 
                "script_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Scripts present in the VM."
                }
            }, 
            "title": "NGT response"
        }, 
        "action_type_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_type", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "action_type"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "vm_host_affinity_legacy_policy_list_metadata": {
            "description": "API call for  that returns a list will have this metadata block as input.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_host_affinity_legacy_policy", 
                    "x-ntnx-enum": [
                        "vm_host_affinity_legacy_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Number of records to retrieve relative to the offset.", 
                    "format": "int64"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list.", 
                    "format": "int64"
                }
            }, 
            "title": "Metadata for  list"
        }, 
        "support_case_reference": {
            "description": "The reference to a support_case", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "support_case", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "support_case"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a support_case"
        }, 
        "aws_key_pair_resources_def_status": {
            "description": "aws_key_pair resources", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the AWS key pair."
                }
            }, 
            "title": "aws_key_pair resources"
        }, 
        "entity_sync_rule_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "entity_sync_rule", 
                    "x-ntnx-enum": [
                        "entity_sync_rule"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for entity_sync_rule list"
        }, 
        "tcp_status": {
            "description": "TCP parameters to be matched in routing policy.", 
            "type": "object", 
            "properties": {
                "destination_port_range_list": {
                    "items": {
                        "$ref": "#/definitions/port_range_status"
                    }, 
                    "type": "array", 
                    "description": "List of ranges of TCP destination ports."
                }, 
                "source_port_range": {
                    "description": "Range of TCP source ports. This field is deprecated, use source_port_range_list instead.\n", 
                    "$ref": "#/definitions/port_range_status"
                }, 
                "source_port_range_list": {
                    "items": {
                        "$ref": "#/definitions/port_range_status"
                    }, 
                    "type": "array", 
                    "description": "List of ranges of TCP source ports."
                }, 
                "destination_port_range": {
                    "description": "Range of TCP destination ports. This field is deprecated, use destination_port_range_list instead.\n", 
                    "$ref": "#/definitions/port_range_status"
                }
            }, 
            "title": "TCP parameters"
        }, 
        "mh_vm_intent_response": {
            "description": "Response object for intentful operations on a mh_vm", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/mh_vm_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/mh_vm"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/mh_vm_metadata"
                }
            }, 
            "title": "mh_vm Intent Response"
        }, 
        "recovery_plan_intent_response": {
            "description": "Response object for intentful operations on a recovery_plan", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/recovery_plan_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/recovery_plan"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/recovery_plan_metadata"
                }
            }, 
            "title": "recovery_plan Intent Response"
        }, 
        "aws_region_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_region", 
                    "x-ntnx-enum": [
                        "aws_region"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for aws_region list output"
        }, 
        "entity_sync_rule_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "entity_sync_rule", 
                    "x-ntnx-enum": [
                        "entity_sync_rule"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for entity_sync_rule list output"
        }, 
        "datacenter_intent_resource": {
            "description": "Response object for intentful operations on a datacenter", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/datacenter_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/datacenter"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/datacenter_metadata"
                }
            }, 
            "title": "datacenter Intent Response"
        }, 
        "app_variable_response_download": {
            "description": "Variable definition for application.", 
            "required": [
                "name", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "val_type": {
                    "x-ntnx-enum": [
                        "STRING", 
                        "INT", 
                        "LIST", 
                        "DICT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for variable"
                }, 
                "value": {
                    "type": "string", 
                    "description": ""
                }, 
                "label": {
                    "type": "string", 
                    "description": ""
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "SECRET", 
                        "EXTERNAL_STORE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Variable definition for application."
        }, 
        "remote_syslog_module_intent_response": {
            "description": "Response object for intentful operations on a remote_syslog_module", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/remote_syslog_module_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/remote_syslog_module"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_syslog_module_metadata"
                }
            }, 
            "title": "remote_syslog_module Intent Response"
        }, 
        "vm_apc_config": {
            "description": "Information about Advanced Processor Compatibility of VM to indicate whether to retain the CPU model for given VM or not across migrations.\n", 
            "type": "object", 
            "properties": {
                "cpu_model_reference": {
                    "description": "Reference to basic information(uuid/name) of CPU model associated with VM.\n", 
                    "$ref": "#/definitions/reference"
                }, 
                "enabled": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If enabled, the selected CPU model will be retained across live and cold migrations of the VM. If enabled and no CPU model is explicitly set, a baseline CPU model is picked. See the APC documentation for more information.\n"
                }
            }, 
            "title": "VM APC Config"
        }, 
        "cell_intent_resource": {
            "description": "Response object for intentful operations on a cell", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/cell_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/cell"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cell_metadata"
                }
            }, 
            "title": "cell Intent Response"
        }, 
        "action_template_intent_input": {
            "description": "An intentful representation of a action_template", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/action_template"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_template_metadata"
                }
            }, 
            "title": "action_template Intent Entity"
        }, 
        "multicluster_config_intent_response": {
            "description": "An intentful representation of a multicluster config response.", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/multicluster_config_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/multicluster_config_spec"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/multicluster_config_metadata"
                }
            }, 
            "title": "Multicluster config intent response"
        }, 
        "ngt_policy_intent_input": {
            "description": "An intentful representation of a ngt_policy", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/ngt_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ngt_policy_metadata"
                }
            }, 
            "title": "ngt_policy Intent Entity"
        }, 
        "app_substrate_readiness_probe": {
            "description": "Readiness probe for substrate", 
            "type": "object", 
            "properties": {
                "connection_type": {
                    "x-ntnx-enum": [
                        "SSH", 
                        "POWERSHELL"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "connection_port": {
                    "default": 22, 
                    "type": "integer", 
                    "description": ""
                }, 
                "timeout_secs": {
                    "type": "string", 
                    "description": ""
                }, 
                "address": {
                    "type": "string", 
                    "description": ""
                }, 
                "delay_secs": {
                    "type": "string", 
                    "description": "Delay after substrate provision."
                }, 
                "disable_readiness_probe": {
                    "type": "boolean", 
                    "description": ""
                }, 
                "login_credential_local_reference": {
                    "$ref": "#/definitions/app_credential_reference"
                }
            }, 
            "title": "Readiness probe for substrate"
        }, 
        "cell_def_status": {
            "description": "Cell entity status definition", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the cell", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/cell_resources"
                }
            }, 
            "title": "Cell entity status"
        }, 
        "virtual_network_metadata": {
            "description": "The virtual_network kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when virtual_network was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "virtual_network", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "virtual_network"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "virtual_network uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the virtual_network is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when virtual_network was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the virtual_network. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the virtual_network. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "virtual_network name", 
                    "maxLength": 80
                }
            }, 
            "title": "virtual_network metadata"
        }, 
        "report_config_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "report_config", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "report_config"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "ova_disk_list_response": {
            "description": "Response object for list operation of OVA disks", 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/ova_disk_info"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "OVA disk list response"
        }, 
        "report_config_def_status": {
            "description": "Report Config creation/modification spec.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The state of the report config entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the report config."
                }, 
                "resources": {
                    "description": "Description of report config.", 
                    "type": "object", 
                    "properties": {
                        "retention_policy": {
                            "$ref": "#/definitions/retention_policy"
                        }, 
                        "description": {
                            "type": "string", 
                            "description": "Description of the common report config."
                        }, 
                        "end_time_offset_secs": {
                            "type": "integer", 
                            "description": "Offset for end time for data collection during report generation.", 
                            "format": "int64"
                        }, 
                        "schedule": {
                            "$ref": "#/definitions/schedule"
                        }, 
                        "template_spec_version": {
                            "type": "string", 
                            "description": "Version of the template spec."
                        }, 
                        "generation_format": {
                            "items": {
                                "x-ntnx-enum": [
                                    "PDF", 
                                    "CSV"
                                ], 
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "List specifying the formats in which report is to be created."
                        }, 
                        "start_time_offset_secs": {
                            "type": "integer", 
                            "description": "Offset for start time for data collection during report generation.", 
                            "format": "int64"
                        }, 
                        "template": {
                            "$ref": "#/definitions/report_template"
                        }, 
                        "timezone": {
                            "type": "string", 
                            "description": "Timezone in which report is to be generated. This is the list\nsupported by pytz.all_timezones. For more info, check\nhttps://pytz.sourceforge.net\n"
                        }, 
                        "notification_policy": {
                            "$ref": "#/definitions/notification_policy"
                        }, 
                        "out_of_box_report": {
                            "type": "boolean", 
                            "description": "Flag specifying if Report Config is a pre defined report."
                        }
                    }, 
                    "title": "Report Config Resources."
                }
            }, 
            "title": "Report Config creation/modification spec."
        }, 
        "support_case_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "support_case", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "support_case"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "file_item_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "file_item", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "file_item"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "docker_registry_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "docker_registry", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "docker_registry"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "host_intent_resource": {
            "description": "Response object for intentful operations on a host", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/host_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/host"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/host_metadata"
                }
            }, 
            "title": "host Intent Response"
        }, 
        "image_placement_policy_intent_resource": {
            "description": "Response object for intentful operations on a image_placement_policy", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/image_placement_policy_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/image_placement_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/image_placement_policy_metadata"
                }
            }, 
            "title": "image_placement_policy Intent Response"
        }, 
        "cloud_trust_resources": {
            "description": "Cloud trusts resources definition.", 
            "type": "object", 
            "properties": {
                "url": {
                    "type": "string", 
                    "description": "URL of the Cloud (Nutanix hosted cloud/ Onprem Cloud) to pair to.", 
                    "maxLength": 2083
                }, 
                "username": {
                    "type": "string", 
                    "description": "Username to be used for basic authentication."
                }, 
                "password": {
                    "type": "string", 
                    "description": "Password to be used for basic authentication."
                }, 
                "cloud_type": {
                    "description": "Type of cloud to pair to.", 
                    "$ref": "#/definitions/cloud_type"
                }
            }, 
            "title": "Cloud Trusts Resources."
        }, 
        "graphql_query": {
            "description": "Graphql query.", 
            "required": [
                "query"
            ], 
            "type": "object", 
            "properties": {
                "query": {
                    "type": "string"
                }
            }, 
            "title": "Graphql query."
        }, 
        "portal_software": {
            "description": "Software information from Nutanix Portal", 
            "type": "object", 
            "properties": {
                "release_note_url": {
                    "type": "string", 
                    "description": "URL to point to the support portal release note of this software.\nCurrently only set and used for NOS releases\n"
                }, 
                "upgrade_notification": {
                    "$ref": "#/definitions/upgrade_notification"
                }, 
                "release_date": {
                    "type": "string", 
                    "description": "Release date of this software in RFC3339 format.\n", 
                    "format": "date-time"
                }, 
                "md5sum": {
                    "type": "string", 
                    "description": "MD5 checksum of the software file"
                }, 
                "compatible_version_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of software versions that this version can be upgraded from\n"
                }, 
                "version": {
                    "type": "string", 
                    "description": "Software version string"
                }, 
                "compatible_pe_version_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of Prism Element compatible versions"
                }, 
                "software_type": {
                    "$ref": "#/definitions/software_type"
                }, 
                "size_bytes": {
                    "type": "integer", 
                    "description": "Total size of the software file in bytes", 
                    "format": "int64"
                }
            }, 
            "title": "Software information"
        }, 
        "app_service_response_download": {
            "description": "Service definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "action_list", 
                "variable_list"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_service_reference_upload"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "container_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s continaer spec"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for service"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Service for Application"
        }, 
        "prism_central_nodes_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "prism_central_nodes", 
                    "x-ntnx-enum": [
                        "prism_central_nodes"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for prism_central_nodes list"
        }, 
        "cell_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cell", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cell"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "audit_resources": {
            "description": "Audit entity definition.", 
            "required": [
                "audit_message"
            ], 
            "type": "object", 
            "properties": {
                "audit_message": {
                    "type": "string", 
                    "description": "Audit message.", 
                    "maxLength": 1024
                }, 
                "cluster_reference": {
                    "description": "Cluster where the operation occurred.", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "operation_parameter_list": {
                    "items": {
                        "$ref": "#/definitions/audit_parameters"
                    }, 
                    "type": "array", 
                    "description": "Parameters associated with the operation captured in the audit."
                }, 
                "source_entity_reference": {
                    "description": "The primary entity associated with the audit.", 
                    "$ref": "#/definitions/entity_info"
                }, 
                "operation_start_time": {
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when operation was started.\n", 
                    "format": "date-time"
                }, 
                "initiated_user": {
                    "description": "Captures the user who initiated the operation.", 
                    "$ref": "#/definitions/audit_user"
                }, 
                "operation_complete_time": {
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when operation was completed.\n", 
                    "format": "date-time"
                }, 
                "operation_type": {
                    "description": "The generic operation type that the audit captures. eg - CREATE, UPDATE, etc.\n", 
                    "$ref": "#/definitions/audit_operation_type"
                }, 
                "affected_entity_reference_list": {
                    "items": {
                        "$ref": "#/definitions/entity_info"
                    }, 
                    "type": "array", 
                    "description": "A list of entities causing and/or related to the audit.\n"
                }
            }, 
            "title": "Audit entity."
        }, 
        "user_group_metadata": {
            "description": "The user_group kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when user_group was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "user_group", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "user_group"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "user_group uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the user_group is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when user_group was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the user_group. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the user_group. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "user_group name", 
                    "maxLength": 80
                }
            }, 
            "title": "user_group metadata"
        }, 
        "user_group_intent_input": {
            "description": "An intentful representation of a user_group", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/user_group"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/user_group_metadata"
                }
            }, 
            "title": "user_group Intent Entity"
        }, 
        "cloud_tenant_intent_response": {
            "description": "Response object for intentful operations on a cloud_tenant", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/cloud_tenant_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/cloud_tenant"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cloud_tenant_metadata"
                }
            }, 
            "title": "cloud_tenant Intent Response"
        }, 
        "app_runlog_list": {
            "description": "Runlog entity list of the app", 
            "required": [
                "metadata", 
                "api_version"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/app_runlog_response"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/app_runlog_list_metadata"
                }
            }, 
            "title": "runlog entity list"
        }, 
        "vpn_component_status": {
            "description": "Object to capture status of various aspects of the VPN connection.\n", 
            "type": "object", 
            "properties": {
                "state": {
                    "x-ntnx-enum": [
                        "UP", 
                        "DOWN"
                    ], 
                    "type": "string"
                }, 
                "detail": {
                    "type": "string", 
                    "description": "Detailed informational/error string in human-readable form."
                }
            }, 
            "title": "Object to capture status of various aspects of the VPN connection."
        }, 
        "directory_service_intent_resource": {
            "description": "Response object for intentful operations on a directory_service", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/directory_service_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/directory_service"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/directory_service_metadata"
                }
            }, 
            "title": "directory_service Intent Response"
        }, 
        "ca_cert": {
            "description": "CA certificate info.", 
            "required": [
                "ca_name", 
                "certificate"
            ], 
            "type": "object", 
            "properties": {
                "ca_name": {
                    "type": "string", 
                    "description": "Name of the certificate authority."
                }, 
                "certificate": {
                    "type": "string", 
                    "description": "Certificate content.", 
                    "format": "byte"
                }
            }, 
            "title": "CA certificate info"
        }, 
        "direct_connect_resources_def_status": {
            "description": "Direct connect create/modify status", 
            "type": "object", 
            "properties": {
                "vpc_reference": {
                    "description": "VPC reference.", 
                    "$ref": "#/definitions/vpc_reference"
                }, 
                "service_provider": {
                    "type": "string", 
                    "description": "The name of the service provider to be utilized for this direct connect\n"
                }, 
                "virtual_network_reference": {
                    "description": "Virtual Network reference. This reference is deprecated, use vpc_reference instead.\n", 
                    "$ref": "#/definitions/virtual_network_reference"
                }, 
                "bandwidth_mbps": {
                    "type": "integer", 
                    "description": "Direct connect total bandwidth in Mbps.", 
                    "format": "int32"
                }, 
                "provisioning_status": {
                    "x-ntnx-enum": [
                        "PENDING_CREATE", 
                        "PENDING_UPDATE", 
                        "PENDING_DELETE", 
                        "PROVISIONED"
                    ], 
                    "type": "string", 
                    "description": "The provisioning status of the direct connect."
                }
            }, 
            "title": "Direct connect create/modify status"
        }, 
        "ospf_config_status": {
            "description": "OSPF configuration status for route peering with internal routers.\n", 
            "type": "object", 
            "properties": {
                "authentication_type": {
                    "x-ntnx-enum": [
                        "MD5", 
                        "PLAIN_TEXT"
                    ], 
                    "type": "string", 
                    "description": "OSPF authentication type."
                }, 
                "area_id": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "OSPF area id of this gateway."
                }, 
                "password": {
                    "type": "string", 
                    "description": "Password for authentication. Note that the clear-text password value\nspecfied in the input spec is never revealed in the status. Use this\nfield only as means to verify if the password is currently set or not.\n", 
                    "format": "password"
                }
            }, 
            "title": "OSPF configuration status for route peering with internal routers."
        }, 
        "permission_reference": {
            "description": "The reference to a permission", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "permission", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "permission"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a permission"
        }, 
        "resource_domain_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "resource_domain", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "resource_domain"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "marketplace_item_reference": {
            "description": "The reference to a marketplace_item", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "marketplace_item", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "marketplace_item"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a marketplace_item"
        }, 
        "recovery_plan_volume_group_recovery_info": {
            "properties": {
                "volume_group_config_info_list": {
                    "items": {
                        "required": [
                            "volume_group_reference"
                        ], 
                        "type": "object", 
                        "properties": {
                            "authentication_type": {
                                "x-ntnx-enum": [
                                    "CHAP"
                                ], 
                                "type": "string", 
                                "description": "Type of authentication protocol to be used."
                            }, 
                            "target_secret": {
                                "minLength": 12, 
                                "maxLength": 16, 
                                "type": "string", 
                                "description": "Authentication secret provided to iSCSI initiator for CHAP based authentication of the Volume Group.\n", 
                                "format": "password"
                            }, 
                            "volume_group_reference": {
                                "description": "Reference of the Volume Group.", 
                                "$ref": "#/definitions/volume_group_reference"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "List of configuration information for each Volume Group specified explicitly or in the category filter. Each entry in this list will contain reference to the Volume Group, authentication protocol and the target secret to be used for authenticating the Volume Group.\n"
                }, 
                "category_filter": {
                    "description": "Categories for filtering Volume Groups.", 
                    "$ref": "#/definitions/category_filter"
                }, 
                "volume_group_reference": {
                    "description": "Reference of the Volume Groups to be recovered.", 
                    "$ref": "#/definitions/volume_group_reference"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "category_filter"
                    ]
                }, 
                {
                    "required": [
                        "volume_group_reference"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Information about Volume Groups to be recovered.", 
            "title": "Volume Groups recovery information."
        }, 
        "app_task_share": {
            "description": "App task share kind", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/app_task_share_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "App task share kind"
        }, 
        "ova_create_input": {
            "description": "Input for OVA item create.", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "url": {
                    "type": "string", 
                    "description": "URL that can be used to download OVA."
                }, 
                "checksum": {
                    "description": "Checksum of the OVA.", 
                    "$ref": "#/definitions/checksum"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the OVA.", 
                    "maxLength": 64
                }, 
                "upload_cluster_ref_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_reference"
                    }, 
                    "type": "array", 
                    "description": "List of clusters where OVA is requested to be placed at time of creation. Multiple clusters are supported only when OVA is uploaded using url.\n"
                }, 
                "upload_length": {
                    "type": "integer", 
                    "description": "Length of the OVA file to be uploaded in bytes. It is\nmandatory to provide file size if local file upload is used.\n", 
                    "format": "int64"
                }
            }, 
            "title": "OVA create input"
        }, 
        "report_instance_metadata": {
            "description": "The report_instance kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when report_instance was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "report_instance", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "report_instance"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "report_instance uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the report_instance is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when report_instance was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the report_instance. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the report_instance. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "report_instance name", 
                    "maxLength": 80
                }
            }, 
            "title": "report_instance metadata"
        }, 
        "directory_service_def_status": {
            "description": "Details of the directory service.", 
            "required": [
                "resources", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the directory service configuration."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the directory service."
                }, 
                "resources": {
                    "description": "The configuration details of the directory service.", 
                    "required": [
                        "url", 
                        "domain_name", 
                        "directory_type", 
                        "service_account"
                    ], 
                    "type": "object", 
                    "properties": {
                        "open_ldap_configuration": {
                            "description": "Configuration for OpenLDAP.", 
                            "$ref": "#/definitions/open_ldap_configuration_def_status"
                        }, 
                        "url": {
                            "type": "string", 
                            "description": "URL of the directory."
                        }, 
                        "directory_type": {
                            "x-ntnx-enum": [
                                "ACTIVE_DIRECTORY", 
                                "OPEN_LDAP"
                            ], 
                            "type": "string", 
                            "description": "Type of the directory service."
                        }, 
                        "admin_user_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_reference"
                            }, 
                            "type": "array", 
                            "description": "The list of admin users available in the directory service.\n"
                        }, 
                        "secondary_urls": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "Secondary URLs of the directory"
                        }, 
                        "domain_name": {
                            "type": "string", 
                            "description": "The domain name of the directory service."
                        }, 
                        "service_account": {
                            "description": "Validates and connects to the directory service with the given\ncredentials.\n", 
                            "$ref": "#/definitions/service_account"
                        }, 
                        "admin_group_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_group_reference"
                            }, 
                            "type": "array", 
                            "description": "List of admin user groups available in the directory service.\n"
                        }
                    }, 
                    "title": "Directory service resources"
                }
            }, 
            "title": "Directory service"
        }, 
        "vm_gpu_output_status": {
            "description": "Graphics resource status information for the Virtual Machine.", 
            "type": "object", 
            "properties": {
                "frame_buffer_size_mib": {
                    "type": "integer", 
                    "description": "GPU frame buffer size in MiB.", 
                    "format": "int64"
                }, 
                "vendor": {
                    "x-ntnx-enum": [
                        "NVIDIA", 
                        "INTEL", 
                        "AMD"
                    ], 
                    "type": "string", 
                    "description": "The vendor of the GPU."
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the GPU.", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the GPU resource."
                }, 
                "pci_address": {
                    "type": "string", 
                    "description": "GPU {segment:bus:device:function} (sbdf) address if assigned.\n"
                }, 
                "fraction": {
                    "type": "integer", 
                    "description": "Fraction of the physical GPU assigned.", 
                    "format": "int32"
                }, 
                "mode": {
                    "x-ntnx-enum": [
                        "PASSTHROUGH_GRAPHICS", 
                        "PASSTHROUGH_COMPUTE", 
                        "VIRTUAL"
                    ], 
                    "type": "string", 
                    "description": "The mode of this GPU"
                }, 
                "num_virtual_display_heads": {
                    "type": "integer", 
                    "description": "Number of supported virtual display heads.", 
                    "format": "int32"
                }, 
                "guest_driver_version": {
                    "type": "string", 
                    "description": "Last determined guest driver version."
                }, 
                "max_instances_per_vm": {
                    "type": "integer", 
                    "description": "Maximum number of vGPUs of a GPU type assignable to a VM.", 
                    "format": "int64"
                }, 
                "device_id": {
                    "type": "integer", 
                    "description": "The device ID of the GPU.", 
                    "format": "int32"
                }
            }, 
            "title": "Virtual Machine GPU status"
        }, 
        "vpc_route_table_metadata": {
            "description": "The vpc_route_table kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vpc_route_table was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "vpc_route_table", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vpc_route_table"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vpc_route_table uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the vpc_route_table is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vpc_route_table was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vpc_route_table. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vpc_route_table. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "vpc_route_table name", 
                    "maxLength": 80
                }
            }, 
            "title": "vpc_route_table metadata"
        }, 
        "direct_connect_intent_input": {
            "description": "An intentful representation of a direct_connect", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/direct_connect"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/direct_connect_metadata"
                }
            }, 
            "title": "direct_connect Intent Entity"
        }, 
        "source_options": {
            "description": "Options while accessing image source.\n", 
            "type": "object", 
            "properties": {
                "allow_insecure_connection": {
                    "type": "boolean", 
                    "description": "allow_insecure_connection is an option for the user to ignore the server certificate verification while accessing source_uri (image location). If it has value = true, it ignores server certificate verification. If it has value = false, it does regular server certificate verification.\n"
                }, 
                "basic_auth": {
                    "description": "Basic username-password auth for image source.\n", 
                    "$ref": "#/definitions/credentials"
                }
            }, 
            "title": "Source options"
        }, 
        "file_item_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "file_item", 
                    "x-ntnx-enum": [
                        "file_item"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for file_item list output"
        }, 
        "mh_vm_list_intent_response": {
            "description": "Response object for intentful operation of mh_vms", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/mh_vm_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/mh_vm_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "app_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "protection_rule_list_intent_response": {
            "description": "Response object for intentful operation of protection_rules", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/protection_rule_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/protection_rule_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "address_group_reference": {
            "description": "The reference to a address_group", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "address_group", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "address_group"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a address_group"
        }, 
        "prism_central_metadata": {
            "description": "The prism_central kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when prism_central was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "prism_central", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "prism_central"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "prism_central uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the prism_central is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when prism_central was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the prism_central. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the prism_central. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "prism_central name", 
                    "maxLength": 80
                }
            }, 
            "title": "prism_central metadata"
        }, 
        "template_row": {
            "description": "Template Row Details.", 
            "type": "object", 
            "properties": {
                "row_element_list": {
                    "items": {
                        "$ref": "#/definitions/row_element"
                    }, 
                    "type": "array", 
                    "description": "List of row elements."
                }
            }, 
            "title": "Template Row Details."
        }, 
        "vm_recovery_point_intent_response": {
            "description": "Response object for intentful operations on a vm_recovery_point", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vm_recovery_point_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vm_recovery_point"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_recovery_point_metadata"
                }
            }, 
            "title": "vm_recovery_point Intent Response"
        }, 
        "vm_metadata_override": {
            "description": "Allowed vm metadata overrides.", 
            "type": "object", 
            "properties": {
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm. This allows setting up multiple\nvalues from a single key.\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vm uuid.", 
                    "format": "UUID"
                }
            }, 
            "title": "Allowed vm metadata overrides."
        }, 
        "internal_open_ldap_config": {
            "description": "Internal OpenLdap config", 
            "type": "object", 
            "properties": {
                "group_object_class": {
                    "type": "string", 
                    "description": "The object class in the OpenLDAP system that corresponds to groups."
                }, 
                "group_search_base": {
                    "type": "string", 
                    "description": "The base DN for group search."
                }, 
                "group_member_attribute": {
                    "type": "string", 
                    "description": "The attribute in a group that associates users to the group."
                }, 
                "user_object_class": {
                    "type": "string", 
                    "description": "The object class in the OpenLDAP system that corresponds to users."
                }, 
                "username_attribute": {
                    "type": "string", 
                    "description": "Unique identifier for each user which can be used in authentication."
                }, 
                "user_search_base": {
                    "type": "string", 
                    "description": "The base DN for user search."
                }, 
                "group_member_attribute_value": {
                    "type": "string", 
                    "description": "The user attribute value that will be used in group entity to associate user to the group.\n"
                }
            }, 
            "title": "Internal OpenLdap config"
        }, 
        "protection_rule_intent_resource": {
            "description": "Response object for intentful operations on a protection_rule", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/protection_rule_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/protection_rule"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/protection_rule_metadata"
                }
            }, 
            "title": "protection_rule Intent Response"
        }, 
        "vendor_config_list_response": {
            "description": "List of vendor devices for which configuration steps can be downloaded.\n", 
            "type": "object", 
            "properties": {
                "vendor_config_list": {
                    "items": {
                        "$ref": "#/definitions/vendor_config"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "List of vendor devices for which configuration can be downloaded."
        }, 
        "user_reference": {
            "description": "The reference to a user", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "user", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "user"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a user"
        }, 
        "marketplace_item_intent_resource": {
            "description": "Response object for intentful operations on a marketplace_item", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/marketplace_item_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/marketplace_item"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/marketplace_item_metadata"
                }
            }, 
            "title": "marketplace_item Intent Response"
        }, 
        "recovery_plan_info": {
            "description": "Information about the state of the Recovery Plan.", 
            "type": "object", 
            "properties": {
                "recoverability": {
                    "type": "object", 
                    "description": "Recoverability of the entity.", 
                    "properties": {
                        "status": {
                            "x-ntnx-enum": [
                                "RECOVERABLE", 
                                "PARTIAL_RECOVERABLE", 
                                "UNRECOVERABLE"
                            ], 
                            "type": "string", 
                            "description": "Recoverability status of the entity."
                        }, 
                        "reason": {
                            "type": "string", 
                            "description": "Reason for the status of the entity.", 
                            "maxLength": 256
                        }
                    }
                }
            }, 
            "title": "Recovery Plan information."
        }, 
        "blueprint_marketplace_launch_spec": {
            "description": "Spec for Blueprint launch.", 
            "required": [
                "resources", 
                "app_blueprint_name"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "Description for the marketplace item"
                }, 
                "environment_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Environment uuid.", 
                    "format": "UUID"
                }, 
                "app_blueprint_name": {
                    "type": "string", 
                    "description": "Name of the app blueprint to be created."
                }, 
                "source_marketplace_name": {
                    "type": "string", 
                    "description": "Name of the source marketplace item of the app blueprint\n"
                }, 
                "source_marketplace_version": {
                    "type": "string", 
                    "description": "Indicates version of the source marketplace item of the app blueprint\n"
                }, 
                "resources": {
                    "description": "Blueprint spec of the marketplace blueprint.", 
                    "$ref": "#/definitions/blueprint_upload_resources"
                }
            }, 
            "title": "Spec for Blueprint launch."
        }, 
        "cmsp_expansion_config": {
            "description": "MSP configuration for CMSP on PC used in PC expansion from 1 to 3 nodes.", 
            "required": [
                "platform_ip_block_list"
            ], 
            "type": "object", 
            "properties": {
                "platform_ip_block_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[ ](?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "IP range blocks for CMSP."
                }
            }, 
            "title": "CMSP expansion configuration."
        }, 
        "route_nexthop_reference": {
            "properties": {
                "direct_connect_virtual_interface_reference": {
                    "$ref": "#/definitions/direct_connect_virtual_interface_reference"
                }, 
                "external_subnet_reference": {
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "local_subnet_reference": {
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "vpn_connection_reference": {
                    "$ref": "#/definitions/vpn_connection_reference"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "vpn_connection_reference"
                    ]
                }, 
                {
                    "required": [
                        "direct_connect_virtual_interface_reference"
                    ]
                }, 
                {
                    "required": [
                        "local_subnet_reference"
                    ]
                }, 
                {
                    "required": [
                        "external_subnet_reference"
                    ]
                }
            ], 
            "description": "Targeted link to use as the nexthop in a route.", 
            "title": "Route nexthop"
        }, 
        "docker_registry": {
            "description": "Docker registry spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the docker registry"
                }, 
                "resources": {
                    "$ref": "#/definitions/docker_registry_resources"
                }
            }, 
            "title": "Docker Registry spec"
        }, 
        "datacenter_reference": {
            "description": "The reference to a datacenter", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "datacenter", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "datacenter"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a datacenter"
        }, 
        "execution_schedule": {
            "description": "Execution schedule for requests.", 
            "required": [
                "start_time"
            ], 
            "type": "object", 
            "properties": {
                "start_time": {
                    "type": "string", 
                    "description": "Start time to execute a request.", 
                    "format": "date-time"
                }, 
                "time_zone": {
                    "type": "string", 
                    "description": "Name of specified time zone."
                }, 
                "timeout_secs": {
                    "type": "integer", 
                    "description": "Time out in seconds for a request execution.", 
                    "format": "int64"
                }
            }, 
            "title": "Execution schedule for requests"
        }, 
        "recovery_plan_job_step_status": {
            "description": "Status of a step in the Recovery Plan Job execution.", 
            "required": [
                "status", 
                "percentage_complete"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "x-ntnx-enum": [
                        "QUEUED", 
                        "RUNNING", 
                        "COMPLETED", 
                        "FAILED", 
                        "ABORTED", 
                        "COMPLETED_WITH_WARNING"
                    ], 
                    "type": "string", 
                    "description": "State of a step."
                }, 
                "percentage_complete": {
                    "type": "integer", 
                    "description": "Percentage completed for a step.", 
                    "format": "int32"
                }
            }, 
            "title": "Status of a step in the Recovery Plan Job execution."
        }, 
        "vm_host_affinity_legacy_policy_config": {
            "description": "Defines a legacy affinity policy between a VM and list of Hosts.\n", 
            "type": "object", 
            "properties": {
                "host_reference_list": {
                    "items": {
                        "$ref": "#/definitions/host_reference"
                    }, 
                    "type": "array", 
                    "description": "List of host references which are affined to VM."
                }, 
                "vm_reference": {
                    "description": "Reference to VM for which legacy affinity policy is defined.", 
                    "$ref": "#/definitions/vm_reference"
                }
            }, 
            "title": "VM Host Affinity Legacy Policy definition."
        }, 
        "blueprint_marketplace_launch_response": {
            "description": "Response containing the uuid of the newly created app blueprint object", 
            "required": [
                "api_version", 
                "metadata", 
                "status", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/blueprint_marketplace_launch_response_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/blueprint_marketplace_launch_spec"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "Response containing the uuid of the newly created app blueprint object"
        }, 
        "vtep_gateway_reference": {
            "description": "The reference to a vtep_gateway", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vtep_gateway", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vtep_gateway"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vtep_gateway"
        }, 
        "blueprint_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "blueprint", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "blueprint"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "cloud_trust_intent_input": {
            "description": "An intentful representation of a cloud_trust", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/cloud_trust"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cloud_trust_metadata"
                }
            }, 
            "title": "cloud_trust Intent Entity"
        }, 
        "marketplace_item_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "marketplace_item", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "marketplace_item"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "marketplace_icon": {
            "description": "Description of icon used by app", 
            "required": [
                "icon_reference", 
                "icon_type"
            ], 
            "type": "object", 
            "properties": {
                "icon_reference": {
                    "$ref": "#/definitions/file_item_reference"
                }, 
                "icon_type": {
                    "x-ntnx-enum": [
                        "ICON", 
                        "FEATURED_ICON", 
                        "SCREENSHOT"
                    ], 
                    "type": "string"
                }
            }, 
            "title": "Description of icon used by app"
        }, 
        "remote_syslog_module": {
            "description": "Remote Syslog module list creation/modification spec", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/remote_syslog_module_resources"
                }
            }, 
            "title": "Remote Syslog module list creation/modification spec"
        }, 
        "marketplace_item_list_intent_response": {
            "description": "Response object for intentful operation of marketplace_items", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/marketplace_item_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/marketplace_item_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "recovery_plan_job_def_status": {
            "description": "Recovery Plan Job status.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "validation_information": {
                    "type": "object", 
                    "description": "The errors and warnings related to the Recovery Plan validation. Validation of the Recovery Plan will be done for all the actions performed on it. If there is any validation error for action other than validation, then the Recovery Plan execution will not be done.\n", 
                    "properties": {
                        "errors_list": {
                            "items": {
                                "$ref": "#/definitions/recovery_plan_validation_message"
                            }, 
                            "type": "array", 
                            "description": "List of errors related to the Recovery Plan. These errors need to be resolved before any action can be executed on the Recovery Plan.\n"
                        }, 
                        "warnings_list": {
                            "items": {
                                "$ref": "#/definitions/recovery_plan_validation_message"
                            }, 
                            "type": "array", 
                            "description": "List of warnings related to the Recovery Plan. These warnings do not prevent actions on the Recovery Plan.\n"
                        }
                    }
                }, 
                "name": {
                    "type": "string", 
                    "description": "Recovery Plan Job name."
                }, 
                "cleanup_status": {
                    "description": "Status of cleanup performed on the Recovery Plan Job. This is applicable only for the Recovery Plan Jobs created for TEST action on the Recovery Plan.\n", 
                    "$ref": "#/definitions/recovery_plan_job_execution_phases_status"
                }, 
                "start_time": {
                    "type": "string", 
                    "description": "Time when the Recovery Plan Job was created.", 
                    "format": "date-time"
                }, 
                "execution_status": {
                    "description": "Execution status of the Recovery Plan Job.\n", 
                    "$ref": "#/definitions/recovery_plan_job_execution_phases_status"
                }, 
                "recovery_plan_specification": {
                    "required": [
                        "name", 
                        "resources"
                    ], 
                    "type": "object", 
                    "description": "Specification of the Recovery Plan on which the Recovery Plan Job is being executed.\n", 
                    "properties": {
                        "name": {
                            "type": "string", 
                            "description": "Recovery Plan name"
                        }, 
                        "resources": {
                            "$ref": "#/definitions/recovery_plan_resources"
                        }, 
                        "description": {
                            "type": "string", 
                            "description": "User provided description for the Recovery Plan."
                        }
                    }
                }, 
                "parent_recovery_plan_job_reference": {
                    "description": "Reference to the parent Recovery Plan Job on which this rerun was triggered. Consider Recovery Plan Job RPJ0 was rerun and as a result RPJ1 was created, then for RPJ1 parent_recovery_plan_job_reference will be the reference to RPJ0.\n", 
                    "$ref": "#/definitions/recovery_plan_job_reference"
                }, 
                "end_time": {
                    "type": "string", 
                    "description": "Time when the Recovery Plan Job execution ended.", 
                    "format": "date-time"
                }, 
                "root_recovery_plan_job_reference": {
                    "description": "Reference of the root Recovery Plan Job for which successive re-runs were triggered. If Recovery Plan Job RPJ0 was rerun and as a result RPJ1 was created and like that the following chain of reruns were created, RPJ0->RPJ1->RPJ2->RPJ3->... then for all Recovery Plan Jobs in this chain root_recovery_plan_job_reference is the reference to RPJ0.\n", 
                    "$ref": "#/definitions/recovery_plan_job_reference"
                }, 
                "witness_address": {
                    "type": "string", 
                    "description": "Address of the witness, which has triggered this Recovery Plan Job. This will be same as Availability Zone URL, on which witness is deployed.\n"
                }, 
                "resources": {
                    "description": "Recovery Plan Job resources.", 
                    "$ref": "#/definitions/recovery_plan_job_resources"
                }
            }, 
            "title": "Recovery Plan Job status."
        }, 
        "volume_group_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "volume_group", 
                    "x-ntnx-enum": [
                        "volume_group"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for volume_group list output"
        }, 
        "entity_sync_rule_metadata": {
            "description": "The entity_sync_rule kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when entity_sync_rule was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "entity_sync_rule", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "entity_sync_rule"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "entity_sync_rule uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the entity_sync_rule is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when entity_sync_rule was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the entity_sync_rule. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the entity_sync_rule. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "entity_sync_rule name", 
                    "maxLength": 80
                }
            }, 
            "title": "entity_sync_rule metadata"
        }, 
        "vm_recovery_points_clone_input": {
            "description": "Input object for the clone API for vm recovery point. User can provide the optional UUID of the vm_recovery_point that will be created as a result of this operation on target site.\n", 
            "required": [
                "availability_zone_reference"
            ], 
            "type": "object", 
            "properties": {
                "override_spec": {
                    "description": "Properties that will be overridden in new vm_recovery_point.\n", 
                    "$ref": "#/definitions/vm_recovery_points_override_spec"
                }, 
                "vm_recovery_point_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the new vm_recovery_point that will be created.\n", 
                    "format": "UUID"
                }, 
                "cluster_reference": {
                    "description": "Reference to the cluster where the new vm_recovery_point will\nbe replicated.\n", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "availability_zone_reference": {
                    "description": "Reference to the availability zone where the new\nvm_recovery_point will be replicated.\n", 
                    "$ref": "#/definitions/availability_zone_reference"
                }
            }, 
            "title": "API input for vm_recovery_points_clone"
        }, 
        "remote_connection_metadata": {
            "description": "The remote_connection kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when remote_connection was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "remote_connection", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_connection"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "remote_connection uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the remote_connection is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when remote_connection was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the remote_connection. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the remote_connection. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "remote_connection name", 
                    "maxLength": 80
                }
            }, 
            "title": "remote_connection metadata"
        }, 
        "resource_domain_spec": {
            "description": "Resource domain specification (limits)", 
            "properties": {
                "resources": {
                    "items": {
                        "$ref": "#/definitions/resource_utilization_spec"
                    }, 
                    "type": "array", 
                    "description": "The utilization limits for resource types"
                }
            }, 
            "title": "Resource Domain Spec"
        }, 
        "docker_registry_image_tag": {
            "description": "Docker Hub tagged image", 
            "required": [
                "name", 
                "size_mib", 
                "modified_date"
            ], 
            "type": "object", 
            "properties": {
                "modified_date": {
                    "type": "string", 
                    "description": "Last modified date in RFC 3339", 
                    "format": "date-time"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Image tag name", 
                    "maxLength": 64
                }, 
                "size_mib": {
                    "type": "integer", 
                    "description": "Size of the image in MiB", 
                    "format": "int64"
                }
            }, 
            "title": "Docker Hub tagged image"
        }, 
        "aws_volume_type_resources_def_status": {
            "description": "aws_volume_type resources", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "The volume type name."
                }
            }, 
            "title": "aws_volume_type resources"
        }, 
        "ngt_policy_intent_response": {
            "description": "Response object for intentful operations on a ngt_policy", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/ngt_policy_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/ngt_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ngt_policy_metadata"
                }
            }, 
            "title": "ngt_policy Intent Response"
        }, 
        "ngt_policy_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ngt_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ngt_policy"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "access_control_policy_detail": {
            "description": "Details of Access Control Policy.", 
            "type": "object", 
            "properties": {
                "role": {
                    "description": "The Role being assigned to the user.", 
                    "$ref": "#/definitions/role_acp"
                }, 
                "filter_list": {
                    "description": "The list of filters, which define the entities.\n", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "context_list"
                            ]
                        }
                    ], 
                    "properties": {
                        "context_list": {
                            "items": {
                                "$ref": "#/definitions/filter"
                            }, 
                            "type": "array", 
                            "description": "The list of context filters. These are OR filters. The scope-expression-list defines the context, and the filter works in conjunction with the entity-expression-list. Note - the absence of a scope expression in a filter implies global context.\n"
                        }
                    }
                }
            }, 
            "title": "Details of Access Control Policy."
        }, 
        "file_item_def_status": {
            "description": "An intentful representation of a file_item status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "file_item Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the file_item."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the file_item, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/file_item_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for file_item."
                }
            }, 
            "title": "file_item Intent Status with placement specified"
        }, 
        "role_def_status": {
            "description": "Role status definition.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Role name."
                }, 
                "is_system_defined": {
                    "readOnly": true, 
                    "type": "boolean", 
                    "description": "Flag identifying if the role is system defined or not."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the role entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "resources": {
                    "type": "object", 
                    "properties": {
                        "permission_reference_list": {
                            "items": {
                                "$ref": "#/definitions/permission_reference"
                            }, 
                            "type": "array", 
                            "description": "List of permission entities."
                        }
                    }, 
                    "title": "Role Resources."
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for the role."
                }
            }, 
            "title": "Role status definition."
        }, 
        "category_filter": {
            "description": "A category filter.", 
            "required": [
                "params"
            ], 
            "type": "object", 
            "properties": {
                "kind_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of kinds associated with this filter."
                }, 
                "type": {
                    "default": "CATEGORIES_MATCH_ANY", 
                    "x-ntnx-enum": [
                        "CATEGORIES_MATCH_ALL", 
                        "CATEGORIES_MATCH_ANY"
                    ], 
                    "type": "string", 
                    "description": "The type of the filter being used."
                }, 
                "params": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "A list of category key and list of values."
                }
            }, 
            "title": "A category filter"
        }, 
        "ssh_user": {
            "description": "SSH User Entity", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/ssh_user_request_details"
                }
            }, 
            "title": "SSH User Entity"
        }, 
        "report_config_reference": {
            "description": "The reference to a report_config", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "report_config", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "report_config"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a report_config"
        }, 
        "vpn_gateway_metadata": {
            "description": "The vpn_gateway kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vpn_gateway was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "vpn_gateway", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vpn_gateway"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vpn_gateway uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the vpn_gateway is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vpn_gateway was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vpn_gateway. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vpn_gateway. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "vpn_gateway name", 
                    "maxLength": 80
                }
            }, 
            "title": "vpn_gateway metadata"
        }, 
        "docker_registry_intent_response": {
            "description": "Response object for intentful operations on a docker_registry", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/docker_registry_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/docker_registry"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/docker_registry_metadata"
                }
            }, 
            "title": "docker_registry Intent Response"
        }, 
        "pc_vm": {
            "description": "Prism central VM configuration.", 
            "required": [
                "vm_name", 
                "num_sockets", 
                "memory_size_bytes", 
                "data_disk_size_bytes", 
                "nic_list"
            ], 
            "type": "object", 
            "properties": {
                "vm_name": {
                    "type": "string", 
                    "description": "VM name.", 
                    "maxLength": 64
                }, 
                "data_disk_size_bytes": {
                    "type": "integer", 
                    "description": "Data disk size in bytes.", 
                    "format": "int64"
                }, 
                "dns_server_ip_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of DNS IP addresses."
                }, 
                "nic_list": {
                    "items": {
                        "$ref": "#/definitions/pc_vm_nic_configuration"
                    }, 
                    "type": "array"
                }, 
                "container_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Container uuid.", 
                    "format": "UUID"
                }, 
                "num_sockets": {
                    "type": "integer", 
                    "description": "Number of sockets allocated per VM.", 
                    "format": "int64"
                }, 
                "memory_size_bytes": {
                    "minimum": 8589934592, 
                    "type": "integer", 
                    "description": "Memory in bytes.", 
                    "format": "int64"
                }, 
                "status": {
                    "x-ntnx-enum": [
                        "NORMAL", 
                        "TO_BE_ADDED", 
                        "OK_TO_BE_REMOVED", 
                        "NEW_NODE"
                    ], 
                    "type": "string", 
                    "readOnly": true, 
                    "description": "Prism central VM status"
                }, 
                "power_state": {
                    "x-ntnx-enum": [
                        "ON", 
                        "OFF"
                    ], 
                    "type": "string", 
                    "readOnly": true, 
                    "description": "The current power state of the VM."
                }, 
                "container_name": {
                    "type": "string", 
                    "description": "Container name."
                }, 
                "vm_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "VM uuid.", 
                    "format": "UUID"
                }, 
                "ntp_server_list": {
                    "items": {
                        "pattern": "^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])(\\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]))*))$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of NTP servers."
                }, 
                "cluster_reference": {
                    "description": "Reference to the cluster where this prism central VM needs to be deployed.\n", 
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "Prism central VM configuration"
        }, 
        "virtual_network_resources_def_status": {
            "description": "Virtual network resources status", 
            "type": "object", 
            "properties": {
                "common_domain_name_server_ip_list": {
                    "items": {
                        "$ref": "#/definitions/address"
                    }, 
                    "type": "array", 
                    "description": "List of domain name server IPs."
                }, 
                "external_subnet_list": {
                    "items": {
                        "$ref": "#/definitions/external_subnet_def_status"
                    }, 
                    "type": "array", 
                    "description": "List of external subnets attached to this VPC."
                }, 
                "vpn_config": {
                    "x-ntnx-enum": [
                        "CONNECTED", 
                        "DISCONNECTED"
                    ], 
                    "type": "string", 
                    "description": "Per region providing secure connection from on-prem to Xi (Only supported on Xi)\n"
                }, 
                "nat_ip_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of IP addresses used for SNAT."
                }, 
                "availability_zone_reference_list": {
                    "items": {
                        "$ref": "#/definitions/availability_zone_reference"
                    }, 
                    "type": "array", 
                    "description": "List of availability zones in Xi from which resources are derived (Only supported on Xi)\n"
                }, 
                "vpc_type": {
                    "x-ntnx-enum": [
                        "REGULAR", 
                        "TRANSIT"
                    ], 
                    "type": "string", 
                    "description": "Transit or regular VPC."
                }, 
                "externally_routable_prefix_list": {
                    "items": {
                        "$ref": "#/definitions/ip_subnet"
                    }, 
                    "type": "array", 
                    "description": "CIDR blocks from the VPC which can talk externally without performing NAT. These blocks should be between /16 netmask and /28 netmask and cannot overlap across VPCs. They are effective when the VPC connects to a NAT-less external subnet.\n"
                }
            }, 
            "title": "Virtual network resources status"
        }, 
        "floating_ip_intent_input": {
            "description": "An intentful representation of a floating_ip", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/floating_ip"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/floating_ip_metadata"
                }
            }, 
            "title": "floating_ip Intent Entity"
        }, 
        "email_config": {
            "description": "Report Email configuration.", 
            "type": "object", 
            "properties": {
                "email_subject": {
                    "type": "string", 
                    "description": "Subject of email to be sent for report."
                }, 
                "recipient_format": {
                    "items": {
                        "x-ntnx-enum": [
                            "PDF", 
                            "CSV"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List specifying the formats in which report is to be sent."
                }, 
                "email_body": {
                    "type": "string", 
                    "description": "Content of the email body."
                }, 
                "recipient_list": {
                    "items": {
                        "$ref": "#/definitions/recipient"
                    }, 
                    "type": "array", 
                    "description": "Email recipients list.", 
                    "maxItems": 100
                }
            }, 
            "title": "Report Email Configuration."
        }, 
        "account_details": {
            "description": "Billing account information of a user.", 
            "type": "object", 
            "properties": {
                "status": {
                    "x-ntnx-enum": [
                        "ACTIVE", 
                        "INACTIVE"
                    ], 
                    "type": "string", 
                    "description": "Status of the account indicating if it is active or not."
                }, 
                "minimum_charge_amount": {
                    "description": "Amount that will be charged to the customer at the very least.\n", 
                    "$ref": "#/definitions/monetary_value"
                }, 
                "prepaid_amount": {
                    "description": "Amount that is paid in advance by the customer.", 
                    "$ref": "#/definitions/monetary_value"
                }, 
                "subscription_expiry_date": {
                    "type": "string", 
                    "description": "Date on which current subscription plan ends.", 
                    "format": "date"
                }, 
                "next_invoice_date": {
                    "type": "string", 
                    "description": "Date on which next invoice will be generated.", 
                    "format": "date"
                }, 
                "account_number": {
                    "type": "string", 
                    "description": "Number associated with the account."
                }, 
                "plan_name": {
                    "type": "string", 
                    "description": "Name of the plan that user has subscribed to."
                }
            }, 
            "title": "Account information of a user."
        }, 
        "protection_rule_intent_input": {
            "description": "An intentful representation of a protection_rule", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/protection_rule"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/protection_rule_metadata"
                }
            }, 
            "title": "protection_rule Intent Entity"
        }, 
        "availability_zone_metadata": {
            "description": "The availability_zone kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when availability_zone was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "availability_zone", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "availability_zone"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "availability_zone uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the availability_zone is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when availability_zone was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the availability_zone. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the availability_zone. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "availability_zone name", 
                    "maxLength": 80
                }
            }, 
            "title": "availability_zone metadata"
        }, 
        "subnet_intent_resource": {
            "description": "Response object for intentful operations on a subnet", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/subnet_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/subnet"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/subnet_metadata"
                }
            }, 
            "title": "subnet Intent Response"
        }, 
        "cloud_tenant_intent_resource": {
            "description": "Response object for intentful operations on a cloud_tenant", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/cloud_tenant_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/cloud_tenant"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cloud_tenant_metadata"
                }
            }, 
            "title": "cloud_tenant Intent Response"
        }, 
        "directory_service_list_intent_response": {
            "description": "Response object for intentful operation of directory_services", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/directory_service_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/directory_service_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "pc_vm_nic_configuration": {
            "description": "Virtual Machine NIC.", 
            "type": "object", 
            "properties": {
                "network_configuration": {
                    "$ref": "#/definitions/network_config"
                }, 
                "ip_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Network IP address."
                }
            }, 
            "title": "Virtual Machine NIC"
        }, 
        "cluster_syslog_server": {
            "description": "Cluster Remote Syslog server definition.", 
            "type": "object", 
            "properties": {
                "rsyslog_server_list": {
                    "items": {
                        "$ref": "#/definitions/syslog_server_resources"
                    }, 
                    "type": "array"
                }, 
                "cluster_version": {
                    "type": "string"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "Remote Syslog server resource in prism element."
        }, 
        "storage_policy_intent_response": {
            "description": "Response object for intentful operations on a storage_policy", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/storage_policy_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/storage_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/storage_policy_metadata"
                }
            }, 
            "title": "storage_policy Intent Response"
        }, 
        "recovery_plan_intent_input": {
            "description": "An intentful representation of a recovery_plan", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/recovery_plan"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/recovery_plan_metadata"
                }
            }, 
            "title": "recovery_plan Intent Entity"
        }, 
        "vm_host_affinity_policy_update_metadata": {
            "description": "Metadata for update of VM Host Affinity Policy.", 
            "required": [
                "entity_version"
            ], 
            "type": "object", 
            "properties": {
                "entity_version": {
                    "type": "integer", 
                    "description": "Logical timestamp of VM Host Affinity Policy.", 
                    "format": "int64"
                }
            }, 
            "title": "VM Host Affinity Policy update metadata"
        }, 
        "prism_central_reference": {
            "description": "The reference to a prism_central", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "prism_central", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "prism_central"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a prism_central"
        }, 
        "address_group_list_metadata": {
            "description": "Api calls that return a list have this metadata block as input", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "address_group", 
                    "x-ntnx-enum": [
                        "address_group"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to on which the sort is performed"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results."
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for address_group list"
        }, 
        "image_placement_policy_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "image_placement_policy", 
                    "x-ntnx-enum": [
                        "image_placement_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for image_placement_policy list output"
        }, 
        "oauth_token": {
            "description": "Oauth token information", 
            "required": [
                "access_token", 
                "token_type", 
                "expires_in", 
                "refresh_token", 
                "scopes"
            ], 
            "type": "object", 
            "properties": {
                "access_token": {
                    "type": "string", 
                    "description": "access_token to be used for accessing gateway"
                }, 
                "token_type": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Only value possible is \"bearer\"."
                }, 
                "expires_in": {
                    "type": "integer", 
                    "description": "Token expiration time in seconds", 
                    "format": "int64"
                }, 
                "refresh_token": {
                    "type": "string", 
                    "description": "refresh_token which can used to get new token"
                }, 
                "scopes": {
                    "items": {
                        "type": "string", 
                        "description": "scope which the token grants"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Oauth token"
        }, 
        "action_type_metadata": {
            "description": "The action_type kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when action_type was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "action_type", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "action_type"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "action_type uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the action_type is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when action_type was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the action_type. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the action_type. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "action_type name", 
                    "maxLength": 80
                }
            }, 
            "title": "action_type metadata"
        }, 
        "expression": {
            "description": "Expression object definition. This holds the context about the token.\n", 
            "type": "object", 
            "properties": {
                "operator": {
                    "type": "string", 
                    "description": "If the term is a filter (LHS operator RHS), then this\nrepresents the operator.\n"
                }, 
                "property_type": {
                    "type": "string", 
                    "description": "Whether the term is an attribute, metric, action."
                }, 
                "value": {
                    "type": "string", 
                    "description": "In case of a filter, this represents the RHS."
                }, 
                "property_name": {
                    "type": "string", 
                    "description": "Name of the attribute, metric, action."
                }, 
                "entity_type": {
                    "type": "string", 
                    "description": "The entity type that the term represents."
                }
            }, 
            "title": "Expression Definition"
        }, 
        "vm_category_workload": {
            "description": "VM Category workload Object.", 
            "type": "object", 
            "properties": {
                "category": {
                    "type": "string"
                }, 
                "value": {
                    "type": "string"
                }
            }, 
            "title": "VM Category workload Definition"
        }, 
        "action_rule_result": {
            "description": "Action type entity definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/action_rule_result_resources"
                }
            }, 
            "title": "Action type entity"
        }, 
        "unbilled_invoice": {
            "description": "Summary of usages not yet invoiced to the user.", 
            "type": "object", 
            "properties": {
                "unpaid_balance": {
                    "description": "Amount that is due for non payment or partial payment of last invoice.\n", 
                    "$ref": "#/definitions/monetary_value"
                }, 
                "unbilled_balance": {
                    "description": "Amount that is due for the usage in current bill cycle till date.\n", 
                    "$ref": "#/definitions/monetary_value"
                }, 
                "invoice_item_list": {
                    "items": {
                        "$ref": "#/definitions/billing_invoice_item"
                    }, 
                    "type": "array", 
                    "description": "Summary of usage of individual billable items.", 
                    "title": "Summary of usage of billable items."
                }, 
                "outstanding_balance": {
                    "description": "Total amount that is due till date.", 
                    "$ref": "#/definitions/monetary_value"
                }
            }, 
            "title": "Unbilled usages summary."
        }, 
        "disk_metadata": {
            "description": "The disk kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when disk was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "disk", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "disk"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "disk uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the disk is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when disk was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the disk. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the disk. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "disk name", 
                    "maxLength": 80
                }
            }, 
            "title": "disk metadata"
        }, 
        "category_key_status": {
            "description": "Category Key Definition.", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "capabilities": {
                    "$ref": "#/definitions/capabilities"
                }, 
                "system_defined": {
                    "readOnly": true, 
                    "type": "boolean", 
                    "description": "Specifying whether its a system defined category."
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the category.", 
                    "maxLength": 1000
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the category.", 
                    "maxLength": 64
                }
            }, 
            "title": "Category Key Definition."
        }, 
        "service_enablement_status": {
            "description": "The status of the service - whether it is disabled by default, if an\n enablement is in progress, what is the current status.\n", 
            "type": "object", 
            "properties": {
                "task_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the task created for handling the request.\n", 
                    "format": "UUID"
                }, 
                "service_capabilities": {
                    "additionalProperties": {
                        "$ref": "#/definitions/service_capability"
                    }, 
                    "type": "object", 
                    "description": "Capabilities of this service. For example if the service can be enabled/disabled.\n", 
                    "properties": {
                        "can_disable": {
                            "description": "Whether the service can be disabled.", 
                            "$ref": "#/definitions/service_capability"
                        }, 
                        "can_enable": {
                            "description": "Whether the service can be enabled.", 
                            "$ref": "#/definitions/service_capability"
                        }
                    }
                }, 
                "service_enablement_timestamp": {
                    "type": "string", 
                    "description": "Date and time at which the service was enabled.  Currently this is used only for Microsegmentation.\n", 
                    "format": "date-time"
                }, 
                "service_enablement_status": {
                    "x-ntnx-enum": [
                        "DISABLED", 
                        "ENABLING", 
                        "ENABLED", 
                        "DISABLING"
                    ], 
                    "type": "string"
                }, 
                "is_trial_period_expired": {
                    "type": "boolean", 
                    "description": "Flag indicating if the service trial period has expired. Currently this is used only for Microsegmentation.\n"
                }, 
                "service_running_status": {
                    "x-ntnx-enum": [
                        "STARTING", 
                        "HEALTHY", 
                        "UNHEALTHY", 
                        "UPGRADING"
                    ], 
                    "type": "string"
                }
            }, 
            "title": "The enablement status of a service."
        }, 
        "cluster_def_status": {
            "description": "Cluster status definition.  A Nutanix cluster is comprised of three or\nmore Nutanix nodes. Each node in the cluster contains memory, CPU, RAM,\nand storage (SSD/HDD). Each node in the cluster runs standard hypervisor\nsuch as VMware vSphere, Microsoft Hyper-V, or AHV. A Controller VM (CVM)\nruns on each node in the cluster. The CVM enables each node to share\nlocal storage from all nodes in the cluster.\n", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The state of the cluster entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Cluster Name."
                }, 
                "resources": {
                    "required": [
                        "config", 
                        "network"
                    ], 
                    "type": "object", 
                    "description": "Cluster resources.", 
                    "properties": {
                        "nodes": {
                            "$ref": "#/definitions/cluster_nodes"
                        }, 
                        "config": {
                            "$ref": "#/definitions/cluster_config"
                        }, 
                        "network": {
                            "$ref": "#/definitions/cluster_network"
                        }, 
                        "analysis": {
                            "$ref": "#/definitions/cluster_analysis"
                        }, 
                        "runtime_status_list": {
                            "items": {
                                "x-ntnx-enum": [
                                    "UPGRADE_QUEUED", 
                                    "UPGRADE_CANCELLED", 
                                    "UPGRADE_IN_PROGRESS", 
                                    "UPGRADE_SCHEDULED", 
                                    "HAVE_SELF_ENCRYPTING_DRIVE", 
                                    "SSP_CONFIG_OWNER"
                                ], 
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "Cluster current attributes and onging operations."
                        }
                    }
                }
            }, 
            "title": "Cluster Status"
        }, 
        "virtual_network_resources": {
            "description": "Virtual network resources", 
            "type": "object", 
            "properties": {
                "common_domain_name_server_ip_list": {
                    "items": {
                        "$ref": "#/definitions/address"
                    }, 
                    "type": "array", 
                    "description": "List of domain name server IPs."
                }, 
                "external_subnet_list": {
                    "items": {
                        "$ref": "#/definitions/external_subnet"
                    }, 
                    "type": "array", 
                    "description": "List of external subnets attached to this VPC."
                }, 
                "vpn_config": {
                    "x-ntnx-enum": [
                        "CONNECTED", 
                        "DISCONNECTED"
                    ], 
                    "type": "string", 
                    "description": "Per region providing secure connection from on-prem to Xi (Only supported on Xi)\n"
                }, 
                "availability_zone_reference_list": {
                    "items": {
                        "$ref": "#/definitions/availability_zone_reference"
                    }, 
                    "type": "array", 
                    "description": "List of availability zones in Xi from which resources are derived (Only supported on Xi)\n"
                }, 
                "vpc_type": {
                    "x-ntnx-enum": [
                        "REGULAR", 
                        "TRANSIT"
                    ], 
                    "type": "string", 
                    "description": "Transit or regular VPC."
                }, 
                "externally_routable_prefix_list": {
                    "items": {
                        "$ref": "#/definitions/ip_subnet"
                    }, 
                    "type": "array", 
                    "description": "CIDR blocks from the VPC which can talk externally without performing NAT. These blocks should be between /16 netmask and /28 netmask and cannot overlap across VPCs. They are effective when the VPC connects to a NAT-less external subnet.\n"
                }
            }, 
            "title": "Virtual network resources"
        }, 
        "disk_reference": {
            "description": "The reference to a disk", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "disk", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "disk"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a disk"
        }, 
        "identity_provider_def_status": {
            "description": "Details of the identity provider.", 
            "required": [
                "resources", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Identity Provider name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "type": "object", 
                    "description": "Urls and other info about the IDP.", 
                    "properties": {
                        "groups_delim": {
                            "minLength": 1, 
                            "type": "string", 
                            "description": "If groups delimiter is provided groups are assumed to be represented as a single attribute and\nthe delimiter is used to split the attribute's value into multiple groups.\n", 
                            "maxLength": 3
                        }, 
                        "idp_properties": {
                            "required": [
                                "idp_url", 
                                "login_url", 
                                "certificate"
                            ], 
                            "type": "object", 
                            "description": "Urls and other info about the IDP.", 
                            "properties": {
                                "login_url": {
                                    "type": "string", 
                                    "description": "Login URL of the Identity provider.", 
                                    "maxLength": 2000
                                }, 
                                "certificate": {
                                    "type": "string", 
                                    "description": "Cert for verification."
                                }, 
                                "idp_url": {
                                    "type": "string", 
                                    "description": "URL of the Identity provider.", 
                                    "maxLength": 2000
                                }, 
                                "error_url": {
                                    "type": "string", 
                                    "description": "Error URL of the Identity provider.", 
                                    "maxLength": 2000
                                }, 
                                "logout_url": {
                                    "type": "string", 
                                    "description": "Logout URL of the Identity provider.", 
                                    "maxLength": 2000
                                }
                            }
                        }, 
                        "idp_metadata": {
                            "type": "string", 
                            "description": "Metadata in xml format with IDP details."
                        }, 
                        "groups_attr": {
                            "minLength": 3, 
                            "type": "string", 
                            "description": "Saml assertion groups attribute element.", 
                            "maxLength": 256
                        }
                    }
                }
            }, 
            "title": "Identity provider details"
        }, 
        "action_trigger_type_intent_resource": {
            "description": "Response object for intentful operations on a action_trigger_type", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/action_trigger_type_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/action_trigger_type"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_trigger_type_metadata"
                }
            }, 
            "title": "action_trigger_type Intent Response"
        }, 
        "idempotence_identifiers_input": {
            "description": "Resources for the idempotence identifier kind.", 
            "required": [
                "count"
            ], 
            "type": "object", 
            "properties": {
                "client_identifier": {
                    "type": "string", 
                    "description": "The client identifier string."
                }, 
                "count": {
                    "default": 1, 
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of idempotence identifiers provided.", 
                    "maximum": 4096
                }, 
                "valid_duration_in_minutes": {
                    "default": 527040, 
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Number of minutes from creation time for which idempotence identifier uuid list is valid.", 
                    "maximum": 527040
                }
            }, 
            "title": "Idempotence object"
        }, 
        "user_intent_resource": {
            "description": "Response object for intentful operations on a user", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/user_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/user"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/user_metadata"
                }
            }, 
            "title": "user Intent Response"
        }, 
        "port_range": {
            "description": "Range of TCP/UDP ports.", 
            "type": "object", 
            "properties": {
                "end_port": {
                    "minimum": 0, 
                    "type": "integer", 
                    "maximum": 65535, 
                    "format": "int32"
                }, 
                "start_port": {
                    "minimum": 0, 
                    "type": "integer", 
                    "maximum": 65535, 
                    "format": "int32"
                }
            }, 
            "title": "TCP/UDP ports."
        }, 
        "mh_vm_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "mh_vm", 
                    "x-ntnx-enum": [
                        "mh_vm"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for mh_vm list"
        }, 
        "datacenter_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "datacenter", 
                    "x-ntnx-enum": [
                        "datacenter"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for datacenter list output"
        }, 
        "identity_provider": {
            "description": "The configuration details of the identity provider.", 
            "required": [
                "resources", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Identity Provider name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "description": "Urls and other info about the IDP.", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "idp_metadata"
                            ]
                        }, 
                        {
                            "required": [
                                "idp_properties"
                            ]
                        }
                    ], 
                    "properties": {
                        "groups_delim": {
                            "minLength": 1, 
                            "type": "string", 
                            "description": "If groups delimiter is provided groups are assumed to be represented as a single attribute and\nthe delimiter is used to split the attribute's value into multiple groups.\n", 
                            "maxLength": 3
                        }, 
                        "idp_properties": {
                            "required": [
                                "idp_url", 
                                "login_url", 
                                "certificate"
                            ], 
                            "type": "object", 
                            "description": "Urls and other info about the IDP.", 
                            "properties": {
                                "login_url": {
                                    "type": "string", 
                                    "description": "Login URL of the Identity provider.", 
                                    "maxLength": 2000
                                }, 
                                "certificate": {
                                    "type": "string", 
                                    "description": "Cert for verification."
                                }, 
                                "idp_url": {
                                    "type": "string", 
                                    "description": "URL of the Identity provider.", 
                                    "maxLength": 2000
                                }, 
                                "error_url": {
                                    "type": "string", 
                                    "description": "Error URL of the Identity provider.", 
                                    "maxLength": 2000
                                }, 
                                "logout_url": {
                                    "type": "string", 
                                    "description": "Logout URL of the Identity provider.", 
                                    "maxLength": 2000
                                }
                            }
                        }, 
                        "idp_metadata": {
                            "type": "string", 
                            "description": "Metadata in xml format with IDP details."
                        }, 
                        "groups_attr": {
                            "minLength": 3, 
                            "type": "string", 
                            "description": "Saml assertion groups attribute element.", 
                            "maxLength": 256
                        }
                    }
                }
            }, 
            "title": "Identity provider details"
        }, 
        "ipfix_exporter_def_status": {
            "description": "IPFix exporter configured on PC.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/ipfix_exporter_resources"
                }
            }, 
            "title": "IPFix exporter configured on PC."
        }, 
        "common_report_config_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "common_report_config", 
                    "x-ntnx-enum": [
                        "common_report_config"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for common_report_config list output"
        }, 
        "rack_list_intent_response": {
            "description": "Response object for intentful operation of racks", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/rack_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/rack_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "network_security_rule_intent_resource": {
            "description": "Response object for intentful operations on a network_security_rule", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/network_security_rule_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/network_security_rule"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/network_security_rule_metadata"
                }
            }, 
            "title": "network_security_rule Intent Response"
        }, 
        "key_set_response": {
            "description": "Physical Availability Zone's JSON Web Key Set (JWKS).", 
            "type": "object", 
            "properties": {
                "keys": {
                    "items": {
                        "$ref": "#/definitions/json_web_key"
                    }, 
                    "type": "array", 
                    "description": "List of JSON Web Keys"
                }
            }, 
            "title": "JSON Web Key Set"
        }, 
        "resource_domain_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "resource_domain", 
                    "x-ntnx-enum": [
                        "resource_domain"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for resource_domain list"
        }, 
        "project_intent_resource": {
            "description": "Response object for intentful operations on a project", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/project_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/project"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/project_metadata"
                }
            }, 
            "title": "project Intent Response"
        }, 
        "groups_sort_downsampling_function": {
            "x-ntnx-enum": [
                "MAX", 
                "MIN", 
                "FIRST", 
                "LAST", 
                "LATEST"
            ], 
            "type": "string", 
            "description": "Downsampling function to take time series data and resolve to one value for sorting purposes.\n", 
            "title": "Entities Request Downsampling Function"
        }, 
        "action_rule_reference": {
            "description": "The reference to a action_rule", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_rule", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "action_rule"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a action_rule"
        }, 
        "network_security_rule_import_entity": {
            "description": "Network security rule import response data", 
            "required": [
                "entity_type", 
                "entity_name", 
                "entity_update_type"
            ], 
            "type": "object", 
            "properties": {
                "entity_update_type": {
                    "x-ntnx-enum": [
                        "ADDED", 
                        "DELETED", 
                        "MODIFIED"
                    ], 
                    "type": "string", 
                    "description": "Type of update of the entity"
                }, 
                "entity_name": {
                    "type": "string", 
                    "description": "Name of the entity"
                }, 
                "entity_type": {
                    "x-ntnx-enum": [
                        "CATEGORY", 
                        "SECURITY_CHAIN", 
                        "POLICY"
                    ], 
                    "type": "string", 
                    "description": "Type of entity"
                }
            }, 
            "title": "Network security rule import response data"
        }, 
        "open_ldap_configuration_def_status": {
            "description": "Configuration for OpenLDAP directory service.", 
            "required": [
                "user_configuration", 
                "user_group_configuration"
            ], 
            "type": "object", 
            "properties": {
                "user_configuration": {
                    "required": [
                        "user_object_class", 
                        "user_search_base", 
                        "username_attribute"
                    ], 
                    "type": "object", 
                    "properties": {
                        "user_search_base": {
                            "type": "string", 
                            "description": "The base DN for user search."
                        }, 
                        "user_object_class": {
                            "type": "string", 
                            "description": "The object class in the OpenLDAP system that corresponds to users.\n"
                        }, 
                        "username_attribute": {
                            "type": "string", 
                            "description": "Unique identifier for each user which can be used in authentication.\n"
                        }
                    }
                }, 
                "user_group_configuration": {
                    "required": [
                        "group_object_class", 
                        "group_search_base", 
                        "group_member_attribute", 
                        "group_member_attribute_value"
                    ], 
                    "type": "object", 
                    "properties": {
                        "group_search_base": {
                            "type": "string", 
                            "description": "The base DN for group search.\n"
                        }, 
                        "group_member_attribute": {
                            "type": "string", 
                            "description": "The attribute in a group that associates users to the group.\n"
                        }, 
                        "group_object_class": {
                            "type": "string", 
                            "description": "The object class in the OpenLDAP system that corresponds to groups.\n"
                        }, 
                        "group_member_attribute_value": {
                            "type": "string", 
                            "description": "The user attribute value that will be used in group entity to associate user to the group.\n"
                        }
                    }
                }
            }, 
            "title": "OpenLDAP Configuration."
        }, 
        "aws_subnet_intent_resource": {
            "description": "aws_subnet entity", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/aws_subnet_def_status"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_subnet_metadata"
                }
            }, 
            "title": "aws_subnet"
        }, 
        "floating_ip_metadata": {
            "description": "The floating_ip kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when floating_ip was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "floating_ip", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "floating_ip"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "floating_ip uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the floating_ip is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when floating_ip was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the floating_ip. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the floating_ip. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "floating_ip name", 
                    "maxLength": 80
                }
            }, 
            "title": "floating_ip metadata"
        }, 
        "network_security_rule_def_status": {
            "description": "Network security rule status", 
            "type": "object", 
            "properties": {
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string"
                }, 
                "resources": {
                    "$ref": "#/definitions/network_security_rule_resources_status"
                }, 
                "description": {
                    "type": "string"
                }
            }, 
            "title": "Network security rule status"
        }, 
        "oauth_client_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "oauth_client", 
                    "x-ntnx-enum": [
                        "oauth_client"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for oauth_client list output"
        }, 
        "policies": {
            "items": {
                "type": "object", 
                "properties": {
                    "policy": {
                        "type": "object", 
                        "description": "Policy object which will be interpreted by the provider"
                    }, 
                    "type": {
                        "type": "string", 
                        "description": "The policy type"
                    }
                }
            }, 
            "type": "array", 
            "description": "Settings that modify the behavior of the entity. They will be interpreted\nby built in or the third party providers\n", 
            "title": "Policies"
        }, 
        "oauth_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "oauth", 
                    "x-ntnx-enum": [
                        "oauth"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for oauth list"
        }, 
        "virtual_network_intent_response": {
            "description": "Response object for intentful operations on a virtual_network", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/virtual_network_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/virtual_network"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/virtual_network_metadata"
                }
            }, 
            "title": "virtual_network Intent Response"
        }, 
        "cluster_reference": {
            "description": "The reference to a cluster", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cluster", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cluster"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a cluster"
        }, 
        "image_placement_policy_reference": {
            "description": "The reference to a image_placement_policy", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "image_placement_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "image_placement_policy"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a image_placement_policy"
        }, 
        "blueprint_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "blueprint", 
                    "x-ntnx-enum": [
                        "blueprint"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for blueprint list output"
        }, 
        "directory_service_intent_response": {
            "description": "Response object for intentful operations on a directory_service", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/directory_service_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/directory_service"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/directory_service_metadata"
                }
            }, 
            "title": "directory_service Intent Response"
        }, 
        "address_group_response": {
            "description": "Address group response object for GET calls. This can have an associated policies list in the future.", 
            "type": "object", 
            "properties": {
                "address_group": {
                    "$ref": "#/definitions/address_group"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Address group response"
        }, 
        "cluster": {
            "description": "Cluster Definition.", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Cluster Name."
                }, 
                "resources": {
                    "type": "object", 
                    "description": "Cluster resources.", 
                    "properties": {
                        "config": {
                            "$ref": "#/definitions/cluster_config_spec"
                        }, 
                        "network": {
                            "$ref": "#/definitions/cluster_network"
                        }, 
                        "runtime_status_list": {
                            "items": {
                                "x-ntnx-enum": [
                                    "UPGRADE_QUEUED", 
                                    "UPGRADE_CANCELLED", 
                                    "UPGRADE_SCHEDULED", 
                                    "SSP_CONFIG_MIGRATED"
                                ], 
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "Cluster onging operations."
                        }
                    }
                }
            }, 
            "title": "Cluster Definition"
        }, 
        "audit_operation_type": {
            "x-ntnx-enum": [
                "CREATE", 
                "UPDATE", 
                "DELETE", 
                "POWER_STATE_CHANGE", 
                "HA", 
                "RESTORE", 
                "MIGRATE", 
                "IMAGE_IMPORT", 
                "IMAGE_TRANSFER", 
                "IMAGE_REMOVE", 
                "IMAGE_UPLOAD", 
                "TEMPLATE_GUEST_UPDATE_INITIATE", 
                "TEMPLATE_GUEST_UPDATE_CANCEL", 
                "TEMPLATE_GUEST_UPDATE_COMPLETE", 
                "TEMPLATE_DEPLOY", 
                "TEMPLATEVERSIONPUBLISH"
            ], 
            "type": "string", 
            "description": "The operation type the audit captures.", 
            "title": "Operation type."
        }, 
        "report_config_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "report_config", 
                    "x-ntnx-enum": [
                        "report_config"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for report_config list output"
        }, 
        "network_config": {
            "description": "Network Configuration for PC VM.", 
            "type": "object", 
            "properties": {
                "subnet_mask": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Subnet mask IP address."
                }, 
                "network_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Network uuid.", 
                    "format": "UUID"
                }, 
                "network_name": {
                    "type": "string", 
                    "description": "Network name."
                }, 
                "default_gateway": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Gateway IP address."
                }
            }, 
            "title": "Network Configuration for PC VM."
        }, 
        "cloud_type": {
            "x-ntnx-enum": [
                "ONPREM_CLOUD", 
                "NUTANIX_HOSTED_CLOUD", 
                "AWS", 
                "AZURE"
            ], 
            "type": "string", 
            "description": "Types of cloud.", 
            "title": "Cloud Type"
        }, 
        "batch_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "batch", 
                    "x-ntnx-enum": [
                        "batch"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for batch list"
        }, 
        "action_template_list_intent_response": {
            "description": "Response object for intentful operation of action_templates", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/action_template_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_template_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "remote_connection": {
            "description": "Remote connection information.", 
            "required": [
                "name", 
                "description", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Remote connection name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/remote_connection_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Remote connection description", 
                    "maxLength": 1000
                }
            }, 
            "title": "Remote connection information"
        }, 
        "vpn_gateway_reference": {
            "description": "The reference to a vpn_gateway", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpn_gateway", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vpn_gateway"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vpn_gateway"
        }, 
        "recovery_plan_job_intent_response": {
            "description": "Response object for intentful operations on a recovery_plan_job", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/recovery_plan_job_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/recovery_plan_job"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/recovery_plan_job_metadata"
                }
            }, 
            "title": "recovery_plan_job Intent Response"
        }, 
        "streaming_policy_metadata": {
            "description": "The streaming_policy kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when streaming_policy was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "streaming_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "streaming_policy"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "streaming_policy uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the streaming_policy is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when streaming_policy was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the streaming_policy. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the streaming_policy. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "streaming_policy name", 
                    "maxLength": 80
                }
            }, 
            "title": "streaming_policy metadata"
        }, 
        "status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "status": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Only value possible is \"failure\"."
                }, 
                "kind": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The entitys kind. i.e. \"status\"."
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "reason": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "One snake case word."
                }, 
                "details": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "readOnly": true, 
                    "type": "object", 
                    "description": "Custom key-value details relevant to the status."
                }, 
                "message": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "A sentence explaining the reason for the status."
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "hypervisor_info": {
            "description": "Hypervisor info for a cluster.", 
            "type": "object", 
            "properties": {
                "hypervisor_version": {
                    "type": "string"
                }, 
                "hypervisor_type": {
                    "type": "string"
                }
            }, 
            "title": "Hypervisor type and version on a cluster."
        }, 
        "sql_workload": {
            "description": "SQL workload Object.", 
            "type": "object", 
            "properties": {
                "transaction_type": {
                    "x-ntnx-enum": [
                        "$unknown", 
                        "OLAP", 
                        "OLTP"
                    ], 
                    "type": "string"
                }, 
                "business_critical": {
                    "type": "boolean"
                }, 
                "sql_profile_type": {
                    "x-ntnx-enum": [
                        "$unknown", 
                        "ExtraSmall", 
                        "Small", 
                        "Medium", 
                        "Large"
                    ], 
                    "type": "string"
                }, 
                "num_db": {
                    "type": "integer"
                }
            }, 
            "title": "SQL workload Definition"
        }, 
        "virtual_network_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "virtual_network", 
                    "x-ntnx-enum": [
                        "virtual_network"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for virtual_network list output"
        }, 
        "message_resource": {
            "description": "message.", 
            "required": [
                "message", 
                "reason"
            ], 
            "type": "object", 
            "properties": {
                "message": {
                    "type": "string", 
                    "description": "If state is ERROR, a message describing the error."
                }, 
                "reason": {
                    "x-ntnx-enum": [
                        "ACCESS_DENIED", 
                        "ACCESS_FORBIDDEN", 
                        "ACTION_NOT_SUPPORTED", 
                        "AFFINITY_FAILURE", 
                        "AUTHENTICATION_REQUIRED", 
                        "BEARER_TOKEN_EXPIRED", 
                        "BEARER_TOKEN_BAD_SIGNATURE", 
                        "CANNOT_MODIFY_PRE_CONFIGURED_REPORT", 
                        "CATEGORY_NAME_VALUE_MISMATCH", 
                        "CLUSTER_CAPABILITY_ERROR", 
                        "CONFIGURATION_INCOMPLETE", 
                        "CONCURRENT_REQUESTS_NOT_ALLOWED", 
                        "DEFAULT_PROJECT_UNAVAILABLE", 
                        "DESERIALIZATION_FAILED", 
                        "DIRECTORY_SERVICE_CONNECTION_FAILED", 
                        "ENTITY_ALREADY_EXISTS", 
                        "ENTITY_DELETION_FAILED", 
                        "ENTITY_IS_READONLY", 
                        "ENTITY_NAME_UUID_MISMATCH", 
                        "ENTITY_NOT_CONFIGURED", 
                        "ENTITY_NOT_FOUND", 
                        "ENTITY_SAVE_ERROR", 
                        "ENTITY_UPDATE_FAILED", 
                        "IDEMPOTENCE_UUID_CREATION_FAILED", 
                        "IDP_NOT_REACHABLE", 
                        "INTERNAL_ERROR", 
                        "INVALID_ARGUMENT", 
                        "INVALID_AZ_NAME", 
                        "INVALID_CONTENT_TYPE", 
                        "INVALID_DATA_FORMAT", 
                        "INVALID_PORTAL_CONFIGURATION", 
                        "INVALID_REQUEST", 
                        "INVALID_UUID", 
                        "INVALID_OWNER_REFERENCE", 
                        "INTERNAL_AZ_PROXY_SETUP_ERROR", 
                        "INTERNAL_ERROR_REMOTE_REQUEST", 
                        "INTERNAL_ROLE_ACCESS_DENIED", 
                        "INCORRECT_EVENTS_FILTER", 
                        "MISSING_ATTRIBUTE", 
                        "MISSING_CURRENT_USER_METADATA", 
                        "NAME_NOT_IN_DOMAIN", 
                        "NO_POLICY_COMPLIANT_CLUSTER", 
                        "NO_RESPONSE_RECEIVED_FROM_PORTAL", 
                        "NO_STORAGE_POLICY_COMPLIANT_CONTAINER", 
                        "PE_NOT_PAIRED_WITH_PC", 
                        "PC_NOT_PAIRED_WITH_XI_PORTAL", 
                        "REFERENCE_ERROR", 
                        "RESERVED_ROLE_ACCESS_DENIED", 
                        "REQUEST_NOT_SUPPORTED", 
                        "REMOTE_CLUSTER_IP_FETCH_FAILED", 
                        "REMOTE_CLUSTER_NOT_CONNECTED", 
                        "REMOTE_CONNECTION_EXISTS", 
                        "REMOTE_CONNECTION_NOT_FOUND", 
                        "REPORT_CONFIG_NOT_FOUND", 
                        "REPORTING_RESOURCE_NOT_FOUND", 
                        "REPORTING_INTERNAL_ERROR", 
                        "RESOURCE_SHORTAGE", 
                        "SERVICE_UNAVAILABLE", 
                        "SEARCH_RESULT_PROCESSING_ERROR", 
                        "TOO_MANY_REQUESTS", 
                        "UNCONFIGURED_API_KEY", 
                        "UNCONFIGURED_PORTAL_CONNECTION", 
                        "UNSPECIFIED_EVENTS_FILTER", 
                        "UNSUPPORTED_AZ_PROXY_API", 
                        "UNSUPPORTED_MEDIA_TYPE_ERROR", 
                        "UPLOAD_TO_S3_FAILED", 
                        "VALIDATION_ERROR", 
                        "INVALID_SSL_CERTIFICATE", 
                        "ERROR_ATTACHING_FILE_TO_CASE", 
                        "SPEC_UPDATE_ERROR", 
                        "SPEC_INCOMPATIBLE_ERROR", 
                        "CLOUD_UNREACHABLE_ERROR", 
                        "INVALID_CLOUD_CREDENTIALS", 
                        "IDP_PORTAL_UNREACHABLE", 
                        "SELF_PAIRING_NOT_ALLOWED", 
                        "PAIRING_FAILED", 
                        "PAIRING_NOT_ALLOWED", 
                        "PAIRING_INITIATING_NOT_ALLOWED", 
                        "CLOUD_TRUST_EXISTS", 
                        "DUPLICATE_CLOUD_TRUST", 
                        "DUPLICATE_CLOUD_TRUST_ON_REMOTE"
                    ], 
                    "type": "string", 
                    "description": "If state is ERROR, a machine-readable snake-cased string."
                }, 
                "details": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "readOnly": true, 
                    "type": "object", 
                    "description": "Custom key-value details relevant to the status."
                }
            }, 
            "title": "Message."
        }, 
        "stretch_status": {
            "description": "Layer2 stretch status.", 
            "type": "object", 
            "properties": {
                "state": {
                    "x-ntnx-enum": [
                        "UP", 
                        "DOWN"
                    ], 
                    "type": "string"
                }, 
                "detail": {
                    "type": "string"
                }
            }, 
            "title": "Layer2 stretch status"
        }, 
        "app_package_response": {
            "description": "Package definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "type", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "image_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s image spec"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for package"
                }, 
                "service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_reference"
                    }, 
                    "type": "array", 
                    "description": "References of the service."
                }, 
                "account_reference": {
                    "$ref": "#/definitions/account_reference"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "version": {
                    "type": "string", 
                    "description": ""
                }, 
                "service_element_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_package_reference"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "SNAPSHOT", 
                        "ISO", 
                        "DEB", 
                        "RPM", 
                        "DOCKER_IMAGE", 
                        "CHEF_COOKBOOK", 
                        "PUPPET_MANIFEST", 
                        "CUSTOM", 
                        "SUBSTRATE_IMAGE", 
                        "K8S_IMAGE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "options": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Details based on type of the package."
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Package for Application"
        }, 
        "underlay_subnet_reference": {
            "description": "The reference to a underlay_subnet", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "underlay_subnet", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "underlay_subnet"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a underlay_subnet"
        }, 
        "direct_connect_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "direct_connect", 
                    "x-ntnx-enum": [
                        "direct_connect"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for direct_connect list output"
        }, 
        "account_reference_upload": {
            "description": "The reference to a account", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "account", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "account"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a account"
        }, 
        "task_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "task", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "task"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "entity_sync_rule_resources": {
            "description": "Entity sync rule encodes the list of entity kinds which needs to be\nsynced.\n", 
            "type": "object", 
            "properties": {
                "kind_list": {
                    "items": {
                        "x-ntnx-enum": [
                            "PROTECTION_RULE", 
                            "RECOVERY_PLAN"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of kinds of the entities which needs to be synced."
                }
            }, 
            "title": "Entity sync rule resources"
        }, 
        "vpn_gateway_intent_resource": {
            "description": "Response object for intentful operations on a vpn_gateway", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vpn_gateway_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vpn_gateway"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vpn_gateway_metadata"
                }
            }, 
            "title": "vpn_gateway Intent Response"
        }, 
        "vm_guest_power_state_transition_config": {
            "description": "Extra configs related to power state transition.", 
            "type": "object", 
            "properties": {
                "should_fail_on_script_failure": {
                    "type": "boolean", 
                    "description": "Indicates whether to abort ngt shutdown/reboot if script fails."
                }, 
                "enable_script_exec": {
                    "type": "boolean", 
                    "description": "Indicates whether to execute set script before ngt shutdown/reboot."
                }
            }, 
            "title": "Power State Transition Config"
        }, 
        "ipfix_exporter_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ipfix_exporter", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ipfix_exporter"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "action_template_intent_response": {
            "description": "Response object for intentful operations on a action_template", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/action_template_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/action_template"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_template_metadata"
                }
            }, 
            "title": "action_template Intent Response"
        }, 
        "user_group_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "user_group", 
                    "x-ntnx-enum": [
                        "user_group"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for user_group list output"
        }, 
        "task_poll_response": {
            "description": "Response from a task poll request", 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/task"
                    }, 
                    "type": "array"
                }, 
                "has_poll_timed_out": {
                    "type": "boolean", 
                    "description": "Did the poll timeout before all polled tasks completed"
                }
            }, 
            "title": "Response from a task poll request"
        }, 
        "environment_intent_input": {
            "description": "An intentful representation of a environment", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/environment"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/environment_metadata"
                }
            }, 
            "title": "environment Intent Entity"
        }, 
        "recovery_plan_policy_state": {
            "description": "State of enforced policy on an entity.", 
            "required": [
                "compliance_status", 
                "enforcement_mode", 
                "policy_reference"
            ], 
            "type": "object", 
            "properties": {
                "policy_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "policy_info": {
                    "$ref": "#/definitions/recovery_plan_info"
                }, 
                "compliance_status": {
                    "description": "This field indicates whether the given entity is compliant with the specified policy or not. It will be in unknown state if the current compliance state is not known.\n", 
                    "$ref": "#/definitions/policy_compliance_state"
                }, 
                "enforcement_mode": {
                    "x-ntnx-enum": [
                        "MONITORING", 
                        "ENFORCING", 
                        "ENFORCEMENT_FAILED"
                    ], 
                    "type": "string", 
                    "description": "Policy enforcement mode informs us about what the policy engine is currently doing to enforce the policy on the entity. Monitoring indicates that the policy engine is simply monitoring the entity's state. Enforcing means that the policy engine is currently trying to enforce the policy on the entity. Enforcement failed indicates that the policy engine encountered a non-transient error and requires user intervention to fix the problem, error message gives the reason for error in this case.\n"
                }, 
                "error_message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Policy State"
        }, 
        "account_reference": {
            "description": "The reference to a account", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "account", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "account"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a account"
        }, 
        "component_instance_parameters": {
            "additionalProperties": {
                "type": "string"
            }, 
            "type": "object", 
            "description": "The trigger or action required input parameter value map, or the output\nparameters.\n", 
            "title": "Component instance parameters"
        }, 
        "vm_intent_resource": {
            "description": "Response object for intentful operations on a vm", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vm_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vm"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_metadata"
                }
            }, 
            "title": "vm Intent Response"
        }, 
        "vm_spec_warning": {
            "description": "Warning message for an attribute in VM spec whose value is either not present in OVA or not supported by AHV.\n", 
            "type": "object", 
            "properties": {
                "message": {
                    "type": "string", 
                    "description": "Warning message for the corresponding key."
                }, 
                "possible_values": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Possible values for the key."
                }, 
                "key": {
                    "type": "string", 
                    "description": "Attribute of VM spec for which a warning is generated."
                }
            }, 
            "title": "Warning message for an attribute in VM spec."
        }, 
        "batch_metadata": {
            "description": "The batch kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when batch was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "batch", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "batch"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "batch uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the batch is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when batch was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the batch. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the batch. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "batch name", 
                    "maxLength": 80
                }
            }, 
            "title": "batch metadata"
        }, 
        "vpc_def_status": {
            "description": "VPC output status", 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the VPC."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the VPC, if in an error state.\n"
                }, 
                "name": {
                    "type": "string"
                }, 
                "resources": {
                    "$ref": "#/definitions/vpc_resources_def_status"
                }, 
                "description": {
                    "type": "string"
                }
            }, 
            "title": "VPC status"
        }, 
        "snapshot_retention_policy": {
            "properties": {
                "num_snapshots": {
                    "type": "integer", 
                    "description": "Number of snapshots need to be retained. This will be set in case of\nlinear snapshot retention.\n", 
                    "format": "int32"
                }, 
                "rollup_retention_policy": {
                    "description": "Maximum snapshot retention time with rollup schedules.\n", 
                    "type": "object", 
                    "properties": {
                        "multiple": {
                            "type": "integer", 
                            "description": "Multiplier to 'snapshot_interval_type'. For example if\n'snapshot_interval_type' is \"YEARLY\" and 'multiple' is 5, then 5\nyears worth of rollup snapshots will be retained.\n", 
                            "format": "int32"
                        }, 
                        "snapshot_interval_type": {
                            "x-ntnx-enum": [
                                "HOURLY", 
                                "DAILY", 
                                "WEEKLY", 
                                "MONTHLY", 
                                "YEARLY"
                            ], 
                            "type": "string", 
                            "description": "Snapshot interval period.\n"
                        }
                    }, 
                    "title": "Snapshot Retention Policy for rollup schedules"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "num_snapshots"
                    ]
                }, 
                {
                    "required": [
                        "rollup_retention_policy"
                    ]
                }
            ], 
            "type": "object", 
            "description": "This describes the snapshot retention policy for this\navailability zone. This translates into how many snapshots\ntaken as part of this protection rule need to be retained\non this availability zone.\n", 
            "title": "Snapshot Retention Policy"
        }, 
        "aws_subnet_def_status": {
            "description": "aws_subnet resources status", 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string", 
                    "description": "aws_subnet name."
                }, 
                "resources": {
                    "$ref": "#/definitions/aws_subnet_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for aws_subnet."
                }
            }, 
            "title": "aws_subnet resources status"
        }, 
        "generic_key_value_pair": {
            "additionalProperties": {
                "type": "string"
            }, 
            "type": "object", 
            "description": "Generic key value pair used for custom attributes.", 
            "title": "Generic key value pair."
        }, 
        "support_case_upload_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "support_case_upload", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "support_case_upload"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "vm_resources": {
            "description": "VM Resources Definition.", 
            "type": "object", 
            "properties": {
                "num_threads_per_core": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Number of logical threads per core.", 
                    "format": "int32"
                }, 
                "is_agent_vm": {
                    "type": "boolean", 
                    "description": "Indicates whether the VM is an agent VM. When their host enters maintenance mode, after normal VMs are evacuated, agent VMs are powered off. When the host is restored, agent VMs are powered on before normal VMs are restored. In other words, agent VMs cannot be HA-protected or live migrated.\n"
                }, 
                "hardware_virtualization_enabled": {
                    "type": "boolean", 
                    "description": "Indicates whether hardware assisted virtualization should be enabled for the Guest OS. Once enabled, the Guest OS has the ability to deploy a nested hypervisor.\n"
                }, 
                "memory_size_mib": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Memory size in MiB.", 
                    "format": "int32"
                }, 
                "boot_config": {
                    "description": "Indicates which device the VM should boot from.", 
                    "$ref": "#/definitions/vm_boot_config"
                }, 
                "disk_list": {
                    "items": {
                        "$ref": "#/definitions/vm_disk"
                    }, 
                    "type": "array", 
                    "description": "Disks attached to the VM."
                }, 
                "serial_port_list": {
                    "items": {
                        "$ref": "#/definitions/serial_port"
                    }, 
                    "type": "array", 
                    "description": "Serial ports configured on the VM."
                }, 
                "generation_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Indicates the Generation UUID of the VM.", 
                    "format": "UUID"
                }, 
                "bios_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Indicates the BIOS UUID of the VM.", 
                    "format": "UUID"
                }, 
                "is_vcpu_hard_pinned": {
                    "type": "boolean", 
                    "description": "Indicates whether the vCPUs should be hard pinned to specific pCPUs."
                }, 
                "power_state": {
                    "x-ntnx-enum": [
                        "ON", 
                        "OFF"
                    ], 
                    "type": "string", 
                    "description": "The current or desired power state of the VM."
                }, 
                "num_vcpus_per_socket": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Number of vCPUs per socket.", 
                    "format": "int32"
                }, 
                "num_sockets": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Number of vCPU sockets.", 
                    "format": "int32"
                }, 
                "apc_config": {
                    "description": "Information about Advanced Processor Comptability(APC) setting of VM.\n", 
                    "$ref": "#/definitions/vm_apc_config"
                }, 
                "storage_config": {
                    "description": "Storage configuration for AHV VMs.", 
                    "$ref": "#/definitions/vm_storage_config"
                }, 
                "gpu_list": {
                    "items": {
                        "$ref": "#/definitions/vm_gpu"
                    }, 
                    "type": "array", 
                    "description": "GPUs attached to the VM."
                }, 
                "machine_type": {
                    "x-ntnx-enum": [
                        "PC", 
                        "PSERIES", 
                        "Q35"
                    ], 
                    "type": "string", 
                    "description": "Machine type for the VM. Machine type Q35 is required for secure boot and does not support IDE disks.\n"
                }, 
                "hardware_clock_timezone": {
                    "type": "string", 
                    "description": "VM's hardware clock timezone in IANA TZDB format (America/Los_Angeles).\n", 
                    "maxLength": 64
                }, 
                "guest_customization": {
                    "$ref": "#/definitions/guest_customization"
                }, 
                "power_state_mechanism": {
                    "$ref": "#/definitions/vm_power_state_mechanism"
                }, 
                "vga_console_enabled": {
                    "type": "boolean", 
                    "description": "Indicates whether VGA console should be enabled or not."
                }, 
                "memory_overcommit_enabled": {
                    "type": "boolean", 
                    "description": "Indicates whether memory overcommit feature should be enabled for the VM. If enabled, parts of the VM's memory may reside outside of the hypervisor physical memory. When enabled, it should be expected that the VM may suffer performance degradation.\n"
                }, 
                "vnuma_config": {
                    "description": "Information regarding vNUMA configuration.", 
                    "$ref": "#/definitions/vm_vnuma_config"
                }, 
                "nic_list": {
                    "items": {
                        "$ref": "#/definitions/vm_nic"
                    }, 
                    "type": "array", 
                    "description": "NICs attached to the VM."
                }, 
                "guest_os_id": {
                    "type": "string", 
                    "description": "String that identifies the OS running inside of the guest. Reserved for use by the system. Do not set or modify.", 
                    "maxLength": 64
                }, 
                "vtpm_config": {
                    "description": "VM vTPM configuration.", 
                    "$ref": "#/definitions/vm_vtpm_config"
                }, 
                "gpu_console_enabled": {
                    "type": "boolean", 
                    "description": "Indicates whether vGPU console is enabled or not."
                }, 
                "guest_tools": {
                    "description": "Information regarding guest tools.", 
                    "$ref": "#/definitions/guest_tools_spec"
                }, 
                "enable_cpu_passthrough": {
                    "type": "boolean", 
                    "description": "Indicates whether to passthrough the host's CPU features to the guest. Enabling this will disable live migration of the VM.\n"
                }, 
                "parent_reference": {
                    "description": "Reference to an entity that the VM should be cloned or created from.\n", 
                    "$ref": "#/definitions/reference"
                }, 
                "disable_branding": {
                    "type": "boolean", 
                    "description": "Indicates whether to remove AHV branding from VM firmware tables.\n"
                }
            }, 
            "title": "VM Resources"
        }, 
        "aws_subnet_list_intent_response": {
            "description": "AWS VPC entity list.", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/aws_subnet_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_subnet_list_metadata_output"
                }
            }, 
            "title": "aws_subnet entity list"
        }, 
        "display_metadata": {
            "description": "display metadata of the form field.", 
            "type": "object", 
            "properties": {
                "field_type": {
                    "x-ntnx-enum": [
                        "INPUT", 
                        "SELECT", 
                        "INPUT_WITH_UNITS", 
                        "ENTITY_SEARCH", 
                        "TOGGLE", 
                        "TEXT_AREA", 
                        "ATTACHMENT", 
                        "TIME", 
                        "RADIO"
                    ], 
                    "type": "string", 
                    "description": "UI component type of the form field."
                }, 
                "field_name": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "the name of the form field.", 
                    "maxLength": 64
                }, 
                "tooltip": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "Tooltip to describe value.", 
                    "maxLength": 512
                }
            }, 
            "title": "Component display metadata"
        }, 
        "support_case_upload_metadata": {
            "description": "The support_case_upload kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when support_case_upload was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "support_case_upload", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "support_case_upload"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "support_case_upload uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the support_case_upload is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when support_case_upload was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the support_case_upload. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the support_case_upload. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "support_case_upload name", 
                    "maxLength": 80
                }
            }, 
            "title": "support_case_upload metadata"
        }, 
        "tenant_reference": {
            "description": "The reference to a tenant", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "tenant", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "tenant"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a tenant"
        }, 
        "host_def_status": {
            "description": "Host Status definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Host Name."
                }, 
                "resources": {
                    "description": "Host resources.", 
                    "type": "object", 
                    "properties": {
                        "gpu_driver_version": {
                            "type": "string", 
                            "description": "Host GPU driver version."
                        }, 
                        "failover_cluster": {
                            "$ref": "#/definitions/failover_cluster"
                        }, 
                        "controller_vm": {
                            "$ref": "#/definitions/controller_vm"
                        }, 
                        "ipmi": {
                            "$ref": "#/definitions/ipmi"
                        }, 
                        "rackable_unit_reference": {
                            "$ref": "#/definitions/rackable_unit_reference"
                        }, 
                        "host_type": {
                            "x-ntnx-enum": [
                                "HYPER_CONVERGED", 
                                "COMPUTE_ONLY", 
                                "NEVER_SCHEDULABLE"
                            ], 
                            "type": "string", 
                            "description": "Host type."
                        }, 
                        "cpu_model": {
                            "type": "string", 
                            "description": "Host CPU model."
                        }, 
                        "host_nics_id_list": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "Host NICs."
                        }, 
                        "num_cpu_sockets": {
                            "type": "integer", 
                            "description": "Number of CPU sockets.", 
                            "format": "int64"
                        }, 
                        "windows_domain": {
                            "$ref": "#/definitions/windows_domain"
                        }, 
                        "gpu_list": {
                            "items": {
                                "$ref": "#/definitions/host_gpu"
                            }, 
                            "type": "array", 
                            "description": "List of GPUs on the host."
                        }, 
                        "num_cpu_cores": {
                            "type": "integer", 
                            "description": "Number of CPU cores on Host.", 
                            "format": "int64"
                        }, 
                        "monitoring_state": {
                            "x-ntnx-enum": [
                                "MONITORED", 
                                "NOT_MONITORED"
                            ], 
                            "type": "string", 
                            "description": "Host monitoring status."
                        }, 
                        "cpu_capacity_hz": {
                            "type": "integer", 
                            "description": "Host CPU capacity.", 
                            "format": "int64"
                        }, 
                        "serial_number": {
                            "type": "string", 
                            "description": "Node serial number."
                        }, 
                        "memory_capacity_mib": {
                            "type": "integer", 
                            "description": "Host memory capacity in MiB.", 
                            "format": "int64"
                        }, 
                        "hypervisor": {
                            "$ref": "#/definitions/hypervisor"
                        }, 
                        "block": {
                            "$ref": "#/definitions/block"
                        }, 
                        "host_disks_reference_list": {
                            "items": {
                                "$ref": "#/definitions/disk_reference"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "title": "Host Resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/reference"
                }
            }, 
            "title": "Host Status"
        }, 
        "traffic": {
            "description": "Port and protocol information of link traffic.", 
            "properties": {
                "protocol": {
                    "type": "string"
                }, 
                "port": {
                    "type": "integer", 
                    "format": "int64"
                }
            }, 
            "title": "Port and Protocol Information"
        }, 
        "credentials": {
            "description": "Credentials to login server", 
            "required": [
                "username"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string"
                }, 
                "password": {
                    "type": "string"
                }
            }, 
            "title": "Credentials to login server"
        }, 
        "storage_policy_intent_resource": {
            "description": "Response object for intentful operations on a storage_policy", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/storage_policy_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/storage_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/storage_policy_metadata"
                }
            }, 
            "title": "storage_policy Intent Response"
        }, 
        "category_reference": {
            "description": "The reference to a category", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "category", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "category"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a category"
        }, 
        "open_ldap_configuration": {
            "description": "Configuration for OpenLDAP directory service.", 
            "required": [
                "user_configuration", 
                "user_group_configuration"
            ], 
            "type": "object", 
            "properties": {
                "user_configuration": {
                    "required": [
                        "user_object_class", 
                        "user_search_base", 
                        "username_attribute"
                    ], 
                    "type": "object", 
                    "properties": {
                        "user_search_base": {
                            "type": "string", 
                            "description": "The base DN for user search.", 
                            "maxLength": 200
                        }, 
                        "user_object_class": {
                            "type": "string", 
                            "description": "The object class in the OpenLDAP system that corresponds to users.\n", 
                            "maxLength": 64
                        }, 
                        "username_attribute": {
                            "type": "string", 
                            "description": "Unique identifier for each user which can be used in authentication.\n", 
                            "maxLength": 64
                        }
                    }
                }, 
                "user_group_configuration": {
                    "required": [
                        "group_object_class", 
                        "group_search_base", 
                        "group_member_attribute", 
                        "group_member_attribute_value"
                    ], 
                    "type": "object", 
                    "properties": {
                        "group_search_base": {
                            "type": "string", 
                            "description": "The base DN for group search.\n", 
                            "maxLength": 200
                        }, 
                        "group_member_attribute": {
                            "type": "string", 
                            "description": "The attribute in a group that associates users to the group.\n", 
                            "maxLength": 64
                        }, 
                        "group_object_class": {
                            "type": "string", 
                            "description": "The object class in the OpenLDAP system that corresponds to groups.\n", 
                            "maxLength": 64
                        }, 
                        "group_member_attribute_value": {
                            "type": "string", 
                            "description": "The user attribute value that will be used in group entity to associate user to the group.\n", 
                            "maxLength": 64
                        }
                    }
                }
            }, 
            "title": "OpenLDAP Configuration."
        }, 
        "groups_get_entities_response": {
            "description": "Get Entities Response.", 
            "type": "object", 
            "properties": {
                "entity_type": {
                    "type": "string"
                }, 
                "filtered_group_count": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "total_entity_count": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "filtered_entity_count": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "group_results": {
                    "items": {
                        "$ref": "#/definitions/groups_group_result"
                    }, 
                    "type": "array"
                }, 
                "total_group_count": {
                    "type": "integer", 
                    "format": "int64"
                }
            }, 
            "title": "Get Entities Response"
        }, 
        "vpn_connection_intent_resource": {
            "description": "Response object for intentful operations on a vpn_connection", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vpn_connection_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vpn_connection"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vpn_connection_metadata"
                }
            }, 
            "title": "vpn_connection Intent Response"
        }, 
        "account_intent_resource": {
            "description": "Response object for intentful operations on a account", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/account_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/account"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/account_metadata"
                }
            }, 
            "title": "account Intent Response"
        }, 
        "cell_reference": {
            "description": "The reference to a cell", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cell", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cell"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a cell"
        }, 
        "user_def_status": {
            "description": "User status definition.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the User."
                }, 
                "resources": {
                    "$ref": "#/definitions/user_status_resource"
                }
            }, 
            "title": "User status definition."
        }, 
        "underlay_subnet_list_intent_response": {
            "description": "Response object for intentful operation of underlay_subnets", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/underlay_subnet_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/underlay_subnet_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "datacenter_intent_response": {
            "description": "Response object for intentful operations on a datacenter", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/datacenter_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/datacenter"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/datacenter_metadata"
                }
            }, 
            "title": "datacenter Intent Response"
        }, 
        "action_rule_result_reference": {
            "description": "The reference to a action_rule_result", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_rule_result", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "action_rule_result"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a action_rule_result"
        }, 
        "network_device_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_device", 
                    "x-ntnx-enum": [
                        "network_device"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for network_device list output"
        }, 
        "app_action_response": {
            "description": "Action definition for Application", 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for action"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "critical": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "action critical flag"
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "action attrs"
                }, 
                "runbook": {
                    "description": "Action runbooks\n", 
                    "$ref": "#/definitions/app_runbook_response"
                }, 
                "type": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Action for Application"
        }, 
        "ova_metadata": {
            "description": "Metadata for OVA", 
            "type": "object", 
            "properties": {
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "kind": {
                    "default": "ova", 
                    "x-ntnx-enum": [
                        "ova"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "creation_time": {
                    "type": "string", 
                    "description": "Creation time of OVA", 
                    "format": "date-time"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "OVA metadata"
        }, 
        "underlay_subnet_def_status": {
            "description": "underlay subnet entity status definition", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "The underlay subnet name", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/underlay_subnet_resources"
                }
            }, 
            "title": "Underlay subnet Entity Status"
        }, 
        "upgrade_notification": {
            "description": "Pre upgrade notification", 
            "type": "object", 
            "properties": {
                "proceed_message": {
                    "type": "string"
                }, 
                "cancel_message": {
                    "type": "string"
                }, 
                "description_item_list": {
                    "items": {
                        "$ref": "#/definitions/description_item"
                    }, 
                    "type": "array", 
                    "description": "Description items of the notification"
                }, 
                "title": {
                    "type": "string", 
                    "description": "Title of the notification"
                }
            }, 
            "title": "Pre upgrade notification"
        }, 
        "splunk_workload": {
            "description": "Splunk workload Object.", 
            "type": "object", 
            "properties": {
                "search_users": {
                    "type": "integer"
                }, 
                "cold_retention_days": {
                    "type": "integer"
                }, 
                "daily_average_indexing_rate": {
                    "type": "integer"
                }, 
                "hot_retention_days": {
                    "type": "integer"
                }
            }, 
            "title": "Splunk workload Definition"
        }, 
        "category_mapping_reference": {
            "description": "The reference to a category_mapping", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "category_mapping", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "category_mapping"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a category_mapping"
        }, 
        "duration": {
            "x-ntnx-enum": [
                "THIRTY_SECONDS", 
                "ONE_MINUTE", 
                "FIVE_MINUTES", 
                "TEN_MINUTES", 
                "THIRTY_MINUTES", 
                "ONE_HOUR", 
                "TWO_HOURS"
            ], 
            "type": "string", 
            "description": "Duration for streaming policies", 
            "title": "Duration for streaming policies"
        }, 
        "file_item_intent_resource": {
            "description": "Response object for intentful operations on a file_item", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/file_item_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/file_item"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/file_item_metadata"
                }
            }, 
            "title": "file_item Intent Response"
        }, 
        "underlay_subnet_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "underlay_subnet", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "underlay_subnet"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "marketplace_item": {
            "description": "Detailed spec for creation of an marketplace item", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Marketplace item name", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/marketplace_item_input_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Marketplace item description", 
                    "maxLength": 5000
                }
            }, 
            "title": "Marketplace item information"
        }, 
        "direct_connect_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "direct_connect", 
                    "x-ntnx-enum": [
                        "direct_connect"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for direct_connect list"
        }, 
        "image_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "image", 
                    "x-ntnx-enum": [
                        "image"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for image list"
        }, 
        "network_function_chain_list_intent_response": {
            "description": "Response object for intentful operation of network_function_chains", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/network_function_chain_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/network_function_chain_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "action_rule_metadata": {
            "description": "The action_rule kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when action_rule was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "action_rule", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "action_rule"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "action_rule uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the action_rule is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when action_rule was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the action_rule. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the action_rule. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "action_rule name", 
                    "maxLength": 80
                }
            }, 
            "title": "action_rule metadata"
        }, 
        "app_profile_response": {
            "description": "App profile resources", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "message_list", 
                "dependency_list"
            ], 
            "type": "object", 
            "properties": {
                "deployment_create_list": {
                    "items": {
                        "$ref": "#/definitions/blueprint_deployment_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": ""
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": ""
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for blueprint deployment"
                }, 
                "dependency_list": {
                    "items": {
                        "$ref": "#/definitions/blueprint_dependency_list"
                    }, 
                    "type": "array"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "App profile resources"
        }, 
        "controller_vm": {
            "description": "Host controller vm information.", 
            "required": [
                "ip"
            ], 
            "type": "object", 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Controller VM IP address."
                }, 
                "nat_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Controller VM NAT IP address."
                }, 
                "oplog_usage": {
                    "$ref": "#/definitions/oplog_usage"
                }, 
                "nat_port": {
                    "type": "integer", 
                    "description": "Controller VM NAT port.", 
                    "format": "int32"
                }
            }, 
            "title": "Host Controller VM Info"
        }, 
        "http_proxy_whitelist": {
            "description": "Exempt HTTP traffic to these targets, from going through the configured\nHTTP Proxy.\n", 
            "required": [
                "target", 
                "target_type"
            ], 
            "type": "object", 
            "properties": {
                "target": {
                    "type": "string", 
                    "description": "The target's identifier (as specified by the target_type). For eg:\n\"10.1.1.1\" \"www.google.com\"\n"
                }, 
                "target_type": {
                    "x-ntnx-enum": [
                        "IPV4_ADDRESS", 
                        "IPV4_NETWORK_MASK", 
                        "DOMAIN_NAME_SUFFIX", 
                        "HOST_NAME"
                    ], 
                    "type": "string", 
                    "description": "Supplementing information for the \"target\" field, that describes how\nto interpret it. For eg: If target is a IPv4 address such as\n\"10.1.1.1\", target_type shold be \"IPv4_ADDRESS\". If target is a host\nname such as \"www.google.com\", then target_type shoold be \"HOST_NAME\"\n"
                }
            }, 
            "title": "HTTP Proxy Whitelist"
        }, 
        "action_rule_result_def_status": {
            "description": "Action type entity status definition", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "resources": {
                    "$ref": "#/definitions/action_rule_result_resources"
                }
            }, 
            "title": "Action type entity status"
        }, 
        "cluster_capability": {
            "description": "Feature capability on a cluster.", 
            "type": "object", 
            "properties": {
                "precheck_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_capability_precheck"
                    }, 
                    "type": "array", 
                    "description": "list of any additional precheck for cluster capability"
                }, 
                "is_capable": {
                    "type": "boolean", 
                    "description": "If this cluster is capable for a feature."
                }, 
                "cluster_name": {
                    "type": "string", 
                    "description": "Name of the cluster."
                }, 
                "hypervisor_list": {
                    "items": {
                        "$ref": "#/definitions/hypervisor_info"
                    }, 
                    "type": "array", 
                    "description": "Type and version of hypervisors on the cluster."
                }, 
                "cluster_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Cluster UUID of a cluster managed by Prism Central.\n", 
                    "format": "UUID"
                }, 
                "aos_version": {
                    "type": "string", 
                    "description": "AOS version of the cluster."
                }
            }, 
            "title": "Status of capability of each cluster for a feature."
        }, 
        "category_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "category", 
                    "x-ntnx-enum": [
                        "category"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for category list output"
        }, 
        "vpc_route_table_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpc_route_table", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vpc_route_table"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "app_substrate_element": {
            "description": "Substrate element definition for Application", 
            "required": [
                "uuid", 
                "name", 
                "type", 
                "variable_list", 
                "action_list", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "platform_data": {
                    "type": "string", 
                    "description": ""
                }, 
                "instance_address": {
                    "type": "string", 
                    "description": ""
                }, 
                "instance_power_state": {
                    "type": "string", 
                    "description": ""
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "instance_id": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "instance_name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "readiness_probe": {
                    "$ref": "#/definitions/app_substrate_readiness_probe"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "os_type": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "VM", 
                        "AHV_VM", 
                        "AWS_VM", 
                        "GCP_VM", 
                        "AZURE_VM", 
                        "EXISTING_VM", 
                        "BARE_METAL", 
                        "GENERIC", 
                        "VMWARE_VM", 
                        "K8S_POD"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "create_spec": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Spec of the substrate"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": "List of variables"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Substrate element for Application"
        }, 
        "vm_gpu_reference": {
            "description": "The reference to a vm_gpu", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_gpu", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_gpu"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vm_gpu"
        }, 
        "app_package_reference_upload": {
            "description": "The reference to a app_package", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_package", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_package"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_package"
        }, 
        "directory_service_user_group_status": {
            "description": "A Directory Service user group.", 
            "type": "object", 
            "properties": {
                "distinguished_name": {
                    "type": "string", 
                    "description": "The Distinguished name for the user group."
                }, 
                "directory_service_reference": {
                    "description": "The directory service that this user group belongs to.", 
                    "$ref": "#/definitions/directory_service_reference"
                }
            }, 
            "title": "A Directory Service user group."
        }, 
        "datacenter": {
            "description": "Datacenter entity definition", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "The datacenter name", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/datacenter_resources"
                }
            }, 
            "title": "Datacenter Entity"
        }, 
        "task_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "task", 
                    "x-ntnx-enum": [
                        "task"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for task list output"
        }, 
        "favorite": {
            "description": "Favorite object definition.", 
            "type": "object", 
            "properties": {
                "route": {
                    "type": "string", 
                    "description": "Optional route if present to directly link to the favorite.", 
                    "maxLength": 2048
                }, 
                "query_term_list": {
                    "items": {
                        "$ref": "#/definitions/query_term"
                    }, 
                    "type": "array", 
                    "description": "Structured representation that infers query intent unambiguously. Client will echo this information back to the backend. Essentially, it is like a search result link. The list has an item corresponding to every query term. One user query is nothing but a collection of multiple query terms.\n"
                }, 
                "complete_query": {
                    "type": "string", 
                    "description": "Actual query string."
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Entity id.", 
                    "format": "UUID"
                }
            }, 
            "title": "Favorite definition."
        }, 
        "perspective_link": {
            "description": "Perspective link object definition.", 
            "type": "object", 
            "properties": {
                "search_query": {
                    "$ref": "#/definitions/auto_completion"
                }, 
                "summary_data_list": {
                    "items": {
                        "$ref": "#/definitions/entities_with_metrics_result"
                    }, 
                    "type": "array", 
                    "description": "List of summary data."
                }, 
                "title": {
                    "type": "string", 
                    "description": "Title of the perspective link."
                }, 
                "child_link_list": {
                    "items": {
                        "type": "object"
                    }, 
                    "type": "array", 
                    "description": "List of child perspecitve links. This is list of perspective_link objects.\n"
                }, 
                "is_selected": {
                    "type": "boolean", 
                    "description": "Flag to indicate if this perspective link is selected in the\nnavigation panel. Indicates if this is the active perspective.\n"
                }
            }, 
            "title": "Perspecive Link Definition"
        }, 
        "cluster_software": {
            "description": "Cluster software.", 
            "required": [
                "software_type", 
                "version"
            ], 
            "properties": {
                "status": {
                    "default": "INSTALLED", 
                    "x-ntnx-enum": [
                        "INSTALLED", 
                        "UPGRADING", 
                        "DOWNLOADED"
                    ], 
                    "type": "string", 
                    "description": "Current software status."
                }, 
                "version": {
                    "type": "string"
                }, 
                "software_type": {
                    "$ref": "#/definitions/software_type"
                }
            }, 
            "title": "Cluster software"
        }, 
        "security_planning_data_collector_upgrade_status": {
            "description": "Status of a Data Collector Upgrade for Security Planning\n", 
            "type": "object", 
            "properties": {
                "current_version": {
                    "type": "string", 
                    "description": "Current running version of the data collector\n"
                }, 
                "task_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the data collector upgrade task that's currently running. Absence of this field implies that an upgrade is not in progress.\n", 
                    "format": "UUID"
                }, 
                "is_upgrade_available": {
                    "type": "boolean", 
                    "description": "Is a data collector upgrade available\n"
                }, 
                "latest_version": {
                    "type": "string", 
                    "description": "Latest available version of the data collector\n"
                }
            }, 
            "title": "Security Planning Data Collector Upgrade Status"
        }, 
        "idempotence_identifiers_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "idempotence_identifiers", 
                    "x-ntnx-enum": [
                        "idempotence_identifiers"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for idempotence_identifiers list"
        }, 
        "category_query_usage_type": {
            "x-ntnx-enum": [
                "USED_IN", 
                "APPLIED_TO"
            ], 
            "type": "string", 
            "description": "USED_IN - to get policies in which specified categories are used.\nAPPLIED_TO - to get entities attached to specified categories.\n", 
            "title": "Query Usage Type"
        }, 
        "volume_group_intent_response": {
            "description": "Response object for intentful operations on a volume_group", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/volume_group_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/volume_group"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/volume_group_metadata"
                }
            }, 
            "title": "volume_group Intent Response"
        }, 
        "image": {
            "description": "An intentful representation of a image spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "image Name.", 
                    "maxLength": 256
                }, 
                "resources": {
                    "$ref": "#/definitions/image_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for image.", 
                    "maxLength": 1000
                }
            }, 
            "title": "image Intent Spec with placement specified"
        }, 
        "user_group": {
            "description": "User Group Input Definition.", 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/user_group_input_resource"
                }
            }, 
            "title": "user group."
        }, 
        "aws_security_group_resources_def_status": {
            "description": "AWS Security Group resources", 
            "type": "object", 
            "properties": {
                "vpc_id": {
                    "pattern": "^vpc-[a-f0-9]{1,17}$", 
                    "type": "string", 
                    "description": "The AWS ID of the VPC for the security group."
                }, 
                "tag_list": {
                    "$ref": "#/definitions/aws_tag_list"
                }, 
                "id": {
                    "pattern": "^sg-[a-f0-9]{1,17}$", 
                    "type": "string", 
                    "description": "The AWS ID of the security group."
                }
            }, 
            "title": "AWS Security Group resources"
        }, 
        "generic_response": {
            "description": "Generic response object definition.", 
            "type": "object", 
            "properties": {
                "type": {
                    "type": "string", 
                    "description": "Type of the response."
                }, 
                "widget_id": {
                    "type": "string", 
                    "description": "ID of this response. This can be used further by the client to\nrequest data for only these widgets for refreshing results or\nfor performance reasons (async loading).\n"
                }, 
                "result": {
                    "$ref": "#/definitions/entities_with_metrics_result"
                }
            }, 
            "title": "Generic Response Defintion"
        }, 
        "vpn_connection_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpn_connection", 
                    "x-ntnx-enum": [
                        "vpn_connection"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vpn_connection list"
        }, 
        "oauth_generate_token_request": {
            "description": "Oauth token generate request", 
            "required": [
                "client_name", 
                "client_description", 
                "scopes"
            ], 
            "type": "object", 
            "properties": {
                "scopes": {
                    "items": {
                        "type": "string", 
                        "description": "entry for default scopes"
                    }, 
                    "type": "array"
                }, 
                "client_name": {
                    "type": "string", 
                    "description": "client name of the Oauth Client", 
                    "maxLength": 64
                }, 
                "client_description": {
                    "type": "string", 
                    "description": "client description of the Oauth Client", 
                    "maxLength": 1000
                }, 
                "expires_in": {
                    "type": "integer", 
                    "description": "Token expiration time in seconds", 
                    "format": "int64"
                }
            }, 
            "title": "Oauth token generate request"
        }, 
        "vm_recovery_points_realize_clone_input": {
            "description": "Input object for the clone API for vm recovery point. User can provide the optional UUID of the vm_recovery_point that will be created as a result of this operation on target site.\n", 
            "required": [
                "vm_uuid", 
                "clone_target_time", 
                "availability_zone_reference"
            ], 
            "type": "object", 
            "properties": {
                "vm_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the vm entity for which the recovery point is to be cloned.\n", 
                    "format": "UUID"
                }, 
                "availability_zone_reference": {
                    "description": "Reference to the availability zone where the new\nvm_recovery_point will be replicated.\n", 
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "clone_target_time": {
                    "type": "string", 
                    "description": "The target time of the state that the user wishes to clone to a\ntarget site. This is in internet date/time format (RFC 3339). This\nfield is explicitly used for time based replication in high frequency\nsnapshotting and will be ignored for a regular restore.\n", 
                    "format": "date-time"
                }, 
                "vm_recovery_point_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the new vm_recovery_point that will be created.\n", 
                    "format": "UUID"
                }, 
                "cluster_reference": {
                    "description": "Reference to the cluster where the new vm_recovery_point will\nbe replicated.\n", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "override_spec": {
                    "description": "Properties that will be overridden in new vm_recovery_point.\n", 
                    "$ref": "#/definitions/vm_recovery_points_override_spec"
                }
            }, 
            "title": "API input for vm_recovery_points_clone"
        }, 
        "network_device_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_device", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_device"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "cluster_network_entity": {
            "description": "This defines a generic network entity on the cluster, which includes it's\naddress, authentication details, and related metadata.\n", 
            "required": [
                "address"
            ], 
            "type": "object", 
            "properties": {
                "credentials": {
                    "description": "Username and password for authentication, if applicable.\n", 
                    "$ref": "#/definitions/credentials"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name for the network entity (optional)"
                }, 
                "proxy_type_list": {
                    "items": {
                        "default": "HTTP", 
                        "x-ntnx-enum": [
                            "HTTP", 
                            "HTTPS", 
                            "SOCKS"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "address": {
                    "description": "Network address details for this entity. This tells us how to\nlogically reach this entity.\n", 
                    "$ref": "#/definitions/address"
                }
            }, 
            "title": "Cluster Network Entity"
        }, 
        "vpn_connection_list_intent_response": {
            "description": "Response object for intentful operation of vpn_connections", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/vpn_connection_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vpn_connection_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "deployment_status": {
            "description": "Deployment related status for this gateway.", 
            "type": "object", 
            "properties": {
                "install_lb_route": {
                    "type": "boolean", 
                    "description": "Boolean flag indicating user opt-in for installing Xi LB route in\non-prem PC and PE CVMs provided on-prem PC, PE and VPN VM are in\nthe same subnet\n"
                }, 
                "vm_reference": {
                    "description": "Reference to the deployed gateway VM. Applies only to local gateway entities.\n", 
                    "$ref": "#/definitions/vm_reference"
                }, 
                "vcenter_deployment_details": {
                    "description": "vCenter specific information required to deploy the VPN VM\non on-prem ESXi clusters.\n", 
                    "$ref": "#/definitions/vcenter_deployment_details"
                }, 
                "ip_prefix_length": {
                    "type": "integer", 
                    "description": "IP prefix length of the subnet that the gateway VM is on.", 
                    "format": "uint16"
                }, 
                "static_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Static IP address of the VPN gateway VM."
                }, 
                "default_gateway_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Default gateway IP address."
                }, 
                "image_source_url": {
                    "type": "string", 
                    "description": "The software image installed on the gateway appliance."
                }, 
                "pe_cluster_reference": {
                    "description": "cluster reference required to identify which on-prem cluster to deploy\nthe vpn gateway vm on. this is required only for deployment on\non-prem clusters running esxi.\n", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "subnet_reference": {
                    "description": "The on-prem vlan subnet to deploy the VPN gateway VM on.", 
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "supported_software_version": {
                    "type": "string", 
                    "description": "The supported gateway appliance version."
                }, 
                "installed_software_version": {
                    "type": "string", 
                    "description": "The software version installed on the gateway appliance."
                }, 
                "vlan_id": {
                    "type": "integer", 
                    "description": "The on-prem VLAN to deploy the VPN gateway on.", 
                    "format": "uint16"
                }
            }, 
            "title": "Deployment related status for this gateway."
        }, 
        "vm_disk_reference": {
            "description": "The reference to a vm_disk", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_disk", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_disk"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vm_disk"
        }, 
        "app_published_service_response": {
            "description": "Published service definition", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "action_list", 
                "variable_list"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "type": {
                    "default": "K8S_SERVICE", 
                    "x-ntnx-enum": [
                        "K8S_SERVICE"
                    ], 
                    "type": "string", 
                    "description": "Type of published service"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_published_service_reference"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for service"
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional published service options"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Published service definition"
        }, 
        "resource_utilization_status": {
            "description": "stores resource utilization and limits for a domain", 
            "required": [
                "resource_type", 
                "units", 
                "value"
            ], 
            "properties": {
                "units": {
                    "type": "string", 
                    "description": "The units of the resource type"
                }, 
                "limit": {
                    "type": "integer", 
                    "description": "The resource consumption limit (unspecified is unlimited)"
                }, 
                "value": {
                    "type": "integer", 
                    "description": "The amount of resource consumed"
                }, 
                "resource_type": {
                    "type": "string", 
                    "description": "The type of resource (for example storage, CPUs)"
                }
            }, 
            "title": "Resource Utilization Status"
        }, 
        "user_usage_in_projects": {
            "description": "User usage in project definition.", 
            "required": [
                "api_version"
            ], 
            "type": "object", 
            "properties": {
                "project_resource_domain_list": {
                    "items": {
                        "required": [
                            "project_reference", 
                            "resource_domain"
                        ], 
                        "type": "object", 
                        "properties": {
                            "project_reference": {
                                "$ref": "#/definitions/project_reference"
                            }, 
                            "resource_domain": {
                                "description": "Usage information for the user in the project.", 
                                "$ref": "#/definitions/resource_domain_resources_status"
                            }
                        }
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "User usage in project definition."
        }, 
        "ip_pool": {
            "description": "IP pool.", 
            "type": "object", 
            "properties": {
                "range": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[ ](?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Range of IPs (example: 10.0.0.9 10.0.0.19).\n"
                }
            }, 
            "title": "IP pool"
        }, 
        "action_type_list_intent_response": {
            "description": "Response object for intentful operation of action_types", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/action_type_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_type_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "network_function_chain_intent_input": {
            "description": "An intentful representation of a network_function_chain", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/network_function_chain"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/network_function_chain_metadata"
                }
            }, 
            "title": "network_function_chain Intent Entity"
        }, 
        "vm_host_affinity_policy_vms_list_response": {
            "description": "Response object for list operation of VMs which are part of input policy.\n", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/vm_host_affinity_policy_vms_info"
                    }, 
                    "type": "array"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_host_affinity_policy_vms_list_metadata_output"
                }
            }, 
            "title": "VMs list response"
        }, 
        "action_type_intent_response": {
            "description": "Response object for intentful operations on a action_type", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/action_type_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/action_type"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_type_metadata"
                }
            }, 
            "title": "action_type Intent Response"
        }, 
        "network_security_rule_resources": {
            "properties": {
                "allow_ipv6_traffic": {
                    "type": "boolean"
                }, 
                "is_policy_hitlog_enabled": {
                    "type": "boolean"
                }, 
                "quarantine_rule": {
                    "description": "These rules are used for quarantining suspected VMs. Target group is a required attribute.  Empty inbound_allow_list will not allow anything into target group. Empty outbound_allow_list will allow everything from target group.\n", 
                    "type": "object", 
                    "properties": {
                        "action": {
                            "x-ntnx-enum": [
                                "APPLY", 
                                "MONITOR"
                            ], 
                            "type": "string", 
                            "description": "Type of action."
                        }, 
                        "outbound_allow_list": {
                            "items": {
                                "$ref": "#/definitions/network_rule"
                            }, 
                            "type": "array"
                        }, 
                        "target_group": {
                            "$ref": "#/definitions/target_group"
                        }, 
                        "inbound_allow_list": {
                            "items": {
                                "$ref": "#/definitions/network_rule"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "title": "Quarantine rule"
                }, 
                "isolation_rule": {
                    "description": "These rules are used for environmental isolation.", 
                    "type": "object", 
                    "properties": {
                        "action": {
                            "x-ntnx-enum": [
                                "APPLY", 
                                "MONITOR"
                            ], 
                            "type": "string", 
                            "description": "Type of action."
                        }, 
                        "first_entity_filter": {
                            "description": "The set of categories that matching VMs need to have.", 
                            "$ref": "#/definitions/category_filter"
                        }, 
                        "second_entity_filter": {
                            "description": "The set of categories that matching VMs need to have.", 
                            "$ref": "#/definitions/category_filter"
                        }
                    }, 
                    "title": "Isolation rule"
                }, 
                "app_rule": {
                    "description": "These rules govern what flows are allowed for app rules. Target group is a required attribute. Empty inbound_allow_list will not allow anything into the target group. Empty outbound_allow_list will not allow anything from the target group.\n", 
                    "type": "object", 
                    "properties": {
                        "action": {
                            "x-ntnx-enum": [
                                "APPLY", 
                                "MONITOR"
                            ], 
                            "type": "string", 
                            "description": "Type of deployment of the rule."
                        }, 
                        "outbound_allow_list": {
                            "items": {
                                "$ref": "#/definitions/network_rule"
                            }, 
                            "type": "array"
                        }, 
                        "target_group": {
                            "$ref": "#/definitions/target_group"
                        }, 
                        "inbound_allow_list": {
                            "items": {
                                "$ref": "#/definitions/network_rule"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "title": "App rule"
                }, 
                "ad_rule": {
                    "description": "These rules govern what flows are allowed for AD categories. Target group is a required attribute. Empty inbound_allow_list will not allow anything into the target group. Empty outbound_allow_list will not allow anything from the target group.\n", 
                    "type": "object", 
                    "properties": {
                        "action": {
                            "x-ntnx-enum": [
                                "APPLY", 
                                "MONITOR"
                            ], 
                            "type": "string", 
                            "description": "Type of deployment of the rule."
                        }, 
                        "outbound_allow_list": {
                            "items": {
                                "$ref": "#/definitions/network_rule"
                            }, 
                            "type": "array"
                        }, 
                        "target_group": {
                            "$ref": "#/definitions/target_group"
                        }, 
                        "inbound_allow_list": {
                            "items": {
                                "$ref": "#/definitions/network_rule"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "title": "AD rule"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "ad_rule"
                    ]
                }, 
                {
                    "required": [
                        "app_rule"
                    ]
                }, 
                {
                    "required": [
                        "isolation_rule"
                    ]
                }, 
                {
                    "required": [
                        "quarantine_rule"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Network security rule resources", 
            "title": "Network security rule resources"
        }, 
        "cell_resources": {
            "description": "Datacenter logical cell entity definition.", 
            "required": [
                "cell_class", 
                "datacenter_reference"
            ], 
            "type": "object", 
            "properties": {
                "datacenter_reference": {
                    "$ref": "#/definitions/datacenter_reference"
                }, 
                "cell_class": {
                    "type": "string", 
                    "description": "Human readable tag that denotes the type of hardware in a cell as well\nas the networking equipment and setup.\n", 
                    "maxLength": 100
                }
            }, 
            "title": "Cell Entity"
        }, 
        "entity_compliance_status": {
            "description": "An entity's compliance status details.", 
            "type": "object", 
            "properties": {
                "reason": {
                    "type": "string", 
                    "description": "If the entity in not in compliance, this field shows the reason as to why not.\n"
                }, 
                "compliance_state": {
                    "$ref": "#/definitions/policy_compliance_state"
                }, 
                "entity_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The entity UUID."
                }, 
                "policy_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The policy UUID."
                }
            }, 
            "title": "Entity Compliance with a Policy"
        }, 
        "blueprint_dependency_list": {
            "description": "Depends on definition for Application.", 
            "required": [
                "getter_resource_kind", 
                "getter_resource_name", 
                "setter_resource_attr", 
                "setter_resource_kind", 
                "setter_resource_name", 
                "action_resource_kind", 
                "action_resource_name", 
                "action_name"
            ], 
            "type": "object", 
            "properties": {
                "getter_resource_kind": {
                    "type": "string", 
                    "description": ""
                }, 
                "from_resource_kind": {
                    "type": "string", 
                    "description": ""
                }, 
                "setter_resource_kind": {
                    "type": "string", 
                    "description": ""
                }, 
                "setter_resource_name": {
                    "type": "string", 
                    "description": ""
                }, 
                "action_name": {
                    "type": "string", 
                    "description": ""
                }, 
                "action_resource_name": {
                    "type": "string", 
                    "description": ""
                }, 
                "getter_resource_name": {
                    "type": "string", 
                    "description": ""
                }, 
                "setter_resource_attr": {
                    "type": "string", 
                    "description": ""
                }, 
                "action_resource_kind": {
                    "type": "string", 
                    "description": ""
                }
            }, 
            "title": "Depends on Definition for Application."
        }, 
        "jwk_source": {
            "description": "API information for getting JWTs", 
            "type": "object", 
            "properties": {
                "api": {
                    "type": "string", 
                    "description": "XIG will poll on this api for JSON web keys.", 
                    "format": "uri"
                }
            }, 
            "title": "JWT source"
        }, 
        "virtual_network_list_intent_response": {
            "description": "Response object for intentful operation of virtual_networks", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/virtual_network_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/virtual_network_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "action_type_intent_input": {
            "description": "An intentful representation of a action_type", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/action_type"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_type_metadata"
                }
            }, 
            "title": "action_type Intent Entity"
        }, 
        "aws_elastic_ip_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_elastic_ip", 
                    "x-ntnx-enum": [
                        "aws_elastic_ip"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for aws_elastic_ip list"
        }, 
        "subnet_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "subnet", 
                    "x-ntnx-enum": [
                        "subnet"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for subnet list output"
        }, 
        "app_actionrun_input": {
            "description": "Request object for action_run, contains action_run_log", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/app_actionrun_spec"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/app_metadata"
                }
            }, 
            "title": "app actionrun request format"
        }, 
        "vpn_connection_resources_def_status": {
            "description": "VPN connection creation/modification status.", 
            "type": "object", 
            "properties": {
                "ebgp_status": {
                    "description": "eBGP status of this connection.", 
                    "$ref": "#/definitions/vpn_component_status"
                }, 
                "ipsec_tunnel_status": {
                    "description": "IPSec tunnel status of this connection.", 
                    "$ref": "#/definitions/vpn_component_status"
                }, 
                "remote_gateway_reference": {
                    "description": "The remote VPN gateway reference.", 
                    "$ref": "#/definitions/vpn_gateway_reference"
                }, 
                "peer_route_prefix_list": {
                    "items": {
                        "$ref": "#/definitions/ip_subnet_status"
                    }, 
                    "type": "array", 
                    "description": "IP prefixes learned from the remote gateway over eBGP."
                }, 
                "qos_config": {
                    "$ref": "#/definitions/qos_config_status"
                }, 
                "local_gateway_role": {
                    "x-ntnx-enum": [
                        "INITIATOR", 
                        "ACCEPTOR"
                    ], 
                    "type": "string", 
                    "description": "Local gateway role (acceptor or initiator) in the connection.\n"
                }, 
                "ipsec_config": {
                    "$ref": "#/definitions/ipsec_config_status"
                }, 
                "dynamic_route_priority": {
                    "minimum": 10, 
                    "type": "integer", 
                    "description": "Priority assigned to routes received on this connection over eBGP.\nA higher priority value indicates that the routes are more preferred.\n", 
                    "maximum": 1000, 
                    "format": "uint16"
                }, 
                "local_gateway_reference": {
                    "description": "The local VPN gateway reference.", 
                    "$ref": "#/definitions/vpn_gateway_reference"
                }, 
                "local_route_prefix_list": {
                    "items": {
                        "$ref": "#/definitions/ip_subnet_status"
                    }, 
                    "type": "array", 
                    "description": "IP prefixes advertised to the remote gateway over eBGP."
                }, 
                "dpd_config": {
                    "$ref": "#/definitions/dpd_config_status"
                }
            }, 
            "title": "VPN connection creation/modification status"
        }, 
        "blueprint_clone_input": {
            "description": "Clone Blueprint request.", 
            "required": [
                "metadata", 
                "blueprint_name"
            ], 
            "type": "object", 
            "properties": {
                "blueprint_name": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "Clone Blueprint request."
        }, 
        "instance_tenancy": {
            "x-ntnx-enum": [
                "DEFAULT", 
                "DEDICATED"
            ], 
            "type": "string", 
            "description": "The supported tenancy options for instances launched into the VPC.\n", 
            "title": "Instance Tenancy"
        }, 
        "aws_volume_type_def_status": {
            "description": "aws_volume_type resources status", 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string", 
                    "description": "aws_volume_type name."
                }, 
                "resources": {
                    "$ref": "#/definitions/aws_volume_type_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for aws_volume_type."
                }
            }, 
            "title": "aws_volume_type resources status"
        }, 
        "storage_policy_metadata": {
            "description": "The storage_policy kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when storage_policy was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "storage_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "storage_policy"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "storage_policy uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the storage_policy is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when storage_policy was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the storage_policy. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the storage_policy. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "storage_policy name", 
                    "maxLength": 80
                }
            }, 
            "title": "storage_policy metadata"
        }, 
        "app_def_status": {
            "description": "An intentful representation of a app status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "app Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the app."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the app, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/app_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for app."
                }
            }, 
            "title": "app Intent Status with placement specified"
        }, 
        "image_version_status": {
            "description": "The image version, which is composed of a product name and product version.\n", 
            "required": [
                "product_name", 
                "product_version"
            ], 
            "type": "object", 
            "properties": {
                "product_version": {
                    "type": "string", 
                    "description": "Version string for the disk image."
                }, 
                "product_name": {
                    "type": "string", 
                    "description": "Name of the producer/distribution of the image. For example windows or red hat.\n"
                }
            }, 
            "title": "Image version"
        }, 
        "alert_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "alert", 
                    "x-ntnx-enum": [
                        "alert"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for alert list output"
        }, 
        "vertex": {
            "description": "Vertex Information", 
            "type": "object", 
            "properties": {
                "is_one_hop": {
                    "type": "boolean", 
                    "description": "Denotes if this is a one-hop node."
                }, 
                "entity_type": {
                    "type": "string", 
                    "description": "Type of the entity represented by the vertex"
                }, 
                "label": {
                    "type": "string", 
                    "description": "Vertex label"
                }, 
                "vertex_id": {
                    "type": "string", 
                    "description": "ID of vertex."
                }, 
                "entity_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the entity represented by the vertex.", 
                    "format": "UUID"
                }, 
                "instance_count": {
                    "type": "integer", 
                    "description": "Number of instances within the node denoting a group"
                }
            }, 
            "title": "Vertex Information"
        }, 
        "permission_list_intent_response": {
            "description": "Response object for intentful operation of permissions", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/permission_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/permission_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "remote_syslog_server_list_intent_response": {
            "description": "Response object for intentful operation of remote_syslog_servers", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/remote_syslog_server_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_syslog_server_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "resource_charge_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "resource_charge", 
                    "x-ntnx-enum": [
                        "resource_charge"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for resource_charge list"
        }, 
        "resource_charge_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "resource_charge", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "resource_charge"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "packet_trace": {
            "description": "Output of the packet trace. Contains a list of user-configured\nlogical pipeline stages that the packet matched with, and the\naction at each stage (dropped/forwarded)\n", 
            "type": "object", 
            "properties": {
                "stage_list": {
                    "items": {
                        "$ref": "#/definitions/packet_trace_stage"
                    }, 
                    "type": "array", 
                    "description": "Details of stages that dropped/forwarded the packet"
                }
            }, 
            "title": "Packet Trace output"
        }, 
        "underlay_subnet": {
            "description": "Underlay subnet entity definition. It is for hardware device subnets, used by\ndatacenter management software to persist/configure devices.\n", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "The underlay subnet name", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/underlay_subnet_resources"
                }
            }, 
            "title": "Underlay subnet Entity"
        }, 
        "app_service_input_upload": {
            "description": "Service definition for Application", 
            "required": [
                "name", 
                "variable_list", 
                "action_list"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references to service action\n"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_service_reference_upload"
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "container_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s continaer spec"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }
            }, 
            "title": "Service for Application"
        }, 
        "floating_ip_intent_response": {
            "description": "Response object for intentful operations on a floating_ip", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/floating_ip_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/floating_ip"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/floating_ip_metadata"
                }
            }, 
            "title": "floating_ip Intent Response"
        }, 
        "service_group_list_response": {
            "description": "List response object for service groups", 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/service_group_response_resource"
                    }, 
                    "type": "array"
                }, 
                "metadata": {
                    "$ref": "#/definitions/service_group_list_metadata"
                }
            }, 
            "title": "Service group list response"
        }, 
        "docker_registry_image_search_list_intent_response": {
            "description": "Docker registry image search results response", 
            "required": [
                "metadata", 
                "api_version"
            ], 
            "type": "object", 
            "properties": {
                "entity_list": {
                    "items": {
                        "$ref": "#/definitions/docker_registry_image_status"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/docker_registry_list_metadata"
                }
            }, 
            "title": "Docker registry image search results response"
        }, 
        "cloud_tenant_reference": {
            "description": "The reference to a cloud_tenant", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cloud_tenant", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cloud_tenant"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a cloud_tenant"
        }, 
        "protection_rule_metadata": {
            "description": "The protection_rule kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when protection_rule was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "protection_rule", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "protection_rule"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "protection_rule uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the protection_rule is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when protection_rule was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the protection_rule. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the protection_rule. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "protection_rule name", 
                    "maxLength": 80
                }
            }, 
            "title": "protection_rule metadata"
        }, 
        "identifier_input": {
            "description": "The input definition object", 
            "required": [
                "name_list"
            ], 
            "type": "object", 
            "properties": {
                "name_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The list of names for which UUID is to be generated."
                }
            }, 
            "title": "The input definition."
        }, 
        "access_control_policy_intent_response": {
            "description": "Response object for intentful operations on a access_control_policy", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/access_control_policy_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/access_control_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/access_control_policy_metadata"
                }
            }, 
            "title": "access_control_policy Intent Response"
        }, 
        "selection_criteria": {
            "description": "Entity selection criteria for category assignment definition.", 
            "required": [
                "entity_type", 
                "expression_list"
            ], 
            "type": "object", 
            "properties": {
                "expression_list": {
                    "items": {
                        "$ref": "#/definitions/filter_expression"
                    }, 
                    "type": "array"
                }, 
                "entity_type": {
                    "type": "string", 
                    "description": "Entity type which has to be selected"
                }
            }, 
            "title": "Selection Criteria definition."
        }, 
        "volume_group_resources_input": {
            "description": "Volume group resources.", 
            "type": "object", 
            "properties": {
                "flash_mode": {
                    "x-ntnx-enum": [
                        "ENABLED", 
                        "DISABLED"
                    ], 
                    "type": "string", 
                    "description": "Flash Mode, if enabled all volume disks of the VG will be pinned to SSD tier.\n"
                }, 
                "load_balance_vm_attachments": {
                    "type": "boolean", 
                    "description": "Whether to enable volume group load balancing."
                }, 
                "created_by": {
                    "type": "string", 
                    "description": "Service/user who created this volume group."
                }, 
                "iscsi_target_prefix": {
                    "pattern": "^[\\da-zA-Z:\\.\\-]+$", 
                    "type": "string", 
                    "description": "iSCSI target prefix-name.", 
                    "maxLength": 512
                }, 
                "parent_reference": {
                    "description": "Reference to an entity to clone from.", 
                    "$ref": "#/definitions/reference"
                }, 
                "sharing_status": {
                    "x-ntnx-enum": [
                        "SHARED", 
                        "NOT_SHARED"
                    ], 
                    "type": "string", 
                    "description": "Whether the volume group can be shared across multiple iSCSI initiators.\n"
                }, 
                "attachment_list": {
                    "items": {
                        "$ref": "#/definitions/attachment_reference_input"
                    }, 
                    "type": "array", 
                    "description": "VMs attached to volume group."
                }, 
                "usage_type": {
                    "x-ntnx-enum": [
                        "USER", 
                        "INTERNAL", 
                        "TEMPORARY", 
                        "BACKUP_TARGET", 
                        "UNKNOWN"
                    ], 
                    "type": "string", 
                    "description": "Expected usage type for the volume group."
                }, 
                "target_secret": {
                    "type": "string", 
                    "description": "Target Secret in case of CHAP authentication."
                }, 
                "is_hidden": {
                    "type": "boolean", 
                    "description": "Whether the VG is meant to be hidden or not."
                }, 
                "disk_list": {
                    "items": {
                        "$ref": "#/definitions/volume_disk_resource_input"
                    }, 
                    "type": "array", 
                    "description": "Volume group disk specification."
                }
            }, 
            "title": "Volume group resources"
        }, 
        "availability_zone_resources_spec": {
            "description": "Availability Zone resources", 
            "required": [
                "management_plane_type"
            ], 
            "type": "object", 
            "properties": {
                "management_url": {
                    "type": "string", 
                    "description": "Identifier of the management plane. This could be the URL of the\nPC or the FQDN of Xi portal.\n"
                }, 
                "region": {
                    "type": "string", 
                    "description": "Cloud region where the data will be replicated to. Based on the\ncloud provider type the available list of regions will differ.\n"
                }, 
                "management_plane_type": {
                    "x-ntnx-enum": [
                        "PC", 
                        "Xi", 
                        "Local"
                    ], 
                    "type": "string", 
                    "description": "This defines the type of management entity. Its value can be Xi,\nPC, or Local. Local AZs are auto-created and cannot be deleted.\nHow to talk to management entity will be decided based on the type\nof management plane.\n"
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "Display name. It is mainly used by user interface to show the\nuser-friendly name of the availability zone. If unset, default value\nwill be used.\n", 
                    "maxLength": 64
                }, 
                "credentials": {
                    "type": "object", 
                    "description": "Credentials required to connect to a specific management plane.\n", 
                    "properties": {
                        "pc": {
                            "required": [
                                "remote_connection_reference"
                            ], 
                            "type": "object", 
                            "description": "Credentials for connecting to Prism Central.", 
                            "properties": {
                                "remote_connection_reference": {
                                    "description": "Reference to the remote connection entity for PC\ncommunication.\n", 
                                    "$ref": "#/definitions/remote_connection_reference"
                                }
                            }
                        }
                    }
                }
            }, 
            "title": "Availability Zone resources"
        }, 
        "capability_information": {
            "description": "Contains capability name and description", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "capability_description": {
                    "type": "string", 
                    "description": "Optional value describing the capability"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of capability"
                }
            }, 
            "title": "Encapsulates basic capability information"
        }, 
        "directory_reference": {
            "description": "directory service resource.", 
            "type": "object", 
            "properties": {
                "kind": {
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Directory Service Reference"
        }, 
        "disk": {
            "type": "object", 
            "description": "Disk specification.", 
            "title": "Disk specification."
        }, 
        "app_blueprint_deployment_reference": {
            "description": "The reference to a app_blueprint_deployment", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_blueprint_deployment", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_blueprint_deployment"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_blueprint_deployment"
        }, 
        "permission_intent_resource": {
            "description": "Response object for intentful operations on a permission", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/permission_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/permission"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/permission_metadata"
                }
            }, 
            "title": "permission Intent Response"
        }, 
        "blackout_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "blackout", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "blackout"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "alert_reference": {
            "description": "The reference to a alert", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "alert", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "alert"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a alert"
        }, 
        "audit_list_response": {
            "description": "Response object for audit list operations", 
            "required": [
                "api_version"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/audit_response"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/audit_list_metadata_output"
                }
            }, 
            "title": "Audit List response"
        }, 
        "recovery_plan_subnet_range_config": {
            "description": "Network subnet range.", 
            "required": [
                "start_ip_address", 
                "end_ip_address"
            ], 
            "type": "object", 
            "properties": {
                "start_ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Start IP address of the subnet range.\n"
                }, 
                "end_ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "End IP address of the subnet range.\n"
                }
            }, 
            "title": "Network subnet range."
        }, 
        "docker_registry_metadata": {
            "description": "The docker_registry kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when docker_registry was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "docker_registry", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "docker_registry"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "docker_registry uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the docker_registry is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when docker_registry was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the docker_registry. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the docker_registry. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "docker_registry name", 
                    "maxLength": 80
                }
            }, 
            "title": "docker_registry metadata"
        }, 
        "postal_address": {
            "description": "Postal address", 
            "type": "object", 
            "properties": {
                "country": {
                    "type": "string", 
                    "description": "Country name", 
                    "maxLength": 100
                }, 
                "state": {
                    "type": "string", 
                    "description": "State name", 
                    "maxLength": 100
                }, 
                "street": {
                    "type": "string", 
                    "description": "Street name and number", 
                    "maxLength": 100
                }, 
                "city": {
                    "type": "string", 
                    "description": "City name", 
                    "maxLength": 100
                }, 
                "zip_code": {
                    "type": "string", 
                    "description": "Zip code", 
                    "maxLength": 20
                }
            }, 
            "title": "Postal address"
        }, 
        "blueprint_upload_resources": {
            "description": "Resources for Blueprint.", 
            "type": "object", 
            "properties": {
                "client_attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Data needed for clients."
                }, 
                "service_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_input_upload"
                    }, 
                    "type": "array", 
                    "description": "Service definitions for Blueprint."
                }, 
                "substrate_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_substrate_input_upload"
                    }, 
                    "type": "array", 
                    "description": "Substrate definitions for Blueprint."
                }, 
                "credential_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_credential_input_upload"
                    }, 
                    "type": "array", 
                    "description": "Credential definitions for Blueprint."
                }, 
                "package_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_input_upload"
                    }, 
                    "type": "array", 
                    "description": "Package definitions for Blueprint."
                }, 
                "app_profile_list": {
                    "items": {
                        "$ref": "#/definitions/app_profile_input_upload"
                    }, 
                    "type": "array", 
                    "description": "App profile definitions for Blueprint."
                }, 
                "published_service_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_input_upload"
                    }, 
                    "type": "array", 
                    "description": "Published service definitions for Blueprint."
                }, 
                "default_credential_local_reference": {
                    "$ref": "#/definitions/app_credential_reference_upload"
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of blueprint", 
                    "maxLength": 64
                }
            }, 
            "title": "Resources for Blueprint."
        }, 
        "vm_resources_def_status": {
            "description": "VM Resources Status Definition.", 
            "type": "object", 
            "properties": {
                "num_threads_per_core": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Number of logical threads per core.", 
                    "format": "int32"
                }, 
                "apc_config": {
                    "description": "Information about Advanced Processor Comptability(APC) setting of VM.\n", 
                    "$ref": "#/definitions/vm_apc_config"
                }, 
                "is_agent_vm": {
                    "type": "boolean", 
                    "description": "Indicates whether the VM is an agent VM."
                }, 
                "protection_policy_state": {
                    "description": "Status of protection policy applied to this VM.\n", 
                    "$ref": "#/definitions/protection_policy_state"
                }, 
                "memory_size_mib": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Memory size in MiB.", 
                    "format": "int32"
                }, 
                "boot_config": {
                    "description": "Indicates which device the VM should boot from.", 
                    "$ref": "#/definitions/vm_boot_config"
                }, 
                "disk_list": {
                    "items": {
                        "$ref": "#/definitions/vm_disk_output_status"
                    }, 
                    "type": "array", 
                    "description": "Disks attached to the VM."
                }, 
                "serial_port_list": {
                    "items": {
                        "$ref": "#/definitions/serial_port"
                    }, 
                    "type": "array", 
                    "description": "Serial ports configured on the VM."
                }, 
                "generation_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Indicates the Generation UUID of the VM.", 
                    "format": "UUID"
                }, 
                "bios_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Indicates the BIOS UUID of the VM.", 
                    "format": "UUID"
                }, 
                "vga_console_enabled": {
                    "type": "boolean", 
                    "description": "Indicates whether VGA console has been enabled or not."
                }, 
                "power_state": {
                    "x-ntnx-enum": [
                        "ON", 
                        "OFF", 
                        "PAUSED", 
                        "UNKNOWN"
                    ], 
                    "type": "string", 
                    "description": "Current power state of the VM."
                }, 
                "recovery_plan_state_list": {
                    "items": {
                        "$ref": "#/definitions/recovery_plan_policy_state"
                    }, 
                    "type": "array", 
                    "description": "Status of the Recovery Plans associated with the VM."
                }, 
                "effective_storage_config": {
                    "description": "Effective storage configuration for AHV VMs.", 
                    "$ref": "#/definitions/effective_storage_config"
                }, 
                "num_vcpus_per_socket": {
                    "type": "integer", 
                    "description": "Number of vCPUs per socket.", 
                    "format": "int32"
                }, 
                "num_sockets": {
                    "type": "integer", 
                    "description": "Number of vCPU sockets.", 
                    "format": "int32"
                }, 
                "hardware_virtualization_enabled": {
                    "type": "boolean", 
                    "description": "Indicates whether hardware assisted virtualization should be enabled for the Guest OS. Once enabled, the Guest OS has the ability to deploy a nested hypervisor.\n"
                }, 
                "storage_config": {
                    "description": "Current status of storage configuration for AHV VMs.", 
                    "$ref": "#/definitions/vm_storage_config_status"
                }, 
                "protection_type": {
                    "x-ntnx-enum": [
                        "UNPROTECTED", 
                        "PD_PROTECTED", 
                        "RULE_PROTECTED"
                    ], 
                    "type": "string", 
                    "description": "The type of protection applied on a VM. PD_PROTECTED indicates a VM protected using Prism Element. RULE_PROTECTED indicates a VM protected using Prism Central.\n"
                }, 
                "gpu_list": {
                    "items": {
                        "$ref": "#/definitions/vm_gpu_output_status"
                    }, 
                    "type": "array", 
                    "description": "GPUs attached to the VM."
                }, 
                "machine_type": {
                    "x-ntnx-enum": [
                        "PC", 
                        "PSERIES", 
                        "Q35"
                    ], 
                    "type": "string", 
                    "description": "Machine type for the VM. Machine type Q35 is required for secure boot and does not support IDE disks.\n"
                }, 
                "hardware_clock_timezone": {
                    "type": "string", 
                    "description": "VM's hardware clock timezone in IANA TZDB format (America/Los_Angeles).\n"
                }, 
                "guest_customization": {
                    "$ref": "#/definitions/guest_customization_status"
                }, 
                "power_state_mechanism": {
                    "$ref": "#/definitions/vm_power_state_mechanism"
                }, 
                "is_vcpu_hard_pinned": {
                    "type": "boolean", 
                    "description": "Indicates whether the vCPUs should be hard pinned to specific pCPUs."
                }, 
                "memory_overcommit_enabled": {
                    "type": "boolean", 
                    "description": "Indicates whether memory overcommit feature should be enabled for the VM. If enabled, parts of the VM's memory may reside outside of the hypervisor physical memory. When enabled, it should be expected that the VM may suffer performance degradation.\n"
                }, 
                "vnuma_config": {
                    "description": "Information regarding vNUMA configuration.", 
                    "$ref": "#/definitions/vm_vnuma_config"
                }, 
                "nic_list": {
                    "items": {
                        "$ref": "#/definitions/vm_nic_output_status"
                    }, 
                    "type": "array", 
                    "description": "NICs attached to the VM."
                }, 
                "host_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "guest_os_id": {
                    "type": "string", 
                    "description": "String that identifies the OS running inside of the guest. Reserved for use by the system. Do not set or modify."
                }, 
                "guest_tools": {
                    "description": "Information regarding guest tools.", 
                    "$ref": "#/definitions/guest_tools_status"
                }, 
                "gpu_console_enabled": {
                    "type": "boolean", 
                    "description": "Indicates whether vGPU console is enabled or not."
                }, 
                "vtpm_config": {
                    "description": "VM vTPM configuration.", 
                    "$ref": "#/definitions/vm_vtpm_status"
                }, 
                "enable_cpu_passthrough": {
                    "type": "boolean", 
                    "description": "Indicates whether to passthrough the host's CPU features to the guest. Enabling this will disable live migration of the VM.\n"
                }, 
                "parent_reference": {
                    "description": "Reference to an entity that the VM was cloned or created from.\n", 
                    "$ref": "#/definitions/reference"
                }, 
                "hypervisor_type": {
                    "x-ntnx-enum": [
                        "ESX", 
                        "HyperV", 
                        "AHV"
                    ], 
                    "type": "string", 
                    "description": "The hypervisor type for the hypervisor the VM is hosted on.\n"
                }, 
                "disable_branding": {
                    "type": "boolean", 
                    "description": "Indicates whether to remove AHV branding from VM firmware tables.\n"
                }
            }, 
            "title": "VM Resources Status Definition"
        }, 
        "floating_ip_resources_def_status": {
            "description": "Floating IP allocation status.", 
            "type": "object", 
            "properties": {
                "external_subnet_reference": {
                    "description": "External subnet from which floating IP is selected.", 
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "vpc_reference": {
                    "description": "VPC in which the private IP exists.", 
                    "$ref": "#/definitions/vpc_reference"
                }, 
                "floating_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The Floating IP associated with the vnic."
                }, 
                "vm_nic_reference": {
                    "description": "NIC with which the floating IP is associated.", 
                    "$ref": "#/definitions/vm_nic_reference"
                }, 
                "private_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Private IP with which the floating IP is associated."
                }
            }, 
            "title": "Floating IP allocation status"
        }, 
        "action_rule_result_intent_resource": {
            "description": "Response object for intentful operations on a action_rule_result", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/action_rule_result_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/action_rule_result"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_rule_result_metadata"
                }
            }, 
            "title": "action_rule_result Intent Response"
        }, 
        "vm_resource_spec": {
            "description": "vm resource spce object.", 
            "type": "object", 
            "properties": {
                "ram_gb": {
                    "type": "number"
                }, 
                "hdd_gb": {
                    "type": "number"
                }, 
                "num_vcpus": {
                    "type": "integer"
                }
            }, 
            "title": "VM workload ResourceSpec Definition"
        }, 
        "action_rule_result_metadata": {
            "description": "The action_rule_result kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when action_rule_result was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "action_rule_result", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "action_rule_result"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "action_rule_result uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the action_rule_result is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when action_rule_result was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the action_rule_result. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the action_rule_result. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "action_rule_result name", 
                    "maxLength": 80
                }
            }, 
            "title": "action_rule_result metadata"
        }, 
        "nusights_proxy_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "nusights_proxy", 
                    "x-ntnx-enum": [
                        "nusights_proxy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for nusights_proxy list"
        }, 
        "resource_charge_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "resource_charge", 
                    "x-ntnx-enum": [
                        "resource_charge"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for resource_charge list output"
        }, 
        "storage_policy_list_intent_response": {
            "description": "Response object for intentful operation of storage_policys", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/storage_policy_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/storage_policy_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "whatif_scenarios": {
            "description": "Get scenarios response definition.", 
            "type": "object", 
            "properties": {
                "scenarios": {
                    "items": {
                        "type": "object", 
                        "properties": {
                            "uuid": {
                                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                "type": "string", 
                                "format": "UUID"
                            }, 
                            "name": {
                                "type": "string"
                            }
                        }
                    }, 
                    "type": "array"
                }, 
                "limit": {
                    "type": "integer", 
                    "description": "Limit for query."
                }, 
                "total_num": {
                    "type": "integer", 
                    "description": "Total number for scenario entity."
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset for query."
                }
            }, 
            "title": "Get Scenarios Reponse Definition"
        }, 
        "action_rule_list_intent_response": {
            "description": "Response object for intentful operation of action_rules", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/action_rule_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_rule_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "entity_metadata": {
            "description": "Entity metadata object definition.", 
            "type": "object", 
            "properties": {
                "cluster_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Cluster uuid on which the entity is present.", 
                    "format": "UUID"
                }, 
                "entity_id": {
                    "type": "string", 
                    "description": "Unique identifier of the entity."
                }, 
                "entity_name": {
                    "type": "string", 
                    "description": "Name of the entity."
                }, 
                "entity_type": {
                    "type": "string", 
                    "description": "Type of the entity."
                }
            }, 
            "title": "Entity Metadata Definition"
        }, 
        "aws_machine_type_intent_resource": {
            "description": "aws_machine_type entity", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/aws_machine_type_def_status"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_machine_type_metadata"
                }
            }, 
            "title": "aws_machine_type"
        }, 
        "internal_service_account_config": {
            "description": "Internal OpenLdap config", 
            "type": "object", 
            "properties": {
                "service_account_username": {
                    "type": "string", 
                    "description": "The username to connect to the directory service."
                }, 
                "service_account_password": {
                    "type": "string", 
                    "description": "The password to authenticate the request."
                }
            }, 
            "title": "Internal service account config"
        }, 
        "category_mapping_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "category_mapping", 
                    "x-ntnx-enum": [
                        "category_mapping"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for category_mapping list output"
        }, 
        "runway": {
            "description": "Runway Object.", 
            "type": "object", 
            "properties": {
                "min_runway_days": {
                    "type": "number", 
                    "description": "The runway value as number. Possbile value 0-365, and 365.5."
                }, 
                "storage_runway_days": {
                    "type": "number", 
                    "description": "The runway value as number. Possbile value 0-365, and 365.5."
                }, 
                "memory_runway_days": {
                    "type": "number", 
                    "description": "The runway value as number. Possbile value 0-365, and 365.5."
                }, 
                "cpu_runway_days": {
                    "type": "number", 
                    "description": "The runway value as number. Possbile value 0-365, and 365.5."
                }
            }, 
            "title": "Runway Definition"
        }, 
        "blackout": {
            "description": "The blackout entity defines the time period when clusters are in\nmaintenance mode or special circumstance, special actions need to be\nskipped, for example, alerts (like user defined alerts) and anomalies\nshould not be raised.\n", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/blackout_resources"
                }
            }, 
            "title": "Blackout entity"
        }, 
        "permission_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "permission", 
                    "x-ntnx-enum": [
                        "permission"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for permission list"
        }, 
        "vm_intent_response": {
            "description": "Response object for intentful operations on a vm", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vm_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vm"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_metadata"
                }
            }, 
            "title": "vm Intent Response"
        }, 
        "perspective": {
            "description": "Perspective object definition.", 
            "type": "object", 
            "properties": {
                "result_list": {
                    "items": {
                        "$ref": "#/definitions/base_response"
                    }, 
                    "type": "array", 
                    "description": "Result list for the perspecitve."
                }, 
                "title": {
                    "type": "string", 
                    "description": "Title of the perspective."
                }, 
                "search_query": {
                    "$ref": "#/definitions/auto_completion"
                }, 
                "summary_data_list": {
                    "items": {
                        "$ref": "#/definitions/entities_with_metrics_result"
                    }, 
                    "type": "array", 
                    "description": "List of summary data."
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "SUMMARY", 
                        "ALERTS", 
                        "ENTITIES", 
                        "TOPOLOGY", 
                        "ANOMALIES", 
                        "METRICS", 
                        "CONFIGURATION", 
                        "AMBIGUOUS", 
                        "TIMESERIES", 
                        "PAGE", 
                        "EVENTS", 
                        "ENTITY_DETAIL"
                    ], 
                    "type": "string", 
                    "description": "Name of the view that the perspective represents. The view is used\nto control the layout of widgets in this perspective.\n"
                }, 
                "metadata": {
                    "$ref": "#/definitions/metadata"
                }
            }, 
            "title": "Perspective Definition"
        }, 
        "software_type": {
            "x-ntnx-enum": [
                "NOS", 
                "NCC", 
                "PRISM_CENTRAL"
            ], 
            "type": "string", 
            "description": "Software type", 
            "title": "Software type"
        }, 
        "vm_gpu_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_gpu", 
                    "x-ntnx-enum": [
                        "vm_gpu"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for vm_gpu list output"
        }, 
        "vpc_route_table_intent_response": {
            "description": "Response object for intentful operations on a vpc_route_table", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vpc_route_table_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vpc_route_table"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vpc_route_table_metadata"
                }
            }, 
            "title": "vpc_route_table Intent Response"
        }, 
        "cloud_credentials_intent_input": {
            "description": "An intentful representation of a cloud_credentials", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/cloud_credentials"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cloud_credentials_metadata"
                }
            }, 
            "title": "cloud_credentials Intent Entity"
        }, 
        "rack_intent_input": {
            "description": "An intentful representation of a rack", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/rack"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/rack_metadata"
                }
            }, 
            "title": "rack Intent Entity"
        }, 
        "section": {
            "description": "Section Details. Section is a group of widgets.", 
            "required": [
                "section_id"
            ], 
            "type": "object", 
            "properties": {
                "repetition_criteria": {
                    "$ref": "#/definitions/repetition_criteria"
                }, 
                "template_rows": {
                    "items": {
                        "$ref": "#/definitions/template_row"
                    }, 
                    "type": "array", 
                    "description": "List of template rows."
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the section.", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the section.", 
                    "maxLength": 64
                }, 
                "section_id": {
                    "type": "string", 
                    "description": "Identifier for a section. This should be unique in a report config.", 
                    "maxLength": 64
                }
            }, 
            "title": "Section Details."
        }, 
        "aws_availability_zone_list_intent_response": {
            "description": "AWS VPC entity list.", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/aws_availability_zone_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_availability_zone_list_metadata_output"
                }
            }, 
            "title": "aws_availability_zone entity list"
        }, 
        "aws_elastic_ip_list_intent_response": {
            "description": "AWS VPC entity list.", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/aws_elastic_ip_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_elastic_ip_list_metadata_output"
                }
            }, 
            "title": "aws_elastic_ip entity list"
        }, 
        "blackout_list_intent_response": {
            "description": "Response object for intentful operation of blackouts", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/blackout_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blackout_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "aws_role_metadata": {
            "description": "The aws_role kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_role was last updated\n", 
                    "format": "date-time"
                }, 
                "kind": {
                    "default": "aws_role", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_role"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "aws_role uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the aws_role is in", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_role was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the aws_role"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "aws_role name"
                }
            }, 
            "title": "aws_role metadata"
        }, 
        "port_range_status": {
            "description": "Range of TCP/UDP ports.", 
            "type": "object", 
            "properties": {
                "end_port": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "start_port": {
                    "type": "integer", 
                    "format": "int32"
                }
            }, 
            "title": "TCP/UDP ports."
        }, 
        "file_item_reference": {
            "description": "The reference to a file_item", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "file_item", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "file_item"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a file_item"
        }, 
        "app_task_intent_response": {
            "description": "Response object for intentful operations on a app_task", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/app_task_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/app_task"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/app_task_metadata"
                }
            }, 
            "title": "app_task Intent Response"
        }, 
        "blueprint_launch_response": {
            "description": "Response containing the application uuid and create action and runlog uuid", 
            "required": [
                "api_version", 
                "metadata", 
                "status", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/blueprint_launch_response_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/blueprint_launch_spec"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "Response containing the application uuid and create action runlog uuid"
        }, 
        "aws_vpc_def_status": {
            "description": "aws_vpc resources status", 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string", 
                    "description": "aws_vpc name."
                }, 
                "resources": {
                    "$ref": "#/definitions/aws_vpc_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for aws_vpc."
                }
            }, 
            "title": "aws_vpc resources status"
        }, 
        "category_value_status": {
            "description": "Category value definition.", 
            "type": "object", 
            "properties": {
                "assignment_rule": {
                    "$ref": "#/definitions/assignment_rule"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The name of the category.", 
                    "maxLength": 64
                }, 
                "value": {
                    "type": "string", 
                    "description": "The value of the category.", 
                    "maxLength": 64
                }, 
                "system_defined": {
                    "readOnly": true, 
                    "type": "boolean", 
                    "description": "Specifying whether its a system defined category."
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the category value.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Category Value Definition."
        }, 
        "guest_customization": {
            "description": "VM guests may be customized at boot time using one of several different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep or cloud_init should be provided. Note that guest customization can currently only be set during VM creation. Attempting to change it after creation will result in an error. Additional properties can be specified. For example - in the context of VM template creation if \"override_script\" is set to \"True\" then the deployer can upload their own custom script.\n", 
            "title": "Guest Customization Configuration for creation/modification request", 
            "additionalProperties": {
                "type": "string"
            }, 
            "type": "object", 
            "properties": {
                "cloud_init": {
                    "description": "If this field is set, the guest will be customized using cloud-init. Either user_data or custom_key_values should be provided. If custom_key_ves are provided then the user data will be generated using these key-value pairs.\n", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "user_data"
                            ]
                        }, 
                        {
                            "required": [
                                "custom_key_values"
                            ]
                        }
                    ], 
                    "properties": {
                        "meta_data": {
                            "type": "string", 
                            "description": "The contents of the meta_data configuration for cloud-init. This can be formatted as YAML or JSON. The value must be base64 encoded.\n", 
                            "maxLength": 32000
                        }, 
                        "user_data": {
                            "type": "string", 
                            "description": "The contents of the user_data configuration for cloud-init. This can be formatted as YAML, JSON, or could be a shell script. The value must be base64 encoded.\n", 
                            "maxLength": 128000
                        }, 
                        "custom_key_values": {
                            "$ref": "#/definitions/custom_generic_key_value_pair"
                        }
                    }
                }, 
                "is_overridable": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Flag to allow override of customization by deployer."
                }, 
                "sysprep": {
                    "description": "If this field is set, the guest will be customized using Sysprep. Either unattend_xml or custom_key_values should be provided. If custom_key_values are provided then the unattended answer file will be generated using these key-value pairs.\n", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "unattend_xml"
                            ]
                        }, 
                        {
                            "required": [
                                "custom_key_values"
                            ]
                        }
                    ], 
                    "properties": {
                        "install_type": {
                            "default": "PREPARED", 
                            "x-ntnx-enum": [
                                "FRESH", 
                                "PREPARED"
                            ], 
                            "type": "string", 
                            "description": "Whether the guest will be freshly installed using this unattend configuration, or whether this unattend configuration will be applied to a pre-prepared image. Default is \"PREPARED\".\n"
                        }, 
                        "unattend_xml": {
                            "type": "string", 
                            "description": "This field contains a Sysprep unattend xml definition, as a string. The value must be base64 encoded.\n", 
                            "maxLength": 32000
                        }, 
                        "custom_key_values": {
                            "$ref": "#/definitions/custom_generic_key_value_pair"
                        }
                    }
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "sysprep"
                    ]
                }, 
                {
                    "required": [
                        "cloud_init"
                    ]
                }
            ]
        }, 
        "network_address_status": {
            "properties": {
                "ip_subnet": {
                    "$ref": "#/definitions/ip_subnet_status"
                }, 
                "address_type": {
                    "x-ntnx-enum": [
                        "ALL", 
                        "INTERNET"
                    ], 
                    "type": "string"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "address_type"
                    ]
                }, 
                {
                    "required": [
                        "ip_subnet"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Address (source/destination) of an IP packet. > This could be either an ip prefix or a special category like \"INTERNET\".", 
            "title": "Network address"
        }, 
        "support_case_upload_def_status": {
            "description": "Support Case upload status.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "description": "Definition of support case.", 
                    "type": "object", 
                    "properties": {
                        "portal_request_params": {
                            "$ref": "#/definitions/generic_key_value_pair"
                        }, 
                        "log_collector": {
                            "$ref": "#/definitions/log_collector_support_case_upload"
                        }, 
                        "ncc_checks": {
                            "$ref": "#/definitions/ncc_checks_support_case_upload"
                        }, 
                        "case_number": {
                            "type": "string", 
                            "description": "Support Case Number. This is the pretty version of case as visible to the user. Example \"00151752\"\n"
                        }
                    }, 
                    "title": "Support Case Upload."
                }
            }, 
            "title": "Support Case Upload Status."
        }, 
        "resource_charge_reference": {
            "description": "The reference to a resource_charge", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "resource_charge", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "resource_charge"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a resource_charge"
        }, 
        "groups_group_summary_map": {
            "additionalProperties": {
                "$ref": "#/definitions/groups_field_data"
            }, 
            "type": "object", 
            "description": "Group Summary Info Map.", 
            "title": "Group Summary Map"
        }, 
        "cell_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cell", 
                    "x-ntnx-enum": [
                        "cell"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for cell list output"
        }, 
        "app_runbook_input": {
            "description": "Runbook definition for Application", 
            "required": [
                "name", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "task_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "main_task_local_reference": {
                    "$ref": "#/definitions/app_task_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Runbook for Application"
        }, 
        "cloud_credentials": {
            "description": "Cloud credentials spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "User friendly name for the credentials.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/cloud_credentials_resources"
                }
            }, 
            "title": "Cloud Credentials Spec"
        }, 
        "vm_restore_override_spec": {
            "description": "Properties of the vm that can be overriden.\n", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "vm Name.", 
                    "maxLength": 80
                }, 
                "resources": {
                    "description": "vm Resources Definition.", 
                    "type": "object", 
                    "properties": {
                        "nic_list": {
                            "items": {
                                "$ref": "#/definitions/vm_nic"
                            }, 
                            "type": "array", 
                            "description": "NICs attached to the VM."
                        }
                    }, 
                    "title": "vm Resources"
                }
            }, 
            "title": "vm override spec"
        }, 
        "description_item": {
            "description": "Description item of upgrade notification", 
            "type": "object", 
            "properties": {
                "affected_release_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Earlier releases to which the notification applies."
                }, 
                "message": {
                    "type": "string"
                }, 
                "severity_level": {
                    "type": "string"
                }
            }, 
            "title": "Description item of upgrade notification"
        }, 
        "aws_vm_list_intent_response": {
            "description": "Response object for intentful operation of aws_vms", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/aws_vm_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_vm_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "guest_customization_status": {
            "description": "VM guests may be customized at boot time using one of several different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep or cloud_init should be provided. Note that guest customization can currently only be set during VM creation. Attempting to change it after creation will result in an error. Additional properties can be specified. For example - in the context of VM template creation if \"override_script\" is set to \"True\" then the deployer can upload their own custom script.\n", 
            "title": "Guest Customization Configuration for creation/modification request", 
            "additionalProperties": {
                "type": "string"
            }, 
            "type": "object", 
            "properties": {
                "cloud_init": {
                    "description": "If this field is set, the guest will be customized using cloud-init. Either user_data or custom_key_values should be provided. If custom_key_ves are provided then the user data will be generated using these key-value pairs.\n", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "user_data"
                            ]
                        }, 
                        {
                            "required": [
                                "custom_key_values"
                            ]
                        }
                    ], 
                    "properties": {
                        "meta_data": {
                            "type": "string", 
                            "description": "The contents of the meta_data configuration for cloud-init. This can be formatted as YAML or JSON. The value must be base64 encoded.\n"
                        }, 
                        "user_data": {
                            "type": "string", 
                            "description": "The contents of the user_data configuration for cloud-init. This can be formatted as YAML, JSON, or could be a shell script. The value must be base64 encoded.\n"
                        }, 
                        "custom_key_values": {
                            "$ref": "#/definitions/custom_generic_key_value_pair"
                        }
                    }
                }, 
                "is_overridable": {
                    "type": "boolean", 
                    "description": "Flag to allow override of customization by deployer."
                }, 
                "sysprep": {
                    "description": "If this field is set, the guest will be customized using Sysprep. Either unattend_xml or custom_key_values should be provided. If custom_key_values are provided then the unattended answer file will be generated using these key-value pairs.\n", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "unattend_xml"
                            ]
                        }, 
                        {
                            "required": [
                                "custom_key_values"
                            ]
                        }
                    ], 
                    "properties": {
                        "install_type": {
                            "default": "PREPARED", 
                            "x-ntnx-enum": [
                                "FRESH", 
                                "PREPARED"
                            ], 
                            "type": "string", 
                            "description": "Whether the guest will be freshly installed using this unattend configuration, or whether this unattend configuration will be applied to a pre-prepared image. Default is \"PREPARED\".\n"
                        }, 
                        "unattend_xml": {
                            "type": "string", 
                            "description": "This field contains a Sysprep unattend xml definition, as a string. The value must be base64 encoded.\n"
                        }, 
                        "custom_key_values": {
                            "$ref": "#/definitions/custom_generic_key_value_pair"
                        }
                    }
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "sysprep"
                    ]
                }, 
                {
                    "required": [
                        "cloud_init"
                    ]
                }
            ]
        }, 
        "direct_connect_virtual_interface_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "direct_connect_virtual_interface", 
                    "x-ntnx-enum": [
                        "direct_connect_virtual_interface"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for direct_connect_virtual_interface list"
        }, 
        "app_runlog_output_response": {
            "description": "Response containing the last 10 lines of output", 
            "required": [
                "api_version", 
                "metadata", 
                "status"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/app_runlog_output_status"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/app_runlog_metadata"
                }
            }, 
            "title": "Response containing the last 10 lines of output"
        }, 
        "external_network": {
            "description": "External network resource.", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "External network"
        }, 
        "app_published_service_input_upload": {
            "description": "Published service definition", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references to service action\n"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_published_service_reference_upload"
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "type": {
                    "default": "K8S_SERVICE", 
                    "x-ntnx-enum": [
                        "K8S_SERVICE"
                    ], 
                    "type": "string", 
                    "description": "Type of published service"
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional published service options"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Published service definition"
        }, 
        "remote_syslog_module_list_intent_response": {
            "description": "Response object for intentful operation of remote_syslog_modules", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/remote_syslog_module_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_syslog_module_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "ssh_user_def_status": {
            "description": "SSH User Entity", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/ssh_user_details"
                }
            }, 
            "title": "SSH User Entity"
        }, 
        "aws_machine_type_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_machine_type", 
                    "x-ntnx-enum": [
                        "aws_machine_type"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for aws_machine_type list"
        }, 
        "prism_central_nodes_reference": {
            "description": "The reference to a prism_central_nodes", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "prism_central_nodes", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "prism_central_nodes"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a prism_central_nodes"
        }, 
        "blueprint_intent_response": {
            "description": "Response object for intentful operations on a blueprint", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/blueprint_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/blueprint"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "blueprint Intent Response"
        }, 
        "blueprint_launch_spec": {
            "description": "Spec for Blueprint launch.", 
            "type": "object", 
            "properties": {
                "application_name": {
                    "type": "string", 
                    "description": "Application name by which the application need to be created."
                }, 
                "app_profile_reference": {
                    "$ref": "#/definitions/app_profile_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "description for blueprint launch", 
                    "maxLength": 5000
                }, 
                "resources": {
                    "description": "Runtime updated blueprint spec.", 
                    "$ref": "#/definitions/blueprint_resources"
                }
            }, 
            "title": "Spec for Blueprint launch."
        }, 
        "entity_sync_rule_process_input": {
            "items": {
                "type": "object", 
                "properties": {
                    "entity_reference": {
                        "description": "Reference of the entity that will be synced.", 
                        "$ref": "#/definitions/reference"
                    }
                }
            }, 
            "type": "array", 
            "description": "List of entities that need to be synced.", 
            "title": "List of entities that need to be synced"
        }, 
        "virtual_network_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "virtual_network", 
                    "x-ntnx-enum": [
                        "virtual_network"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for virtual_network list"
        }, 
        "network_function_reference": {
            "description": "The reference to a network_function", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_function", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_function"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a network_function"
        }, 
        "vpc_intent_resource": {
            "description": "Response object for intentful operations on a vpc", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vpc_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vpc"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vpc_metadata"
                }
            }, 
            "title": "vpc Intent Response"
        }, 
        "affected_entity_list": {
            "description": "Contains the list of entities. The entity information contains\nentity_kind, entity_name and entity_uuid.\n", 
            "required": [
                "entity_list"
            ], 
            "type": "object", 
            "properties": {
                "entity_list": {
                    "items": {
                        "$ref": "#/definitions/affected_entity"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Entity information list"
        }, 
        "billing_invoice": {
            "description": "Invoice generated for a billing duration.", 
            "type": "object", 
            "properties": {
                "status": {
                    "x-ntnx-enum": [
                        "DRAFT", 
                        "POSTED"
                    ], 
                    "type": "string", 
                    "description": "Status of the invoice."
                }, 
                "due_date": {
                    "type": "string", 
                    "description": "Date on which this invoice is due.", 
                    "format": "date"
                }, 
                "invoice_target_date": {
                    "type": "string", 
                    "description": "Target date of the invoice.", 
                    "format": "date"
                }, 
                "invoice_date": {
                    "type": "string", 
                    "description": "Date on which this invoice was generated.", 
                    "format": "date"
                }, 
                "invoice_item_list": {
                    "items": {
                        "$ref": "#/definitions/billing_invoice_item"
                    }, 
                    "type": "array", 
                    "description": "Line items of the invoice.", 
                    "title": "Line items of the invoice."
                }, 
                "amount": {
                    "description": "Amount that is due.", 
                    "$ref": "#/definitions/monetary_value"
                }, 
                "invoice_number": {
                    "type": "string", 
                    "description": "Unique number associated with the invoice."
                }, 
                "balance": {
                    "description": "Amount that due from last invoice.", 
                    "$ref": "#/definitions/monetary_value"
                }, 
                "account_name": {
                    "type": "string", 
                    "description": "Name of the billing account."
                }
            }, 
            "title": "Invoice details."
        }, 
        "layer2_stretch_def_status": {
            "description": "An intentful representation of a layer2_stretch status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "layer2_stretch Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the layer2_stretch."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the layer2_stretch, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/layer2_stretch_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for layer2_stretch."
                }
            }, 
            "title": "layer2_stretch Intent Status with placement specified"
        }, 
        "aws_key_pair_list_intent_response": {
            "description": "AWS VPC entity list.", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/aws_key_pair_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_key_pair_list_metadata_output"
                }
            }, 
            "title": "aws_key_pair entity list"
        }, 
        "directory_service_user_group_input": {
            "description": "A Directory Service user group.", 
            "type": "object", 
            "properties": {
                "distinguished_name": {
                    "type": "string", 
                    "description": "The Distinguished name for the user group.", 
                    "maxLength": 255
                }
            }, 
            "title": "A Directory Service user group."
        }, 
        "remote_connection_info": {
            "description": "Connection information", 
            "type": "object", 
            "properties": {
                "public_key": {
                    "type": "string", 
                    "description": "public key"
                }, 
                "cluster_fqdn": {
                    "type": "string", 
                    "description": "Cluster Fully Qualified Domain Name", 
                    "maxLength": 255
                }, 
                "peer_remote_connection_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Connection uuid for remote Peer", 
                    "format": "UUID"
                }, 
                "additional_capabilities": {
                    "items": {
                        "x-ntnx-enum": [
                            "SEED_REMOTE_AZ", 
                            "IGNORE_MISSING_REMOTE_PORT"
                        ], 
                        "type": "string", 
                        "description": "Additional capabilities to enable. Set by Initiator."
                    }, 
                    "type": "array"
                }, 
                "node_address_list": {
                    "items": {
                        "$ref": "#/definitions/address"
                    }, 
                    "type": "array"
                }, 
                "token": {
                    "$ref": "#/definitions/remote_connection_token"
                }, 
                "cluster_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of cluster", 
                    "format": "UUID"
                }, 
                "cluster_function": {
                    "x-ntnx-enum": [
                        "ACCESS_GRANT_SYSTEM", 
                        "AOS", 
                        "JUMP_BOX", 
                        "PRISM_CENTRAL", 
                        "XI_PORTAL"
                    ], 
                    "type": "string", 
                    "description": "cluster function string"
                }
            }, 
            "title": "Connection info"
        }, 
        "resource_upload_response": {
            "description": "Report resources upload response.", 
            "type": "object", 
            "properties": {
                "resource_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the resource uploaded.", 
                    "format": "UUID"
                }
            }, 
            "title": "Report resources upload response."
        }, 
        "aws_key_pair_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_key_pair", 
                    "x-ntnx-enum": [
                        "aws_key_pair"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for aws_key_pair list"
        }, 
        "image_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "image", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "image"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "recovery_plan_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "recovery_plan", 
                    "x-ntnx-enum": [
                        "recovery_plan"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for recovery_plan list"
        }, 
        "underlay_subnet_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "underlay_subnet", 
                    "x-ntnx-enum": [
                        "underlay_subnet"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for underlay_subnet list"
        }, 
        "docker_registry_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "docker_registry", 
                    "x-ntnx-enum": [
                        "docker_registry"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for docker_registry list"
        }, 
        "error_message_object": {
            "description": "structured error object for UI consumption", 
            "type": "object", 
            "properties": {
                "param_list": {
                    "items": {
                        "pattern": "^[^&<>'/\"]*$", 
                        "type": "string", 
                        "maxLength": 256
                    }, 
                    "type": "array", 
                    "description": "params to enhance error message"
                }, 
                "error_message": {
                    "type": "string", 
                    "description": "error message with param place holders", 
                    "maxLength": 2000
                }
            }, 
            "title": "Error object"
        }, 
        "vm_nic_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_nic", 
                    "x-ntnx-enum": [
                        "vm_nic"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vm_nic list"
        }, 
        "multicluster_config_spec": {
            "description": "Specification for multicluster configuration request.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "required": [
                        "execution_plan", 
                        "spec_list"
                    ], 
                    "type": "object", 
                    "description": "Multicluster config resources.", 
                    "properties": {
                        "upgrade_schedule": {
                            "$ref": "#/definitions/execution_schedule"
                        }, 
                        "execution_plan": {
                            "$ref": "#/definitions/execution_plan"
                        }, 
                        "spec_list": {
                            "items": {
                                "$ref": "#/definitions/cluster_intent_input"
                            }, 
                            "type": "array"
                        }
                    }
                }
            }, 
            "title": "Specification for multicluster configuration request"
        }, 
        "vm_nic_metadata": {
            "description": "The vm_nic kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_nic was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "vm_nic", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_nic"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vm_nic uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the vm_nic is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_nic was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_nic. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_nic. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "vm_nic name", 
                    "maxLength": 80
                }
            }, 
            "title": "vm_nic metadata"
        }, 
        "xen_workload": {
            "description": "Xen workload Object.", 
            "type": "object", 
            "properties": {
                "operating_system": {
                    "x-ntnx-enum": [
                        "$unknown", 
                        "Windows 2012R2", 
                        "Windows 2008R2"
                    ], 
                    "type": "string"
                }, 
                "vendor": {
                    "x-ntnx-enum": [
                        "$unknown", 
                        "XenApp", 
                        "Microsoft"
                    ], 
                    "type": "string"
                }, 
                "system_data": {
                    "type": "integer"
                }, 
                "rdsh_provisioning_type": {
                    "x-ntnx-enum": [
                        "$unknown", 
                        "PVS", 
                        "MCS", 
                        "VMClone"
                    ], 
                    "type": "string"
                }, 
                "num_users": {
                    "type": "integer"
                }, 
                "pvs_write_cache_size": {
                    "type": "integer"
                }, 
                "mcs_diff_size": {
                    "type": "integer"
                }, 
                "user_profile_data": {
                    "type": "integer"
                }
            }, 
            "title": "Xen workload Definition"
        }, 
        "rackable_unit_intent_response": {
            "description": "Response object for intentful operations on a rackable_unit", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/rackable_unit_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/rackable_unit"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/rackable_unit_metadata"
                }
            }, 
            "title": "rackable_unit Intent Response"
        }, 
        "vpc_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpc", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vpc"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "cloud_tenant_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cloud_tenant", 
                    "x-ntnx-enum": [
                        "cloud_tenant"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for cloud_tenant list"
        }, 
        "recovery_plan_job_reference": {
            "description": "The reference to a recovery_plan_job", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "recovery_plan_job", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "recovery_plan_job"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a recovery_plan_job"
        }, 
        "subnet_metadata": {
            "description": "The subnet kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when subnet was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "subnet", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "subnet"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "subnet uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the subnet is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when subnet was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the subnet. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the subnet. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "subnet name", 
                    "maxLength": 80
                }
            }, 
            "title": "subnet metadata"
        }, 
        "data_collector_config": {
            "description": "Data Collector Config inputted by user.", 
            "type": "object", 
            "properties": {
                "cluster_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the cluster on which the Data Collector will be installed.\n", 
                    "format": "UUID"
                }, 
                "data_collector_ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The IP address of collector.\n"
                }, 
                "data_collector_port_number": {
                    "type": "integer", 
                    "description": "The port number of collector.\n", 
                    "format": "int32"
                }, 
                "network_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the managed network which will be used to deploy MSP cluster.\n", 
                    "format": "UUID"
                }
            }, 
            "title": "Data Collector config information."
        }, 
        "storage_qos_policy_config_input": {
            "description": "QoS parameters to be enforced", 
            "required": [
                "throttled_iops"
            ], 
            "type": "object", 
            "properties": {
                "throttled_iops": {
                    "default": -1, 
                    "type": "integer", 
                    "description": "Throttled iops for the entities being governed.\nThe block size for the IO is 32kB.\n", 
                    "format": "int64"
                }
            }, 
            "title": "Storage Qos Configuration Input"
        }, 
        "ipfix_exporter_list_intent_response": {
            "description": "Response object for intentful operation of ipfix_exporters", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/ipfix_exporter_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ipfix_exporter_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "app_runlog_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_runlog", 
                    "x-ntnx-enum": [
                        "app_runlog"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for app_runlog list output"
        }, 
        "storage_policy_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "storage_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "storage_policy"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "user_intent_input": {
            "description": "An intentful representation of a user", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/user"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/user_metadata"
                }
            }, 
            "title": "user Intent Entity"
        }, 
        "cluster_capability_precheck": {
            "description": "Check to be done apart from AOS and AHV versions", 
            "type": "object", 
            "properties": {
                "check_name": {
                    "type": "string", 
                    "description": "Name of the check"
                }, 
                "has_passed": {
                    "type": "boolean", 
                    "description": "Whether this precheck has passed"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason of failed validation. Will only be populated when validation fails.\n"
                }
            }, 
            "title": "Prechecks to be done as part of the cluster capability check"
        }, 
        "layer2_stretch_related_entities": {
            "description": "Layer2 stretch related entities.", 
            "type": "object", 
            "properties": {
                "subnets": {
                    "items": {
                        "$ref": "#/definitions/layer2_stretch_subnet_info"
                    }, 
                    "type": "array"
                }, 
                "vpn_connections": {
                    "items": {
                        "$ref": "#/definitions/layer2_stretch_vpn_connection_info"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Layer2 stretch related entities"
        }, 
        "category_mapping_resources": {
            "description": "A mapping from an object to a category value.\n", 
            "required": [
                "category_name", 
                "category_value", 
                "ad_mapping"
            ], 
            "type": "object", 
            "properties": {
                "category_value": {
                    "type": "string", 
                    "description": "The value for the category that this mapping is for.", 
                    "maxLength": 200
                }, 
                "ad_mapping": {
                    "required": [
                        "directory_service_reference", 
                        "object_identifier"
                    ], 
                    "type": "object", 
                    "description": "A mapping to an object in Active Directory.", 
                    "properties": {
                        "object_identifier": {
                            "type": "string", 
                            "description": "The objectGUID for the object in AD.", 
                            "maxLength": 200
                        }, 
                        "directory_service_reference": {
                            "description": "The directory service that this mapping is for.", 
                            "$ref": "#/definitions/directory_service_reference"
                        }
                    }
                }, 
                "category_name": {
                    "type": "string", 
                    "description": "The name for the category that this mapping is for.", 
                    "maxLength": 200
                }
            }, 
            "title": "Identity Categorization Mapping"
        }, 
        "docker_registry_intent_resource": {
            "description": "Response object for intentful operations on a docker_registry", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/docker_registry_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/docker_registry"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/docker_registry_metadata"
                }
            }, 
            "title": "docker_registry Intent Response"
        }, 
        "user_group_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "user_group", 
                    "x-ntnx-enum": [
                        "user_group"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for user_group list"
        }, 
        "dpd_config_status": {
            "description": "DPD (Dead Peer Detection) related configuration spec for the VPN connections.", 
            "type": "object", 
            "properties": {
                "operation": {
                    "x-ntnx-enum": [
                        "RESTART", 
                        "CLEAR", 
                        "HOLD"
                    ], 
                    "type": "string", 
                    "description": "Operation to be performed on detecting a dead peer."
                }, 
                "interval_secs": {
                    "type": "integer", 
                    "description": "The amount of time the peer waits for traffic before sending a DPD request.", 
                    "format": "uint64"
                }, 
                "timeout_secs": {
                    "type": "integer", 
                    "description": "The maximum amount of time to wait for a DPD response before marking the peer as dead.\n", 
                    "format": "uint64"
                }
            }, 
            "title": "DPD (Dead Peer Detection) related configuration spec for the VPN connection"
        }, 
        "subnet_reference": {
            "description": "The reference to a subnet", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "subnet", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "subnet"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a subnet"
        }, 
        "blueprint_deployment_response": {
            "description": "Deployment definition for Application.", 
            "required": [
                "name", 
                "uuid", 
                "substrate_local_reference", 
                "min_replicas", 
                "max_replicas", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "percent_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "fault_domain_scope": {
                    "x-ntnx-enum": [
                        "HOST", 
                        "CLUSTER", 
                        "AZ"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "type": {
                    "default": "GREENFIELD", 
                    "x-ntnx-enum": [
                        "BROWNFIELD", 
                        "GREENFIELD", 
                        "K8S_DEPLOYMENT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for blueprint deployment"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "published_service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_reference"
                    }, 
                    "type": "array", 
                    "description": "List of references for published services"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "max_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Maximum replicas for the deployment."
                }, 
                "package_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_reference"
                    }, 
                    "type": "array", 
                    "description": "List of references for the packages"
                }, 
                "substrate_local_reference": {
                    "$ref": "#/definitions/app_substrate_reference"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "min_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Minimum replicas for the deployment."
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional deployment options"
                }, 
                "num_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "brownfield_instance_list": {
                    "items": {
                        "$ref": "#/definitions/brownfield_instance_input"
                    }, 
                    "type": "array", 
                    "description": "brownfield map"
                }
            }, 
            "title": "Deployment Definition for Application."
        }, 
        "ssh_user_intent_response": {
            "description": "Response object for intentful operations on a ssh_user", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/ssh_user_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/ssh_user"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ssh_user_metadata"
                }
            }, 
            "title": "ssh_user Intent Response"
        }, 
        "service_config_status": {
            "description": "Service configuration state.", 
            "type": "object", 
            "properties": {
                "validation_result_list": {
                    "items": {
                        "$ref": "#/definitions/validation_result"
                    }, 
                    "type": "array", 
                    "description": "Validation results of the service enablement. Will only be populated when user does validation_only operation.\n"
                }, 
                "task_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Enablement task uuid for the submitted request. This will not be populated when validation only is done.\n", 
                    "format": "UUID"
                }, 
                "configuration_info": {
                    "$ref": "#/definitions/configuration_info"
                }
            }, 
            "title": "Service configuration state."
        }, 
        "physical_availability_zone_metadata": {
            "description": "The physical_availability_zone kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when physical_availability_zone was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "physical_availability_zone", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "physical_availability_zone"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "physical_availability_zone uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the physical_availability_zone is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when physical_availability_zone was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the physical_availability_zone. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the physical_availability_zone. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "physical_availability_zone name", 
                    "maxLength": 80
                }
            }, 
            "title": "physical_availability_zone metadata"
        }, 
        "image_architecture": {
            "x-ntnx-enum": [
                "X86_64", 
                "PPC64", 
                "PPC64LE"
            ], 
            "type": "string", 
            "description": "The supported CPU architecture for a disk image.", 
            "title": "Image architecture"
        }, 
        "oauth_metadata": {
            "description": "The oauth kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when oauth was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "oauth", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "oauth"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "oauth uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the oauth is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when oauth was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the oauth. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the oauth. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "oauth name", 
                    "maxLength": 80
                }
            }, 
            "title": "oauth metadata"
        }, 
        "datacenter_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "datacenter", 
                    "x-ntnx-enum": [
                        "datacenter"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for datacenter list"
        }, 
        "action_rule_result_action_input": {
            "description": "Action input for action rule execution instnaces.", 
            "type": "object", 
            "properties": {
                "action_rule_result_uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "A list of action rule result instance UUIDs to be acted on,\nlike aborted.  If the list is empty, that means apply to all\naction rule result instances in the system.  Note, only action\nrule result instance not reached end status can be aborted.\n"
                }
            }, 
            "title": "Action input for action rule execution instance."
        }, 
        "category_key_list_response": {
            "description": "Category key list response.", 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/category_key_status"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/category_list_metadata"
                }
            }, 
            "title": "Category key list response."
        }, 
        "app_runbook_input_upload": {
            "description": "Runbook definition for Application", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "task_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "main_task_local_reference": {
                    "$ref": "#/definitions/app_task_reference_upload"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Runbook for Application"
        }, 
        "subnet_intent_input": {
            "description": "An intentful representation of a subnet", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/subnet"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/subnet_metadata"
                }
            }, 
            "title": "subnet Intent Entity"
        }, 
        "cloud_tenant_def_status": {
            "description": "An intentful representation of a cloud_tenant status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "cloud_tenant Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the cloud_tenant."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the cloud_tenant, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/cloud_tenant_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for cloud_tenant."
                }
            }, 
            "title": "cloud_tenant Intent Status with placement specified"
        }, 
        "network_device_list_intent_response": {
            "description": "Response object for intentful operation of network_devices", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/network_device_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/network_device_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "blueprint_pending_launches_list_response": {
            "description": "Response containing all the bp launch requests which have not completed", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entites": {
                    "items": {
                        "$ref": "#/definitions/blueprint_pending_launches_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_list_metadata_output"
                }
            }, 
            "title": "Response containing all the pending bp launches"
        }, 
        "disk_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "disk", 
                    "x-ntnx-enum": [
                        "disk"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for disk list output"
        }, 
        "network_device_intent_resource": {
            "description": "Response object for intentful operations on a network_device", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/network_device_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/network_device"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/network_device_metadata"
                }
            }, 
            "title": "network_device Intent Response"
        }, 
        "execution_plan": {
            "default": "PARALLEL", 
            "x-ntnx-enum": [
                "SEQUENTIAL", 
                "PARALLEL"
            ], 
            "type": "string", 
            "description": "Execution plan for multiple requests.", 
            "title": "Execution plan for multiple requests"
        }, 
        "action_template_metadata": {
            "description": "The action_template kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when action_template was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "action_template", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "action_template"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "action_template uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the action_template is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when action_template was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the action_template. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the action_template. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "action_template name", 
                    "maxLength": 80
                }
            }, 
            "title": "action_template metadata"
        }, 
        "user_group_intent_response": {
            "description": "Response object for intentful operations on a user_group", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/user_group_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/user_group"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/user_group_metadata"
                }
            }, 
            "title": "user_group Intent Response"
        }, 
        "marketplace_item_render_input": {
            "description": "Source spec that describes an entity like a VM, Image that should be translated into an marketplace item\n", 
            "required": [
                "name", 
                "input_type", 
                "input_spec"
            ], 
            "type": "object", 
            "properties": {
                "input_type": {
                    "x-ntnx-enum": [
                        "VM_REFERENCE", 
                        "VM_REFERENCE_WITH_CUSTOMIZATION", 
                        "IMAGE_REFERENCE"
                    ], 
                    "type": "string"
                }, 
                "input_spec": {
                    "properties": {
                        "vm_reference_with_customization": {
                            "$ref": "#/definitions/vm_reference_with_customization"
                        }, 
                        "vm_reference": {
                            "$ref": "#/definitions/vm_reference"
                        }, 
                        "image_reference": {
                            "$ref": "#/definitions/image_reference"
                        }
                    }, 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "vm_reference"
                            ]
                        }, 
                        {
                            "required": [
                                "vm_reference_with_customization"
                            ]
                        }, 
                        {
                            "required": [
                                "image_reference"
                            ]
                        }
                    ], 
                    "type": "object", 
                    "description": "Spec based on the type", 
                    "title": "Spec for the given entity type"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the rendered marketplace item", 
                    "maxLength": 64
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for the rendered marketplace item", 
                    "maxLength": 1000
                }
            }, 
            "title": "Render marketplace item input spec"
        }, 
        "alert_resources": {
            "description": "Alert entity definition.", 
            "required": [
                "type", 
                "title", 
                "severity"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "type": "string", 
                    "description": "The last time this alert was updated.  System sets this.", 
                    "format": "date-time"
                }, 
                "source_entity": {
                    "type": "object", 
                    "description": "The entity that causes the alert.", 
                    "properties": {
                        "cluster_uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "description": "The UUID for the cluster that contained the source entity\nat the alert creation time.\n", 
                            "format": "UUID"
                        }, 
                        "entity": {
                            "$ref": "#/definitions/entity_info"
                        }
                    }
                }, 
                "rca_metadata_list": {
                    "items": {
                        "$ref": "#/definitions/rca_metadata"
                    }, 
                    "type": "array", 
                    "description": "List of cause and resolution object from alert RCA metadata."
                }, 
                "affected_entity_list": {
                    "items": {
                        "$ref": "#/definitions/entity_info"
                    }, 
                    "type": "array", 
                    "description": "A list of entities causing and/or related to this alert.\n"
                }, 
                "severity": {
                    "description": "Alert instance severity.", 
                    "$ref": "#/definitions/severity"
                }, 
                "title": {
                    "type": "string", 
                    "description": "Alert title"
                }, 
                "default_message": {
                    "type": "string", 
                    "description": "Alert message."
                }, 
                "creation_time": {
                    "type": "string", 
                    "description": "The time that this alert was created.", 
                    "format": "date-time"
                }, 
                "resolution_status": {
                    "description": "This indicates the resolution status, time, and who did it.", 
                    "$ref": "#/definitions/alert_state"
                }, 
                "indicator_list": {
                    "items": {
                        "$ref": "#/definitions/indicator"
                    }, 
                    "type": "array", 
                    "description": "The symptoms that caused this alert"
                }, 
                "acknowledged_status": {
                    "description": "This indicates the acknowlegement status, time, and who did it.\n", 
                    "$ref": "#/definitions/alert_state"
                }, 
                "is_user_defined": {
                    "type": "boolean", 
                    "description": "The alert is raised by user defined policy or not."
                }, 
                "severity_trail_list": {
                    "items": {
                        "type": "object", 
                        "properties": {
                            "severity_change_time": {
                                "type": "string", 
                                "format": "date-time"
                            }, 
                            "severity": {
                                "$ref": "#/definitions/severity"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "The field has a list of information alert severity change history. If\nthe alert is duplicated without severity change, then, that instance\nwill not be saved here.\n"
                }, 
                "classification_list": {
                    "items": {
                        "type": "string", 
                        "maxLength": 64
                    }, 
                    "type": "array", 
                    "description": "Component classification"
                }, 
                "possible_cause_list": {
                    "items": {
                        "$ref": "#/definitions/cause_analysis"
                    }, 
                    "type": "array", 
                    "description": "An ordered list of the possible causes and resolutions for the alert.\n"
                }, 
                "impact_type_list": {
                    "items": {
                        "type": "string", 
                        "maxLength": 64
                    }, 
                    "type": "array", 
                    "description": "The area this alert could impact.\n"
                }, 
                "parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/param_value"
                    }, 
                    "type": "object", 
                    "description": "Alert notification type specific parameters."
                }, 
                "type": {
                    "type": "string", 
                    "description": "A preconfigured, or dynamically created alert type or alert type UUID.\nFor example, A1128 for the storage pool space usage exceeded alerts,\nor, a real UUID for user defined alert policy.\n"
                }, 
                "impact_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "readOnly": true, 
                    "type": "array", 
                    "description": "The impact of the alert."
                }, 
                "latest_occurrence_time": {
                    "type": "string", 
                    "description": "Alert instances could be dedupped by the system.  However, the last\ntime this similar alert was received is still be updated in this\nfield.\n", 
                    "format": "date-time"
                }
            }, 
            "title": "Alert entity"
        }, 
        "access_control_policy_intent_resource": {
            "description": "Response object for intentful operations on a access_control_policy", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/access_control_policy_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/access_control_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/access_control_policy_metadata"
                }
            }, 
            "title": "access_control_policy Intent Response"
        }, 
        "app_task_def_status": {
            "description": "An intentful representation of a app_task status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "app_task Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the app_task."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the app_task, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/app_task_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for app_task."
                }
            }, 
            "title": "app_task Intent Status with placement specified"
        }, 
        "support_case_upload_reference": {
            "description": "The reference to a support_case_upload", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "support_case_upload", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "support_case_upload"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a support_case_upload"
        }, 
        "aws_security_group_intent_resource": {
            "description": "aws_security_group entity", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/aws_security_group_def_status"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_security_group_metadata"
                }
            }, 
            "title": "aws_security_group"
        }, 
        "volume_group_metadata": {
            "description": "The volume_group kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when volume_group was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "volume_group", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "volume_group"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "volume_group uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the volume_group is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when volume_group was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the volume_group. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the volume_group. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "volume_group name", 
                    "maxLength": 80
                }
            }, 
            "title": "volume_group metadata"
        }, 
        "network_security_rule": {
            "description": "Network security rule", 
            "required": [
                "name", 
                "resources"
            ], 
            "properties": {
                "name": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/network_security_rule_resources"
                }, 
                "description": {
                    "type": "string", 
                    "maxLength": 1000
                }
            }, 
            "title": "Network security rule"
        }, 
        "network_function_chain_intent_response": {
            "description": "Response object for intentful operations on a network_function_chain", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/network_function_chain_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/network_function_chain"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/network_function_chain_metadata"
                }
            }, 
            "title": "network_function_chain Intent Response"
        }, 
        "cause_analysis": {
            "description": "The root cause analysis and possible resolutions.", 
            "type": "object", 
            "properties": {
                "resolution_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "cause_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Alert cause analysis"
        }, 
        "vpn_connection_metadata": {
            "description": "The vpn_connection kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vpn_connection was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "vpn_connection", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vpn_connection"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vpn_connection uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the vpn_connection is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vpn_connection was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vpn_connection. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vpn_connection. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "vpn_connection name", 
                    "maxLength": 80
                }
            }, 
            "title": "vpn_connection metadata"
        }, 
        "rack_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "rack", 
                    "x-ntnx-enum": [
                        "rack"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for rack list"
        }, 
        "capability": {
            "description": "Capability object containing information about each capability", 
            "type": "object", 
            "properties": {
                "capability_description": {
                    "type": "string", 
                    "description": "Optional value describing the capability"
                }, 
                "self_capability": {
                    "description": "This describes the capabilities of the endpoint where the request is hit.\nFor example, for a PC endpoint and a PC specific capability, this will contain the specific\ncapability details for the PC.\n", 
                    "$ref": "#/definitions/capability_details"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of capability"
                }, 
                "capable_members": {
                    "items": {
                        "$ref": "#/definitions/capability_details"
                    }, 
                    "type": "array", 
                    "description": "List of members having the capability"
                }
            }, 
            "title": "Capability info object"
        }, 
        "token": {
            "description": "Token object definition. This holds the Interpretation of a query term.\n", 
            "type": "object", 
            "properties": {
                "display_context": {
                    "description": "Underlying representation of the token.", 
                    "$ref": "#/definitions/expression"
                }, 
                "identifier": {
                    "description": "Identifier corresponding to the token.", 
                    "$ref": "#/definitions/expression"
                }, 
                "match_type": {
                    "type": "string", 
                    "description": "Match type of the query term (e.g. exact, prefix)."
                }, 
                "is_child_entity_type": {
                    "type": "boolean", 
                    "description": "An indication whether the token is a child entity type."
                }, 
                "additional_context": {
                    "items": {
                        "$ref": "#/definitions/expression"
                    }, 
                    "type": "array", 
                    "description": "Any additional information we have about the token."
                }
            }, 
            "title": "Token Defintion"
        }, 
        "blueprint_pending_launches_resource": {
            "description": "Response object for the launches in progress for app blueprints", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/blueprint_pending_launches_status"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "blueprint launches in progress response"
        }, 
        "cloud_credentials_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cloud_credentials", 
                    "x-ntnx-enum": [
                        "cloud_credentials"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for cloud_credentials list"
        }, 
        "underlay_subnet_metadata": {
            "description": "The underlay_subnet kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when underlay_subnet was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "underlay_subnet", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "underlay_subnet"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "underlay_subnet uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the underlay_subnet is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when underlay_subnet was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the underlay_subnet. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the underlay_subnet. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "underlay_subnet name", 
                    "maxLength": 80
                }
            }, 
            "title": "underlay_subnet metadata"
        }, 
        "project_intent_response": {
            "description": "Response object for intentful operations on a project", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/project_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/project"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/project_metadata"
                }
            }, 
            "title": "project Intent Response"
        }, 
        "network_function_chain_reference": {
            "description": "The reference to a network_function_chain", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_function_chain", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_function_chain"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a network_function_chain"
        }, 
        "migration_target": {
            "description": "A migration target is comprised of availability zone reference\nand optionally reference to any particular cluster within that\navailability zone.\n", 
            "required": [
                "availability_zone_reference"
            ], 
            "type": "object", 
            "properties": {
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }
            }, 
            "title": "Migration target"
        }, 
        "vm_gpu_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_gpu", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_gpu"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "direct_connect_virtual_interface_def_status": {
            "description": "An intentful representation of a direct_connect_virtual_interface status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "direct_connect_virtual_interface Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the direct_connect_virtual_interface."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the direct_connect_virtual_interface, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/direct_connect_virtual_interface_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for direct_connect_virtual_interface."
                }
            }, 
            "title": "direct_connect_virtual_interface Intent Status with placement specified"
        }, 
        "composite_response": {
            "description": "Composite response object defintion.", 
            "type": "object", 
            "properties": {
                "layout": {
                    "x-ntnx-enum": [
                        "ADJACENT", 
                        "STACKED"
                    ], 
                    "type": "string", 
                    "description": "Layout of the composite response."
                }, 
                "data_list": {
                    "items": {
                        "type": "object"
                    }, 
                    "type": "array", 
                    "description": "List containing response. This contains base_response object definiton."
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "ONEOF", 
                        "ALL"
                    ], 
                    "type": "string", 
                    "description": "Type of the response."
                }
            }, 
            "title": "Composite Response Definition"
        }, 
        "remote_connection_reference": {
            "description": "The reference to a remote_connection", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_connection", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_connection"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a remote_connection"
        }, 
        "nusights_proxy_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "nusights_proxy", 
                    "x-ntnx-enum": [
                        "nusights_proxy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for nusights_proxy list output"
        }, 
        "vm_recovery_point_reference": {
            "description": "The reference to a vm_recovery_point", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_recovery_point", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_recovery_point"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vm_recovery_point"
        }, 
        "migrate_disks_input": {
            "properties": {
                "disks_to_target_container_list": {
                    "items": {
                        "$ref": "#/definitions/migrate_disk_container_reference"
                    }, 
                    "type": "array", 
                    "description": "List of UUIDs of the disks that need to be migrated."
                }, 
                "target_container_reference": {
                    "description": "Reference to the target container to which all disks of the VM will be migrated to.\n", 
                    "$ref": "#/definitions/reference"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "disks_to_target_container_list"
                    ]
                }, 
                {
                    "required": [
                        "target_container_reference"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Specifies the disks for migration and the target container.", 
            "title": "Migrate Disks"
        }, 
        "routing_policy": {
            "description": "An intentful representation of a routing_policy spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for routing_policy.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/routing_policy_resources"
                }, 
                "name": {
                    "type": "string", 
                    "description": "routing_policy Name.", 
                    "maxLength": 256
                }
            }, 
            "title": "routing_policy Intent Spec with placement specified"
        }, 
        "favorite_get_response": {
            "description": "Contains the list of favorites.", 
            "type": "object", 
            "properties": {
                "favorite_list": {
                    "type": "array", 
                    "description": "List of favorites.",
                    "items": {
                      "$ref": "#/definitions/favorite"
                    }
                }
            }, 
            "title": "Get favorites response."
        }, 
        "aws_role_intent_resource": {
            "description": "aws_role entity", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/aws_role_def_status"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_role_metadata"
                }
            }, 
            "title": "aws_role"
        }, 
        "disk_intent_resource": {
            "description": "Response object for intentful operations on a disk", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/disk_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/disk"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/disk_metadata"
                }
            }, 
            "title": "disk Intent Response"
        }, 
        "app_service_response": {
            "description": "Service definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "action_list", 
                "variable_list"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_service_reference"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "container_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s continaer spec"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for service"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Service for Application"
        }, 
        "disk_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "disk", 
                    "x-ntnx-enum": [
                        "disk"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for disk list"
        }, 
        "asn": {
            "description": "Autonomous system number", 
            "title": "ASN", 
            "format": "uint32", 
            "maximum": 4294967294, 
            "minimum": 0, 
            "type": "integer"
        }, 
        "assignment_rule": {
            "description": "Rule defintion for entity selection.", 
            "required": [
                "selection_criteria_list"
            ], 
            "type": "object", 
            "properties": {
                "exclusion_list": {
                    "items": {
                        "$ref": "#/definitions/reference"
                    }, 
                    "type": "array", 
                    "description": "List of entities to be excluded from category assignment."
                }, 
                "inclusion_list": {
                    "items": {
                        "$ref": "#/definitions/reference"
                    }, 
                    "type": "array", 
                    "description": "List of entities to be included in category assignment."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the assignment rule.", 
                    "maxLength": 64
                }, 
                "selection_criteria_list": {
                    "items": {
                        "$ref": "#/definitions/selection_criteria"
                    }, 
                    "type": "array", 
                    "description": "List of selection criteria for category assignment."
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the assignment rule.", 
                    "maxLength": 256
                }
            }, 
            "title": "Assignment Rule definition."
        }, 
        "exchange_workload": {
            "description": "Exchange workload Object.", 
            "type": "object", 
            "properties": {
                "num_mailboxes": {
                    "type": "integer"
                }, 
                "user_type": {
                    "x-ntnx-enum": [
                        "$unknown", 
                        "Light User", 
                        "Average User", 
                        "Heavy User"
                    ], 
                    "type": "string"
                }
            }, 
            "title": "Exchange workload Definition"
        }, 
        "aws_tag_list": {
            "items": {
                "required": [
                    "key", 
                    "value"
                ], 
                "type": "object", 
                "description": "Generic key value pair.", 
                "properties": {
                    "value": {
                        "type": "string", 
                        "description": "Tag value"
                    }, 
                    "key": {
                        "type": "string", 
                        "description": "Tag Key"
                    }
                }
            }, 
            "type": "array", 
            "description": "The AWS Tags associated with any AWS resource", 
            "title": "AWS Tags"
        }, 
        "layer2_stretch_metadata": {
            "description": "The layer2_stretch kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when layer2_stretch was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "layer2_stretch", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "layer2_stretch"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "layer2_stretch uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the layer2_stretch is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when layer2_stretch was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the layer2_stretch. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the layer2_stretch. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "layer2_stretch name", 
                    "maxLength": 80
                }
            }, 
            "title": "layer2_stretch metadata"
        }, 
        "common_report_config_reference": {
            "description": "The reference to a common_report_config", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "common_report_config", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "common_report_config"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a common_report_config"
        }, 
        "app_runlog_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_runlog", 
                    "x-ntnx-enum": [
                        "app_runlog"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for app_runlog list"
        }, 
        "certificate_spec": {
            "description": "Certificate info", 
            "required": [
                "certificate"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Certificate file name", 
                    "maxLength": 64
                }, 
                "certificate": {
                    "type": "string", 
                    "description": "Certificate content", 
                    "format": "byte"
                }
            }, 
            "title": "Certificate info"
        }, 
        "common_report_config_metadata": {
            "description": "The common_report_config kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when common_report_config was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "common_report_config", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "common_report_config"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "common_report_config uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the common_report_config is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when common_report_config was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the common_report_config. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the common_report_config. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "common_report_config name", 
                    "maxLength": 80
                }
            }, 
            "title": "common_report_config metadata"
        }, 
        "physical_availability_zone": {
            "description": "Physical Availability Zone Configuration definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "type": "object", 
                    "description": "Physical Availability Zone Configuration resources.", 
                    "properties": {
                        "cell_fqdn_list": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "List of cell FQDN mapped to the cluster."
                        }, 
                        "olb_virtual_address": {
                            "description": "OLB Virtual IP address, required when is_mutlti_tenant set to False.\n", 
                            "$ref": "#/definitions/address"
                        }, 
                        "xlb_virtual_address": {
                            "description": "XLB Virtual IP address, required when is_mutlti_tenant set to False.\n", 
                            "$ref": "#/definitions/address"
                        }, 
                        "billing_domain": {
                            "type": "string", 
                            "description": "Billing Domain Address."
                        }, 
                        "is_multi_tenant": {
                            "default": false, 
                            "type": "boolean", 
                            "description": "Flag indicates if the Prism Central can be shared by multiple tenants. Default is False, this must be set to True for XI multitenant PC.\n"
                        }, 
                        "idp_service_provider_name": {
                            "type": "string", 
                            "description": "IDP Service Provider name."
                        }, 
                        "pulse_configuration": {
                            "description": "Pulse Configuration.", 
                            "required": [
                                "enable_pulse", 
                                "enable_default_nutanix_email"
                            ], 
                            "type": "object", 
                            "properties": {
                                "enable_default_nutanix_email": {
                                    "default": true, 
                                    "type": "boolean", 
                                    "description": "Indicates if default Nutanix email address should be configured for pulse notification.\n"
                                }, 
                                "email_contact_list": {
                                    "items": {
                                        "pattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)", 
                                        "type": "string"
                                    }, 
                                    "type": "array", 
                                    "description": "List of default email contacts."
                                }, 
                                "enable_pulse": {
                                    "default": true, 
                                    "type": "boolean", 
                                    "description": "Indicates if pulse should be enabled."
                                }
                            }, 
                            "title": "Pulse Configuration"
                        }, 
                        "ntp_server_list": {
                            "items": {
                                "type": "string", 
                                "maxLength": 255
                            }, 
                            "type": "array", 
                            "description": "List of NTP Server addresses."
                        }, 
                        "cloud_uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "description": "Reference to the Infra Cloud this physical AZ belongs.", 
                            "format": "UUID"
                        }, 
                        "my_nutanix_domain": {
                            "type": "string", 
                            "description": "My Nutanix Domain Address used for IDP Registration."
                        }, 
                        "external_url": {
                            "type": "string", 
                            "description": "External URL for the Physical Availability Zone, required when is_mutlti_tenant set to False.\n"
                        }
                    }
                }
            }, 
            "title": "Physical Availability Zone Configuration"
        }, 
        "report_instance_intent_resource": {
            "description": "Response object for intentful operations on a report_instance", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/report_instance_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/report_instance"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/report_instance_metadata"
                }
            }, 
            "title": "report_instance Intent Response"
        }, 
        "floating_ip_intent_resource": {
            "description": "Response object for intentful operations on a floating_ip", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/floating_ip_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/floating_ip"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/floating_ip_metadata"
                }
            }, 
            "title": "floating_ip Intent Response"
        }, 
        "host_metadata": {
            "description": "The host kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when host was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "host", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "host"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "host uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the host is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when host was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the host. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the host. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "host name", 
                    "maxLength": 80
                }
            }, 
            "title": "host metadata"
        }, 
        "cell_intent_input": {
            "description": "An intentful representation of a cell", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/cell"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cell_metadata"
                }
            }, 
            "title": "cell Intent Entity"
        }, 
        "physical_availability_zone_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "physical_availability_zone", 
                    "x-ntnx-enum": [
                        "physical_availability_zone"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for physical_availability_zone list"
        }, 
        "rack_intent_resource": {
            "description": "Response object for intentful operations on a rack", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/rack_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/rack"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/rack_metadata"
                }
            }, 
            "title": "rack Intent Response"
        }, 
        "task_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "task", 
                    "x-ntnx-enum": [
                        "task"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for task list"
        }, 
        "account_resources": {
            "description": "Account resources", 
            "required": [
                "type", 
                "data"
            ], 
            "type": "object", 
            "properties": {
                "data": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Account data"
                }, 
                "type": {
                    "type": "string"
                }
            }, 
            "title": "Account resources"
        }, 
        "directory_service_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "directory_service", 
                    "x-ntnx-enum": [
                        "directory_service"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for directory_service list output"
        }, 
        "app_task_metadata": {
            "description": "The app_task kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when app_task was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "app_task", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_task"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "app_task uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the app_task is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when app_task was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the app_task. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the app_task. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "app_task name", 
                    "maxLength": 80
                }
            }, 
            "title": "app_task metadata"
        }, 
        "layer2_stretch_intent_input": {
            "description": "An intentful representation of a layer2_stretch", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/layer2_stretch"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/layer2_stretch_metadata"
                }
            }, 
            "title": "layer2_stretch Intent Entity"
        }, 
        "routing_policy_action": {
            "description": "Routing policy action", 
            "required": [
                "action"
            ], 
            "type": "object", 
            "properties": {
                "nexthop_ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IP addresses to which traffic should be forwarded. This field is valid only when action is FORWARD.\n"
                }, 
                "egress_service_ip_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string", 
                        "description": "device outgoing IP address"
                    }, 
                    "minimum": 0, 
                    "type": "array", 
                    "description": "IP address of the outgoing interface of network service in the chain. This field is valid only when action is REROUTE. Specify either only this and 'ingress_service_ip_list' or 'service_ip_list' field.", 
                    "maximum": 1
                }, 
                "reroute_fallback": {
                    "x-ntnx-enum": [
                        "PASSTHROUGH", 
                        "DROP", 
                        "ALLOW", 
                        "NO_ACTION"
                    ], 
                    "type": "string", 
                    "description": "Flag denoting reroute fallback action when service VM is down. This field is valid only when action is REROUTE. Default reroute fallback action is PASSTHROUGH.\n"
                }, 
                "service_ip_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string", 
                        "description": "device IP address"
                    }, 
                    "minimum": 0, 
                    "type": "array", 
                    "description": "IP addresses of network services in the chain.> This field is valid only when action is REROUTE.", 
                    "maximum": 1
                }, 
                "action": {
                    "x-ntnx-enum": [
                        "PERMIT", 
                        "DENY", 
                        "REROUTE", 
                        "FORWARD"
                    ], 
                    "type": "string"
                }, 
                "ingress_service_ip_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string", 
                        "description": "device incoming IP address"
                    }, 
                    "minimum": 0, 
                    "type": "array", 
                    "description": "IP address of the incoming interface of network service in the chain. This field is valid only when action is REROUTE. Specify either only this and 'egress_service_ip_list' or 'service_ip_list' field.", 
                    "maximum": 1
                }
            }, 
            "title": "Action"
        }, 
        "support_case_upload_intent_response": {
            "description": "Response object for intentful operations on a support_case_upload", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/support_case_upload_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/support_case_upload"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/support_case_upload_metadata"
                }
            }, 
            "title": "support_case_upload Intent Response"
        }, 
        "direct_connect_virtual_interface_resources_def_status": {
            "description": "Direct connect virtual interface create/modify status", 
            "type": "object", 
            "properties": {
                "vpc_reference": {
                    "description": "VPC reference for private virtual interface.", 
                    "$ref": "#/definitions/vpc_reference"
                }, 
                "peer_ip_prefix": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\/(\\d|[1-2]\\d|3[0-2]))$", 
                    "type": "string", 
                    "description": "Customer peering IPv4 /30 or /31 prefix."
                }, 
                "peer_asn": {
                    "type": "integer", 
                    "description": "Customer peering autonomous system number (ASN).", 
                    "format": "uint32"
                }, 
                "received_prefix_list": {
                    "items": {
                        "$ref": "#/definitions/ip_subnet_status"
                    }, 
                    "type": "array", 
                    "description": "IP prefixes learned from the remote gateway over eBGP."
                }, 
                "sent_prefix_list": {
                    "items": {
                        "$ref": "#/definitions/ip_subnet_status"
                    }, 
                    "type": "array", 
                    "description": "IP prefixes advertised to the remote gateway over eBGP."
                }, 
                "nutanix_peer_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Nutanix peering IP address."
                }, 
                "direct_connect_reference": {
                    "description": "Direct connect reference.", 
                    "$ref": "#/definitions/direct_connect_reference"
                }, 
                "dynamic_route_priority": {
                    "minimum": 10, 
                    "type": "integer", 
                    "description": "Priority assigned to routes received on this connection over eBGP.\nA higher priority value indicates that the routes are more preferred.\n", 
                    "maximum": 1000, 
                    "format": "uint16"
                }, 
                "peering_status": {
                    "description": "The peering state of the direct connect virtual interface.", 
                    "$ref": "#/definitions/direct_connect_vif_status"
                }, 
                "nutanix_peer_asn": {
                    "type": "integer", 
                    "description": "Nutanix peering autonomous system number.", 
                    "format": "uint32"
                }, 
                "md5": {
                    "type": "string", 
                    "description": "md5 hash for bgp peering."
                }, 
                "virtual_network_reference": {
                    "description": "Virtual network reference for private virtual interface. This reference is deprecated, use vpc_reference instead.\n", 
                    "$ref": "#/definitions/virtual_network_reference"
                }
            }, 
            "title": "Direct connect virtual interface create/modify status"
        }, 
        "vm_host_affinity_policy_info": {
            "description": "The information of VM Host Affinity Policy.", 
            "type": "object", 
            "properties": {
                "hosts_count": {
                    "type": "integer", 
                    "description": "Total number of applicable Hosts.", 
                    "format": "int64"
                }, 
                "vms_count": {
                    "type": "integer", 
                    "description": "Total number of applicable VMs.", 
                    "format": "int64"
                }, 
                "config": {
                    "$ref": "#/definitions/vm_host_affinity_policy_config"
                }, 
                "non_compliant_vms_count": {
                    "type": "integer", 
                    "description": "Total number of VMs which are non-compliant with the policy.", 
                    "format": "int64"
                }, 
                "compliant_vms_count": {
                    "type": "integer", 
                    "description": "Total number of VMs which are compliant with the policy.", 
                    "format": "int64"
                }
            }, 
            "title": "VM Host Affinity Policy info."
        }, 
        "tenant_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "tenant", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "tenant"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "common_report_config_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "common_report_config", 
                    "x-ntnx-enum": [
                        "common_report_config"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for common_report_config list"
        }, 
        "vpc_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpc", 
                    "x-ntnx-enum": [
                        "vpc"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for vpc list output"
        }, 
        "aws_availability_zone_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_availability_zone", 
                    "x-ntnx-enum": [
                        "aws_availability_zone"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for aws_availability_zone list output"
        }, 
        "hypervisor_server": {
            "description": "Hypervisor server information.", 
            "required": [
                "ip"
            ], 
            "type": "object", 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string"
                }, 
                "version": {
                    "type": "string"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "VMWARE", 
                        "XEN", 
                        "AHV", 
                        "HYPERV"
                    ], 
                    "type": "string"
                }
            }, 
            "title": "Hypervisor Server"
        }, 
        "aws_machine_type_list_intent_response": {
            "description": "AWS VPC entity list.", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/aws_machine_type_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_machine_type_list_metadata_output"
                }
            }, 
            "title": "aws_machine_type entity list"
        }, 
        "account_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "account", 
                    "x-ntnx-enum": [
                        "account"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for account list output"
        }, 
        "aws_image_resources_def_status": {
            "description": "AWS image resources", 
            "type": "object", 
            "properties": {
                "root_device_type": {
                    "type": "string", 
                    "description": "Root device type (e.g. ebs, instance-store)"
                }, 
                "kernel_id": {
                    "type": "string", 
                    "description": "Kernal AWS ID of the image."
                }, 
                "hypervisor": {
                    "type": "string", 
                    "description": "The supported hypervisor."
                }, 
                "id": {
                    "pattern": "^ami-[a-f0-9]{1,17}$", 
                    "type": "string", 
                    "description": "The AWS ID of the AMI."
                }, 
                "platform": {
                    "type": "string", 
                    "description": "Platform of the image (e.g. Windows)"
                }, 
                "architecture": {
                    "type": "string", 
                    "description": "Architecture of the AWS image (e.g. i386, x86_64)"
                }, 
                "tag_list": {
                    "$ref": "#/definitions/aws_tag_list"
                }, 
                "virtualization_type": {
                    "type": "string", 
                    "description": "Type of virtualization supported."
                }, 
                "root_device_name": {
                    "type": "string", 
                    "description": "Root device name (e.g. /dev/sda1, /dev/sda2)"
                }
            }, 
            "title": "AWS image resources"
        }, 
        "app_substrate_response": {
            "description": "Substrate info for deployment", 
            "required": [
                "uuid", 
                "name", 
                "type", 
                "variable_list", 
                "action_list", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "platform_data": {
                    "type": "string", 
                    "description": ""
                }, 
                "instance_address": {
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_substrate_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "instance_id": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "account_reference": {
                    "$ref": "#/definitions/account_reference"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "instance_name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "readiness_probe": {
                    "$ref": "#/definitions/app_substrate_readiness_probe"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_substrate_reference"
                }, 
                "os_type": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "VM", 
                        "AHV_VM", 
                        "AWS_VM", 
                        "GCP_VM", 
                        "AZURE_VM", 
                        "EXISTING_VM", 
                        "BARE_METAL", 
                        "GENERIC", 
                        "VMWARE_VM", 
                        "K8S_POD"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "create_spec": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Spec of the substrate"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": "List of variables"
                }, 
                "instance_power_state": {
                    "type": "string", 
                    "description": ""
                }
            }, 
            "title": "Deployment Sustrate Definition for Application."
        }, 
        "recovery_plan_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "recovery_plan", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "recovery_plan"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "protection_rule": {
            "description": "protection Rule creation/modification spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Protection Rule name", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/protection_rule_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for the protection rule.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Protection Rule creation/modification spec"
        }, 
        "recovery_plan_validation_message": {
            "description": "Validation message used to report Recovery Plan errors and warnings.\n", 
            "required": [
                "validation_type", 
                "message"
            ], 
            "type": "object", 
            "properties": {
                "message": {
                    "type": "string", 
                    "description": "Message describing validation error or warning."
                }, 
                "validation_type": {
                    "x-ntnx-enum": [
                        "ENTITY", 
                        "NETWORK", 
                        "RECOVERY_POINT", 
                        "CATEGORY", 
                        "CONNECTIVITY", 
                        "INFRASTRUCTURE", 
                        "LICENSE"
                    ], 
                    "type": "string", 
                    "description": "Type of validation."
                }, 
                "affected_any_reference_list": {
                    "items": {
                        "$ref": "#/definitions/reference"
                    }, 
                    "type": "array", 
                    "description": "List of affected entities for this validation message."
                }, 
                "impact_message_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Impact of the validation message on the Recovery Plan actions.\n"
                }, 
                "cause_and_resolution_message_list": {
                    "items": {
                        "required": [
                            "cause"
                        ], 
                        "type": "object", 
                        "properties": {
                            "resolution_list": {
                                "items": {
                                    "type": "string"
                                }, 
                                "type": "array", 
                                "description": "Steps to resolve the warning or error."
                            }, 
                            "cause": {
                                "type": "string", 
                                "description": "Cause of the validation warning or error."
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "List of causes and resolutions for the validation warning or error.\n"
                }
            }, 
            "title": "Validation message for Recovery Plan validation report."
        }, 
        "ngt_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ngt", 
                    "x-ntnx-enum": [
                        "ngt"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for ngt list output"
        }, 
        "recovery_plan_data_service_ip_config": {
            "description": "Information about Data Service IP to be configured on the VM during Volume Group attachment.\n", 
            "required": [
                "availability_zone_url", 
                "cluster_reference", 
                "recovery_data_service_ip"
            ], 
            "type": "object", 
            "properties": {
                "recovery_data_service_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Data Services IP address to be reconfigured in VM during Planned and Unplanned Failover.\n"
                }, 
                "availability_zone_url": {
                    "type": "string", 
                    "description": "URL of the Availability Zone."
                }, 
                "cluster_reference": {
                    "description": "Reference to Cluster where the data service IPs are hosted.\n", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "test_data_service_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Data Services IP address to be reconfigured in VM during Test Failover.\n"
                }
            }, 
            "title": "Data Service IP to be configured on the VM."
        }, 
        "checksum_algorithm": {
            "x-ntnx-enum": [
                "SHA_256", 
                "SHA_1"
            ], 
            "type": "string", 
            "description": "The type of checksum calculated for the image", 
            "title": "Checksum algorithm"
        }, 
        "access_control_policy_def_status": {
            "description": "Access Control Policy status definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the Access Control Policy."
                }, 
                "is_system_defined": {
                    "type": "boolean", 
                    "description": "Flag identifying if the ACP is system defined or not."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the Access Control Policy entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "resources": {
                    "type": "object", 
                    "properties": {
                        "role_reference": {
                            "description": "The Role being assigned to a given user(s).", 
                            "$ref": "#/definitions/role_reference"
                        }, 
                        "user_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_reference"
                            }, 
                            "type": "array", 
                            "description": "The User(s) being assigned a given role."
                        }, 
                        "filter_list": {
                            "description": "The list of filters, which define the entities.\n", 
                            "type": "object", 
                            "x-ntnx-one-of": [
                                {
                                    "required": [
                                        "context_list"
                                    ]
                                }
                            ], 
                            "properties": {
                                "context_list": {
                                    "items": {
                                        "$ref": "#/definitions/filter"
                                    }, 
                                    "type": "array", 
                                    "description": "The list of context filters. These are OR filters. The scope-expression-list defines the context, and the filter works in conjunction with the entity-expression-list. Note - the absence of a scope expression in a filter implies global context.\n"
                                }
                            }
                        }, 
                        "user_group_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_group_reference"
                            }, 
                            "type": "array", 
                            "description": "The User group(s) being assigned a given role."
                        }
                    }, 
                    "title": "Access Control Policy Resources."
                }, 
                "description": {
                    "type": "string", 
                    "description": "The description of the association of a role to a user in a given context."
                }
            }, 
            "title": "Access Control Policy status definition."
        }, 
        "network_function_chain_def_status": {
            "description": "Network function chain status definition.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "A description for the network function chain."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "cluster_reference": {
                    "description": "UUID of cluster that hosts the network function chain.", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/network_function_chain_resource"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Network function chain name."
                }
            }, 
            "title": "Network function chain status definition"
        }, 
        "sort_order": {
            "x-ntnx-enum": [
                "ASCENDING", 
                "DESCENDING"
            ], 
            "type": "string", 
            "description": "The sort order in which results are returned", 
            "title": "Sort order"
        }, 
        "host_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "host", 
                    "x-ntnx-enum": [
                        "host"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for host list"
        }, 
        "ipsec_config": {
            "description": "IPSEC related configuration spec for the VPN connections.", 
            "required": [
                "pre_shared_key"
            ], 
            "type": "object", 
            "properties": {
                "remote_vti_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Virtual tunnel interface IP of the remote VPN gateway."
                }, 
                "remote_authentication_id": {
                    "type": "string", 
                    "description": "IKE Authentication ID of the remote peer."
                }, 
                "local_vti_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Virtual tunnel interface IP of the local VPN gateway."
                }, 
                "ike_lifetime_secs": {
                    "type": "integer", 
                    "description": "IKE lifetime (in seconds)", 
                    "format": "uint64"
                }, 
                "esp_pfs_dh_group_number": {
                    "type": "integer", 
                    "description": "Diffie-Hellman group to be used for Perfect Forward Secrecy (PFS).\nSupported DH groups are 14, 19 and 20.\n", 
                    "format": "uint64"
                }, 
                "local_authentication_id": {
                    "type": "string", 
                    "description": "Local IKE authentication ID used for this connection."
                }, 
                "ipsec_lifetime_secs": {
                    "type": "integer", 
                    "description": "IPSec lifetime (in seconds)", 
                    "format": "uint64"
                }, 
                "vti_ip_prefix_length": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "IP prefix length of the virtual tunnel interface.", 
                    "maximum": 32, 
                    "format": "uint16"
                }, 
                "pre_shared_key": {
                    "type": "string", 
                    "description": "Shared secret for authentication between gateway peers.", 
                    "format": "password"
                }
            }, 
            "title": "IPSEC related configuration spec for the VPN connection"
        }, 
        "app_cost_input": {
            "description": "Cost definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "type", 
                "interval", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "interval": {
                    "x-ntnx-enum": [
                        "HOUR", 
                        "WEEK", 
                        "MONTH"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "value": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "LIVE", 
                        "STATIC"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Cost for Application"
        }, 
        "direct_connect_def_status": {
            "description": "An intentful representation of a direct_connect status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "direct_connect Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the direct_connect."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the direct_connect, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/direct_connect_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for direct_connect."
                }
            }, 
            "title": "direct_connect Intent Status with placement specified"
        }, 
        "recovery_plan_job_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "recovery_plan_job", 
                    "x-ntnx-enum": [
                        "recovery_plan_job"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for recovery_plan_job list output"
        }, 
        "vm_recovery_point_intent_resource": {
            "description": "Response object for intentful operations on a vm_recovery_point", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vm_recovery_point_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vm_recovery_point"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_recovery_point_metadata"
                }
            }, 
            "title": "vm_recovery_point Intent Response"
        }, 
        "environment_metadata": {
            "description": "The environment kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when environment was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "environment", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "environment"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "environment uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the environment is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when environment was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the environment. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the environment. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "environment name", 
                    "maxLength": 80
                }
            }, 
            "title": "environment metadata"
        }, 
        "vm_host_affinity_policy_get_metadata_output": {
            "description": "Metadata for VM Host Affinity Policy.", 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_host_affinity_policy was last updated.", 
                    "format": "date-time"
                }, 
                "kind": {
                    "default": "vm_host_affinity_policy", 
                    "x-ntnx-enum": [
                        "vm_host_affinity_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name."
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_host_affinity_policy was created.", 
                    "format": "date-time"
                }, 
                "created_by": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "last_updated_by": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "entity_version": {
                    "type": "integer", 
                    "description": "Logical timestamp of VM Host Affinity Policy.", 
                    "format": "int64"
                }
            }, 
            "title": "VM Host Affinity Policy metadata"
        }, 
        "trigger_info": {
            "description": "The information about the triggering.", 
            "required": [
                "trigger_time", 
                "action_trigger_type_reference"
            ], 
            "type": "object", 
            "properties": {
                "action_trigger_type_reference": {
                    "description": "The trigger type that triggered this rule execution.\nFor example, an alert or an event.  For manual trigger,  it will\nbe the user entity.\n", 
                    "$ref": "#/definitions/action_trigger_type_reference"
                }, 
                "trigger_type_display_name": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "The trigger display name.  Default to trigger type display name.\n", 
                    "maxLength": 64
                }, 
                "trigger_time": {
                    "type": "string", 
                    "description": "The time that this trigger happened", 
                    "format": "date-time"
                }, 
                "input_parameter_values": {
                    "description": "An ordered list of input parameters to the trigger. The parameter\nnames and value type should match the trigger definition.\n", 
                    "$ref": "#/definitions/component_instance_parameters"
                }, 
                "output_parameter_values": {
                    "description": "Trigger output parameters.", 
                    "$ref": "#/definitions/component_instance_parameters"
                }
            }, 
            "title": "Trigger information."
        }, 
        "nusights_proxy_metadata": {
            "description": "The nusights_proxy kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when nusights_proxy was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "nusights_proxy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "nusights_proxy"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "nusights_proxy uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the nusights_proxy is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when nusights_proxy was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the nusights_proxy. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the nusights_proxy. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "nusights_proxy name", 
                    "maxLength": 80
                }
            }, 
            "title": "nusights_proxy metadata"
        }, 
        "vm_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm", 
                    "x-ntnx-enum": [
                        "vm"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vm list"
        }, 
        "action_rule_intent_input": {
            "description": "An intentful representation of a action_rule", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/action_rule"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_rule_metadata"
                }
            }, 
            "title": "action_rule Intent Entity"
        }, 
        "category_mapping_metadata": {
            "description": "The category_mapping kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when category_mapping was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "category_mapping", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "category_mapping"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "category_mapping uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the category_mapping is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when category_mapping was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the category_mapping. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the category_mapping. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "category_mapping name", 
                    "maxLength": 80
                }
            }, 
            "title": "category_mapping metadata"
        }, 
        "network_security_rule_intent_response": {
            "description": "Response object for intentful operations on a network_security_rule", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/network_security_rule_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/network_security_rule"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/network_security_rule_metadata"
                }
            }, 
            "title": "network_security_rule Intent Response"
        }, 
        "blueprint_download_intent_response": {
            "description": "Response object for intentful operations on a blueprint", 
            "required": [
                "api_version", 
                "metadata", 
                "spec", 
                "status"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/blueprint_download_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/blueprint_upload"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "blueprint Intent Response"
        }, 
        "app_package_input": {
            "description": "Package definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "image_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s image spec"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_reference"
                    }, 
                    "type": "array", 
                    "description": "References of the service."
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "version": {
                    "type": "string", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_package_reference"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "SNAPSHOT", 
                        "ISO", 
                        "DEB", 
                        "RPM", 
                        "DOCKER_IMAGE", 
                        "CHEF_COOKBOOK", 
                        "PUPPET_MANIFEST", 
                        "CUSTOM", 
                        "SUBSTRATE_IMAGE", 
                        "K8S_IMAGE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "options": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Details based on type of the package."
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Package for Application"
        }, 
        "aws_vpc_list_intent_response": {
            "description": "AWS VPC entity list.", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/aws_vpc_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_vpc_list_metadata_output"
                }
            }, 
            "title": "aws_vpc entity list"
        }, 
        "app_credential_input": {
            "description": "Credential for application", 
            "required": [
                "name", 
                "uuid", 
                "type", 
                "username", 
                "secret"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "secret": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Credential secret object"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "PASSWORD", 
                        "KEY"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "passphrase": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Credential passphrase object associated with the provided key"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Credential for application"
        }, 
        "cluster_domain_server": {
            "description": "Cluster domain server. Only applied to the cluster with all Hyper-V hosts.\n", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "nameserver": {
                    "type": "string", 
                    "description": "The IP of the nameserver that can resolve the domain name. Must set\nwhen joining the domain.\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Joined domain name. In 'put' request, empty name will unjoin the\ncluster from current domain.\n"
                }, 
                "domain_credentials": {
                    "$ref": "#/definitions/credentials"
                }
            }, 
            "title": "Domain Server"
        }, 
        "disk_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "disk", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "disk"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "streaming_policy_request_details": {
            "description": "Streaming policy request details", 
            "required": [
                "sql_query"
            ], 
            "type": "object", 
            "properties": {
                "is_enabled": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "If policy is enabled"
                }, 
                "window_duration": {
                    "default": "FIVE_MINUTES", 
                    "x-ntnx-enum": [
                        "THIRTY_SECONDS", 
                        "ONE_MINUTE", 
                        "FIVE_MINUTES", 
                        "TEN_MINUTES", 
                        "THIRTY_MINUTES", 
                        "ONE_HOUR", 
                        "TWO_HOURS"
                    ], 
                    "type": "string", 
                    "description": "Time window on which policy needs to be applied"
                }, 
                "execution_frequency": {
                    "default": "FIVE_MINUTES", 
                    "x-ntnx-enum": [
                        "THIRTY_SECONDS", 
                        "ONE_MINUTE", 
                        "FIVE_MINUTES", 
                        "TEN_MINUTES", 
                        "THIRTY_MINUTES", 
                        "ONE_HOUR", 
                        "TWO_HOURS"
                    ], 
                    "type": "string", 
                    "description": "How often policy needs to be evaluated"
                }, 
                "sql_query": {
                    "type": "string", 
                    "description": "Policy as SQL string", 
                    "maxLength": 2000
                }
            }, 
            "title": "Streaming policy request details"
        }, 
        "access_control_policy_reference": {
            "description": "The reference to a access_control_policy", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "access_control_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "access_control_policy"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a access_control_policy"
        }, 
        "network_device_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_device", 
                    "x-ntnx-enum": [
                        "network_device"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for network_device list"
        }, 
        "blackout_reference": {
            "description": "The reference to a blackout", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "blackout", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "blackout"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a blackout"
        }, 
        "image_placement_policy_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "image_placement_policy", 
                    "x-ntnx-enum": [
                        "image_placement_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for image_placement_policy list"
        }, 
        "docker_registry_reference": {
            "description": "The reference to a docker_registry", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "docker_registry", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "docker_registry"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a docker_registry"
        }, 
        "blueprint_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "blueprint", 
                    "x-ntnx-enum": [
                        "blueprint"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for blueprint list"
        }, 
        "prism_central_nodes": {
            "description": "Prism central nodes definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "required": [
                        "pc_vm_list"
                    ], 
                    "type": "object", 
                    "description": "Prism central nodes resources.", 
                    "properties": {
                        "cmsp_config": {
                            "$ref": "#/definitions/cmsp_expansion_config"
                        }, 
                        "pc_vm_list": {
                            "items": {
                                "$ref": "#/definitions/pc_vm"
                            }, 
                            "type": "array"
                        }
                    }
                }
            }, 
            "title": "Prism Central Nodes"
        }, 
        "vm_metadata": {
            "description": "The vm kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "vm", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vm uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the vm is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "vm name", 
                    "maxLength": 80
                }
            }, 
            "title": "vm metadata"
        }, 
        "cell": {
            "description": "Cell entity definition", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the cell", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/cell_resources"
                }
            }, 
            "title": "Cell Entity"
        }, 
        "external_subnet_def_status": {
            "description": "External subnet status.", 
            "type": "object", 
            "properties": {
                "active_gateway_node_list": {
                    "items": {
                        "$ref": "#/definitions/node"
                    }, 
                    "type": "array", 
                    "description": "List of active gateway nodes for the external connectivity.\nThe existing singleton active_gateway_node will be deprecated.\n"
                }, 
                "external_ip_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of IP addresses for SNAT or Gateway IP Addresses.\n"
                }, 
                "gateway_node_uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "List of gateway nodes for the external connectivity."
                }, 
                "active_gateway_node": {
                    "description": "Active gateway node for the external connectivity.", 
                    "$ref": "#/definitions/node"
                }, 
                "external_subnet_reference": {
                    "description": "External subnet reference.", 
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "active_gateway_count": {
                    "type": "integer", 
                    "description": "Number of active gateway nodes for external connectivity.", 
                    "format": "uint64"
                }
            }, 
            "title": "External subnet status."
        }, 
        "docker_registry_image_status": {
            "description": "Docker registry image search result", 
            "required": [
                "name", 
                "is_official", 
                "owner", 
                "tag_list"
            ], 
            "type": "object", 
            "properties": {
                "owner": {
                    "type": "string", 
                    "description": "Owner user name"
                }, 
                "is_official": {
                    "type": "boolean", 
                    "description": "Whether it is an official Docker Hub image"
                }, 
                "tag_list": {
                    "items": {
                        "$ref": "#/definitions/docker_registry_image_tag"
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Repository description", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "Repository name", 
                    "maxLength": 64
                }
            }, 
            "title": "Docker registry image search result"
        }, 
        "image_type": {
            "x-ntnx-enum": [
                "DISK_IMAGE", 
                "ISO_IMAGE"
            ], 
            "type": "string", 
            "description": "The type of image.", 
            "title": "Image type"
        }, 
        "vpn_gateway_resources": {
            "description": "VPN gateway creation/modification spec.", 
            "required": [
                "gateway_type"
            ], 
            "type": "object", 
            "properties": {
                "vpc_reference": {
                    "description": "The VPC this gateway belongs to. Applies only to local gateway entities.\n", 
                    "$ref": "#/definitions/vpc_reference"
                }, 
                "gateway_device_vendor": {
                    "type": "string", 
                    "description": "3rd Party VPN Vendor. This could be a traditional device vendor (like Cisco ASA, Fortinet etc.), or one of the public cloud providers (eg: AWS).\n"
                }, 
                "public_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Public IP address of this gateway."
                }, 
                "gateway_type": {
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "REMOTE"
                    ], 
                    "type": "string", 
                    "description": "Whether this is local or remote gateway entity."
                }, 
                "deployment": {
                    "description": "Deployment configuration for this gateway.", 
                    "$ref": "#/definitions/deployment"
                }, 
                "internal_routing_protocol_config": {
                    "description": "Describes the routing protocol configuration needed by this gateway to\npeer and learn routes from internal routers using either iBGP or OSFP.\n", 
                    "$ref": "#/definitions/internal_routing_protocol_config"
                }, 
                "ebgp_config": {
                    "description": "External BGP configuration needed for this gateway to peer with remote\ngateway and exchange routes.\n", 
                    "$ref": "#/definitions/bgp_config"
                }, 
                "virtual_network_reference": {
                    "description": "The virtual network this gateway belongs to. Applies only to local gateway entities. This reference is deprecated, use vpc_reference instead.\n", 
                    "$ref": "#/definitions/virtual_network_reference"
                }
            }, 
            "title": "VPN gateway creation/modification spec"
        }, 
        "software_list_intent_response": {
            "description": "Available software on Nutanix portal", 
            "required": [
                "metadata", 
                "entities"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/portal_software"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/software_list_metadata_output"
                }
            }, 
            "title": "List of software"
        }, 
        "service_response": {
            "description": "Response for service enablement/disablement request.\n", 
            "type": "object", 
            "properties": {
                "task_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the task created for handling the request.\n", 
                    "format": "UUID"
                }
            }, 
            "title": "Response for service enablement/disablement request.\n"
        }, 
        "permission": {
            "description": "Permission Input Definition. The permission consists of a name and defines the following what-operation-can-be-performed-on-which-fields-a-given-kind. The fields are defined in a list with type - allowed and disallowed.\n", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Permission name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/permission_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for the permission.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Permission"
        }, 
        "aws_vm_intent_resource": {
            "description": "Response object for intentful operations on a aws_vm", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/aws_vm_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/aws_vm"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_vm_metadata"
                }
            }, 
            "title": "aws_vm Intent Response"
        }, 
        "tcp": {
            "description": "TCP parameters to be matched in routing policy.", 
            "type": "object", 
            "properties": {
                "destination_port_range_list": {
                    "items": {
                        "$ref": "#/definitions/port_range"
                    }, 
                    "type": "array", 
                    "description": "List of ranges of TCP destination ports."
                }, 
                "source_port_range": {
                    "description": "Range of TCP source ports. This field is deprecated, use source_port_range_list instead.\n", 
                    "$ref": "#/definitions/port_range"
                }, 
                "source_port_range_list": {
                    "items": {
                        "$ref": "#/definitions/port_range"
                    }, 
                    "type": "array", 
                    "description": "List of ranges of TCP source ports."
                }, 
                "destination_port_range": {
                    "description": "Range of TCP destination ports. This field is deprecated, use destination_port_range_list instead.\n", 
                    "$ref": "#/definitions/port_range"
                }
            }, 
            "title": "TCP parameters"
        }, 
        "app_action_response_download": {
            "description": "Action definition for Application", 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for action"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "critical": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "action critical flag"
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "action attrs"
                }, 
                "runbook": {
                    "description": "Action runbooks\n", 
                    "$ref": "#/definitions/app_runbook_response_download"
                }, 
                "type": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Action for Application"
        }, 
        "app_cost_response": {
            "description": "Cost definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "type", 
                "interval", 
                "value", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list"
                }, 
                "interval": {
                    "x-ntnx-enum": [
                        "HOUR", 
                        "WEEK", 
                        "MONTH"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "value": {
                    "type": "string", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "LIVE", 
                        "STATIC"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Cost for Application"
        }, 
        "stretch_site_params": {
            "description": "Site parameters for layer2 stretch.", 
            "type": "object", 
            "properties": {
                "stretch_subnet_reference": {
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "vpn_interface_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string"
                }, 
                "vpn_connection_reference": {
                    "$ref": "#/definitions/vpn_connection_reference"
                }, 
                "default_gateway_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string"
                }, 
                "subnet_prefix_length": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Prefix length of the subnet being stretched.", 
                    "maximum": 32, 
                    "format": "uint16"
                }, 
                "pc_cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "Site parameters for layer2 stretch"
        }, 
        "alert_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "alert", 
                    "x-ntnx-enum": [
                        "alert"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for alert list"
        }, 
        "rack_reference": {
            "description": "The reference to a rack", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "rack", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "rack"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a rack"
        }, 
        "vm_validate_migration_output": {
            "items": {
                "type": "object", 
                "x-ntnx-one-of": [
                    {
                        "required": [
                            "error_code"
                        ]
                    }, 
                    {
                        "required": [
                            "warning_code"
                        ]
                    }
                ], 
                "properties": {
                    "warning_code": {
                        "x-ntnx-enum": [
                            "UNKNOWN_WARNING", 
                            "VM_NGT_MULTIPATHING_ENABLED", 
                            "VM_NGT_NOT_INSTALLED"
                        ], 
                        "type": "string", 
                        "description": "Warning due to which VM may not be fully recoverable at migration\ntarget.\n"
                    }, 
                    "unrecoverability_detail": {
                        "type": "string", 
                        "description": "Detailed message which describes unrecoverability warning or error.\n"
                    }, 
                    "error_code": {
                        "x-ntnx-enum": [
                            "VIRTUAL_HARDWARE_VERSION_MISMATCH", 
                            "LEGACY_PROTECTION_NOT_SUPPORTED", 
                            "LOCAL_CLUSTER_IN_READ_ONLY_MODE", 
                            "TARGET_NOT_REGISTERED_TO_MANAGEMENT_SERVER", 
                            "UNKNOWN_ERROR", 
                            "UNSUPPORTED_DISK_TYPE", 
                            "UNSUPPORTED_RECOVERY_FROM_ESX_TO_AHV", 
                            "UNSUPPORTED_RECOVERY_FROM_AHV_TO_ESX", 
                            "UNSUPPORTED_HYPERVISOR_TYPE", 
                            "UNSUPPORTED_VOLUME_GROUP_ATTACHMENT", 
                            "VM_WITH_DELTA_DISKS", 
                            "VM_WITH_SHARED_VDISKS", 
                            "VM_WITH_UEFI_FIRMWARE"
                        ], 
                        "type": "string", 
                        "description": "Error due to which VM will be unrecoverable at migration target.\n"
                    }, 
                    "resolution": {
                        "type": "string", 
                        "description": "Detailed message which describes the resolution for warning or\nerror.\n"
                    }
                }
            }, 
            "type": "array", 
            "description": "If VM migration is not feasible, it contains detailed list of the\ncorresponding errors and warnings. Otherwise none.\n", 
            "title": "Validate migration output definition."
        }, 
        "action_type_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_type", 
                    "x-ntnx-enum": [
                        "action_type"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for action_type list output"
        }, 
        "vdi_workload": {
            "description": "VDI workload Object.", 
            "type": "object", 
            "properties": {
                "num_users": {
                    "type": "integer"
                }, 
                "vdi_vendor": {
                    "x-ntnx-enum": [
                        "$unknown", 
                        "View", 
                        "Xen Desktop"
                    ], 
                    "type": "string"
                }, 
                "user_type": {
                    "x-ntnx-enum": [
                        "$unknown", 
                        "Task Worker", 
                        "Knowledge Worker", 
                        "Power User", 
                        "Developer"
                    ], 
                    "type": "string"
                }, 
                "provisioning_type": {
                    "x-ntnx-enum": [
                        "$unknown", 
                        "Linked Clones", 
                        "Full Clones", 
                        "V2V/P2V", 
                        "Machine Creation Services", 
                        "Provisioning Services"
                    ], 
                    "type": "string"
                }
            }, 
            "title": "VDI workload Definition"
        }, 
        "recovery_plan_def_status": {
            "description": "Recovery Plan status", 
            "required": [
                "name", 
                "resources", 
                "recovery_availability_zone_order_list"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Recovery Plan name"
                }, 
                "recovery_availability_zone_order_list": {
                    "items": {
                        "required": [
                            "availability_zone_url"
                        ], 
                        "type": "object", 
                        "properties": {
                            "availability_zone_url": {
                                "type": "string", 
                                "description": "URL of the Availability Zone.\n"
                            }, 
                            "availability_zone_order_list": {
                                "items": {
                                    "properties": {
                                        "availability_zone_list": {
                                            "items": {
                                                "type": "object", 
                                                "properties": {
                                                    "cluster": {
                                                        "type": "string", 
                                                        "description": "UUID of the cluster.\n"
                                                    }, 
                                                    "availability_zone_url": {
                                                        "type": "string", 
                                                        "description": "URL of the Availability Zone.\n"
                                                    }
                                                }
                                            }, 
                                            "type": "array", 
                                            "description": "List of Availability Zones."
                                        }
                                    }
                                }, 
                                "type": "array", 
                                "description": "List of recovery Availability Zone orders for entities in the Recovery Plan. More than one entry in this list indicates entities in Recovery Plan are protected by the Protection Rules with different recovery Availability Zone order and makes Recovery Plan invalid.\n"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "List of recovery Availability Zones order list. Each unique Availability Zone order list will be reported. A cluster might also be specified for each Availability Zone in the Availability Zones order list, in case the entity is protected for replication to/from a cluster in the Protection Policy.\n"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the Recovery Plan entity."
                }, 
                "latest_validation_time": {
                    "type": "string", 
                    "description": "Time when latest validation was done for Recovery Plan.", 
                    "format": "date-time"
                }, 
                "latest_test_time": {
                    "type": "string", 
                    "description": "Time when latest test was done for Recovery Plan.", 
                    "format": "date-time"
                }, 
                "resources": {
                    "$ref": "#/definitions/recovery_plan_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for the Recovery Plan."
                }
            }, 
            "title": "Recovery Plan status"
        }, 
        "action_rule_result_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_rule_result", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "action_rule_result"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "app_task_reference": {
            "description": "The reference to a app_task", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_task", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_task"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_task"
        }, 
        "action_trigger_type_metadata": {
            "description": "The action_trigger_type kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when action_trigger_type was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "action_trigger_type", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "action_trigger_type"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "action_trigger_type uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the action_trigger_type is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when action_trigger_type was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the action_trigger_type. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the action_trigger_type. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "action_trigger_type name", 
                    "maxLength": 80
                }
            }, 
            "title": "action_trigger_type metadata"
        }, 
        "network_function_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_function", 
                    "x-ntnx-enum": [
                        "network_function"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for network_function list output"
        }, 
        "app_task_intent_resource": {
            "description": "Response object for intentful operations on a app_task", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/app_task_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/app_task"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/app_task_metadata"
                }
            }, 
            "title": "app_task Intent Response"
        }, 
        "disk_storage_config": {
            "description": "This preference specifies the storage configuration parameters for VM disks.\n", 
            "type": "object", 
            "properties": {
                "flash_mode": {
                    "description": "State of the storage policy to pin this virtual disk to the hot tier.\nIt overrides the VM preference when Flash Mode is enabled on the VM\nof this virtual disk.\n", 
                    "$ref": "#/definitions/flash_mode"
                }, 
                "storage_container_reference": {
                    "description": "This reference is for disk level storage container preference. This preference specifies the storage container to which this disk belongs.\n", 
                    "$ref": "#/definitions/reference"
                }
            }, 
            "title": "Disk Storage Configuration"
        }, 
        "storage_policy": {
            "description": "An intentful representation of storage policy spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Storage policy name", 
                    "maxLength": 80
                }, 
                "resources": {
                    "$ref": "#/definitions/storage_policy_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for storage policy", 
                    "maxLength": 1000
                }
            }, 
            "title": "Storage Policy Intent Spec"
        }, 
        "app_package_input_upload": {
            "description": "Package definition for Application", 
            "required": [
                "name", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "image_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s image spec"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_reference_upload"
                    }, 
                    "type": "array", 
                    "description": "References of the service."
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "version": {
                    "type": "string", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_package_reference_upload"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "SNAPSHOT", 
                        "ISO", 
                        "DEB", 
                        "RPM", 
                        "DOCKER_IMAGE", 
                        "CHEF_COOKBOOK", 
                        "PUPPET_MANIFEST", 
                        "CUSTOM", 
                        "SUBSTRATE_IMAGE", 
                        "K8S_IMAGE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "options": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Details based on type of the package."
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input_upload"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Package for Application"
        }, 
        "route_status": {
            "description": "Route directing network traffic through a link to another site or the\nInternet.\n", 
            "required": [
                "destination", 
                "nexthop", 
                "priority", 
                "is_active"
            ], 
            "type": "object", 
            "properties": {
                "priority": {
                    "type": "integer", 
                    "description": "The preference value assigned to this route. A higher value means\ngreater preference.\n", 
                    "format": "uint16"
                }, 
                "nexthop": {
                    "$ref": "#/definitions/route_nexthop_status"
                }, 
                "destination": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\/(\\d|[1-2]\\d|3[0-2]))$", 
                    "type": "string", 
                    "description": "The destination subnet of this route."
                }, 
                "is_active": {
                    "type": "boolean", 
                    "description": "Whether this route is currently active."
                }
            }, 
            "title": "Route status"
        }, 
        "file_item_list_intent_response": {
            "description": "Response object for intentful operation of file_items", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/file_item_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/file_item_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "blueprint_upload_custom_intent_input": {
            "description": "An intentful representation of a blueprint", 
            "required": [
                "api_version", 
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/blueprint_upload"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "blueprint Intent Entity"
        }, 
        "action_rule_result_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_rule_result", 
                    "x-ntnx-enum": [
                        "action_rule_result"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for action_rule_result list output"
        }, 
        "direct_connect_virtual_interface_resources": {
            "description": "Direct connect virtual interface spec.", 
            "required": [
                "direct_connect_reference", 
                "peer_asn", 
                "peer_ip_prefix"
            ], 
            "type": "object", 
            "properties": {
                "vpc_reference": {
                    "description": "VPC reference for private virtual interface.", 
                    "$ref": "#/definitions/vpc_reference"
                }, 
                "virtual_network_reference": {
                    "description": "Virtual network reference for private virtual interface. This reference is deprecated, use vpc_reference instead.\n", 
                    "$ref": "#/definitions/virtual_network_reference"
                }, 
                "direct_connect_reference": {
                    "description": "Direct connect reference.", 
                    "$ref": "#/definitions/direct_connect_reference"
                }, 
                "dynamic_route_priority": {
                    "minimum": 10, 
                    "type": "integer", 
                    "description": "Priority assigned to routes received on this connection over eBGP.\nA higher priority value indicates that the routes are more preferred.\n", 
                    "maximum": 1000, 
                    "format": "uint16"
                }, 
                "peer_asn": {
                    "description": "Customer peering autonomous system number (ASN).", 
                    "$ref": "#/definitions/asn"
                }, 
                "peer_ip_prefix": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\/(\\d|[1-2]\\d|3[0-2]))$", 
                    "type": "string", 
                    "description": "Customer peering IPv4 /30 or /31 prefix."
                }, 
                "md5": {
                    "minLength": 1, 
                    "type": "string", 
                    "description": "md5 hash for bgp peering.", 
                    "maxLength": 32
                }
            }, 
            "title": "Direct connect virtual interface create/modify spec"
        }, 
        "entity_sync_rule_def_status": {
            "description": "Entity sync rule creation/modification status.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Entity sync rule name."
                }, 
                "resources": {
                    "$ref": "#/definitions/entity_sync_rule_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for the entity sync rule."
                }
            }, 
            "title": "Entity sync rule creation/modification status"
        }, 
        "recovery_point_resource_reservation_spec": {
            "description": "Information about required changes in resource reservation.\n", 
            "required": [
                "resource_reservation_spec"
            ], 
            "type": "object", 
            "properties": {
                "resource_reservation_spec": {
                    "required": [
                        "operation_type"
                    ], 
                    "type": "object", 
                    "description": "Resource reservation specification.", 
                    "properties": {
                        "operation_type": {
                            "x-ntnx-enum": [
                                "CANCEL", 
                                "REFRESH"
                            ], 
                            "type": "string", 
                            "description": "Operation to be performed on the resource reservation made by\nLazan for the recovery point.\n"
                        }, 
                        "reservation_lease_timeout_secs": {
                            "type": "integer", 
                            "description": "Amount of time in seconds for which the reservation lease\nmade by Lazan need to be refreshed.\n", 
                            "format": "int64"
                        }
                    }
                }, 
                "recovery_point_spec": {
                    "description": "Recovery point specification.", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "vm_recovery_point_reference", 
                                "cluster_reference"
                            ]
                        }, 
                        {
                            "required": [
                                "vg_recovery_point_reference", 
                                "cluster_reference"
                            ]
                        }
                    ], 
                    "properties": {
                        "vm_recovery_point_reference": {
                            "description": "Reference to the VM recovery point.", 
                            "$ref": "#/definitions/vm_recovery_point_reference"
                        }, 
                        "vg_recovery_point_reference": {
                            "description": "Reference to the VG recovery point.", 
                            "$ref": "#/definitions/vg_recovery_point_reference"
                        }, 
                        "cluster_reference": {
                            "description": "Reference to the cluster.", 
                            "$ref": "#/definitions/cluster_reference"
                        }
                    }
                }
            }, 
            "title": "Information about required changes in resource reservation.\n"
        }, 
        "vm_host_affinity_policy_vms_list_metadata": {
            "description": "API call for VMs list that returns a list will have this metadata block as input.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm", 
                    "x-ntnx-enum": [
                        "vm"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset.", 
                    "format": "int64"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list.", 
                    "format": "int64"
                }
            }, 
            "title": "Metadata for VMs list input."
        }, 
        "aws_key_pair_def_status": {
            "description": "aws_key_pair resources status", 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string", 
                    "description": "aws_key_pair name."
                }, 
                "resources": {
                    "$ref": "#/definitions/aws_key_pair_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for aws_key_pair."
                }
            }, 
            "title": "aws_key_pair resources status"
        }, 
        "streaming_policy_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "streaming_policy", 
                    "x-ntnx-enum": [
                        "streaming_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for streaming_policy list"
        }, 
        "vpn_connection_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpn_connection", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vpn_connection"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "cloud_trust": {
            "description": "Cloud Pairing creation/modification spec.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Cloud Trust name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/cloud_trust_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for the cloud trust.", 
                    "maxLength": 1000
                }
            }, 
            "title": "Cloud Pairing creation/modification spec."
        }, 
        "category_mapping_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "category_mapping", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "category_mapping"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "vpn_connection_resources": {
            "description": "VPN connection creation/modification spec.", 
            "required": [
                "local_gateway_reference", 
                "remote_gateway_reference", 
                "ipsec_config", 
                "local_gateway_role"
            ], 
            "type": "object", 
            "properties": {
                "local_gateway_role": {
                    "x-ntnx-enum": [
                        "INITIATOR", 
                        "ACCEPTOR"
                    ], 
                    "type": "string", 
                    "description": "Local gateway role (acceptor or initiator) in the connection.\n"
                }, 
                "qos_config": {
                    "description": "QoS configuration reference.", 
                    "$ref": "#/definitions/qos_config"
                }, 
                "remote_gateway_reference": {
                    "description": "The remote VPN gateway reference.", 
                    "$ref": "#/definitions/vpn_gateway_reference"
                }, 
                "ipsec_config": {
                    "description": "IPSec configuration reference.", 
                    "$ref": "#/definitions/ipsec_config"
                }, 
                "dynamic_route_priority": {
                    "minimum": 10, 
                    "type": "integer", 
                    "description": "Priority assigned to routes received on this connection over eBGP.\nA higher priority value indicates that the routes are more preferred.\n", 
                    "maximum": 1000, 
                    "format": "uint16"
                }, 
                "local_gateway_reference": {
                    "description": "The local VPN gateway reference.", 
                    "$ref": "#/definitions/vpn_gateway_reference"
                }, 
                "dpd_config": {
                    "description": "DPD configuration reference.", 
                    "$ref": "#/definitions/dpd_config"
                }
            }, 
            "title": "VPN connection creation/modification spec"
        }, 
        "saml_user_group_input": {
            "description": "A SAML Service user group.", 
            "type": "object", 
            "properties": {
                "idpUuid": {
                    "type": "string", 
                    "description": "The UUID of the Identity Provider that the group belongs to", 
                    "maxLength": 255
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the SAML group which the IDP provides as attribute in SAML response", 
                    "maxLength": 255
                }
            }, 
            "title": "A SAML service user group."
        }, 
        "support_case_upload_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "support_case_upload", 
                    "x-ntnx-enum": [
                        "support_case_upload"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for support_case_upload list"
        }, 
        "access_control_policy_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "access_control_policy", 
                    "x-ntnx-enum": [
                        "access_control_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for access_control_policy list output"
        }, 
        "policy_compliance_state": {
            "x-ntnx-enum": [
                "COMPLIANT", 
                "NON_COMPLIANT", 
                "UNKNOWN"
            ], 
            "type": "string", 
            "description": "Compliance state enum.", 
            "title": "Policy Compliance State Enum"
        }, 
        "generic_resource_spec": {
            "description": "ResourceSpec Object.", 
            "type": "object", 
            "properties": {
                "ssd_gb": {
                    "type": "number"
                }, 
                "hdd_gb": {
                    "type": "number"
                }, 
                "cpu_ghz": {
                    "type": "number"
                }, 
                "ram_gb": {
                    "type": "number"
                }, 
                "num_vcpus": {
                    "type": "integer"
                }
            }, 
            "title": "ResourceSpec Definition"
        }, 
        "support_case_upload_intent_input": {
            "description": "An intentful representation of a support_case_upload", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/support_case_upload"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/support_case_upload_metadata"
                }
            }, 
            "title": "support_case_upload Intent Entity"
        }, 
        "service_group_response_resource": {
            "description": "Response object for operations on a service group", 
            "type": "object", 
            "properties": {
                "service_group": {
                    "$ref": "#/definitions/service_group"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }, 
                "associated_policies_list": {
                    "items": {
                        "$ref": "#/definitions/reference"
                    }, 
                    "type": "array", 
                    "description": "The policies where the service_group is being used"
                }
            }, 
            "title": "Service Group resource object"
        }, 
        "streaming_policy_reference": {
            "description": "The reference to a streaming_policy", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "streaming_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "streaming_policy"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a streaming_policy"
        }, 
        "cluster_config": {
            "description": "Cluster Configuration.", 
            "type": "object", 
            "properties": {
                "gpu_driver_version": {
                    "type": "string", 
                    "description": "GPU driver version."
                }, 
                "client_auth": {
                    "$ref": "#/definitions/client_auth"
                }, 
                "authorized_public_key_list": {
                    "items": {
                        "$ref": "#/definitions/public_key"
                    }, 
                    "type": "array", 
                    "description": "List of valid ssh keys for the cluster."
                }, 
                "software_map": {
                    "additionalProperties": {
                        "$ref": "#/definitions/cluster_software"
                    }, 
                    "type": "object", 
                    "description": "Map of software on the cluster with software type as the\nkey.\n"
                }, 
                "encryption_status": {
                    "$ref": "#/definitions/encryption_status"
                }, 
                "ssl_key": {
                    "readOnly": true, 
                    "$ref": "#/definitions/ssl_key"
                }, 
                "service_list": {
                    "readOnly": true, 
                    "$ref": "#/definitions/cluster_service_list"
                }, 
                "supported_information_verbosity": {
                    "default": "BASIC_PLUS_CORE_DUMP", 
                    "x-ntnx-enum": [
                        "NOTHING", 
                        "BASIC", 
                        "BASIC_PLUS_CORE_DUMP", 
                        "ALL"
                    ], 
                    "type": "string", 
                    "description": "Verbosity level settings for populating support information.\n- 'Nothing': Send nothing\n- 'Basic': Send basic information - skip core dump and hypervisor\n           stats information\n- 'BasicPlusCoreDump': Send basic and core dump information\n- 'All': Send all information\n"
                }, 
                "certification_signing_info": {
                    "$ref": "#/definitions/certification_signing_info"
                }, 
                "redundancy_factor": {
                    "type": "integer", 
                    "description": "Cluster supported redundancy factor.", 
                    "format": "int32"
                }, 
                "external_configurations": {
                    "description": "External Connector Configurations.", 
                    "$ref": "#/definitions/external_configurations"
                }, 
                "operation_mode": {
                    "$ref": "#/definitions/cluster_operation_mode"
                }, 
                "ca_certificate_list": {
                    "items": {
                        "$ref": "#/definitions/ca_cert"
                    }, 
                    "readOnly": true, 
                    "type": "array", 
                    "description": "List of cluster trusted CA certificates."
                }, 
                "domain_awareness_level": {
                    "default": "NODE", 
                    "x-ntnx-enum": [
                        "DISK", 
                        "NODE", 
                        "BLOCK", 
                        "RACK"
                    ], 
                    "type": "string", 
                    "description": "Domain awareness supported on cluster."
                }, 
                "enabled_feature_list": {
                    "items": {
                        "x-ntnx-enum": [
                            "LOCK_DOWN_ENABLED", 
                            "PASSWORD_REMOTE_LOGIN_ENABLED", 
                            "SHADOW_CLONES_ENABLED", 
                            "COMMON_CRITERIA_MODE_ENABLED", 
                            "SSP_CONFIGURED", 
                            "ACS_ENABLED", 
                            "NETWORK_FLOW_STATS_COLLECTOR_ENABLED"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Array of enabled features."
                }, 
                "is_available": {
                    "readOnly": true, 
                    "type": "boolean", 
                    "description": "Indicates if cluster is available to contact."
                }, 
                "build": {
                    "readOnly": true, 
                    "$ref": "#/definitions/build_info"
                }, 
                "timezone": {
                    "type": "string", 
                    "description": "Zone name used in value of TZ environment variable."
                }, 
                "enable_efficient_metric_sync": {
                    "type": "boolean", 
                    "description": "Indicates if downsampling of metrics syncing between PE\nand PC is enabled or not.\n"
                }, 
                "cluster_arch": {
                    "readOnly": true, 
                    "type": "string", 
                    "x-ntnx-enum": [
                        "X86_64", 
                        "PPC64LE"
                    ], 
                    "description": "Cluster architecture."
                }, 
                "management_server_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_management_server"
                    }, 
                    "readOnly": true, 
                    "type": "array", 
                    "description": "List of cluster management servers."
                }
            }, 
            "title": "Cluster Configuration"
        }, 
        "image_placement_policy_intent_response": {
            "description": "Response object for intentful operations on a image_placement_policy", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/image_placement_policy_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/image_placement_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/image_placement_policy_metadata"
                }
            }, 
            "title": "image_placement_policy Intent Response"
        }, 
        "app_task_input": {
            "description": "Task definition for Application.", 
            "required": [
                "name", 
                "uuid", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "target_any_local_reference": {
                    "$ref": "#/definitions/entity_reference"
                }, 
                "retries": {
                    "type": "string", 
                    "description": "Number of retries for the task."
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "child_tasks_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Task attrs for application of type object."
                }, 
                "timeout_secs": {
                    "type": "string", 
                    "description": "task timeout."
                }, 
                "type": {
                    "type": "string", 
                    "description": ""
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Task for Application"
        }, 
        "app_substrate_readiness_probe_upload": {
            "description": "Readiness probe for substrate", 
            "type": "object", 
            "properties": {
                "connection_type": {
                    "x-ntnx-enum": [
                        "SSH", 
                        "POWERSHELL"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "connection_port": {
                    "default": 22, 
                    "type": "integer", 
                    "description": ""
                }, 
                "timeout_secs": {
                    "type": "string", 
                    "description": ""
                }, 
                "address": {
                    "type": "string", 
                    "description": ""
                }, 
                "delay_secs": {
                    "type": "string", 
                    "description": "Delay after substrate provision."
                }, 
                "disable_readiness_probe": {
                    "type": "boolean", 
                    "description": ""
                }, 
                "login_credential_local_reference": {
                    "$ref": "#/definitions/app_credential_reference_upload"
                }
            }, 
            "title": "Readiness probe for substrate"
        }, 
        "underlay_subnet_intent_response": {
            "description": "Response object for intentful operations on a underlay_subnet", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/underlay_subnet_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/underlay_subnet"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/underlay_subnet_metadata"
                }
            }, 
            "title": "underlay_subnet Intent Response"
        }, 
        "direct_connect_reference": {
            "description": "The reference to a direct_connect", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "direct_connect", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "direct_connect"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a direct_connect"
        }, 
        "audit_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "audit", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "audit"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "docker_registry_def_status": {
            "description": "Docker registry", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the docker registry"
                }, 
                "resources": {
                    "$ref": "#/definitions/docker_registry_resources"
                }
            }, 
            "title": "Docker Registry"
        }, 
        "packet_trace_input": {
            "description": "Input parameters to run the packet trace. Required parameters\nare the source IP Address and destination IP Address. Optional\nparameters include the source port, destination port, the L4\nprotocol(TCP/UDP/ICMP), and the ICMP type and ICMP code if the\nL4 protocol for the trace is ICMP.\n", 
            "required": [
                "source_ip", 
                "destination_ip"
            ], 
            "type": "object", 
            "properties": {
                "icmp_code": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "ICMP code", 
                    "maximum": 255
                }, 
                "destination_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Destination IP Address"
                }, 
                "protocol": {
                    "type": "integer", 
                    "description": "L4 Protocol"
                }, 
                "source_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Source IP Address"
                }, 
                "source_port": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Source port", 
                    "maximum": 65535
                }, 
                "destination_port": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Destination port", 
                    "maximum": 65535
                }, 
                "icmp_type": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "ICMP type", 
                    "maximum": 255
                }
            }, 
            "title": "Packet Trace Input"
        }, 
        "aws_elastic_ip_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_elastic_ip", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_elastic_ip"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "migrate_input": {
            "description": "Input object for the generic migrate API. It contains the details of the\nentities which need to be migrated.\n", 
            "required": [
                "source_availability_zone_reference", 
                "target_availability_zone_reference", 
                "vm_list"
            ], 
            "type": "object", 
            "properties": {
                "source_availability_zone_reference": {
                    "description": "Reference to the source Availability Zone where the entities which\nare to be migrated resides.\n", 
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "vm_list": {
                    "items": {
                        "required": [
                            "metadata"
                        ], 
                        "type": "object", 
                        "description": "Properties of VM which are overridable.", 
                        "properties": {
                            "mh_vm_spec": {
                                "$ref": "#/definitions/mh_vm_spec_override"
                            }, 
                            "vm_spec": {
                                "$ref": "#/definitions/vm_spec_override"
                            }, 
                            "metadata": {
                                "$ref": "#/definitions/vm_metadata_override"
                            }
                        }
                    }, 
                    "type": "array"
                }, 
                "target_cluster_reference": {
                    "description": "Reference to the cluster in the target Availability Zone where the\nentities need to be migrated.\n", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "target_availability_zone_reference": {
                    "description": "Reference to the target Availability Zone where the entities need\nto be migrated.\n", 
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "is_live_migration": {
                    "type": "boolean", 
                    "description": "Whether to do live migration of the entity. This is applicable only\nwhen the entity is protected with sync protection policy.\n"
                }
            }, 
            "title": "Migrate API input"
        }, 
        "environment_resources": {
            "description": "Resources for Environment.", 
            "type": "object", 
            "properties": {
                "substrate_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_substrate_input"
                    }, 
                    "type": "array", 
                    "description": "Substrate definitions for Environment."
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": "List of variables"
                }, 
                "credential_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_credential_input"
                    }, 
                    "type": "array", 
                    "description": "Credential definitions for Environment."
                }
            }, 
            "title": "Resources for Environment."
        }, 
        "vm_host_affinity_policy_list_metadata_output": {
            "description": "All API calls that return a list will have this metadata block.\n", 
            "type": "object", 
            "properties": {
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found.", 
                    "format": "int64"
                }, 
                "kind": {
                    "default": "vm_host_affinity_policy", 
                    "x-ntnx-enum": [
                        "vm_host_affinity_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name."
                }, 
                "length": {
                    "type": "integer", 
                    "description": "Number of records retrieved relative to the offset.", 
                    "format": "int64"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list.", 
                    "format": "int64"
                }
            }, 
            "title": "Metadata for vm_host_affinity_policy list output"
        }, 
        "identity_provider_list_intent_response": {
            "description": "Response object for intentful operation of identity_providers", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/identity_provider_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/identity_provider_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "action_rule_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_rule", 
                    "x-ntnx-enum": [
                        "action_rule"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for action_rule list"
        }, 
        "image_placement_policy_resources_def_status": {
            "description": "Describes the status of the image policy object", 
            "type": "object", 
            "properties": {
                "cluster_entity_filter": {
                    "description": "Category list for filtering clsuters", 
                    "$ref": "#/definitions/placement_entity_filter"
                }, 
                "image_entity_filter": {
                    "description": "Category list for filtering images", 
                    "$ref": "#/definitions/placement_entity_filter"
                }, 
                "placement_type": {
                    "x-ntnx-enum": [
                        "AT_LEAST", 
                        "EXACTLY"
                    ], 
                    "type": "string", 
                    "description": "Describes the image placement semantic"
                }
            }, 
            "title": "Image placement policy status resources"
        }, 
        "category_key": {
            "description": "Category key definition.", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the category.", 
                    "maxLength": 1000
                }, 
                "capabilities": {
                    "$ref": "#/definitions/capabilities"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the category.", 
                    "maxLength": 64
                }
            }, 
            "title": "Category Key definition."
        }, 
        "groups_entity": {
            "description": "An Individual Entity.", 
            "type": "object", 
            "properties": {
                "entity_id": {
                    "type": "string"
                }, 
                "data": {
                    "items": {
                        "$ref": "#/definitions/groups_field_data"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Entity"
        }, 
        "report_config_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "report_config", 
                    "x-ntnx-enum": [
                        "report_config"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for report_config list"
        }, 
        "internal_routing_protocol_config_status": {
            "description": "Describes the routing protocol configuration status needed by this gateway\nto peer and learn routes from internal routers using either iBGP or OSFP.\n", 
            "type": "object", 
            "properties": {
                "local_prefix_list": {
                    "items": {
                        "$ref": "#/definitions/ip_subnet_status"
                    }, 
                    "type": "array", 
                    "description": "list of local prefixes to be advertised over eBGP"
                }, 
                "ibgp_config_list": {
                    "items": {
                        "$ref": "#/definitions/bgp_config_status"
                    }, 
                    "type": "array", 
                    "description": "iBGP configuration."
                }, 
                "ospf_config": {
                    "$ref": "#/definitions/ospf_config_status"
                }
            }, 
            "title": "Internal routing protocol (ibgp/ospf) config status"
        }, 
        "rack_metadata": {
            "description": "The rack kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when rack was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "rack", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "rack"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "rack uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the rack is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when rack was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the rack. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the rack. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "rack name", 
                    "maxLength": 80
                }
            }, 
            "title": "rack metadata"
        }, 
        "vm_recovery_point_def_status": {
            "description": "The output object that defines a vm recovery point", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the recovery point."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the vm recovery point."
                }, 
                "availability_zone_reference": {
                    "description": "Reference to the availability zone where this recovery point is\nlocated.\n", 
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the vm, if in an error state."
                }, 
                "cluster_reference": {
                    "description": "Reference to the cluster in the availability zone where this recovery\npoint is located.\n", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "type": "object", 
                    "properties": {
                        "consistency_group_uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "description": "This field is same for all the entities (irrespective of kind) that\nwere snapshotted together.\n"
                        }, 
                        "source_availability_zone_reference": {
                            "description": "Reference to the availability zone where the source recovery\npoint exists. This need to be set to copy a recovery from some\nother location.\n", 
                            "$ref": "#/definitions/availability_zone_reference"
                        }, 
                        "source_cluster_reference": {
                            "description": "Reference to the cluster in the source availability zone. This\nneed to be set to copy a recovery from some other location.\n", 
                            "$ref": "#/definitions/cluster_reference"
                        }, 
                        "recoverability": {
                            "type": "object", 
                            "description": "Recoverability of the recovery point. Will be populated only for LIVE snapshots.\n", 
                            "properties": {
                                "status": {
                                    "x-ntnx-enum": [
                                        "RECOVERABLE", 
                                        "PARTIAL_RECOVERABLE", 
                                        "UNRECOVERABLE"
                                    ], 
                                    "type": "string", 
                                    "description": "Recoverability status of the recovery point."
                                }, 
                                "reason": {
                                    "type": "string", 
                                    "description": "Reason for the recoverability status of the recovery point.\n", 
                                    "maxLength": 256
                                }
                            }
                        }, 
                        "parent_vm_reference": {
                            "description": "Reference to vm that this recovery point is a snapshot of.\n", 
                            "$ref": "#/definitions/vm_reference"
                        }, 
                        "recovery_point_type": {
                            "x-ntnx-enum": [
                                "CRASH_CONSISTENT", 
                                "APPLICATION_CONSISTENT", 
                                "LIVE"
                            ], 
                            "type": "string", 
                            "description": "Crash consistent or Application Consistent recovery point"
                        }, 
                        "vm_spec": {
                            "description": "Spec of the vm at the time of snapshot.\n", 
                            "$ref": "#/definitions/vm"
                        }, 
                        "vm_recovery_point_location_agnostic_uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "description": "Location agnostic UUID of the recovery point. If a recovery\npoint is replicated to a different clusters, then all the\ninstances of same recovery point will share this UUID.\n", 
                            "format": "UUID"
                        }, 
                        "creation_time": {
                            "type": "string", 
                            "description": "The time when the the recovery point is created. This is in internet\ndate/time format (RFC 3339). For example, 1985-04-12T23:20:50.52Z,\nthis represents 20 minutes and 50.52 seconds after the 23rd hour of\nApril 12th, 1985 in UTC.\n"
                        }, 
                        "vm_metadata": {
                            "description": "Metadata of the vm at the time of snapshot.\n", 
                            "$ref": "#/definitions/vm_metadata"
                        }, 
                        "expiration_time": {
                            "type": "string", 
                            "description": "The time when this recovery point expires and will be garbage\ncollected. This is in internet date/time format (RFC 3339). For\nexample, 1985-04-12T23:20:50.52Z, this represents 20 minutes and\n50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If not\nset, then the recovery point never expires.\n", 
                            "format": "date-time"
                        }
                    }, 
                    "title": "Recovery point resources"
                }
            }, 
            "title": "vm recovery point output definitions"
        }, 
        "cluster_nodes": {
            "description": "Node info for this cluster.", 
            "type": "object", 
            "properties": {
                "hypervisor_server_list": {
                    "items": {
                        "$ref": "#/definitions/hypervisor_server"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }
            }, 
            "title": "Cluster Nodes"
        }, 
        "ip_subnet_status": {
            "description": "IP subnet provided as an address and prefix length.", 
            "type": "object", 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IPV4 address."
                }, 
                "prefix_length": {
                    "type": "integer", 
                    "format": "int32"
                }
            }, 
            "title": "IP subnet."
        }, 
        "aws_region_metadata": {
            "description": "The aws_region kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_region was last updated\n", 
                    "format": "date-time"
                }, 
                "kind": {
                    "default": "aws_region", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_region"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "aws_region uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the aws_region is in", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_region was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the aws_region"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "aws_region name"
                }
            }, 
            "title": "aws_region metadata"
        }, 
        "ngt_policy_reference": {
            "description": "The reference to a ngt_policy", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ngt_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ngt_policy"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a ngt_policy"
        }, 
        "app_actionrun_spec": {
            "description": "Spec for action launch.", 
            "type": "object", 
            "properties": {
                "args": {
                    "items": {
                        "$ref": "#/definitions/app_actionrun_args"
                    }, 
                    "type": "array", 
                    "description": "Argument that need to be passed in action run. It is a dictionary of name-values."
                }, 
                "target_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The target entity on which that action will be running.", 
                    "format": "UUID"
                }, 
                "target_kind": {
                    "type": "string", 
                    "description": "type of target entity."
                }
            }, 
            "title": "Spec for action launch."
        }, 
        "query_result": {
            "description": "Query result object definition. This holds the response for the search\nrequest.\n", 
            "type": "object", 
            "properties": {
                "query_explaination": {
                    "type": "string", 
                    "description": "A description of the interpretation done by the search engine.\n"
                }, 
                "auto_completion_list": {
                    "items": {
                        "$ref": "#/definitions/auto_completion"
                    }, 
                    "type": "array", 
                    "description": "List of all the autocompletions for a given user query.\n"
                }, 
                "query_context": {
                    "type": "string", 
                    "description": "Common context for query which needs to be shared across client and\nsearch service. Client can pass some context which will be echoed back\nalong with the response.\n"
                }, 
                "query_term_list": {
                    "items": {
                        "$ref": "#/definitions/query_term"
                    }, 
                    "type": "array", 
                    "description": "Structured representation that infers query intent unambiguously. Client will echo this information back to the backend. Essentially, it is like a search result link. The list has an item corresponding to every query term. One user query is nothing but a collection of multiple query terms.\n"
                }, 
                "result": {
                    "$ref": "#/definitions/result"
                }, 
                "user_query": {
                    "type": "string", 
                    "description": "User query in simple text.", 
                    "maxLength": 2048
                }, 
                "time_taken": {
                    "type": "integer", 
                    "description": "Time taken(ms) in executing the search query.", 
                    "format": "int64"
                }, 
                "plain_text_query": {
                    "type": "boolean", 
                    "description": "A boolean flag to distinguish between a plain text search_for query\nand the search_for query with query term list.\n"
                }
            }, 
            "title": "Query Result Definition"
        }, 
        "marketplace_item_intent_response": {
            "description": "Response object for intentful operations on a marketplace_item", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/marketplace_item_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/marketplace_item"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/marketplace_item_metadata"
                }
            }, 
            "title": "marketplace_item Intent Response"
        }, 
        "image_version_resources": {
            "description": "The image version, which is composed of a product name and product version.\n", 
            "required": [
                "product_name", 
                "product_version"
            ], 
            "type": "object", 
            "properties": {
                "product_version": {
                    "type": "string", 
                    "description": "Version string for the disk image.", 
                    "maxLength": 64
                }, 
                "product_name": {
                    "type": "string", 
                    "description": "Name of the producer/distribution of the image. For example windows or red hat.\n", 
                    "maxLength": 64
                }
            }, 
            "title": "Image version"
        }, 
        "aws_machine_type_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_machine_type", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_machine_type"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "layer2_stretch_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "layer2_stretch", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "layer2_stretch"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "xig_dns_config_response": {
            "description": "PC's DNS Config Response for XIG.", 
            "type": "object", 
            "properties": {
                "rewrite_rules_list": {
                    "items": {
                        "$ref": "#/definitions/rewrite_rule"
                    }, 
                    "type": "array", 
                    "description": "Rules to rewrite API paths."
                }, 
                "jwk_source_list": {
                    "items": {
                        "$ref": "#/definitions/jwk_source"
                    }, 
                    "type": "array", 
                    "description": "-> Required if any proxy rule has token validation on. This is the source information where XIG will poll for JSON web keys and do token validations against."
                }, 
                "bypass_auth_path_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "-> Api path regex which needs to bypass authendication/token validation."
                }
            }, 
            "title": "XIG DNS Config Response"
        }, 
        "report_config_metadata": {
            "description": "The report_config kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when report_config was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "report_config", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "report_config"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "report_config uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the report_config is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when report_config was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the report_config. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the report_config. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "report_config name", 
                    "maxLength": 80
                }
            }, 
            "title": "report_config metadata"
        }, 
        "effective_storage_config": {
            "description": "Indicates the storage configuration attributes being effective on the VM.\nThis state is resultant of storage attributes configured on the VM and\nstorage policies associated with the VM.\n", 
            "type": "object", 
            "properties": {
                "compression_delay_secs": {
                    "type": "integer", 
                    "description": "Deprecated. Delay in seconds after which the VM disk data will be\ncompressed.\n", 
                    "format": "int32"
                }, 
                "compression_enabled": {
                    "type": "boolean", 
                    "description": "Deprecated. Indicates whether compression is enabled or not on the VM.\n"
                }, 
                "throttled_iops": {
                    "type": "integer", 
                    "description": "Deprecated. Max IOs the VM is allowed to do in a second.", 
                    "format": "int32"
                }, 
                "active_storage_policy_reference_list": {
                    "items": {
                        "$ref": "#/definitions/reference"
                    }, 
                    "type": "array", 
                    "description": "List of storage policies active on the VM."
                }, 
                "encryption_enabled": {
                    "description": "Deprecated. Indicates whether encryption is enabled or not on the VM.\n", 
                    "type": "boolean"
                }
            }, 
            "title": "Effective storage configuration on the VM."
        }, 
        "host_intent_input": {
            "description": "An intentful representation of a host", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/host"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/host_metadata"
                }
            }, 
            "title": "host Intent Entity"
        }, 
        "group_requested_attribute": {
            "description": "List of columns in the grid rendering query result.", 
            "type": "object", 
            "properties": {
                "attribute": {
                    "type": "string"
                }
            }, 
            "title": "Column Names."
        }, 
        "vm_recovery_point_list_intent_response": {
            "description": "Response object for intentful operation of vm_recovery_points", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/vm_recovery_point_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_recovery_point_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "action_template_resources": {
            "description": "Action template object for example action templates.", 
            "required": [
                "action_type_reference"
            ], 
            "type": "object", 
            "properties": {
                "action_type_reference": {
                    "$ref": "#/definitions/action_type_reference"
                }, 
                "display_name": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "Each action instance already has a default display name from action\ntype.  However, users could change an action instance with a different\ndisplay name.\n", 
                    "maxLength": 255
                }, 
                "description": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "Description of the action template.", 
                    "maxLength": 1024
                }, 
                "is_disabled": {
                    "type": "boolean", 
                    "description": "Flag to indicate if action template is disabled"
                }, 
                "input_parameter_values": {
                    "description": "The input parameter value mappings for the action instance.", 
                    "$ref": "#/definitions/component_instance_parameters"
                }, 
                "blank_template": {
                    "type": "boolean", 
                    "description": "Is this a blank template or a user defined template."
                }
            }, 
            "title": "Action template"
        }, 
        "marketplace_item_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "marketplace_item", 
                    "x-ntnx-enum": [
                        "marketplace_item"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for marketplace_item list output"
        }, 
        "alert": {
            "description": "Alert entity definition", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/alert_resources"
                }
            }, 
            "title": "Alert Entity"
        }, 
        "user": {
            "description": "User Input Definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/user_input_resource"
                }
            }, 
            "title": "User."
        }, 
        "vg_recovery_point_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vg_recovery_point", 
                    "x-ntnx-enum": [
                        "vg_recovery_point"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for vg_recovery_point list output"
        }, 
        "recover_entities": {
            "description": "Information about entities to be recovered.\n", 
            "required": [
                "entity_info_list"
            ], 
            "type": "object", 
            "properties": {
                "entity_info_list": {
                    "items": {
                        "type": "object", 
                        "x-ntnx-one-of": [
                            {
                                "required": [
                                    "categories"
                                ]
                            }, 
                            {
                                "required": [
                                    "any_entity_reference"
                                ]
                            }
                        ], 
                        "properties": {
                            "vm_power_state": {
                                "x-ntnx-enum": [
                                    "ON", 
                                    "OFF"
                                ], 
                                "type": "string", 
                                "description": "Power state of the VM(s) after recovery."
                            }, 
                            "any_entity_reference": {
                                "description": "Information about entity to be recovered.", 
                                "$ref": "#/definitions/reference"
                            }, 
                            "volume_group_attachment_list": {
                                "items": {
                                    "required": [
                                        "vm_reference", 
                                        "volume_group_attachment_info_list"
                                    ], 
                                    "type": "object", 
                                    "properties": {
                                        "volume_group_attachment_info_list": {
                                            "minItems": 1, 
                                            "items": {
                                                "required": [
                                                    "volume_group_reference", 
                                                    "attachment_type"
                                                ], 
                                                "type": "object", 
                                                "properties": {
                                                    "authentication_type": {
                                                        "x-ntnx-enum": [
                                                            "CHAP"
                                                        ], 
                                                        "type": "string", 
                                                        "description": "Type of authentication protocol to be used.\n"
                                                    }, 
                                                    "client_secret": {
                                                        "minLength": 12, 
                                                        "maxLength": 16, 
                                                        "type": "string", 
                                                        "description": "Client secret in case of CHAP authentication is required.\n", 
                                                        "format": "password"
                                                    }, 
                                                    "attachment_type": {
                                                        "default": "IQN", 
                                                        "x-ntnx-enum": [
                                                            "IQN", 
                                                            "HYPERVISOR"
                                                        ], 
                                                        "type": "string", 
                                                        "description": "Mechanism to be used for Volume Group attachment. The allowed attachment types are IQN, HYPERVISOR. Specify IQN in case of \"iSCSI Qualified Name\" based attachments. In case of IQN based attachment, authentication_type, client_secret can be specified for client authentication. Specify HYPERVISOR for directly attaching Volumes to VM through the hypervisor, this is only supported when VM is running on AHV hypervisor.\"\n"
                                                    }, 
                                                    "volume_group_reference": {
                                                        "description": "Reference of the Volume Group to be attached. The Volume Groups specified here must be among those specified explicitly or via category filter in the \"volume_group_recovery_info_list\".\n", 
                                                        "$ref": "#/definitions/volume_group_reference"
                                                    }
                                                }
                                            }, 
                                            "type": "array", 
                                            "description": "Information about Volume Groups to be attached.\n"
                                        }, 
                                        "vm_reference": {
                                            "description": "Reference of the VM to which Volume Group is to be attached. The VM specified here must be among those either specified explicitly in \"any_entity_reference\" or have categories as specified in the \"categories\" filter.\n", 
                                            "$ref": "#/definitions/vm_reference"
                                        }
                                    }
                                }, 
                                "type": "array", 
                                "description": "List containing the VMs to Volume Group attachment information.\n"
                            }, 
                            "categories": {
                                "additionalProperties": {
                                    "type": "string"
                                }, 
                                "type": "object", 
                                "description": "Categories for filtering entities."
                            }, 
                            "script_list": {
                                "items": {
                                    "$ref": "#/definitions/recovery_plan_script_config"
                                }, 
                                "type": "array", 
                                "description": "List of scripts to be executed inside the guest VMs after recovery.\n"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "Information about entities to be recovered as part of this stage. For VM, entity information will include set of scripts to be executed after recovery of VM. Only one of categories or any_entity_reference has to be provided.\n"
                }
            }, 
            "title": "Information about entities to be recovered"
        }, 
        "access_control_policy_intent_input": {
            "description": "An intentful representation of a access_control_policy", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/access_control_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/access_control_policy_metadata"
                }
            }, 
            "title": "access_control_policy Intent Entity"
        }, 
        "task": {
            "description": "Task details.", 
            "type": "object", 
            "properties": {
                "status": {
                    "x-ntnx-enum": [
                        "QUEUED", 
                        "RUNNING", 
                        "SUCCEEDED", 
                        "ABORTED", 
                        "SUSPENDED", 
                        "FAILED"
                    ], 
                    "type": "string", 
                    "description": "Current state of the task."
                }, 
                "last_update_time": {
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when task was last updated.\n", 
                    "format": "date-time"
                }, 
                "error_detail": {
                    "type": "string", 
                    "description": "In case of task failure this field will provide the error description.\n"
                }, 
                "logical_timestamp": {
                    "type": "integer", 
                    "description": "Number of times the task has been updated. The value increases sequentially with each update of the task and can be used to verify if there have been changes to the task.\n", 
                    "format": "int64"
                }, 
                "requested_status": {
                    "x-ntnx-enum": [
                        "RUNNING", 
                        "ABORTED", 
                        "SUSPENDED"
                    ], 
                    "type": "string", 
                    "description": "Final expected state of the task. It is set when the task is aborted.\n"
                }, 
                "entity_reference_list": {
                    "items": {
                        "$ref": "#/definitions/reference"
                    }, 
                    "type": "array"
                }, 
                "start_time": {
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when Task execution started.\n", 
                    "format": "date-time"
                }, 
                "creation_time": {
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when task was created.\n", 
                    "format": "date-time"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the task.", 
                    "x-example": "0e09cf83-ac68-4f28-af70-6df9a43df4f0", 
                    "format": "UUID"
                }, 
                "start_time_usecs": {
                    "type": "integer", 
                    "description": "Time in microseconds from epoch when the task execution started.\n", 
                    "format": "int64"
                }, 
                "cluster_reference": {
                    "description": "Reference to the cluster the task is being executed on.", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "subtask_reference_list": {
                    "items": {
                        "$ref": "#/definitions/task_reference"
                    }, 
                    "type": "array", 
                    "description": "Reference to the sub-tasks."
                }, 
                "completion_time": {
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when Task execution completed.\n", 
                    "format": "date-time"
                }, 
                "creation_time_usecs": {
                    "type": "integer", 
                    "description": "Time in microseconds from epoch when task was created.\n", 
                    "format": "int64"
                }, 
                "progress_message": {
                    "type": "string", 
                    "description": "Description of what currently the task is doing."
                }, 
                "operation_type": {
                    "type": "string", 
                    "description": "Type of the operation tracked by the task."
                }, 
                "completion_time_usecs": {
                    "type": "integer", 
                    "description": "Time in microseconds from epoch when task execution completed.\n", 
                    "format": "int64"
                }, 
                "error_code": {
                    "type": "string", 
                    "description": "In case of task failure this field will provide the error code.\n"
                }, 
                "percentage_complete": {
                    "type": "integer", 
                    "description": "The completion percentage for the task.", 
                    "format": "int32"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "parent_task_reference": {
                    "description": "Reference to the parent task.", 
                    "$ref": "#/definitions/task_reference"
                }
            }, 
            "title": "Task resources"
        }, 
        "build_info": {
            "description": "Cluster build details.", 
            "required": [
                "build_type", 
                "version", 
                "commit_id", 
                "short_commit_id"
            ], 
            "type": "object", 
            "properties": {
                "commit_id": {
                    "type": "string", 
                    "description": "Last Git commit id which the build is based on."
                }, 
                "full_version": {
                    "type": "string", 
                    "description": "Full version name."
                }, 
                "commit_date": {
                    "type": "string", 
                    "description": "Date/time of the last commit.", 
                    "format": "date-time"
                }, 
                "is_long_term_support": {
                    "type": "boolean", 
                    "description": "Flag to indicate if the AOS release is qualified as long term support.\n"
                }, 
                "version": {
                    "type": "string", 
                    "description": "Numeric version. e.g. \"5.5\""
                }, 
                "short_commit_id": {
                    "type": "string", 
                    "description": "First 6 characters of the last Git commit id."
                }, 
                "build_type": {
                    "type": "string", 
                    "description": "Build type, one of {dbg, opt, release}."
                }
            }, 
            "title": "Cluster build details"
        }, 
        "common_report_config_def_status": {
            "description": "Common Report Config creation/modification status.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The state of the common report config entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the common report config."
                }, 
                "resources": {
                    "description": "Common report config resources definition.", 
                    "type": "object", 
                    "properties": {
                        "report_customization": {
                            "$ref": "#/definitions/report_customization"
                        }, 
                        "retention_policy": {
                            "$ref": "#/definitions/retention_policy"
                        }, 
                        "description": {
                            "type": "string", 
                            "description": "Description of the common report config."
                        }, 
                        "notification_policy": {
                            "$ref": "#/definitions/notification_policy"
                        }
                    }, 
                    "title": "Common Report Config Resources."
                }
            }, 
            "title": "Common Report Config creation/modification status."
        }, 
        "service_group_reference": {
            "description": "The reference to a service_group", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "service_group", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "service_group"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a service_group"
        }, 
        "changed_regions_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "changed_regions", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "changed_regions"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "edge": {
            "description": "Edge Information", 
            "type": "object", 
            "properties": {
                "destination_vertex_id": {
                    "type": "string", 
                    "description": "ID of destination vertex"
                }, 
                "source_vertex_id": {
                    "type": "string", 
                    "description": "ID of source vertex"
                }, 
                "traffic_list": {
                    "items": {
                        "$ref": "#/definitions/traffic"
                    }, 
                    "type": "array", 
                    "description": "Traffic information of the edge."
                }
            }, 
            "title": "Edge Information"
        }, 
        "idempotence_identifiers_response": {
            "description": "Idempotence identifier status definition.", 
            "required": [
                "count", 
                "uuid_list"
            ], 
            "type": "object", 
            "properties": {
                "client_identifier": {
                    "type": "string", 
                    "description": "The client identifier string."
                }, 
                "count": {
                    "default": 1, 
                    "type": "integer", 
                    "description": "The number of idempotence identifiers provided."
                }, 
                "expiration_time": {
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format of the expiration time (with reference to system time). Value is creation time + valid_duration", 
                    "format": "date-time"
                }, 
                "uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "description": "UUID to identify the relationship <to be updated>", 
                        "format": "UUID"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Idempotence identifier status definition."
        }, 
        "vpc_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpc", 
                    "x-ntnx-enum": [
                        "vpc"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vpc list"
        }, 
        "support_case_response": {
            "description": "Support case Resources definition.", 
            "type": "object", 
            "properties": {
                "status": {
                    "type": "string", 
                    "description": "Status of the case."
                }, 
                "log_collector": {
                    "$ref": "#/definitions/log_collector_support_case_upload"
                }, 
                "contact_details": {
                    "$ref": "#/definitions/contact_information"
                }, 
                "ncc_checks_pc": {
                    "$ref": "#/definitions/ncc_checks_support_case_upload"
                }, 
                "creator_name": {
                    "type": "string", 
                    "description": "Name of the person who created the case."
                }, 
                "case_number": {
                    "type": "string", 
                    "description": "Support Case Number. This is the pretty version of case as visible to the user. Example \"00151752\"\n"
                }, 
                "nos_version": {
                    "type": "string", 
                    "description": "Nos version of the block for which support case is opened."
                }, 
                "creation_date": {
                    "type": "string", 
                    "description": "Date on which the case was created.", 
                    "format": "date-time"
                }, 
                "priority": {
                    "x-ntnx-enum": [
                        "P1", 
                        "P2", 
                        "P3", 
                        "P4", 
                        "RFE"
                    ], 
                    "type": "string", 
                    "description": "Priority of the support case being created Example P4-Low, P3-Normal, P2-Critical, P1-Emergency.\n"
                }, 
                "hypervisor_version": {
                    "type": "string", 
                    "description": "Hypervisor version for which support case is opened."
                }, 
                "case_type": {
                    "type": "string", 
                    "description": "Type of the support case being opened."
                }, 
                "case_id": {
                    "type": "string", 
                    "description": "Support Case Id. This is the id to be used to query support details. Example \"500W0000003w3FEIAY\"\n"
                }, 
                "custom_key_values": {
                    "$ref": "#/definitions/generic_key_value_pair"
                }, 
                "owner": {
                    "type": "string", 
                    "description": "Owner of the case."
                }, 
                "serial_number": {
                    "type": "string", 
                    "description": "Serial Number of the block for which help is needed."
                }, 
                "additional_notification_list": {
                    "items": {
                        "$ref": "#/definitions/contact_information"
                    }, 
                    "type": "array", 
                    "description": "List of email addresses of the extra recipients who need to be notified for case management.\n", 
                    "maxItems": 3
                }, 
                "log_collector_pc": {
                    "$ref": "#/definitions/log_collector_support_case_upload"
                }, 
                "cluster_reference": {
                    "description": "Reference of the cluster for which logs and health checks need to be uploaded.\n", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "ncc_checks": {
                    "$ref": "#/definitions/ncc_checks_support_case_upload"
                }
            }, 
            "title": "Support Case Resources."
        }, 
        "notification_policy": {
            "description": "Notification policy.", 
            "type": "object", 
            "properties": {
                "email_config": {
                    "$ref": "#/definitions/email_config"
                }
            }, 
            "title": "Notification policy."
        }, 
        "aws_security_group_list": {
            "items": {
                "type": "object", 
                "properties": {
                    "security_group_id": {
                        "pattern": "^sg-[a-f0-9]{1,17}$", 
                        "type": "string", 
                        "description": "AWS ID of the security group"
                    }
                }
            }, 
            "type": "array", 
            "description": "List of AWS security group IDs.", 
            "title": "AWS Security Group List"
        }, 
        "help_result": {
            "description": "Help result object definition.", 
            "type": "object", 
            "properties": {
                "url": {
                    "type": "string", 
                    "description": "URL of the help page from."
                }, 
                "ancestor_url_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of ancestor urls for the help page."
                }, 
                "ancestor_title_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of ancestor titles for the help page."
                }, 
                "highlight_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of highlights for the help page."
                }, 
                "title": {
                    "type": "string", 
                    "description": "Title fo the help result."
                }
            }, 
            "title": "Help Result Definition"
        }, 
        "vpc_route_table_reference": {
            "description": "The reference to a vpc_route_table", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpc_route_table", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vpc_route_table"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vpc_route_table"
        }, 
        "blueprint_marketplace_launch_response_status": {
            "description": "Status of the Blueprint.", 
            "type": "object", 
            "properties": {
                "app_blueprint_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "AppBlueprint uuid.", 
                    "format": "UUID"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description for the marketplace item"
                }, 
                "resources": {
                    "$ref": "#/definitions/blueprint_resources_def_status"
                }
            }, 
            "title": "Status of the Blueprint."
        }, 
        "service_capability": {
            "description": "The capability of a service for a desired state. If not capable, reasons for the same should be populated.\n", 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "boolean", 
                    "description": "The current state of the capability. For example, if a service can be enabled or not.\n"
                }, 
                "validation_message_list": {
                    "items": {
                        "type": "object", 
                        "properties": {
                            "error_detail": {
                                "type": "string", 
                                "description": "The error detail for the validation failure.\n"
                            }, 
                            "validation_type": {
                                "x-ntnx-enum": [
                                    "PC_REGISTERED_TO_HOST_PE", 
                                    "MEMORY_CHECK_ON_HOST_PE", 
                                    "DATA_SERVICE_IP_CHECK_ON_PE", 
                                    "VERSION_CHECK", 
                                    "CALM_ENABLEMENT_CHECK"
                                ], 
                                "type": "string", 
                                "description": "The type of validation performed.\n"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "List of messages explaining the current state of the capability. For example, if a service cannot be enabled, this list will contain the reasons for the same.\n"
                }
            }, 
            "title": "The capability of the service."
        }, 
        "witness_configuration": {
            "description": "Witness configuration to be stored in Recovery Plan.\n", 
            "type": "object", 
            "properties": {
                "witness_address": {
                    "type": "string", 
                    "description": "Address of the witness, which will be witnessing this Recovery Plan. This will be same as Availability Zone URL, on which witness is deployed.\n"
                }, 
                "witness_failover_timeout_secs": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Time in seconds after which witness will trigger failover on this Recovery Plan in case there is a failure of source cluster or pause replication for entities in case there is a failure of target cluster.\n", 
                    "format": "int32"
                }
            }, 
            "title": "Witness Configuration."
        }, 
        "bgp_config_status": {
            "description": "BGP configuration status for route peering with another router.", 
            "type": "object", 
            "properties": {
                "asn": {
                    "type": "integer", 
                    "description": "ASN used in BGP.", 
                    "format": "uint32"
                }, 
                "password": {
                    "type": "string", 
                    "description": "Password for authentication. Note that the clear-text password value\nspecfied in the input spec is never revealed in the status. Use this\nfield only as means to verify if the password is currently set or not.\n", 
                    "format": "password"
                }, 
                "distribute_connected": {
                    "type": "boolean", 
                    "description": "Boolean flag to indicate users choice on whether connected routes\nmust be redistributed over eBGP. (Applicable to VLAN backed gateways\nonly)\n"
                }, 
                "peer_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IP address of the peer."
                }
            }, 
            "title": "BGP configuration status for route peering with another router"
        }, 
        "vm_snapshot_input": {
            "description": "Input object for the snapshot API. User can provide optional UUID of the vm_recovery_point that will be created as a result of this operation.\n", 
            "type": "object", 
            "properties": {
                "creation_time": {
                    "type": "string", 
                    "description": "The target time at which the user wishes to have a fully usable\nrecovery point. This is in internet date/time format (RFC 3339). For\nexample, 1985-04-12T22:10:10Z, this represents 10 minutes and 10.10\nseconds after the 22nd hour of April 12th, 1985 in UTC. The backend\nwill generate a complete recovery point out of the closest available\npartial backend recovery point that is created on or before the\nprovided timestamp. This field is explicitly used for the realization\nsemantics for high frequency snapshotting. If this field is set, none\nof the other fields in this parameter are valid.\n", 
                    "format": "date-time"
                }, 
                "expiration_time": {
                    "type": "string", 
                    "description": "The time when this recovery point expires and will be garbage\ncollected. This is in internet date/time format (RFC 3339). If not\nset, then the recovery point never expires.\n", 
                    "format": "date-time"
                }, 
                "vm_recovery_point_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the recovery point.", 
                    "maxLength": 64
                }, 
                "recovery_point_type": {
                    "x-ntnx-enum": [
                        "CRASH_CONSISTENT", 
                        "APPLICATION_CONSISTENT"
                    ], 
                    "type": "string", 
                    "description": "Crash consistent or Application Consistent recovery point"
                }
            }, 
            "title": "Snapshot API input"
        }, 
        "recovery_plan_job_action_request": {
            "description": "Recovery Plan Job action request.", 
            "type": "object", 
            "properties": {
                "should_continue_rerun_on_validation_failure": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Whether to continue rerun execution if warnings are detected during recovery validations.\n"
                }, 
                "rerun_recovery_plan_job_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID for referencing the new Recovery Plan Job created for running the failed and incomplete operations. If not specified system generated one will be used. Reference to this will also be populated in entity_reference_list of the task returned in the response.\n", 
                    "format": "UUID"
                }
            }, 
            "title": "Recovery Plan Job action request body."
        }, 
        "recovery_plan_vm_ip_assignment": {
            "description": "IP configuration to be applied to a VM.\n", 
            "required": [
                "vm_reference", 
                "ip_config_list"
            ], 
            "type": "object", 
            "properties": {
                "ip_config_list": {
                    "items": {
                        "required": [
                            "ip_address"
                        ], 
                        "type": "object", 
                        "description": "IP configuration.\n", 
                        "properties": {
                            "ip_address": {
                                "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                                "type": "string", 
                                "description": "IP address.\n"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "List of IP configurations for a VM.\n"
                }, 
                "vm_reference": {
                    "description": "Reference to the VM.", 
                    "$ref": "#/definitions/vm_reference"
                }
            }, 
            "title": "IP configuration for a VM\n"
        }, 
        "task_reference": {
            "description": "The reference to a task", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "task", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "task"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a task"
        }, 
        "aws_elastic_ip_metadata": {
            "description": "The aws_elastic_ip kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_elastic_ip was last updated\n", 
                    "format": "date-time"
                }, 
                "kind": {
                    "default": "aws_elastic_ip", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_elastic_ip"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "aws_elastic_ip uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the aws_elastic_ip is in", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_elastic_ip was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the aws_elastic_ip"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "aws_elastic_ip name"
                }
            }, 
            "title": "aws_elastic_ip metadata"
        }, 
        "recipient": {
            "description": "Recipient of the report email.", 
            "type": "object", 
            "properties": {
                "email_address": {
                    "pattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)", 
                    "type": "string", 
                    "description": "Email address of the recipient."
                }, 
                "recipient_name": {
                    "type": "string", 
                    "description": "Name of the recipient.", 
                    "maxLength": 64
                }
            }, 
            "title": "Recipient Details."
        }, 
        "user_details_object": {
            "description": "Details of logged in user.", 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "username of the logged in user."
                }, 
                "user_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the logged in user.", 
                    "format": "UUID"
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "Display name of the logged in user."
                }, 
                "user_type": {
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "IDP", 
                        "DIRECTORY_SERVICE", 
                        "Xi"
                    ], 
                    "type": "string", 
                    "description": "Type of the logged in user."
                }
            }, 
            "title": "Dictionary of user details."
        }, 
        "recovery_plan_intent_resource": {
            "description": "Response object for intentful operations on a recovery_plan", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/recovery_plan_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/recovery_plan"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/recovery_plan_metadata"
                }
            }, 
            "title": "recovery_plan Intent Response"
        }, 
        "marketplace_item_intent_input": {
            "description": "An intentful representation of a marketplace_item", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/marketplace_item"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/marketplace_item_metadata"
                }
            }, 
            "title": "marketplace_item Intent Entity"
        }, 
        "aws_vm_resources": {
            "description": "AWS VM Resources Definition.", 
            "type": "object", 
            "properties": {
                "instance_type": {
                    "type": "string", 
                    "description": "The type of instance e.g.'t1.micro', 'm1.small'", 
                    "maxLength": 64
                }, 
                "instance_profile_name": {
                    "type": "string", 
                    "description": "The name of the IAM Instance Profile (IIP) associated with the\ninstance\n"
                }, 
                "availability_zone": {
                    "type": "string", 
                    "description": "The zone on which the instance is to be created."
                }, 
                "subnet_id": {
                    "pattern": "^subnet-[a-f0-9]{1,17}$", 
                    "type": "string", 
                    "description": "The subnet within the VPC the instance belongs to."
                }, 
                "key_name": {
                    "type": "string", 
                    "description": "The name of the key pair used to launch the instance"
                }, 
                "region": {
                    "pattern": "^[a-z]{2}-[a-z\\-]*-[1-9]{1}$", 
                    "type": "string", 
                    "description": "The region to which the instance belongs."
                }, 
                "user_data": {
                    "type": "string", 
                    "description": "User data passed to launch the instance", 
                    "maxLength": 16000
                }, 
                "instance_initiated_shutdown_behavior": {
                    "x-ntnx-enum": [
                        "STOP", 
                        "TERMINATE"
                    ], 
                    "type": "string", 
                    "description": "Specifies whether the instance stops or terminates on instance-initiated shutdown.\n"
                }, 
                "image_id": {
                    "pattern": "^ami-[a-f0-9]{1,17}$", 
                    "type": "string", 
                    "description": "The AWS ID of the AMI on the instance."
                }, 
                "state": {
                    "x-ntnx-enum": [
                        "RUNNING", 
                        "REBOOTING", 
                        "STOPPED"
                    ], 
                    "type": "string", 
                    "description": "Instance's desired state."
                }, 
                "security_group_list": {
                    "description": "AWS IDs of the security groups associated with the instance.\n", 
                    "$ref": "#/definitions/aws_security_group_list"
                }, 
                "block_device_map": {
                    "$ref": "#/definitions/aws_block_device_map"
                }, 
                "private_ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The specific available IP from the subnet assigned to the instance.\n"
                }, 
                "vpc_id": {
                    "pattern": "^vpc-[a-f0-9]{1,17}$", 
                    "type": "string", 
                    "description": "The VPC AWS ID, if running in VPC."
                }, 
                "tag_list": {
                    "$ref": "#/definitions/aws_tag_list"
                }, 
                "account_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The AWS account to which the instance belongs.", 
                    "format": "UUID"
                }, 
                "associate_public_ip_address": {
                    "type": "boolean", 
                    "description": "Indicates whether the network interface receives a public IP address.Can associate a public IP address with a network interface only if it has a device index of eth0 and if it is a new network interface (not an existing one).\n"
                }
            }, 
            "title": "AWS VM Resources"
        }, 
        "app_task_share_intent_input": {
            "description": "An intentful representation of a App task", 
            "required": [
                "api_version", 
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/app_task_share"
                }, 
                "api_version": {
                    "type": "string"
                }, 
                "metadata": {
                    "$ref": "#/definitions/app_task_metadata"
                }
            }, 
            "title": "App task Intent Entity"
        }, 
        "vendor": {
            "x-ntnx-enum": [
                "Nutanix", 
                "Dell", 
                "Lenovo", 
                "Crystal", 
                "IBM", 
                "Cisco", 
                "$unknown"
            ], 
            "type": "string", 
            "description": "Vendor type.", 
            "title": "Vendor Type"
        }, 
        "ipfix_exporter_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ipfix_exporter", 
                    "x-ntnx-enum": [
                        "ipfix_exporter"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for ipfix_exporter list"
        }, 
        "category_mapping_intent_response": {
            "description": "Response object for intentful operations on a category_mapping", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/category_mapping_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/category_mapping"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/category_mapping_metadata"
                }
            }, 
            "title": "category_mapping Intent Response"
        }, 
        "ipmi": {
            "description": "Host IPMI info.", 
            "required": [
                "ip"
            ], 
            "type": "object", 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IPMI IP address."
                }
            }, 
            "title": "Host IPMI info"
        }, 
        "category_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "category", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "category"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "cpu_model": {
            "description": "Details of CPU model.", 
            "type": "object", 
            "properties": {
                "is_default": {
                    "type": "boolean", 
                    "description": "Indicates if given CPU Model is predefined default."
                }, 
                "vendor": {
                    "type": "string", 
                    "description": "The vendor of CPU Model."
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of CPU Model.", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of CPU Model."
                }
            }, 
            "title": "CPU Model"
        }, 
        "bgp_config": {
            "description": "BGP configuration spec for route peering with another router.", 
            "type": "object", 
            "properties": {
                "asn": {
                    "description": "ASN used in BGP.", 
                    "$ref": "#/definitions/asn"
                }, 
                "password": {
                    "type": "string", 
                    "description": "Password for authentication.", 
                    "format": "password"
                }, 
                "distribute_connected": {
                    "type": "boolean", 
                    "description": "Boolean flag to indicate users choice on whether connected routes\nmust be redistributed over eBGP. (Applicable to VLAN backed gateways\nonly)\n"
                }, 
                "peer_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IP address of the peer."
                }
            }, 
            "title": "BGP configuration spec for route peering with another router"
        }, 
        "widget_field_descriptor": {
            "description": "Description of a field of a widget (eg. column in a table).", 
            "type": "object", 
            "properties": {
                "aggregation_operator": {
                    "x-ntnx-enum": [
                        "SUM", 
                        "MAX", 
                        "MIN", 
                        "AVG", 
                        "LAST", 
                        "COUNT"
                    ], 
                    "type": "string", 
                    "description": "Used when aggregating the field data from multiple values."
                }, 
                "property": {
                    "type": "string", 
                    "description": "Entity attribute/metric to be selected for the widget."
                }, 
                "label": {
                    "type": "string", 
                    "description": "Human-readable label for widget fields."
                }
            }, 
            "title": "Widget Field Descriptor."
        }, 
        "user_status_resource": {
            "description": "User Resource Definition.", 
            "type": "object", 
            "properties": {
                "access_control_policy_reference_list": {
                    "items": {
                        "$ref": "#/definitions/access_control_policy_reference"
                    }, 
                    "type": "array", 
                    "description": "List of ACP references."
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "The display name of the user (common name) provided by the directory service.\n"
                }, 
                "user_type": {
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "IDP", 
                        "DIRECTORY_SERVICE"
                    ], 
                    "type": "string"
                }, 
                "resource_usage_summary": {
                    "type": "object", 
                    "properties": {
                        "resource_domain": {
                            "$ref": "#/definitions/resource_domain_resources_status"
                        }
                    }
                }, 
                "projects_reference_list": {
                    "items": {
                        "$ref": "#/definitions/project_reference"
                    }, 
                    "type": "array", 
                    "description": "A list of projects the user is part of."
                }, 
                "identity_provider_user": {
                    "$ref": "#/definitions/identity_provider_user"
                }, 
                "directory_service_user": {
                    "$ref": "#/definitions/directory_service_user_status"
                }
            }, 
            "title": "User Resource Definition."
        }, 
        "network_function_chain_metadata": {
            "description": "The network_function_chain kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when network_function_chain was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "network_function_chain", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_function_chain"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "network_function_chain uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the network_function_chain is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when network_function_chain was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the network_function_chain. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the network_function_chain. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "network_function_chain name", 
                    "maxLength": 80
                }
            }, 
            "title": "network_function_chain metadata"
        }, 
        "layer2_stretch_intent_response": {
            "description": "Response object for intentful operations on a layer2_stretch", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/layer2_stretch_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/layer2_stretch"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/layer2_stretch_metadata"
                }
            }, 
            "title": "layer2_stretch Intent Response"
        }, 
        "vm_recovery_point_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_recovery_point", 
                    "x-ntnx-enum": [
                        "vm_recovery_point"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for vm_recovery_point list output"
        }, 
        "cell_list_intent_response": {
            "description": "Response object for intentful operation of cells", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/cell_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cell_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "host_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "host", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "host"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "groups_group_result": {
            "description": "Group Result.", 
            "type": "object", 
            "properties": {
                "entity_results": {
                    "items": {
                        "$ref": "#/definitions/groups_entity"
                    }, 
                    "type": "array"
                }, 
                "group_by_column_value": {
                    "type": "string"
                }, 
                "total_entity_count": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "group_summaries": {
                    "$ref": "#/definitions/groups_group_summary_map"
                }
            }, 
            "title": "Group Result"
        }, 
        "network_security_rule_metadata": {
            "description": "The network_security_rule kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when network_security_rule was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "network_security_rule", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_security_rule"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "network_security_rule uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the network_security_rule is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when network_security_rule was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the network_security_rule. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the network_security_rule. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "network_security_rule name", 
                    "maxLength": 80
                }
            }, 
            "title": "network_security_rule metadata"
        }, 
        "network_function_resource": {
            "description": "network function resource definition.", 
            "required": [
                "network_function_type", 
                "category_filter"
            ], 
            "type": "object", 
            "properties": {
                "network_function_type": {
                    "x-ntnx-enum": [
                        "INLINE", 
                        "TAP"
                    ], 
                    "type": "string", 
                    "description": "The type of the network function."
                }, 
                "category_filter": {
                    "description": "Category filter for this network function.", 
                    "$ref": "#/definitions/category_filter"
                }
            }, 
            "title": "Network function resource definition"
        }, 
        "action_rule_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_rule", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "action_rule"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "cloud_trust_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cloud_trust", 
                    "x-ntnx-enum": [
                        "cloud_trust"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for cloud_trust list"
        }, 
        "blueprint_upload": {
            "description": "App blueprint upload kind", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/blueprint_upload_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "App blueprint upload kind"
        }, 
        "docker_registry_intent_input": {
            "description": "An intentful representation of a docker_registry", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/docker_registry"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/docker_registry_metadata"
                }
            }, 
            "title": "docker_registry Intent Entity"
        }, 
        "volume_disk_resource_input": {
            "description": "Volume disk configuration.", 
            "type": "object", 
            "properties": {
                "index": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Index of the volume disk in the group.", 
                    "maximum": 16383
                }, 
                "data_source_reference": {
                    "description": "An existing disk or image to clone for the contents of this disk.\n", 
                    "$ref": "#/definitions/reference"
                }, 
                "disk_size_mib": {
                    "type": "integer", 
                    "description": "Size of the disk in MiB.", 
                    "format": "int64"
                }, 
                "disk_size_bytes": {
                    "type": "integer", 
                    "description": "Size of the disk in Bytes.", 
                    "format": "int64"
                }, 
                "storage_container_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Storage container UUID on which to create the disk.", 
                    "format": "UUID"
                }
            }, 
            "title": "Volume disk configuration"
        }, 
        "image_placement_policy_list_intent_response": {
            "description": "Response object for intentful operation of image_placement_policys", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/image_placement_policy_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/image_placement_policy_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "action_service_component_type": {
            "description": "This is the generic construct for both action type and trigger type.\n", 
            "required": [
                "name", 
                "display_name", 
                "description"
            ], 
            "type": "object", 
            "properties": {
                "display_name": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "Action service component display name.", 
                    "maxLength": 64
                }, 
                "global_parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/param_descriptor"
                    }, 
                    "readOnly": true, 
                    "description": "The rule parameters globally available to every component to use.\nThis is provided by system, not by action type or trigger type\nservice.\n"
                }, 
                "input_parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/param_descriptor"
                    }, 
                    "description": "The component required input parameter descriptors.  The key is the\nparameter name\n"
                }, 
                "is_disabled": {
                    "type": "boolean", 
                    "description": "Flag to indicate if this action/trigger type is disabled."
                }, 
                "description": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "Action service component type description.", 
                    "maxLength": 255
                }, 
                "additional_info_severity": {
                    "x-ntnx-enum": [
                        "INFO", 
                        "WARNING", 
                        "CRITICAL"
                    ], 
                    "type": "string", 
                    "description": "Severity of additional info provided."
                }, 
                "group_list": {
                    "items": {
                        "pattern": "^[^&<>'/\"]*$", 
                        "type": "string", 
                        "maxLength": 256
                    }, 
                    "type": "array", 
                    "description": "The group/bucket in which the component falls into.\n"
                }, 
                "local_parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/param_descriptor"
                    }, 
                    "description": "The rule parameters available locally to the action/trigger.\n"
                }, 
                "output_parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/param_descriptor"
                    }, 
                    "description": "The component output parameter descriptors. The key is the parameter\nname.\n"
                }, 
                "ui_metadata": {
                    "items": {
                        "$ref": "#/definitions/display_metadata"
                    }, 
                    "type": "array", 
                    "description": "The metadata of form fields/params required for UI to render params.\n"
                }, 
                "additional_info": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "Additional information about the action/trigger type.", 
                    "maxLength": 8192
                }, 
                "name": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "A preconfigured, or dynamically created component type.", 
                    "maxLength": 64
                }
            }, 
            "title": "Generic action service component type construct"
        }, 
        "ngt_reference": {
            "description": "The reference to a ngt", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ngt", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ngt"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a ngt"
        }, 
        "protection_rule_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "protection_rule", 
                    "x-ntnx-enum": [
                        "protection_rule"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for protection_rule list"
        }, 
        "vm_reference": {
            "description": "The reference to a vm", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vm"
        }, 
        "action_rule_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_rule", 
                    "x-ntnx-enum": [
                        "action_rule"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for action_rule list output"
        }, 
        "category_query_response": {
            "description": "Categories query response object.", 
            "type": "object", 
            "properties": {
                "results": {
                    "items": {
                        "type": "object", 
                        "properties": {
                            "filtered_entity_count": {
                                "type": "integer", 
                                "description": "Total number of filtered results.", 
                                "format": "int64"
                            }, 
                            "kind": {
                                "type": "string", 
                                "description": "The entity kind."
                            }, 
                            "kind_reference_list": {
                                "items": {
                                    "$ref": "#/definitions/entity_reference"
                                }, 
                                "type": "array", 
                                "description": "List of entity references."
                            }, 
                            "total_entity_count": {
                                "type": "integer", 
                                "description": "Total number of the matched results.", 
                                "format": "int64"
                            }
                        }
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "type": "object", 
                    "description": "Response metadata.", 
                    "properties": {
                        "total_matches": {
                            "type": "integer", 
                            "description": "Total number of matched results.", 
                            "format": "int64"
                        }, 
                        "usage_type": {
                            "$ref": "#/definitions/category_query_usage_type"
                        }, 
                        "group_member_offset": {
                            "type": "integer", 
                            "description": "The offset into the total records set to return per group.\n", 
                            "format": "int64"
                        }, 
                        "group_member_count": {
                            "type": "integer", 
                            "description": "The maximum number of records to return per group.", 
                            "format": "int64"
                        }
                    }
                }
            }, 
            "title": "Category Query Response"
        }, 
        "ova_info": {
            "description": "Information about OVA", 
            "type": "object", 
            "properties": {
                "parent_vm_reference": {
                    "description": "Reference to VM from which this OVA is created.\n", 
                    "$ref": "#/definitions/vm_reference"
                }, 
                "current_cluster_reference_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_reference"
                    }, 
                    "type": "array", 
                    "description": "List of clusters where OVA is currently present."
                }, 
                "disk_format": {
                    "x-ntnx-enum": [
                        "QCOW2", 
                        "VMDK"
                    ], 
                    "type": "string", 
                    "description": "OVA disk format."
                }, 
                "name": {
                    "type": "string", 
                    "description": "OVA name", 
                    "maxLength": 64
                }, 
                "checksum": {
                    "description": "Checksum of the OVA.", 
                    "$ref": "#/definitions/checksum"
                }
            }, 
            "title": "OVA info"
        }, 
        "encryption_status": {
            "default": "NOT_SUPPORTED", 
            "x-ntnx-enum": [
                "NOT_SUPPORTED", 
                "DISABLED", 
                "ENABLED"
            ], 
            "type": "string", 
            "description": "Cluster encryption status.", 
            "title": "Cluster encryption status"
        }, 
        "value_info": {
            "description": "Describes a parameter's value range.", 
            "type": "object", 
            "properties": {
                "pattern": {
                    "type": "string", 
                    "description": "A valid regex expression.", 
                    "maxLength": 256
                }, 
                "minimum": {
                    "description": "The minimum value (or the length, if the value data type is string).\n", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "long_value"
                            ]
                        }, 
                        {
                            "required": [
                                "double_value"
                            ]
                        }
                    ], 
                    "properties": {
                        "double_value": {
                            "type": "number", 
                            "format": "double"
                        }, 
                        "long_value": {
                            "type": "integer", 
                            "format": "int64"
                        }
                    }
                }, 
                "maximum": {
                    "description": "The maximum value (or the length, if the value data type is string).\n", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "long_value"
                            ]
                        }, 
                        {
                            "required": [
                                "double_value"
                            ]
                        }
                    ], 
                    "properties": {
                        "double_value": {
                            "type": "number", 
                            "format": "double"
                        }, 
                        "long_value": {
                            "type": "integer", 
                            "format": "int64"
                        }
                    }
                }, 
                "unit": {
                    "type": "string", 
                    "description": "The unit of measurement.", 
                    "maxLength": 256
                }
            }, 
            "title": "Parameter value range."
        }, 
        "aws_elastic_ip_intent_resource": {
            "description": "aws_elastic_ip entity", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/aws_elastic_ip_def_status"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_elastic_ip_metadata"
                }
            }, 
            "title": "aws_elastic_ip"
        }, 
        "app_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app", 
                    "x-ntnx-enum": [
                        "app"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for app list"
        }, 
        "protection_info": {
            "description": "Information about state of the policy.", 
            "type": "object", 
            "properties": {
                "replication_status": {
                    "x-ntnx-enum": [
                        "SYNCED", 
                        "SYNCING", 
                        "OUT_OF_SYNC"
                    ], 
                    "type": "string", 
                    "description": "Replication status of the entity.\n"
                }
            }, 
            "title": "Protection policy information."
        }, 
        "security_planning_prechecks": {
            "description": "Provides information about the ability to support a particular type of prechecks.\n", 
            "type": "object", 
            "properties": {
                "has_passed": {
                    "type": "boolean", 
                    "description": "Whether this type of prechecks passed"
                }, 
                "precheck_result_list": {
                    "items": {
                        "$ref": "#/definitions/validation_result"
                    }, 
                    "type": "array", 
                    "description": "Enumerates prechecks for this type and it's status (pass or fail)\n"
                }
            }, 
            "title": "Support for a particular type of prechecks"
        }, 
        "ngt_policy_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ngt_policy", 
                    "x-ntnx-enum": [
                        "ngt_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for ngt_policy list output"
        }, 
        "vm_release_ip_input": {
            "description": "Input object for the API to release IP addresses.", 
            "type": "object", 
            "properties": {
                "nic_uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "List of NIC UUIDs to release IP for."
                }
            }, 
            "title": "VM release IP input."
        }, 
        "app_variable_response": {
            "description": "Variable definition for application.", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "val_type": {
                    "x-ntnx-enum": [
                        "STRING", 
                        "INT", 
                        "LIST", 
                        "DICT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for variable"
                }, 
                "value": {
                    "type": "string", 
                    "description": ""
                }, 
                "label": {
                    "type": "string", 
                    "description": ""
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "SECRET", 
                        "EXTERNAL_STORE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Variable definition for application."
        }, 
        "app_service_input": {
            "description": "Service definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "variable_list", 
                "action_list"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input"
                    }, 
                    "type": "array", 
                    "description": "List of references to service action\n"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_service_reference"
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "container_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s continaer spec"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }
            }, 
            "title": "Service for Application"
        }, 
        "block": {
            "description": "Host block config info.", 
            "type": "object", 
            "properties": {
                "block_serial_number": {
                    "type": "string", 
                    "description": "Rackable unit serial number."
                }, 
                "block_model": {
                    "type": "string", 
                    "description": "Rackable unit model name."
                }
            }, 
            "title": "Host block information"
        }, 
        "client_auth": {
            "description": "Client authentication config.", 
            "required": [
                "status"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "default": "DISABLED", 
                    "x-ntnx-enum": [
                        "ENABLED", 
                        "DISABLED"
                    ], 
                    "type": "string", 
                    "description": "Status of client authentication."
                }, 
                "ca_chain": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Content of CA chain certificate."
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Name of CA chain file.", 
                    "maxLength": 64
                }
            }, 
            "title": "Client authentication config"
        }, 
        "audit_response": {
            "description": "Response object for audit operations", 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/audit_def"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/audit_metadata"
                }
            }, 
            "title": "Audit Response"
        }, 
        "network_address": {
            "properties": {
                "ip_subnet": {
                    "$ref": "#/definitions/ip_subnet"
                }, 
                "address_type": {
                    "x-ntnx-enum": [
                        "ALL", 
                        "INTERNET"
                    ], 
                    "type": "string"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "address_type"
                    ]
                }, 
                {
                    "required": [
                        "ip_subnet"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Address (source/destination) of an IP packet. > This could be either an ip prefix or a special category like \"INTERNET\".", 
            "title": "Network address"
        }, 
        "network_security_rule_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_security_rule", 
                    "x-ntnx-enum": [
                        "network_security_rule"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for network_security_rule list output"
        }, 
        "action_type_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_type", 
                    "x-ntnx-enum": [
                        "action_type"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for action_type list"
        }, 
        "direct_connect_vif_status": {
            "description": "BGP status of the direct connect virtual interface.\n", 
            "type": "object", 
            "properties": {
                "state": {
                    "x-ntnx-enum": [
                        "UP", 
                        "DOWN"
                    ], 
                    "type": "string"
                }, 
                "error_detail": {
                    "type": "string", 
                    "description": "Detailed informational/error string in human-readable form."
                }
            }, 
            "title": "BGP status of the direct connect virtual interface."
        }, 
        "network_security_rule_import_response": {
            "description": "Network security rule import response", 
            "type": "object", 
            "properties": {
                "entity_list": {
                    "items": {
                        "$ref": "#/definitions/network_security_rule_import_entity"
                    }, 
                    "type": "array", 
                    "description": "entity_list is returned if the imported data is not applied (commit_mode is dryrun)."
                }
            }, 
            "title": "Network security rule import response"
        }, 
        "account_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "account", 
                    "x-ntnx-enum": [
                        "account"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for account list"
        }, 
        "ngt_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ngt", 
                    "x-ntnx-enum": [
                        "ngt"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for ngt list"
        }, 
        "external_configurations_spec": {
            "description": "External configurations for the connectors.", 
            "type": "object", 
            "properties": {
                "citrix_connector_config": {
                    "$ref": "#/definitions/citrix_connector_config_details_spec"
                }
            }, 
            "title": "External Connector Configurations."
        }, 
        "role_intent_response": {
            "description": "Response object for intentful operations on a role", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/role_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/role"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/role_metadata"
                }
            }, 
            "title": "role Intent Response"
        }, 
        "app_profile_reference": {
            "description": "The reference to a app_profile", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_profile", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_profile"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_profile"
        }, 
        "blueprint": {
            "description": "An intentful representation of a blueprint spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "blueprint Name.", 
                    "maxLength": 256
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for blueprint.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/blueprint_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "blueprint Intent Spec with placement specified"
        }, 
        "marketplace_item_metadata": {
            "description": "The marketplace_item kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when marketplace_item was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "marketplace_item", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "marketplace_item"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "marketplace_item uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the marketplace_item is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when marketplace_item was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the marketplace_item. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the marketplace_item. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "marketplace_item name", 
                    "maxLength": 80
                }
            }, 
            "title": "marketplace_item metadata"
        }, 
        "graphql_response": {
            "description": "Graphql api success response.", 
            "type": "object", 
            "properties": {
                "data": {
                    "additionalProperties": {
                        "type": "object"
                    }, 
                    "type": "object"
                }
            }, 
            "title": "Graphql api success response."
        }, 
        "vpc_intent_response": {
            "description": "Response object for intentful operations on a vpc", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/vpc_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/vpc"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vpc_metadata"
                }
            }, 
            "title": "vpc Intent Response"
        }, 
        "image_placement_policy_state": {
            "description": "State of enforced policy on an entity.", 
            "required": [
                "compliance_status", 
                "enforcement_mode", 
                "policy_reference"
            ], 
            "type": "object", 
            "properties": {
                "policy_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "policy_info": {
                    "$ref": "#/definitions/image_placement_info"
                }, 
                "compliance_status": {
                    "description": "This field indicates whether the given entity is compliant with the specified policy or not. It will be in unknown state if the current compliance state is not known.\n", 
                    "$ref": "#/definitions/policy_compliance_state"
                }, 
                "enforcement_mode": {
                    "x-ntnx-enum": [
                        "MONITORING", 
                        "ENFORCING", 
                        "ENFORCEMENT_FAILED"
                    ], 
                    "type": "string", 
                    "description": "Policy enforcement mode informs us about what the policy engine is currently doing to enforce the policy on the entity. Monitoring indicates that the policy engine is simply monitoring the entity's state. Enforcing means that the policy engine is currently trying to enforce the policy on the entity. Enforcement failed indicates that the policy engine encountered a non-transient error and requires user intervention to fix the problem, error message gives the reason for error in this case.\n"
                }, 
                "error_message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Policy State"
        }, 
        "link": {
            "description": "Link object definition", 
            "type": "object", 
            "properties": {
                "type": {
                    "type": "string", 
                    "description": "Type of the link."
                }
            }, 
            "title": "Link Definition"
        }, 
        "groups_attribute_type": {
            "x-ntnx-enum": [
                "CONTINUOUS", 
                "DISCRETE"
            ], 
            "type": "string", 
            "description": "The type of an attribute being used for grouping - may be continuous or discrete.\n", 
            "title": "Attribute Type"
        }, 
        "subnet_intent_response": {
            "description": "Response object for intentful operations on a subnet", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/subnet_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/subnet"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/subnet_metadata"
                }
            }, 
            "title": "subnet Intent Response"
        }, 
        "ssh_user_intent_resource": {
            "description": "Response object for intentful operations on a ssh_user", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/ssh_user_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/ssh_user"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ssh_user_metadata"
                }
            }, 
            "title": "ssh_user Intent Response"
        }, 
        "entity_sync_rule_intent_resource": {
            "description": "Response object for intentful operations on a entity_sync_rule", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/entity_sync_rule_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/entity_sync_rule"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/entity_sync_rule_metadata"
                }
            }, 
            "title": "entity_sync_rule Intent Response"
        }, 
        "blueprint_clone_response": {
            "description": "Response containing the uuid of the cloned blueprint", 
            "required": [
                "blueprint_uuid"
            ], 
            "type": "object", 
            "properties": {
                "blueprint_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Response containing the uuid of the cloned blueprint"
        }, 
        "recovery_plan_job_list_intent_response": {
            "description": "Response object for intentful operation of recovery_plan_jobs", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/recovery_plan_job_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/recovery_plan_job_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "blueprint_deployment_input": {
            "description": "Deployment definition for Application.", 
            "required": [
                "name", 
                "uuid", 
                "substrate_local_reference", 
                "min_replicas", 
                "max_replicas"
            ], 
            "type": "object", 
            "properties": {
                "percent_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "fault_domain_scope": {
                    "x-ntnx-enum": [
                        "HOST", 
                        "CLUSTER", 
                        "AZ"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input"
                    }, 
                    "type": "array", 
                    "description": "List of references to action"
                }, 
                "package_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_reference"
                    }, 
                    "type": "array", 
                    "description": "List of references for the packages"
                }, 
                "published_service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_reference"
                    }, 
                    "type": "array", 
                    "description": "List of references for published services"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "max_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Maximum replicas for the deployment."
                }, 
                "type": {
                    "default": "GREENFIELD", 
                    "x-ntnx-enum": [
                        "BROWNFIELD", 
                        "GREENFIELD", 
                        "K8S_DEPLOYMENT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "substrate_local_reference": {
                    "$ref": "#/definitions/app_substrate_reference"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "min_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Minimum replicas for the deployment."
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional deployment options"
                }, 
                "num_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "brownfield_instance_list": {
                    "items": {
                        "$ref": "#/definitions/brownfield_instance_input"
                    }, 
                    "type": "array", 
                    "description": "brownfield map"
                }
            }, 
            "title": "Deployment definition for Application."
        }, 
        "project_internal": {
            "description": "A Project resource, combined with Users and ACPs", 
            "required": [
                "project_detail"
            ], 
            "type": "object", 
            "properties": {
                "access_control_policy_list": {
                    "items": {
                        "required": [
                            "operation", 
                            "acp", 
                            "metadata"
                        ], 
                        "type": "object", 
                        "properties": {
                            "operation": {
                                "x-ntnx-enum": [
                                    "ADD", 
                                    "DELETE", 
                                    "UPDATE"
                                ], 
                                "type": "string", 
                                "description": "Indicates the action(add, delete, update)"
                            }, 
                            "acp": {
                                "$ref": "#/definitions/access_control_policy_input"
                            }, 
                            "metadata": {
                                "type": "object", 
                                "properties": {
                                    "kind": {
                                        "readOnly": true, 
                                        "type": "string"
                                    }, 
                                    "uuid": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                        "type": "string", 
                                        "format": "UUID"
                                    }
                                }
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "The list of ACPs to be attached to the users belonging to a project.\n"
                }, 
                "project_detail": {
                    "description": "A Project resource.", 
                    "required": [
                        "name", 
                        "resources"
                    ], 
                    "type": "object", 
                    "properties": {
                        "name": {
                            "type": "string", 
                            "description": "Project name.", 
                            "maxLength": 64
                        }, 
                        "resources": {
                            "type": "object", 
                            "properties": {
                                "resource_domain": {
                                    "$ref": "#/definitions/resource_domain_spec"
                                }, 
                                "account_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/account_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of accounts associated with the project."
                                }, 
                                "environment_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/environment_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of environments associated with the project."
                                }, 
                                "identity_providers_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/identity_providers_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of identity provider references in the project"
                                }, 
                                "user_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/user_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of users in the project."
                                }, 
                                "default_subnet_reference": {
                                    "description": "Optional default subnet if one is specified", 
                                    "$ref": "#/definitions/subnet_reference"
                                }, 
                                "directory_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/directory_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of directory references under the project"
                                }, 
                                "tunnel_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/tunnel_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of tunnels associated with the project."
                                }, 
                                "external_user_group_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/user_group_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of directory service user groups. These groups are not\nmanaged by Nutanix.\n"
                                }, 
                                "default_environment_reference": {
                                    "description": "Optional default environment if one is specified", 
                                    "$ref": "#/definitions/environment_reference"
                                }, 
                                "cluster_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/cluster_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of clusters associated with the project."
                                }, 
                                "subnet_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/subnet_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of subnets for the project."
                                }, 
                                "vpc_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/vpc_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of VPCs associated with the project."
                                }, 
                                "external_network_list": {
                                    "items": {
                                        "$ref": "#/definitions/external_network"
                                    }, 
                                    "type": "array", 
                                    "description": "List of external network associated with the project."
                                }, 
                                "enable_directory_and_identity_provider_whitelist": {
                                    "type": "boolean", 
                                    "description": "Indicates AD/IDP whitelisting"
                                }
                            }, 
                            "title": "Project Resources"
                        }, 
                        "description": {
                            "type": "string", 
                            "description": "Project description.", 
                            "maxLength": 1000
                        }
                    }, 
                    "title": "Project details"
                }, 
                "user_list": {
                    "items": {
                        "required": [
                            "operation", 
                            "user", 
                            "metadata"
                        ], 
                        "type": "object", 
                        "description": "The details of the user such as principal name and\ndirectory_reference. Also contains metadata.\n", 
                        "properties": {
                            "operation": {
                                "x-ntnx-enum": [
                                    "ADD"
                                ], 
                                "type": "string", 
                                "description": "Indicates the action(add, delete, update)"
                            }, 
                            "user": {
                                "$ref": "#/definitions/user"
                            }, 
                            "metadata": {
                                "type": "object", 
                                "properties": {
                                    "kind": {
                                        "readOnly": true, 
                                        "type": "string"
                                    }, 
                                    "uuid": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                        "type": "string", 
                                        "format": "UUID"
                                    }
                                }
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "The list of user specification to be associated with the project.\n"
                }, 
                "user_group_list": {
                    "items": {
                        "required": [
                            "operation", 
                            "user_group", 
                            "metadata"
                        ], 
                        "type": "object", 
                        "description": "The details of the user group\n", 
                        "properties": {
                            "operation": {
                                "x-ntnx-enum": [
                                    "ADD"
                                ], 
                                "type": "string", 
                                "description": "Indicates the action(add, delete, update)"
                            }, 
                            "metadata": {
                                "type": "object", 
                                "properties": {
                                    "kind": {
                                        "readOnly": true, 
                                        "type": "string"
                                    }, 
                                    "uuid": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                        "type": "string", 
                                        "format": "UUID"
                                    }
                                }
                            }, 
                            "user_group": {
                                "$ref": "#/definitions/user_group"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "The list of user group specification to be associated with the project.\n"
                }
            }, 
            "title": "Project details, combined with Users and ACPs"
        }, 
        "network_function_chain_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_function_chain", 
                    "x-ntnx-enum": [
                        "network_function_chain"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for network_function_chain list"
        }, 
        "software_metadata": {
            "description": "The software kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when software was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "software", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "software"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "software uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the software is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when software was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the software. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the software. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "software name", 
                    "maxLength": 80
                }
            }, 
            "title": "software metadata"
        }, 
        "ssh_user_list": {
            "description": "SSH User list", 
            "required": [
                "metadata", 
                "entities"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/ssh_user_details"
                    }, 
                    "type": "array"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ssh_user_list_metadata"
                }
            }, 
            "title": "SSH User list"
        }, 
        "audit_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "audit", 
                    "x-ntnx-enum": [
                        "audit"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for audit list"
        }, 
        "vpn_gateway": {
            "description": "An intentful representation of a vpn_gateway spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for vpn_gateway.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/vpn_gateway_resources"
                }, 
                "name": {
                    "type": "string", 
                    "description": "vpn_gateway Name.", 
                    "maxLength": 256
                }
            }, 
            "title": "vpn_gateway Intent Spec with placement specified"
        }, 
        "aws_availability_zone_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_availability_zone", 
                    "x-ntnx-enum": [
                        "aws_availability_zone"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for aws_availability_zone list"
        }, 
        "blackout_resources": {
            "description": "Blackout object definition", 
            "required": [
                "feature_list", 
                "scope_entity_list", 
                "schedule_list"
            ], 
            "type": "object", 
            "properties": {
                "scope_entity_list": {
                    "items": {
                        "required": [
                            "entity_type"
                        ], 
                        "type": "object", 
                        "properties": {
                            "uuid_list": {
                                "items": {
                                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                    "type": "string"
                                }, 
                                "type": "array"
                            }, 
                            "entity_type": {
                                "type": "string"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "The list of 1) entity type, or 2) entity type + uuid_list, will\ndefine the targeted entities.  Any entities contained inside the\ntargeted entities are affected by this blackout schedule.\nIf it is case 1), where the uuid_list is empty, then, it means the\nblackout applies to all the entities of this entity_type.  For\nexample, blackout for all clusters, the entity_type = \"cluster\", the\nuuid_list will be empty.  If the uuid_list is not empty, then, the\nblackout is applied to only these entities in the uuid_list.\n"
                }, 
                "schedule_list": {
                    "items": {
                        "$ref": "#/definitions/schedule"
                    }, 
                    "type": "array", 
                    "description": "A list of time schedules for the blackout.  For example, if the\nblackout is for every Monday and Friday, 10:00 - 11:00 am,\n3:00-5:00 pm, then, there will be 2 items:\n  schedule1: day_of_week = Monday,Friday, Time = 10:00 - 11:00 am\n  schedule2: day_of_week = Monday,Friday, 3:00 - 5:00 pm\n"
                }, 
                "feature_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "A list of features that this blackout is applied to."
                }
            }, 
            "title": "Blackout resources"
        }, 
        "network_function_chain_resource": {
            "description": "network function chain resource definition.", 
            "type": "object", 
            "properties": {
                "network_function_list": {
                    "items": {
                        "$ref": "#/definitions/network_function_resource"
                    }, 
                    "type": "array", 
                    "description": "Referenced network functions in the chain."
                }
            }, 
            "title": "network function chain resource definition"
        }, 
        "ova_disk_info": {
            "description": "Information about a disk of an OVA", 
            "type": "object", 
            "properties": {
                "device_properties": {
                    "type": "object", 
                    "properties": {
                        "device_type": {
                            "default": "DISK", 
                            "x-ntnx-enum": [
                                "DISK", 
                                "CDROM"
                            ], 
                            "type": "string"
                        }, 
                        "disk_address": {
                            "$ref": "#/definitions/disk_address"
                        }
                    }
                }
            }, 
            "title": "OVA disk info"
        }, 
        "mh_vm_spec_override": {
            "description": "Properties of the VM that can be overriden.", 
            "type": "object", 
            "properties": {
                "should_reconfigure_nutanix_guest_tools": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Whether to reconfigure NGT inside the guest VM if it was installed at the time of snapshot.\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": "VM name.", 
                    "maxLength": 80
                }, 
                "resources": {
                    "description": "VM Resources Definition.", 
                    "type": "object", 
                    "properties": {
                        "nic_list": {
                            "items": {
                                "$ref": "#/definitions/mh_vm_nic_override"
                            }, 
                            "type": "array", 
                            "description": "List of Virtual NICs to be attached to the VM."
                        }
                    }, 
                    "title": "VM Resources."
                }
            }, 
            "title": "VM override spec."
        }, 
        "user_group_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "user_group", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "user_group"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "mh_vm_resources": {
            "description": "VM Resources Definition.", 
            "type": "object", 
            "properties": {
                "storage_config": {
                    "description": "Storage configuration of the VM.", 
                    "$ref": "#/definitions/mh_vm_storage_config"
                }, 
                "parent_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "guest_tools": {
                    "description": "Information regarding guest tools.", 
                    "$ref": "#/definitions/guest_tools_spec"
                }
            }, 
            "title": "VM Resources"
        }, 
        "action_template_def_status": {
            "description": "Action template entity status definition", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "resources": {
                    "$ref": "#/definitions/action_template_resources"
                }
            }, 
            "title": "Action template entity status"
        }, 
        "datacenter_resources": {
            "description": "Datacenter entity definition", 
            "required": [
                "availability_zone_reference"
            ], 
            "type": "object", 
            "properties": {
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "address": {
                    "$ref": "#/definitions/postal_address"
                }
            }, 
            "title": "Datacenter Entity"
        }, 
        "vm_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "host_list_intent_response": {
            "description": "Response object for intentful operation of hosts", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/host_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/host_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "vm_gpu_metadata": {
            "description": "The vm_gpu kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_gpu was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "vm_gpu", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_gpu"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vm_gpu uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the vm_gpu is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_gpu was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_gpu. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_gpu. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "vm_gpu name", 
                    "maxLength": 80
                }
            }, 
            "title": "vm_gpu metadata"
        }, 
        "vm_spec_override": {
            "description": "Properties of the VM that can be overriden.", 
            "type": "object", 
            "properties": {
                "should_reconfigure_nutanix_guest_tools": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "Whether to reconfigure NGT inside the guest VM if it was installed at the time of snapshot.\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": "VM Name.", 
                    "maxLength": 80
                }, 
                "resources": {
                    "description": "VM Resources Definition.", 
                    "type": "object", 
                    "properties": {
                        "vnuma_config": {
                            "description": "Information regarding vNUMA configuration.", 
                            "$ref": "#/definitions/vm_vnuma_config"
                        }, 
                        "nic_list": {
                            "items": {
                                "$ref": "#/definitions/vm_nic"
                            }, 
                            "type": "array", 
                            "description": "List of Virtual NICs to be attached to the VM."
                        }, 
                        "gpu_list": {
                            "items": {
                                "$ref": "#/definitions/vm_gpu"
                            }, 
                            "type": "array", 
                            "description": "GPUs attached to the VM."
                        }
                    }, 
                    "title": "VM Resources."
                }
            }, 
            "title": "VM override spec."
        }, 
        "image_metadata": {
            "description": "The image kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when image was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "image", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "image"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "image uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the image is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when image was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the image. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the image. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "image name", 
                    "maxLength": 80
                }
            }, 
            "title": "image metadata"
        }, 
        "direct_connect_list_intent_response": {
            "description": "Response object for intentful operation of direct_connects", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/direct_connect_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/direct_connect_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "availability_zone_information": {
            "description": "Availability Zone information.\n", 
            "required": [
                "availability_zone_url"
            ], 
            "type": "object", 
            "properties": {
                "cluster_reference_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_reference"
                    }, 
                    "type": "array", 
                    "description": "List of cluster references. This is applicable only in scenario where failed and recovery clusters both are managed by the same Availability Zone."
                }, 
                "availability_zone_url": {
                    "type": "string", 
                    "description": "URL of the Availability Zone.\n"
                }
            }, 
            "title": "Availability Zone information"
        }, 
        "virtual_network_def_status": {
            "description": "Virtual network output status", 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the virtual network."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the virtual network, if in an error state.\n"
                }, 
                "name": {
                    "type": "string"
                }, 
                "resources": {
                    "$ref": "#/definitions/virtual_network_resources_def_status"
                }, 
                "description": {
                    "type": "string"
                }
            }, 
            "title": "Virtual network status"
        }, 
        "action_rule_resources": {
            "description": "Action rule entity definition", 
            "required": [
                "trigger_list", 
                "action_list"
            ], 
            "type": "object", 
            "properties": {
                "is_enabled": {
                    "type": "boolean", 
                    "description": "is the rule enabled or disabled."
                }, 
                "should_validate": {
                    "type": "boolean", 
                    "description": "The rule should be validated or not.  If True, then, the rule will be\nvalidated before saving.  If the validation failed, the spec status\nmessage list will have errors.\n"
                }, 
                "trigger_list": {
                    "items": {
                        "$ref": "#/definitions/trigger_instance_object"
                    }, 
                    "type": "array", 
                    "description": "The only trigger that the rule has."
                }, 
                "name": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "The action rule name", 
                    "maxLength": 64
                }, 
                "execution_user_reference": {
                    "description": "This will incidate who this rule will be executed on behalf of.\nIt will be a user uuid.\n", 
                    "$ref": "#/definitions/user_reference"
                }, 
                "rule_type": {
                    "x-ntnx-enum": [
                        "XPLAY", 
                        "XNOTIFY", 
                        "XPILOT"
                    ], 
                    "type": "string", 
                    "description": "Action rule types associated with this rule."
                }, 
                "post_execution_action_list": {
                    "items": {
                        "$ref": "#/definitions/action_instance_object"
                    }, 
                    "type": "array", 
                    "description": "Ordered list of the actions to be executed in the end."
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/action_instance_object"
                    }, 
                    "type": "array", 
                    "description": "Ordered list of the actions to execute in this rule."
                }, 
                "check_trigger_validity": {
                    "type": "boolean", 
                    "description": "If it is true, the rule action execution at the schedueled time will\ncheck if the original trigger is still valid.  If not set, default\nto True.\n"
                }, 
                "global_parameters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/param_descriptor"
                    }, 
                    "readOnly": true, 
                    "description": "The rule level global parameter descriptors. This is provided by\nthe system.\n"
                }, 
                "x_pilot_params": {
                    "description": "Parameters required for XPilot enabled rule", 
                    "$ref": "#/definitions/action_rule_x_pilot_params"
                }, 
                "error_list": {
                    "items": {
                        "$ref": "#/definitions/component_error"
                    }, 
                    "type": "array", 
                    "description": "Errors identified in this rule."
                }, 
                "validated": {
                    "readOnly": true, 
                    "type": "boolean", 
                    "description": "Is this been validated to trur or not."
                }, 
                "description": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "The rule description", 
                    "maxLength": 256
                }
            }, 
            "title": "Action rule entity"
        }, 
        "ssh_user_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ssh_user", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ssh_user"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "groups_field_data": {
            "description": "Group Summary Data.", 
            "type": "object", 
            "properties": {
                "buckets": {
                    "$ref": "#/definitions/groups_bucket_summary_map"
                }, 
                "values": {
                    "items": {
                        "$ref": "#/definitions/groups_timevalue_pair"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string"
                }
            }, 
            "title": "Group Summary Data"
        }, 
        "idempotence_identifiers_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "idempotence_identifiers", 
                    "x-ntnx-enum": [
                        "idempotence_identifiers"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for idempotence_identifiers list output"
        }, 
        "idempotence_identifiers_reference": {
            "description": "The reference to a idempotence_identifiers", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "idempotence_identifiers", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "idempotence_identifiers"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a idempotence_identifiers"
        }, 
        "role_list_intent_response": {
            "description": "Response object for intentful operation of roles", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/role_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/role_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "directory_service_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "directory_service", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "directory_service"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "packet_trace_stage": {
            "description": "Details of the pipeline stage that dropped/forwarded the packet", 
            "type": "object", 
            "properties": {
                "action": {
                    "x-ntnx-enum": [
                        "DROPPED", 
                        "FORWARDED", 
                        "REROUTED"
                    ], 
                    "type": "string"
                }, 
                "routing_policy_reference": {
                    "description": "The routing policy that dropped/forwarded the packet", 
                    "$ref": "#/definitions/routing_policy_reference"
                }, 
                "destination_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string"
                }, 
                "destination_type": {
                    "x-ntnx-enum": [
                        "XI_VM", 
                        "INTERNET", 
                        "OTHER_DC"
                    ], 
                    "type": "string", 
                    "description": "Indicates if the packet was forwarded to a Xi VM, Internet or\nother data center\n"
                }, 
                "stage": {
                    "x-ntnx-enum": [
                        "ROUTING_POLICY", 
                        "MICROSEG_RULE", 
                        "IMPLICIT_DROP"
                    ], 
                    "type": "string"
                }
            }, 
            "title": "Parsed Trace Output"
        }, 
        "vm_recovery_point_metadata": {
            "description": "The vm_recovery_point kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_recovery_point was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "vm_recovery_point", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_recovery_point"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vm_recovery_point uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the vm_recovery_point is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_recovery_point was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_recovery_point. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_recovery_point. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "vm_recovery_point name", 
                    "maxLength": 80
                }
            }, 
            "title": "vm_recovery_point metadata"
        }, 
        "smtp_server": {
            "description": "SMTP Server.", 
            "required": [
                "email_address", 
                "server"
            ], 
            "type": "object", 
            "properties": {
                "type": {
                    "default": "PLAIN", 
                    "x-ntnx-enum": [
                        "PLAIN", 
                        "STARTTLS", 
                        "SSL"
                    ], 
                    "type": "string"
                }, 
                "email_address": {
                    "type": "string"
                }, 
                "server": {
                    "$ref": "#/definitions/cluster_network_entity"
                }
            }, 
            "title": "SMTP server"
        }, 
        "customization_spec_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "customization_spec", 
                    "x-ntnx-enum": [
                        "customization_spec"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for customization_spec list output"
        }, 
        "app_deployment_reference_upload": {
            "description": "The reference to a app_deployment", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_deployment", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_deployment"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_deployment"
        }, 
        "support_case_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "support_case", 
                    "x-ntnx-enum": [
                        "support_case"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for support_case list"
        }, 
        "single_response": {
            "properties": {
                "generic_response": {
                    "$ref": "#/definitions/generic_response"
                }, 
                "help_result": {
                    "$ref": "#/definitions/help_result"
                }, 
                "entitybrowser_response": {
                    "$ref": "#/definitions/entitybrowser_response"
                }, 
                "page": {
                    "$ref": "#/definitions/page"
                }, 
                "link": {
                    "$ref": "#/definitions/link"
                }, 
                "timeseries_response": {
                    "$ref": "#/definitions/timeseries_response"
                }
            }, 
            "x-ntnx-one-of": [
                "generic_response", 
                "help_result", 
                "link", 
                "timeseries_response", 
                "page", 
                "entitybrowser_response"
            ], 
            "type": "object", 
            "description": "Single response object defintion.", 
            "title": "Single Response Defintion"
        }, 
        "datacenter_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "datacenter", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "datacenter"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "cluster_config_spec": {
            "description": "Cluster Configuration.", 
            "type": "object", 
            "properties": {
                "gpu_driver_version": {
                    "type": "string", 
                    "description": "GPU driver version."
                }, 
                "client_auth": {
                    "$ref": "#/definitions/client_auth"
                }, 
                "authorized_public_key_list": {
                    "items": {
                        "$ref": "#/definitions/public_key"
                    }, 
                    "type": "array", 
                    "description": "List of valid ssh keys for the cluster."
                }, 
                "software_map": {
                    "additionalProperties": {
                        "$ref": "#/definitions/cluster_software"
                    }, 
                    "type": "object", 
                    "description": "Map of software on the cluster with software type as the\nkey.\n"
                }, 
                "encryption_status": {
                    "$ref": "#/definitions/encryption_status"
                }, 
                "redundancy_factor": {
                    "type": "integer", 
                    "description": "Cluster supported redundancy factor. Default is 2.", 
                    "format": "int32"
                }, 
                "certification_signing_info": {
                    "$ref": "#/definitions/certification_signing_info"
                }, 
                "supported_information_verbosity": {
                    "default": "BASIC_PLUS_CORE_DUMP", 
                    "x-ntnx-enum": [
                        "NOTHING", 
                        "BASIC", 
                        "BASIC_PLUS_CORE_DUMP", 
                        "ALL"
                    ], 
                    "type": "string", 
                    "description": "Verbosity level settings for populating support information.\n- 'Nothing': Send nothing\n- 'Basic': Send basic information - skip core dump and hypervisor\n           stats information\n- 'BasicPlusCoreDump': Send basic and core dump information\n- 'All': Send all information\n"
                }, 
                "external_configurations": {
                    "description": "External Connector Configurations.", 
                    "$ref": "#/definitions/external_configurations_spec"
                }, 
                "domain_awareness_level": {
                    "default": "NODE", 
                    "x-ntnx-enum": [
                        "DISK", 
                        "NODE", 
                        "BLOCK", 
                        "RACK"
                    ], 
                    "type": "string", 
                    "description": "Domain awareness supported on cluster."
                }, 
                "enabled_feature_list": {
                    "items": {
                        "x-ntnx-enum": [
                            "LOCK_DOWN_ENABLED", 
                            "PASSWORD_REMOTE_LOGIN_ENABLED", 
                            "SHADOW_CLONES_ENABLED", 
                            "COMMON_CRITERIA_MODE_ENABLED", 
                            "SSP_CONFIGURED", 
                            "ACS_ENABLED", 
                            "NETWORK_FLOW_STATS_COLLECTOR_ENABLED"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Array of enabled features."
                }, 
                "timezone": {
                    "type": "string", 
                    "description": "Zone name used in value of TZ environment variable."
                }, 
                "enable_efficient_metric_sync": {
                    "type": "boolean", 
                    "description": "Indicates if downsampling of metrics syncing between PE\nand PC is enabled or not.\n"
                }, 
                "operation_mode": {
                    "$ref": "#/definitions/cluster_operation_mode"
                }
            }, 
            "title": "Cluster Configuration"
        }, 
        "blackout_intent_input": {
            "description": "An intentful representation of a blackout", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/blackout"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blackout_metadata"
                }
            }, 
            "title": "blackout Intent Entity"
        }, 
        "failover_cluster": {
            "description": "Hyper-V failover cluster.", 
            "required": [
                "domain_credential"
            ], 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IP address of the failover cluster."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the failover cluster."
                }, 
                "domain_credential": {
                    "$ref": "#/definitions/credentials"
                }
            }, 
            "title": "Hyper-v failover cluster"
        }, 
        "vm_recovery_point_intent_input": {
            "description": "An intentful representation of a vm_recovery_point", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/vm_recovery_point"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_recovery_point_metadata"
                }
            }, 
            "title": "vm_recovery_point Intent Entity"
        }, 
        "component_error": {
            "description": "validation errors in action rule.", 
            "type": "object", 
            "properties": {
                "instance_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Id to uniquely identify action/trigger in instance list.", 
                    "format": "UUID"
                }, 
                "error_object_list": {
                    "items": {
                        "$ref": "#/definitions/error_message_object"
                    }, 
                    "type": "array", 
                    "description": "list of error message objects."
                }, 
                "parameter_error_list": {
                    "items": {
                        "$ref": "#/definitions/parameter_error"
                    }, 
                    "type": "array", 
                    "description": "list of parameter error messages."
                }, 
                "component_type": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "component type like action or trigger.", 
                    "maxLength": 64
                }, 
                "component_name": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "name of the component.", 
                    "maxLength": 64
                }
            }, 
            "title": "Component validation error"
        }, 
        "network_security_rule_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_security_rule", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_security_rule"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "billing_summary": {
            "description": "Usage details for the current tenant grouped by aggregation unit defined in grouped_by.\n", 
            "type": "object", 
            "properties": {
                "charge_group_list": {
                    "items": {
                        "$ref": "#/definitions/billing_summary_charge_group"
                    }, 
                    "type": "array"
                }, 
                "grouped_by": {
                    "x-ntnx-enum": [
                        "DAILY"
                    ], 
                    "type": "string", 
                    "description": "Aggregation unit based on which charges are grouped by."
                }
            }, 
            "title": "Usage details for the current tenant."
        }, 
        "cluster_cpu_models_response": {
            "items": {
                "$ref": "#/definitions/cpu_model"
            }, 
            "type": "array", 
            "description": "List of CPU models supported on given cluster.", 
            "title": "Cluster CPU Models list"
        }, 
        "cmsp_config": {
            "description": "MSP configuration for CMSP on PC used in deployment and enablement.\n", 
            "required": [
                "platform_ip_block_list", 
                "pc_domain_name", 
                "platform_network_configuration"
            ], 
            "type": "object", 
            "properties": {
                "platform_ip_block_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[ ](?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "IP range blocks for CMSP."
                }, 
                "platform_network_configuration": {
                    "$ref": "#/definitions/cmsp_network_config"
                }, 
                "cmsp_args": {
                    "type": "string", 
                    "description": "A serialized json containing additional arguments to be passed to CMSP."
                }, 
                "pc_domain_name": {
                    "pattern": "^(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$", 
                    "maxLength": 255, 
                    "type": "string", 
                    "description": "The domain name for CMSP.", 
                    "minLength": 1
                }
            }, 
            "title": "CMSP configuration."
        }, 
        "aws_region_resources_def_status": {
            "description": "aws_region resources", 
            "type": "object", 
            "properties": {
                "endpoint": {
                    "type": "string", 
                    "description": "The region end point"
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the AWS region"
                }
            }, 
            "title": "aws_region resources"
        }, 
        "external_subnet": {
            "description": "External subnet definition", 
            "required": [
                "external_subnet_reference"
            ], 
            "type": "object", 
            "properties": {
                "external_subnet_reference": {
                    "description": "External subnet reference.", 
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "active_gateway_count": {
                    "type": "integer", 
                    "description": "Number of active gateway nodes for external connectivity.", 
                    "format": "uint16"
                }, 
                "external_ip_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of IP addresses for SNAT or Gateway IP Addresses.\n"
                }, 
                "gateway_node_uuid_list": {
                    "minItems": 3, 
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "List of gateway nodes for the external connectivity.", 
                    "maxItems": 32
                }
            }, 
            "title": "External subnet associated with this VPC."
        }, 
        "role_reference": {
            "description": "The reference to a role", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "role", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "role"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a role"
        }, 
        "aws_key_pair_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_key_pair", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_key_pair"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "rack": {
            "description": "Rack entity definition", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the rack", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/rack_resources"
                }
            }, 
            "title": "Rack Entity"
        }, 
        "address_group": {
            "description": "Address Group definition", 
            "type": "object", 
            "properties": {
                "address_group_string": {
                    "type": "string", 
                    "description": "List of original addresses input."
                }, 
                "name": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "ip_address_block_list": {
                    "items": {
                        "$ref": "#/definitions/ip_subnet"
                    }, 
                    "type": "array", 
                    "description": "list of subnets and CIDR blocks in the address group"
                }, 
                "description": {
                    "type": "string", 
                    "maxLength": 1000
                }
            }, 
            "title": "Address Group"
        }, 
        "rackable_unit_resources": {
            "description": "Rackable Unit input definition", 
            "type": "object", 
            "properties": {
                "rack_reference": {
                    "description": "The reference of rack, which this rackable unit belongs to", 
                    "$ref": "#/definitions/rack_reference"
                }
            }, 
            "title": "Rackable Unit Entity"
        }, 
        "aws_subnet_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_subnet", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_subnet"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "repetition_criteria": {
            "description": "Criteria for repeating a widget/section.", 
            "required": [
                "entity_type"
            ], 
            "type": "object", 
            "properties": {
                "repetition_rule": {
                    "type": "string", 
                    "description": "Rule based on which the widget/section will be repeating."
                }, 
                "entity_type": {
                    "type": "string", 
                    "description": "Type of the entity."
                }
            }, 
            "title": "Repetition Criteria."
        }, 
        "disk_spec": {
            "description": "Details of the VM/Volume virtual disk.", 
            "required": [
                "uuid", 
                "total_size_bytes"
            ], 
            "type": "object", 
            "properties": {
                "total_size_bytes": {
                    "type": "integer", 
                    "description": "Total size of the disk in bytes.", 
                    "format": "int64"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The device ID which is used to uniquely identify this particular disk.\n", 
                    "format": "UUID"
                }
            }, 
            "title": "VM/Volume virtual disk specification"
        }, 
        "direct_connect_virtual_interface_metadata": {
            "description": "The direct_connect_virtual_interface kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when direct_connect_virtual_interface was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "direct_connect_virtual_interface", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "direct_connect_virtual_interface"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "direct_connect_virtual_interface uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the direct_connect_virtual_interface is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when direct_connect_virtual_interface was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the direct_connect_virtual_interface. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the direct_connect_virtual_interface. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "direct_connect_virtual_interface name", 
                    "maxLength": 80
                }
            }, 
            "title": "direct_connect_virtual_interface metadata"
        }, 
        "layer2_stretch_list_intent_response": {
            "description": "Response object for intentful operation of layer2_stretchs", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/layer2_stretch_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/layer2_stretch_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "cloud_tenant_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cloud_tenant", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cloud_tenant"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "aws_security_group_metadata": {
            "description": "The aws_security_group kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_security_group was last updated\n", 
                    "format": "date-time"
                }, 
                "kind": {
                    "default": "aws_security_group", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_security_group"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "aws_security_group uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the aws_security_group is in", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_security_group was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the aws_security_group"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "aws_security_group name"
                }
            }, 
            "title": "aws_security_group metadata"
        }, 
        "alert_metadata": {
            "description": "The alert kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when alert was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "alert", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "alert"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "alert uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the alert is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when alert was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the alert. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the alert. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "alert name", 
                    "maxLength": 80
                }
            }, 
            "title": "alert metadata"
        }, 
        "remote_syslog_server_reference": {
            "description": "The reference to a remote_syslog_server", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_syslog_server", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_syslog_server"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a remote_syslog_server"
        }, 
        "project_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "project", 
                    "x-ntnx-enum": [
                        "project"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for project list output"
        }, 
        "aws_security_group_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_security_group", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_security_group"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "routing_policy_resources": {
            "description": "Routing Policy creation/modification spec. The routing policy matches incoming traffic on the router based on the following fields: 'source', 'destination', 'protocol_type', 'protocol_parameters'. Once traffic matches the parameters defined in the policy 'action' field defines the action that needs to be performed on the traffic. 'action' could be permit/deny/reroute.", 
            "required": [
                "priority", 
                "source", 
                "destination", 
                "protocol_type", 
                "action"
            ], 
            "type": "object", 
            "properties": {
                "is_bidirectional": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Whether to configure/install policy in reverse direction too (i.e matching traffic from destination to source)\n"
                }, 
                "vpc_reference": {
                    "description": "The VPC this routing policy belongs to.\n", 
                    "$ref": "#/definitions/vpc_reference"
                }, 
                "destination": {
                    "description": "Destination of traffic that is entering the router.\n", 
                    "$ref": "#/definitions/network_address"
                }, 
                "priority": {
                    "minimum": 1, 
                    "type": "integer", 
                    "maximum": 1000, 
                    "format": "int16"
                }, 
                "source": {
                    "description": "Source of traffic that is entering the router.\n", 
                    "$ref": "#/definitions/network_address"
                }, 
                "protocol_parameters": {
                    "description": "The IP protocol type of traffic that is entering the router.\n", 
                    "$ref": "#/definitions/protocol_parameters"
                }, 
                "virtual_network_reference": {
                    "description": "The virtual network this routing policy belongs to. This reference is deprecated, use vpc_reference instead.\n", 
                    "$ref": "#/definitions/virtual_network_reference"
                }, 
                "action": {
                    "description": "The IP protocol type of traffic that is entering the router.\n", 
                    "$ref": "#/definitions/routing_policy_action"
                }, 
                "protocol_type": {
                    "x-ntnx-enum": [
                        "ALL", 
                        "TCP", 
                        "UDP", 
                        "ICMP", 
                        "PROTOCOL_NUMBER"
                    ], 
                    "type": "string"
                }
            }, 
            "title": "Routing Policy creation/modification spec"
        }, 
        "ssh_user_reference": {
            "description": "The reference to a ssh_user", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ssh_user", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ssh_user"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a ssh_user"
        }, 
        "recovery_plan_job_phase_execution_status": {
            "description": "Each phase of the Recovery Plan execution has an array of steps executed. A step UUID and its parent UUID can be used to form the trees for execution status of the phases in the Recovery Plan execution. A step with no parent becomes the root node of a tree. For operation phase in the Recovery Plan execution, there will be one tree for each of the stages in the Recovery Plan. UUID of a stage will be the step UUID of the root node for corresponding tree. For example, Let RP be a Recovery Plan with only one stage with UUID StageUuid and this stage has only one VM VM1. Let an action on the Recovery Plan requires two operations 'Clone VM from Snapshot' and 'Power On VM' for the VM recovery. Let a step execution staus be specified by {UUID of the step, UUID of the parent step, Execution Status}. On the execution of the Recovery Plan RP, a step with UUID StageUuid will be created. Let VM1RecoveryUuid be the UUID of the step created for handling the recovery of the VM VM1 and StepVmCloneUuid, StepVmPowerOnUuid be the uuid of the sub-steps for operations 'Clone VM from Snapshot' and 'Power On VM' for the recovery of VM1, then recovery_plan_job_stages_execution_status will be [{StageUuid, nil, Execution Status},\n {VM1RecoveryUuid, StageUuid, Execution Status},\n {StepVmCloneUuid, VM1RecoveryUuid, Execution Status},\n {StepVmPowerOnUuid, VM1RecoveryUuid, Execution Status}]\n", 
            "type": "object", 
            "properties": {
                "status": {
                    "x-ntnx-enum": [
                        "QUEUED", 
                        "RUNNING", 
                        "COMPLETED", 
                        "FAILED", 
                        "ABORTED", 
                        "COMPLETED_WITH_WARNING"
                    ], 
                    "type": "string", 
                    "description": "Execution state of a phase of Recovery Plan Job execution."
                }, 
                "percentage_complete": {
                    "type": "integer", 
                    "description": "Percentage completed for a phase of the Recovery Plan Job execution.\n", 
                    "format": "int32"
                }, 
                "step_execution_status_list": {
                    "items": {
                        "$ref": "#/definitions/recovery_plan_job_step_execution_status"
                    }, 
                    "type": "array", 
                    "description": "List of execution status of steps for a phase of the Recovery Plan Job execution.\n"
                }
            }, 
            "title": "Execution status of a phase in the Recovery Plan Job execution."
        }, 
        "mh_vm_revert_input": {
            "description": "Input object for the revert API. Pass the UUID of the vm_recovery_point to which the VM is to be reverted to.\n", 
            "required": [
                "vm_recovery_point_uuid"
            ], 
            "type": "object", 
            "properties": {
                "vm_recovery_point_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Revert API input"
        }, 
        "support_case_metadata": {
            "description": "The support_case kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when support_case was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "support_case", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "support_case"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "support_case uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the support_case is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when support_case was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the support_case. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the support_case. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "support_case name", 
                    "maxLength": 80
                }
            }, 
            "title": "support_case metadata"
        }, 
        "docker_registry_list_intent_response": {
            "description": "Response object for intentful operation of docker_registrys", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/docker_registry_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/docker_registry_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "indicator": {
            "description": "It is a symptom that caused the alert.", 
            "type": "object", 
            "properties": {
                "metric_display_name": {
                    "type": "string", 
                    "description": "The metric display name in English"
                }, 
                "metric_name": {
                    "type": "string", 
                    "description": "The metric key name"
                }, 
                "trigger_time": {
                    "type": "string", 
                    "description": "The time that this indicator was created.  It is the\nsource metric time.\n", 
                    "format": "date-time"
                }, 
                "condition_type": {
                    "x-ntnx-enum": [
                        "STATIC_THRESHOLD", 
                        "ANOMALY", 
                        "SAFETY_ZONE"
                    ], 
                    "type": "string", 
                    "description": "Indicating if this symptom is caused by static threshold\nor anomaly (dynamic threshold) evaluation.  If an indicator is raised,\nthere may have another indicator indicating the safe guard zone value.\n"
                }, 
                "threshold": {
                    "description": "The threshold used for comparison.", 
                    "$ref": "#/definitions/param_value"
                }, 
                "last_value": {
                    "description": "The last raw value that caused the indicator.", 
                    "$ref": "#/definitions/param_value"
                }, 
                "comparison_operator": {
                    "x-ntnx-enum": [
                        "EQUAL_TO", 
                        "GREATER_THAN", 
                        "GREATER_THAN_OR_EQUAL_TO", 
                        "LESS_THAN", 
                        "LESS_THAN_OR_EQUAL_TO", 
                        "CONTAINS"
                    ], 
                    "type": "string", 
                    "description": "The comparison operator used in this evaluation"
                }, 
                "unit": {
                    "type": "string", 
                    "description": "Data unit."
                }, 
                "wait_time_in_usecs": {
                    "type": "integer", 
                    "description": "How long the indicator had been lasted before raised the issue\n", 
                    "format": "int64"
                }
            }, 
            "title": "Information about a monitored metric crossed threshold."
        }, 
        "resource_utilization_spec": {
            "description": "specify the limits and units for a resource type", 
            "required": [
                "resource_type"
            ], 
            "properties": {
                "limit": {
                    "type": "integer", 
                    "description": "The resource consumption limit"
                }, 
                "resource_type": {
                    "x-ntnx-enum": [
                        "STORAGE", 
                        "MEMORY", 
                        "VCPUS", 
                        "VMS"
                    ], 
                    "type": "string", 
                    "description": "The type of resource (i.e. storage, CPUs)"
                }
            }, 
            "title": "Resource Utilization Specification"
        }, 
        "routing_policy_intent_input": {
            "description": "An intentful representation of a routing_policy", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/routing_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/routing_policy_metadata"
                }
            }, 
            "title": "routing_policy Intent Entity"
        }, 
        "alert_intent_input": {
            "description": "An intentful representation of a alert", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/alert"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/alert_metadata"
                }
            }, 
            "title": "alert Intent Entity"
        }, 
        "app_action_input_upload": {
            "description": "Action definition for Application", 
            "type": "object", 
            "properties": {
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "critical": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "action critical flag"
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "action attrs"
                }, 
                "runbook": {
                    "description": "Action runbooks\n", 
                    "$ref": "#/definitions/app_runbook_input_upload"
                }, 
                "type": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Action for Application"
        }, 
        "app_published_service_response_download": {
            "description": "Published service definition", 
            "required": [
                "name", 
                "uuid", 
                "state", 
                "action_list", 
                "variable_list"
            ], 
            "type": "object", 
            "properties": {
                "singleton": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "If True, then this service can only be in a deployment with replica 1\n"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array"
                }, 
                "element_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_element"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "type": {
                    "default": "K8S_SERVICE", 
                    "x-ntnx-enum": [
                        "K8S_SERVICE"
                    ], 
                    "type": "string", 
                    "description": "Type of published service"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_published_service_reference_upload"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "port_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_port"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "tier": {
                    "type": "string", 
                    "description": "Service tier name"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for service"
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional published service options"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Published service definition"
        }, 
        "report_instance_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "report_instance", 
                    "x-ntnx-enum": [
                        "report_instance"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for report_instance list output"
        }, 
        "hypervisor": {
            "description": "Host Hypervisor information.", 
            "required": [
                "ip"
            ], 
            "type": "object", 
            "properties": {
                "num_vms": {
                    "type": "integer", 
                    "description": "Num of VMs running on this Host.", 
                    "format": "int64"
                }, 
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Hypervisor IP."
                }, 
                "hypervisor_full_name": {
                    "type": "string", 
                    "description": "Full name of hypervisor running on Host."
                }
            }, 
            "title": "Hypervisor Info"
        }, 
        "audit_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "audit", 
                    "x-ntnx-enum": [
                        "audit"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for audit list output"
        }, 
        "app_blueprint_deployment_reference_upload": {
            "description": "The reference to a app_blueprint_deployment", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_blueprint_deployment", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_blueprint_deployment"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_blueprint_deployment"
        }, 
        "availability_zone_resources": {
            "description": "Availability Zone resources", 
            "required": [
                "management_plane_type"
            ], 
            "type": "object", 
            "properties": {
                "management_url": {
                    "type": "string", 
                    "description": "Identifier of the management plane. This could be the URL of the\nPC or the FQDN of Xi portal.\n"
                }, 
                "region": {
                    "type": "string", 
                    "description": "Cloud region where the data will be replicated to. Based on the\ncloud provider type the available list of regions will differ.\n"
                }, 
                "management_plane_type": {
                    "x-ntnx-enum": [
                        "PC", 
                        "Xi", 
                        "Local"
                    ], 
                    "type": "string", 
                    "description": "This defines the type of management entity. Its value can be Xi,\nPC, or Local. Local AZs are auto-created and cannot be deleted.\nHow to talk to management entity will be decided based on the type\nof management plane.\n"
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "Display name. It is mainly used by user interface to show the\nuser-friendly name of the availability zone. If unset, default value\nwill be used.\n"
                }, 
                "credentials": {
                    "type": "object", 
                    "description": "Credentials required to connect to a specific management plane.\n", 
                    "properties": {
                        "pc": {
                            "required": [
                                "remote_connection_reference"
                            ], 
                            "type": "object", 
                            "description": "Credentials for connecting to Prism Central.", 
                            "properties": {
                                "remote_connection_reference": {
                                    "description": "Reference to the remote connection entity for PC\ncommunication.\n", 
                                    "$ref": "#/definitions/remote_connection_reference"
                                }
                            }
                        }
                    }
                }
            }, 
            "title": "Availability Zone resources"
        }, 
        "recovery_plan_job_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "recovery_plan_job", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "recovery_plan_job"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "direct_connect_virtual_interface_reference": {
            "description": "The reference to a direct_connect_virtual_interface", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "direct_connect_virtual_interface", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "direct_connect_virtual_interface"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a direct_connect_virtual_interface"
        }, 
        "directory_service_metadata": {
            "description": "The directory_service kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when directory_service was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "directory_service", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "directory_service"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "directory_service uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the directory_service is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when directory_service was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the directory_service. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the directory_service. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "directory_service name", 
                    "maxLength": 80
                }
            }, 
            "title": "directory_service metadata"
        }, 
        "aws_key_pair_metadata": {
            "description": "The aws_key_pair kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_key_pair was last updated\n", 
                    "format": "date-time"
                }, 
                "kind": {
                    "default": "aws_key_pair", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_key_pair"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "aws_key_pair uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the aws_key_pair is in", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_key_pair was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the aws_key_pair"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "aws_key_pair name"
                }
            }, 
            "title": "aws_key_pair metadata"
        }, 
        "access_control_policy_metadata": {
            "description": "The access_control_policy kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when access_control_policy was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "access_control_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "access_control_policy"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "access_control_policy uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the access_control_policy is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when access_control_policy was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the access_control_policy. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the access_control_policy. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "access_control_policy name", 
                    "maxLength": 80
                }
            }, 
            "title": "access_control_policy metadata"
        }, 
        "app": {
            "description": "An intentful representation of a app spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "app Name.", 
                    "maxLength": 256
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for app.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/app_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "app Intent Spec with placement specified"
        }, 
        "app_substrate_reference": {
            "description": "The reference to a app_substrate", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_substrate", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_substrate"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_substrate"
        }, 
        "support_case_upload_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "support_case_upload", 
                    "x-ntnx-enum": [
                        "support_case_upload"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for support_case_upload list output"
        }, 
        "direct_connect_virtual_interface": {
            "description": "An intentful representation of a direct_connect_virtual_interface spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for direct_connect_virtual_interface.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/direct_connect_virtual_interface_resources"
                }, 
                "name": {
                    "type": "string", 
                    "description": "direct_connect_virtual_interface Name.", 
                    "maxLength": 256
                }
            }, 
            "title": "direct_connect_virtual_interface Intent Spec with placement specified"
        }, 
        "volume_group_intent_resource": {
            "description": "Response object for intentful operations on a volume_group", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/volume_group_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/volume_group"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/volume_group_metadata"
                }
            }, 
            "title": "volume_group Intent Response"
        }, 
        "software_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "software", 
                    "x-ntnx-enum": [
                        "software"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for software list"
        }, 
        "report_config_list_intent_response": {
            "description": "Response object for intentful operation of report_configs", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/report_config_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/report_config_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "volume_group_list_intent_response": {
            "description": "Response object for intentful operation of volume_groups", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/volume_group_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/volume_group_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "certificate": {
            "description": "Certificate content", 
            "required": [
                "content"
            ], 
            "type": "object", 
            "properties": {
                "content": {
                    "type": "string", 
                    "description": "Certificate content", 
                    "format": "byte"
                }
            }, 
            "title": "Certificate content"
        }, 
        "app_runlog_resources": {
            "description": "Runlog resources", 
            "required": [
                "type", 
                "is_critical", 
                "reason_list"
            ], 
            "type": "object", 
            "properties": {
                "action_reference": {
                    "description": "action reference", 
                    "$ref": "#/definitions/entity_reference"
                }, 
                "task_reference": {
                    "description": "task reference", 
                    "$ref": "#/definitions/app_task_reference"
                }, 
                "userdata_reference": {
                    "description": "user data reference", 
                    "$ref": "#/definitions/entity_reference"
                }, 
                "is_critical": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "critical or non-critical runlog"
                }, 
                "root_reference": {
                    "description": "root reference", 
                    "$ref": "#/definitions/app_runlog_reference"
                }, 
                "call_runbook_reference": {
                    "description": "call runbook task reference", 
                    "$ref": "#/definitions/app_task_reference"
                }, 
                "element_type": {
                    "x-ntnx-enum": [
                        "Substrate", 
                        "Package", 
                        "Service", 
                        "Deployment", 
                        "Application", 
                        "LoadBalancer", 
                        "SubstrateElement", 
                        "PackageElement", 
                        "ServiceElement", 
                        "DeploymentElement"
                    ], 
                    "type": "string", 
                    "description": "type of element this runlog refers to."
                }, 
                "reason_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "reasons of failure if any"
                }, 
                "parent_reference": {
                    "description": "parent reference", 
                    "$ref": "#/definitions/app_runlog_reference"
                }, 
                "is_runlog_archived": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Describe if action runlog is archived"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "TaskRunlog", 
                        "RunbookRunlog", 
                        "ActionRunlog", 
                        "PolicyRunlog"
                    ], 
                    "type": "string", 
                    "description": "type of runlog"
                }, 
                "application_reference": {
                    "description": "application reference", 
                    "$ref": "#/definitions/app_reference"
                }, 
                "element_reference": {
                    "$ref": "#/definitions/entity_reference"
                }
            }, 
            "title": "Runlog resources"
        }, 
        "query_timevalue_pair": {
            "description": "Time-Value pairs in each grid cell.", 
            "type": "object", 
            "properties": {
                "value": {
                    "$ref": "#/definitions/query_value"
                }, 
                "time": {
                    "type": "integer", 
                    "format": "int64"
                }
            }, 
            "title": "Time-Value pairs in each grid cell."
        }, 
        "nucalm_service_config_input": {
            "description": "Input body to configure NuCalm service.", 
            "type": "object", 
            "properties": {
                "enable_nutanix_apps": {
                    "type": "boolean", 
                    "description": "Flag indicating whether to enable Nutanix apps."
                }, 
                "state": {
                    "x-ntnx-enum": [
                        "ENABLE"
                    ], 
                    "type": "string", 
                    "description": "The desired state of NuCalm service."
                }, 
                "enable_lite": {
                    "type": "boolean", 
                    "description": "Enable lite versions of service."
                }, 
                "perform_validation_only": {
                    "type": "boolean", 
                    "description": "Flag indicating whether to do NuCalm enablement validation only.\n"
                }
            }, 
            "title": "NuCalm service configuration."
        }, 
        "directory_service_search_response": {
            "description": "The response returned for directory service search operation.", 
            "type": "object", 
            "properties": {
                "search_result_list": {
                    "items": {
                        "$ref": "#/definitions/entity"
                    }, 
                    "type": "array"
                }, 
                "domain_name": {
                    "type": "string", 
                    "description": "The domain name of the directory service."
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/directory_service_search_metadata"
                }
            }, 
            "title": "Directory service search response"
        }, 
        "file_item_intent_input": {
            "description": "An intentful representation of a file_item", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/file_item"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/file_item_metadata"
                }
            }, 
            "title": "file_item Intent Entity"
        }, 
        "app_task_intent_input": {
            "description": "An intentful representation of a app_task", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/app_task"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/app_task_metadata"
                }
            }, 
            "title": "app_task Intent Entity"
        }, 
        "remote_connection_credential": {
            "description": "Credentials to connect with remote endpoint", 
            "type": "object", 
            "properties": {
                "auth_type": {
                    "x-ntnx-enum": [
                        "BASIC", 
                        "BEARER"
                    ], 
                    "type": "string", 
                    "description": "Type of credentials to use"
                }, 
                "bearer_token": {
                    "type": "string", 
                    "description": "token to use with bearer authorization, must for BEARER auth_type\n"
                }, 
                "basic_credential": {
                    "$ref": "#/definitions/basic_credential"
                }
            }, 
            "title": "Credential to connect with remote endpoint"
        }, 
        "report_notification_spec": {
            "description": "Report Instance notification spec.", 
            "required": [
                "report_config_reference"
            ], 
            "type": "object", 
            "properties": {
                "recipient_list": {
                    "items": {
                        "$ref": "#/definitions/recipient"
                    }, 
                    "type": "array", 
                    "description": "Recipients in addition to those specified in report config.", 
                    "maxItems": 100
                }, 
                "email_body": {
                    "type": "string", 
                    "description": "Custom content of the email.", 
                    "maxLength": 1000
                }, 
                "recipient_format": {
                    "items": {
                        "x-ntnx-enum": [
                            "PDF", 
                            "CSV"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List specifying the formats in which report is to be sent."
                }, 
                "instance_reference_list": {
                    "items": {
                        "$ref": "#/definitions/report_instance_reference"
                    }, 
                    "type": "array", 
                    "description": "List of the instances for which email should be sent.", 
                    "maxItems": 32
                }, 
                "report_config_reference": {
                    "$ref": "#/definitions/report_config_reference"
                }, 
                "email_subject": {
                    "type": "string", 
                    "description": "Subject of the email that will be sent.", 
                    "maxLength": 256
                }
            }, 
            "title": "Report Instance notification spec."
        }, 
        "cluster_metadata": {
            "description": "The cluster kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when cluster was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "cluster", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cluster"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "cluster uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the cluster is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when cluster was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the cluster. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the cluster. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "cluster name", 
                    "maxLength": 80
                }
            }, 
            "title": "cluster metadata"
        }, 
        "citrix_connector_config_details_spec": {
            "description": "Citrix Connector details.", 
            "type": "object", 
            "properties": {
                "citrix_vm_reference_list": {
                    "items": {
                        "$ref": "#/definitions/vm_reference"
                    }, 
                    "type": "array", 
                    "description": "Reference to the list of vm ids registered with citrix cloud."
                }, 
                "client_secret": {
                    "type": "string", 
                    "description": "The client secret for the Citrix Cloud."
                }, 
                "customer_id": {
                    "type": "string", 
                    "description": "The customer id registered with Citrix Cloud.", 
                    "maxLength": 200
                }, 
                "client_id": {
                    "type": "string", 
                    "description": "The client id for the Citrix Cloud.", 
                    "maxLength": 200
                }, 
                "resource_location": {
                    "$ref": "#/definitions/citrix_resource_location_spec"
                }
            }, 
            "title": "Citrix Connector details."
        }, 
        "account": {
            "description": "An intentful representation of a account spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "account Name.", 
                    "maxLength": 256
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for account.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/account_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "account Intent Spec with placement specified"
        }, 
        "mh_vm": {
            "description": "An intentful representation of a mh_vm spec", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/mh_vm_resources"
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }
            }, 
            "title": "mh_vm Intent Spec with placement specified"
        }, 
        "account_resources_def_status": {
            "description": "Account resources", 
            "required": [
                "type", 
                "data"
            ], 
            "type": "object", 
            "properties": {
                "data": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Account data"
                }, 
                "type": {
                    "type": "string"
                }
            }, 
            "title": "Account resources"
        }, 
        "changed_regions_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "changed_regions", 
                    "x-ntnx-enum": [
                        "changed_regions"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for changed_regions list"
        }, 
        "routing_policy_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "routing_policy", 
                    "x-ntnx-enum": [
                        "routing_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for routing_policy list output"
        }, 
        "providers": {
            "additionalProperties": {
                "type": "object"
            }, 
            "type": "object", 
            "description": "Providers should be supplied as \"<scope>:<provider>\" style keys. Values\nwill be interpreted by the provider if supplied\n", 
            "title": "Providers"
        }, 
        "storage_policy_reference": {
            "description": "The reference to a storage_policy", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "storage_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "storage_policy"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a storage_policy"
        }, 
        "aws_vm": {
            "description": "An intentful representation of a aws_vm spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "aws_vm Name.", 
                    "maxLength": 256
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for aws_vm.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/aws_vm_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "aws_vm Intent Spec with placement specified"
        }, 
        "layer2_stretch_subnet_info": {
            "description": "Layer2 stretch related entities subnet info.", 
            "type": "object", 
            "properties": {
                "ip_subnet": {
                    "$ref": "#/definitions/ip_subnet_status"
                }, 
                "subnet_reference": {
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "vpc_reference": {
                    "$ref": "#/definitions/vpc_reference"
                }, 
                "default_gateway_ip": {
                    "type": "string"
                }, 
                "vlan_id": {
                    "type": "integer"
                }
            }, 
            "title": "Layer2 stretch related entities subnet info"
        }, 
        "app_intent_resource": {
            "description": "Response object for intentful operations on a app", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/app_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/app"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/app_metadata"
                }
            }, 
            "title": "app Intent Response"
        }, 
        "project_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "project", 
                    "x-ntnx-enum": [
                        "project"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for project list"
        }, 
        "remote_syslog_module_resources": {
            "description": "Remote Syslog module API resources definition", 
            "type": "object", 
            "properties": {
                "module_list": {
                    "items": {
                        "$ref": "#/definitions/syslog_module"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Remote Syslog module API resources"
        }, 
        "ngt_policy_def_status": {
            "description": "NGT policy status.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Ngt policy name."
                }, 
                "resources": {
                    "$ref": "#/definitions/ngt_policy_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description or user annotation for the ngt policy."
                }
            }, 
            "title": "NGT policy status"
        }, 
        "aws_vm_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_vm", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_vm"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "service_ip_counters": {
            "description": "Number of packets and bytes hitting the service IP.", 
            "type": "object", 
            "properties": {
                "received": {
                    "$ref": "#/definitions/routing_policy_counters"
                }, 
                "service_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string"
                }, 
                "sent": {
                    "$ref": "#/definitions/routing_policy_counters"
                }
            }, 
            "title": "Service IP counters"
        }, 
        "action_trigger_type_intent_input": {
            "description": "An intentful representation of a action_trigger_type", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/action_trigger_type"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_trigger_type_metadata"
                }
            }, 
            "title": "action_trigger_type Intent Entity"
        }, 
        "project_list_intent_response": {
            "description": "Response object for intentful operation of projects", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/project_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/project_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "underlay_subnet_intent_input": {
            "description": "An intentful representation of a underlay_subnet", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/underlay_subnet"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/underlay_subnet_metadata"
                }
            }, 
            "title": "underlay_subnet Intent Entity"
        }, 
        "aws_vpc_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_vpc", 
                    "x-ntnx-enum": [
                        "aws_vpc"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for aws_vpc list"
        }, 
        "aws_image_intent_resource": {
            "description": "aws_image entity", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/aws_image_def_status"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_image_metadata"
                }
            }, 
            "title": "aws_image"
        }, 
        "vm_recovery_point_restore_input": {
            "description": "Input object for the restore API of the recovery points. User can provide optional UUID of the vm that will be created as a result of this operation.\n", 
            "type": "object", 
            "properties": {
                "vm_override_spec": {
                    "description": "Properties of the vm that can be overridden on restore.\n", 
                    "$ref": "#/definitions/vm_restore_override_spec"
                }, 
                "metadata": {
                    "type": "object", 
                    "properties": {
                        "categories_mapping": {
                            "additionalProperties": {
                                "items": {
                                    "type": "string"
                                }, 
                                "type": "array"
                            }, 
                            "type": "object", 
                            "description": "Categories for the vm. This allows setting up multiple\nvalues from a single key.\n"
                        }, 
                        "uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "format": "UUID"
                        }
                    }, 
                    "title": "Metadata of the restored vm."
                }
            }, 
            "title": "Restore API input"
        }, 
        "changed_regions_metadata": {
            "description": "The changed_regions kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when changed_regions was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "changed_regions", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "changed_regions"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "changed_regions uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the changed_regions is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when changed_regions was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the changed_regions. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the changed_regions. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "changed_regions name", 
                    "maxLength": 80
                }
            }, 
            "title": "changed_regions metadata"
        }, 
        "identity_categorization_directory_config": {
            "description": "Identity categorization directory config.", 
            "required": [
                "directory_service_reference"
            ], 
            "type": "object", 
            "properties": {
                "matching_criteria_list": {
                    "items": {
                        "$ref": "#/definitions/id_categorization_matching_criteria"
                    }, 
                    "type": "array", 
                    "description": "The matching criteria used to determine whether an entity will be\naffected by identity categorization. If not provided, no entity will\nbe affected. Only a single entry in this list is supported today.\n"
                }, 
                "domain_controller_list": {
                    "items": {
                        "$ref": "#/definitions/id_categorization_domain_controller"
                    }, 
                    "type": "array", 
                    "description": "List of domain controllers to be used for event scraping."
                }, 
                "directory_service_reference": {
                    "description": "The directory service that will be used for mapping.", 
                    "$ref": "#/definitions/directory_service_reference"
                }
            }, 
            "title": "Directory Config"
        }, 
        "name_identifier_map": {
            "description": "A mapping of name to the generated / salted UUID5.", 
            "type": "object", 
            "properties": {
                "identifier": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-5[0-9a-f]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "x-example": "c4a760a8-dbcf-5254-a0d9-6a4474bd1b62", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string"
                }
            }, 
            "title": "A mapping of name to salted UUID5's."
        }, 
        "direct_connect_intent_resource": {
            "description": "Response object for intentful operations on a direct_connect", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/direct_connect_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/direct_connect"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/direct_connect_metadata"
                }
            }, 
            "title": "direct_connect Intent Response"
        }, 
        "whatif_scenario": {
            "description": "Scenario Object.", 
            "type": "object", 
            "properties": {
                "new_cluster": {
                    "type": "boolean", 
                    "description": "The flag to indicate whether it is a new cluster or not."
                }, 
                "cluster_entity_type": {
                    "default": "cluster", 
                    "type": "string", 
                    "description": "The entity type for the cluster e.g. cluster or nutanix_vcenter__cluster."
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The uuid would be automatically generated when created.", 
                    "format": "UUID"
                }, 
                "vendor_list": {
                    "items": {
                        "$ref": "#/definitions/vendor"
                    }, 
                    "type": "array"
                }, 
                "workload_list": {
                    "items": {
                        "$ref": "#/definitions/workload"
                    }, 
                    "type": "array", 
                    "description": "workload added by user."
                }, 
                "recommended_runway": {
                    "description": "The runway after considering new workload and recommendation.", 
                    "$ref": "#/definitions/runway"
                }, 
                "updated_time_sec": {
                    "type": "integer", 
                    "description": "Last updated timestamp."
                }, 
                "cluster_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The cluster uuid.", 
                    "format": "UUID"
                }, 
                "target_runway_days": {
                    "default": 180, 
                    "type": "integer", 
                    "description": "The target runway."
                }, 
                "cluster_spec": {
                    "description": "The cluster configuration.", 
                    "$ref": "#/definitions/cluster_spec"
                }, 
                "runway": {
                    "description": "The runway for the original cluster. Not available for new cluster.", 
                    "$ref": "#/definitions/runway"
                }, 
                "name": {
                    "type": "string"
                }
            }, 
            "title": "Scenario Definition"
        }, 
        "ngt_list_response": {
            "description": "NGT list response.", 
            "type": "object", 
            "properties": {
                "entities_list": {
                    "items": {
                        "$ref": "#/definitions/ngt_response"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ngt_list_metadata_output"
                }
            }, 
            "title": "NGT list response"
        }, 
        "subnet_resources_def_status": {
            "description": "Subnet creation/modification status.", 
            "type": "object", 
            "properties": {
                "subnet_type": {
                    "x-ntnx-enum": [
                        "VLAN", 
                        "OVERLAY"
                    ], 
                    "type": "string"
                }, 
                "vpc_reference": {
                    "description": "The VPC this subnet belongs to (Only supported on Xi).\n", 
                    "$ref": "#/definitions/vpc_reference"
                }, 
                "virtual_switch_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Reference to virtual switch", 
                    "format": "UUID"
                }, 
                "vswitch_name": {
                    "type": "string"
                }, 
                "network_function_chain_reference": {
                    "$ref": "#/definitions/network_function_chain_reference"
                }, 
                "ip_usage_stats": {
                    "$ref": "#/definitions/ip_usage_stats"
                }, 
                "ip_config": {
                    "$ref": "#/definitions/ip_config"
                }, 
                "reserved_ip_address_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of IPs that are not considered while allocating IP addresses to Atlas ports.\n"
                }, 
                "enable_nat": {
                    "type": "boolean", 
                    "description": "Whether NAT should be performed for VPCs attaching to the subnet. This field is supported only for external subnets. NAT is enabled by default on external subnets.\n"
                }, 
                "advanced_networking": {
                    "type": "boolean", 
                    "description": "Whether the subnet should be realized on OVN stack or not."
                }, 
                "virtual_network_reference": {
                    "description": "The virtual network this subnet belongs to (Only supported on Xi). This reference is deprecated, use vpc_reference instead.\n", 
                    "$ref": "#/definitions/virtual_network_reference"
                }, 
                "migration_state": {
                    "x-ntnx-enum": [
                        "IN_PROGRESS", 
                        "FAILED"
                    ], 
                    "type": "string"
                }, 
                "availability_zone_reference_list": {
                    "items": {
                        "$ref": "#/definitions/availability_zone_reference"
                    }, 
                    "type": "array", 
                    "description": "List of availability zones from which resources are derived (Only supported on Xi).\n"
                }, 
                "external_connectivity_state": {
                    "x-ntnx-enum": [
                        "ENABLED", 
                        "DISABLED"
                    ], 
                    "type": "string", 
                    "description": "External connectivity state (Only supported on Xi)"
                }, 
                "vlan_id": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "is_external": {
                    "type": "boolean", 
                    "description": "Whether the subnet is external subnet or not."
                }
            }, 
            "title": "Subnet creation/modification status"
        }, 
        "ncc_checks_support_case_upload": {
            "description": "Input for execution of NCC checks.", 
            "type": "object", 
            "properties": {
                "should_send_email": {
                    "type": "boolean", 
                    "description": "Flag specifying whether an email is to be sent."
                }, 
                "ncc_check_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of ncc checks to run."
                }
            }, 
            "title": "NCC checks object."
        }, 
        "app_task_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_task", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_task"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "project_def_status": {
            "description": "A Project resource.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the project entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Project name."
                }, 
                "resources": {
                    "type": "object", 
                    "properties": {
                        "account_reference_list": {
                            "items": {
                                "$ref": "#/definitions/account_reference"
                            }, 
                            "type": "array", 
                            "description": "List of accounts associated with the project."
                        }, 
                        "resource_domain": {
                            "$ref": "#/definitions/resource_domain_resources_status"
                        }, 
                        "directory_reference_list": {
                            "items": {
                                "$ref": "#/definitions/directory_reference"
                            }, 
                            "type": "array", 
                            "description": "List of directory references in the project"
                        }, 
                        "identity_providers_reference_list": {
                            "items": {
                                "$ref": "#/definitions/identity_providers_reference"
                            }, 
                            "type": "array", 
                            "description": "List of identity provider references in the project"
                        }, 
                        "user_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_reference"
                            }, 
                            "type": "array", 
                            "description": "List of users added directly to the project.\n"
                        }, 
                        "default_subnet_reference": {
                            "description": "Optional default subnet if one is specified", 
                            "$ref": "#/definitions/subnet_reference"
                        }, 
                        "environment_reference_list": {
                            "items": {
                                "$ref": "#/definitions/environment_reference"
                            }, 
                            "type": "array", 
                            "description": "List of environments associated with the project."
                        }, 
                        "is_default": {
                            "type": "boolean", 
                            "description": "Indicates if it is the default project.\n"
                        }, 
                        "tunnel_reference_list": {
                            "items": {
                                "$ref": "#/definitions/tunnel_reference"
                            }, 
                            "type": "array", 
                            "description": "List of tunnels associated with the project."
                        }, 
                        "external_user_group_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_group_reference"
                            }, 
                            "type": "array", 
                            "description": "List of directory service groups reference. These\ngroups are not managed by Nutanix.\n"
                        }, 
                        "default_environment_reference": {
                            "description": "Optional default environment if one is specified", 
                            "$ref": "#/definitions/environment_reference"
                        }, 
                        "subnet_reference_list": {
                            "items": {
                                "$ref": "#/definitions/subnet_reference"
                            }, 
                            "type": "array", 
                            "description": "List of subnets for the project."
                        }, 
                        "cluster_reference_list": {
                            "items": {
                                "$ref": "#/definitions/cluster_reference"
                            }, 
                            "type": "array", 
                            "description": "List of clusters associated with the project."
                        }, 
                        "vpc_reference_list": {
                            "items": {
                                "$ref": "#/definitions/vpc_reference"
                            }, 
                            "type": "array", 
                            "description": "List of VPCs associated with the project."
                        }, 
                        "external_network_list": {
                            "items": {
                                "$ref": "#/definitions/external_network"
                            }, 
                            "type": "array", 
                            "description": "List of external network associated with the project."
                        }, 
                        "enable_directory_and_identity_provider_whitelist": {
                            "type": "boolean", 
                            "description": "Indicates AD/IDP whitelisting"
                        }
                    }, 
                    "title": "Project Resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Project description."
                }
            }, 
            "title": "Project Resource Status"
        }, 
        "rack_intent_response": {
            "description": "Response object for intentful operations on a rack", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/rack_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/rack"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/rack_metadata"
                }
            }, 
            "title": "rack Intent Response"
        }, 
        "oauth_client_reference": {
            "description": "The reference to a oauth_client", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "oauth_client", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "oauth_client"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a oauth_client"
        }, 
        "image_placement_policy_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "image_placement_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "image_placement_policy"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "cell_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cell", 
                    "x-ntnx-enum": [
                        "cell"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for cell list"
        }, 
        "cmsp_config_enablement": {
            "description": "MSP configuration for enabling CMSP on PC.", 
            "required": [
                "config", 
                "operation"
            ], 
            "type": "object", 
            "properties": {
                "registry_image": {
                    "description": "Registry Image spec", 
                    "$ref": "#/definitions/image_spec"
                }, 
                "operation": {
                    "x-ntnx-enum": [
                        "kValidate", 
                        "kEnable"
                    ], 
                    "type": "string", 
                    "description": "The type of operation is kValidate or kEnable.\n"
                }, 
                "config": {
                    "$ref": "#/definitions/cmsp_config"
                }, 
                "source": {
                    "default": "kPC", 
                    "x-ntnx-enum": [
                        "kPE", 
                        "kPC"
                    ], 
                    "type": "string", 
                    "description": "Indicates if CMSP enablement is being made as part of PC deployment (value kPE)"
                }
            }, 
            "title": "CMSP configuration for enablement."
        }, 
        "traffic_visibility_validation_result": {
            "description": "Traffic visibility validation item.", 
            "type": "object", 
            "properties": {
                "has_passed": {
                    "type": "boolean", 
                    "description": "Whether the validation passed."
                }, 
                "version": {
                    "type": "string", 
                    "description": "The minimum version the validation is checking against.\n"
                }, 
                "name": {
                    "type": "string"
                }
            }, 
            "title": "Traffic visibility validation item."
        }, 
        "internal_directory_service_config": {
            "description": "Internal directory service config", 
            "type": "object", 
            "properties": {
                "openldap_config": {
                    "description": "Configuration for OpenLDAP.", 
                    "$ref": "#/definitions/internal_open_ldap_config"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }, 
                "url": {
                    "type": "string", 
                    "description": "URL of the directory."
                }, 
                "directory_type": {
                    "x-ntnx-enum": [
                        "ACTIVE_DIRECTORY", 
                        "OPEN_LDAP"
                    ], 
                    "type": "string", 
                    "description": "Type of the directory service."
                }, 
                "domain_name": {
                    "type": "string", 
                    "description": "The domain name of the directory service."
                }, 
                "service_account_config": {
                    "description": "Validates and connects to the directory service with the given\ncredentials.\n", 
                    "$ref": "#/definitions/internal_service_account_config"
                }, 
                "recursive_group_search": {
                    "type": "boolean", 
                    "description": "Search group recursively"
                }, 
                "domain_display_name": {
                    "type": "string", 
                    "description": "Domain display name"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the directory service configuration."
                }
            }, 
            "title": "Internal directory service config"
        }, 
        "datacenter_intent_input": {
            "description": "An intentful representation of a datacenter", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/datacenter"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/datacenter_metadata"
                }
            }, 
            "title": "datacenter Intent Entity"
        }, 
        "access_control_policy_input": {
            "description": "An Access Control Policy resource.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the Access Control Policy.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "description": "Access Control Policy resources.", 
                    "required": [
                        "role_reference"
                    ], 
                    "type": "object", 
                    "properties": {
                        "role_reference": {
                            "description": "The Role being assigned to a given user(s).", 
                            "$ref": "#/definitions/role_reference"
                        }, 
                        "user_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_reference"
                            }, 
                            "type": "array", 
                            "description": "The User(s) being assigned a given role."
                        }, 
                        "filter_list": {
                            "description": "The list of filters, which define the entities.\n", 
                            "type": "object", 
                            "x-ntnx-one-of": [
                                {
                                    "required": [
                                        "context_list"
                                    ]
                                }
                            ], 
                            "properties": {
                                "context_list": {
                                    "items": {
                                        "$ref": "#/definitions/filter"
                                    }, 
                                    "type": "array", 
                                    "description": "The list of context filters. These are OR filters. The scope-expression-list defines the context, and the filter works in conjunction with the entity-expression-list. Note - the absence of a scope expression in a filter implies global context.\n"
                                }
                            }
                        }, 
                        "user_group_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_group_reference"
                            }, 
                            "type": "array", 
                            "description": "The User group(s) being assigned a given role."
                        }
                    }, 
                    "title": "Access Control Policy Resources."
                }, 
                "description": {
                    "type": "string", 
                    "description": "The description of the association of a role to a user\nin a given context.\n", 
                    "maxLength": 1000
                }
            }, 
            "title": "Access control policy details"
        }, 
        "rack_resources": {
            "description": "Rack entity definition", 
            "type": "object", 
            "properties": {
                "cell_reference": {
                    "$ref": "#/definitions/cell_reference"
                }, 
                "location": {
                    "type": "string", 
                    "description": "The rack location"
                }
            }, 
            "title": "Rack Entity"
        }, 
        "cloud_tenant_resources_def_status": {
            "description": "Xi cloud_tenant status definition.\n", 
            "type": "object", 
            "properties": {
                "cloud_tenant_status": {
                    "$ref": "#/definitions/cld_tenant_status"
                }
            }, 
            "title": "Xi cloud_tenant status defenition"
        }, 
        "aws_volume_type_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_volume_type", 
                    "x-ntnx-enum": [
                        "aws_volume_type"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for aws_volume_type list output"
        }, 
        "mh_vm_intent_resource": {
            "description": "Response object for intentful operations on a mh_vm", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/mh_vm_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/mh_vm"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/mh_vm_metadata"
                }
            }, 
            "title": "mh_vm Intent Response"
        }, 
        "oauth_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "oauth", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "oauth"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "routing_policy_metadata": {
            "description": "The routing_policy kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when routing_policy was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "routing_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "routing_policy"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "routing_policy uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the routing_policy is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when routing_policy was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the routing_policy. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the routing_policy. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "routing_policy name", 
                    "maxLength": 80
                }
            }, 
            "title": "routing_policy metadata"
        }, 
        "vg_recovery_point_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vg_recovery_point", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vg_recovery_point"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "vm_disk_metadata": {
            "description": "The vm_disk kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_disk was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "vm_disk", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vm_disk"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vm_disk uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the vm_disk is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vm_disk was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_disk. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vm_disk. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "vm_disk name", 
                    "maxLength": 80
                }
            }, 
            "title": "vm_disk metadata"
        }, 
        "project_internal_def_status": {
            "description": "A Project resource, combined with Users and ACPs.", 
            "required": [
                "project_status"
            ], 
            "type": "object", 
            "properties": {
                "access_control_policy_list_status": {
                    "items": {
                        "type": "object", 
                        "description": "The acp status and metadata", 
                        "properties": {
                            "access_control_policy_status": {
                                "$ref": "#/definitions/access_control_policy_def_status"
                            }, 
                            "metadata": {
                                "type": "object", 
                                "properties": {
                                    "kind": {
                                        "readOnly": true, 
                                        "type": "string"
                                    }, 
                                    "uuid": {
                                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                        "type": "string", 
                                        "format": "UUID"
                                    }
                                }
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "The list of access control policies associates with users in the project.\n"
                }, 
                "project_status": {
                    "description": "A Project resource.", 
                    "required": [
                        "name", 
                        "resources"
                    ], 
                    "type": "object", 
                    "properties": {
                        "name": {
                            "type": "string", 
                            "description": "Project name.", 
                            "maxLength": 64
                        }, 
                        "state": {
                            "type": "string", 
                            "description": "The state of the project entity."
                        }, 
                        "reason": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "One snake case word."
                        }, 
                        "message": {
                            "readOnly": true, 
                            "type": "string", 
                            "description": "The reason for the state if in error."
                        }, 
                        "resources": {
                            "type": "object", 
                            "properties": {
                                "account_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/account_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of accounts associated with the project."
                                }, 
                                "resource_domain": {
                                    "$ref": "#/definitions/resource_domain_resources_status"
                                }, 
                                "directory_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/directory_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of directory references under the project"
                                }, 
                                "identity_providers_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/identity_providers_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of identity providers references in the project"
                                }, 
                                "user_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/user_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of users in the project including all the users from the\nusers group if provided.\n"
                                }, 
                                "default_subnet_reference": {
                                    "description": "Optional default subnet if one is specified", 
                                    "$ref": "#/definitions/subnet_reference"
                                }, 
                                "environment_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/environment_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of environments associated with the project."
                                }, 
                                "is_default": {
                                    "type": "boolean", 
                                    "description": "Indicates if it is the default project.\n"
                                }, 
                                "tunnel_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/tunnel_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of tunnels associated with the project."
                                }, 
                                "external_user_group_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/user_group_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of directory service user groups. These groups are not\nmanaged by Nutanix.\n"
                                }, 
                                "default_environment_reference": {
                                    "description": "Optional default environment if one is specified", 
                                    "$ref": "#/definitions/environment_reference"
                                }, 
                                "subnet_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/subnet_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of subnets for the project."
                                }, 
                                "cluster_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/cluster_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of clusters associated with the project."
                                }, 
                                "vpc_reference_list": {
                                    "items": {
                                        "$ref": "#/definitions/vpc_reference"
                                    }, 
                                    "type": "array", 
                                    "description": "List of VPCs associated with the project."
                                }, 
                                "external_network_list": {
                                    "items": {
                                        "$ref": "#/definitions/external_network"
                                    }, 
                                    "type": "array", 
                                    "description": "List of external network associated with the project."
                                }, 
                                "enable_directory_and_identity_provider_whitelist": {
                                    "type": "boolean", 
                                    "description": "Indicates AD/IDP whitelisting"
                                }
                            }, 
                            "title": "Project Resources"
                        }, 
                        "description": {
                            "type": "string", 
                            "description": "Project description.", 
                            "maxLength": 1000
                        }
                    }, 
                    "title": "Project Resource Status"
                }
            }, 
            "title": "Project Resource Status, combined with Users and ACPs"
        }, 
        "app_published_service_reference_upload": {
            "description": "The reference to a app_published_service", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_published_service", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_published_service"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_published_service"
        }, 
        "vpc_route_table_intent_input": {
            "description": "An intentful representation of a vpc_route_table", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/vpc_route_table"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vpc_route_table_metadata"
                }
            }, 
            "title": "vpc_route_table Intent Entity"
        }, 
        "account_intent_response": {
            "description": "Response object for intentful operations on a account", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/account_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/account"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/account_metadata"
                }
            }, 
            "title": "account Intent Response"
        }, 
        "cloud_trust_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cloud_trust", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cloud_trust"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "virtual_network_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "virtual_network", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "virtual_network"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "storage_policy_def_status": {
            "description": "An intentful representation of storage policy status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the storage policy"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Storage policy name"
                }, 
                "resources": {
                    "$ref": "#/definitions/storage_policy_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for storage policy"
                }
            }, 
            "title": "Storage Policy Intent Status"
        }, 
        "vpn_connection_reference": {
            "description": "The reference to a vpn_connection", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpn_connection", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vpn_connection"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vpn_connection"
        }, 
        "direct_connect_virtual_interface_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "direct_connect_virtual_interface", 
                    "x-ntnx-enum": [
                        "direct_connect_virtual_interface"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for direct_connect_virtual_interface list output"
        }, 
        "report_instance": {
            "description": "Report instance creation/modification spec.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Report instance name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "description": "Report instance resources.", 
                    "required": [
                        "report_config_reference"
                    ], 
                    "type": "object", 
                    "properties": {
                        "description": {
                            "type": "string", 
                            "description": "Description of the report. This will be part of generated report.\n", 
                            "maxLength": 1000
                        }, 
                        "recipient_list": {
                            "items": {
                                "$ref": "#/definitions/recipient"
                            }, 
                            "type": "array", 
                            "description": "Recipients in addition to specified on the report config.", 
                            "maxItems": 100
                        }, 
                        "data_start_time": {
                            "type": "string", 
                            "description": "UTC date and time in \"%Y-%m-%d %H:%M:%S\" format for data\ncollection start point.\n", 
                            "format": "date-time"
                        }, 
                        "generation_format": {
                            "items": {
                                "x-ntnx-enum": [
                                    "PDF", 
                                    "CSV"
                                ], 
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "List specifying the formats in which report is to be created."
                        }, 
                        "recipient_format": {
                            "items": {
                                "x-ntnx-enum": [
                                    "PDF", 
                                    "CSV"
                                ], 
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "List specifying the formats in which report is to be sent."
                        }, 
                        "save_instance": {
                            "type": "boolean", 
                            "description": "Generated instance saved or not."
                        }, 
                        "data_end_time": {
                            "type": "string", 
                            "description": "UTC date and time in \"%Y-%m-%d %H:%M:%S\" format for data\ncollection end point.\n", 
                            "format": "date-time"
                        }, 
                        "timezone": {
                            "type": "string", 
                            "description": "Timezone in which report is to be generated. This is the list\nsupported by pytz.all_timezones. For more info, check\nhttps://pytz.sourceforge.net\n"
                        }, 
                        "runtime_key_values": {
                            "$ref": "#/definitions/generic_key_value_pair"
                        }, 
                        "report_config_reference": {
                            "$ref": "#/definitions/report_config_reference"
                        }
                    }, 
                    "title": "Report Instance."
                }
            }, 
            "title": "Report instance definition."
        }, 
        "action_trigger_type_list_intent_response": {
            "description": "Response object for intentful operation of action_trigger_types", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/action_trigger_type_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_trigger_type_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "aws_instance_disk_output_status": {
            "description": "AWS Instance Disk Status", 
            "type": "object", 
            "properties": {
                "status": {
                    "x-ntnx-enum": [
                        "CREATING", 
                        "ATTACHING", 
                        "ATTACHED", 
                        "AVAILABLE", 
                        "IN_USE", 
                        "DELETING", 
                        "DELETED", 
                        "ERROR"
                    ], 
                    "type": "string", 
                    "description": "The status of the Volume."
                }, 
                "size_gb": {
                    "type": "integer", 
                    "description": "Size of volumes in GB.", 
                    "format": "int64"
                }, 
                "availability_zone": {
                    "type": "string", 
                    "description": "The zone on which the EBS volume is created"
                }, 
                "volume_type": {
                    "x-ntnx-enum": [
                        "GP2", 
                        "IO1", 
                        "ST1", 
                        "SC1", 
                        "STANDARD"
                    ], 
                    "type": "string", 
                    "description": "Type of the Volume."
                }, 
                "device_name": {
                    "type": "string", 
                    "description": "Device name e.g. /dev/sdb"
                }, 
                "iops": {
                    "type": "integer", 
                    "description": "The requested number of I/O operations per second that the volume can support for provisioned IOPS (SSD) volumes (io1). Minimum = 100 IOPS and Maximum = 20000 IOPS.\n", 
                    "format": "int64"
                }, 
                "snapshot_id": {
                    "type": "string", 
                    "description": "AWS snapshot ID."
                }, 
                "id": {
                    "type": "string", 
                    "description": "AWS ID of the volume."
                }, 
                "tag_list": {
                    "$ref": "#/definitions/aws_tag_list"
                }, 
                "delete_on_termination": {
                    "type": "boolean", 
                    "description": "Status of delete on termination."
                }
            }, 
            "title": "AWS Instance Disk Status"
        }, 
        "identity_provider_intent_input": {
            "description": "An intentful representation of a identity_provider", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/identity_provider"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/identity_provider_metadata"
                }
            }, 
            "title": "identity_provider Intent Entity"
        }, 
        "access_control_policy": {
            "description": "Access Control Policy Input Definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the Access Control Policy.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "description": "Access Control Policy resources.", 
                    "required": [
                        "role_reference"
                    ], 
                    "type": "object", 
                    "properties": {
                        "role_reference": {
                            "description": "The Role being assigned to a given user(s).", 
                            "$ref": "#/definitions/role_reference"
                        }, 
                        "user_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_reference"
                            }, 
                            "type": "array", 
                            "description": "The User(s) being assigned a given role."
                        }, 
                        "filter_list": {
                            "description": "The list of filters, which define the entities.\n", 
                            "type": "object", 
                            "x-ntnx-one-of": [
                                {
                                    "required": [
                                        "context_list"
                                    ]
                                }
                            ], 
                            "properties": {
                                "context_list": {
                                    "items": {
                                        "$ref": "#/definitions/filter"
                                    }, 
                                    "type": "array", 
                                    "description": "The list of context filters. These are OR filters. The scope-expression-list defines the context, and the filter works in conjunction with the entity-expression-list. Note - the absence of a scope expression in a filter implies global context.\n"
                                }
                            }
                        }, 
                        "user_group_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_group_reference"
                            }, 
                            "type": "array", 
                            "description": "The User group(s) being assigned a given role."
                        }
                    }, 
                    "title": "Access Control Policy Resources."
                }, 
                "description": {
                    "type": "string", 
                    "description": "The description of the association of a role to a user in a given context.\n", 
                    "maxLength": 1000
                }
            }, 
            "title": "Access Control Policy."
        }, 
        "role_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "role", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "role"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "action_rule_result_resources": {
            "description": "Action rule result entity definition", 
            "required": [
                "action_rule_reference", 
                "execution_status", 
                "trigger_info_list", 
                "action_result_list", 
                "execution_plan"
            ], 
            "type": "object", 
            "properties": {
                "action_result_list": {
                    "items": {
                        "$ref": "#/definitions/action_result"
                    }, 
                    "type": "array", 
                    "description": "Ordered list of action execution results."
                }, 
                "post_execution_action_status": {
                    "description": "The overall rule execution status of post execution actions.\n", 
                    "$ref": "#/definitions/execution_status"
                }, 
                "rule_parameter_values": {
                    "description": "The global parameters provided by the action rule.  They could be\nused by actions.\n", 
                    "$ref": "#/definitions/component_instance_parameters"
                }, 
                "execution_status": {
                    "description": "The overall rule execution status.", 
                    "$ref": "#/definitions/execution_status"
                }, 
                "action_rule_reference": {
                    "$ref": "#/definitions/action_rule_reference"
                }, 
                "overall_status": {
                    "description": "The overall action_rule status after combining execution_status and\npost execution actions.\n", 
                    "$ref": "#/definitions/execution_status"
                }, 
                "execution_messages": {
                    "items": {
                        "pattern": "^[^&<>'/\"]*$", 
                        "type": "string", 
                        "maxLength": 2000
                    }, 
                    "type": "array", 
                    "description": "List of messages associated with rule execution."
                }, 
                "execution_start_time": {
                    "type": "string", 
                    "description": "The time the first action started execution.", 
                    "format": "date-time"
                }, 
                "post_execution_action_result_list": {
                    "items": {
                        "$ref": "#/definitions/action_result"
                    }, 
                    "type": "array", 
                    "description": "Ordered list of PAF action execution results."
                }, 
                "execution_plan": {
                    "description": "Plan for execution of action rule.", 
                    "$ref": "#/definitions/rule_execution_plan"
                }, 
                "trigger_info_list": {
                    "items": {
                        "$ref": "#/definitions/trigger_info"
                    }, 
                    "type": "array", 
                    "description": "The information about the triggers."
                }, 
                "execution_end_time": {
                    "type": "string", 
                    "description": "The time the last action finished execution.", 
                    "format": "date-time"
                }
            }, 
            "title": "Action rule result entity"
        }, 
        "ngt_policy_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ngt_policy", 
                    "x-ntnx-enum": [
                        "ngt_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for ngt_policy list"
        }, 
        "app_task_reference_upload": {
            "description": "The reference to a app_task", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_task", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_task"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_task"
        }, 
        "blueprint_launch_response_status": {
            "description": "Status of the Blueprint launch.", 
            "type": "object", 
            "properties": {
                "request_id": {
                    "type": "string", 
                    "description": "Request id to track the launch process"
                }
            }, 
            "title": "Status of the Blueprint launch."
        }, 
        "host_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "host", 
                    "x-ntnx-enum": [
                        "host"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for host list output"
        }, 
        "protection_rule_resources": {
            "description": "Protection rule encodes the overall topology of all the availability\nzones where the entity is replicated to. This encoding allows the system\nto figure out where the entity should be running in the case of one or\nmore availability zone failures.\n", 
            "required": [
                "ordered_availability_zone_list", 
                "availability_zone_connectivity_list"
            ], 
            "type": "object", 
            "properties": {
                "availability_zone_connectivity_list": {
                    "items": {
                        "type": "object", 
                        "properties": {
                            "destination_availability_zone_index": {
                                "type": "integer", 
                                "description": "Index of the availability zone in\nordered_availability_zone_list. This represents the\navailability zone where the entity needs to be replicated\nto. Index starts at 0.\n", 
                                "format": "int32"
                            }, 
                            "source_availability_zone_index": {
                                "type": "integer", 
                                "description": "Index of the availability zone in\nordered_availability_zone_list. This represents the source\navailability zone where the entity is running. Index starts\nat 0.\n", 
                                "format": "int32"
                            }, 
                            "snapshot_schedule_list": {
                                "items": {
                                    "required": [
                                        "recovery_point_objective_secs"
                                    ], 
                                    "type": "object", 
                                    "properties": {
                                        "recovery_point_objective_secs": {
                                            "type": "integer", 
                                            "description": "A recovery point objective (RPO) is the maximum\nacceptable amount of data loss. RPO is measured in\ntime (in seconds) and then dictates disaster recovery\nprocedures. For example, if the RPO is set to 30\nminutes, then a backup of the entity is required to\nbe done every 30 minutes.\n", 
                                            "format": "int32"
                                        }, 
                                        "local_snapshot_retention_policy": {
                                            "description": "The following describes the local snapshot retention\npolicy corresponding to the snapshot schedule.\n", 
                                            "$ref": "#/definitions/snapshot_retention_policy"
                                        }, 
                                        "auto_suspend_timeout_secs": {
                                            "type": "integer", 
                                            "description": "Auto suspend timeout in case of connection failure\nbetween the sites. If not set, then policy will not be\nsuspended in case of site connection failure.\n", 
                                            "format": "int32"
                                        }, 
                                        "snapshot_type": {
                                            "x-ntnx-enum": [
                                                "CRASH_CONSISTENT", 
                                                "APPLICATION_CONSISTENT"
                                            ], 
                                            "type": "string", 
                                            "description": "Crash consistent or Application Consistent snapshot\n"
                                        }, 
                                        "remote_snapshot_retention_policy": {
                                            "description": "The following describes the snapshot retention policy\nfor a given replication target availability zone.\n", 
                                            "$ref": "#/definitions/snapshot_retention_policy"
                                        }
                                    }
                                }, 
                                "type": "array", 
                                "description": "Snapshot schedules for the pair of the availability zones.\n"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "This encodes the datapipes between various availability zones and\nthe backup policy of the pipes. For example, [1, 2, 3600],\n[2, 3, 3600], [4, 5, 15000], [2, 6, 4200]. Note 2 here means\nthe entry at index 2 in the ordered_availability_zone_list.\nAnd 3600 is the RPO (Recovery Point Objective) in seconds between\nthe two availability zones.\n"
                }, 
                "start_time": {
                    "type": "string", 
                    "description": "Time of the day, the policy will be started. This is in \"<x>h:<y>m\"\nformat. The values must be between 00h:00m and 23h:59m. For example\nuser specified 18h:00m and the current time is 17h:00m then the first\nsnapshot will be captured at 18h:00m. If the current time is 19h:00m\nthen the first snapshot will be captured at 18h:00m next day. If not\nset, policy will be applicable immediately.\n"
                }, 
                "category_filter": {
                    "description": "Filters for entities to be included for protection.", 
                    "$ref": "#/definitions/category_filter"
                }, 
                "is_approval_policy_needed": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Manual deletion of recovery points created by this policy can be\ndriven through multi party authorization workflow. This means that\napprovals from multiple approvers will be required for the delete\noperation.\n"
                }, 
                "primary_location_list": {
                    "items": {
                        "type": "integer"
                    }, 
                    "type": "array", 
                    "description": "List of indexes in ordered_availability_zone_list, which constitutes\nthe primary locations of this Protection Rule. This field is\nmandatory if more than two Availability Zones are provided in the\npolicy.\n"
                }, 
                "ordered_availability_zone_list": {
                    "items": {
                        "type": "object", 
                        "properties": {
                            "cluster_uuid": {
                                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                "type": "string", 
                                "description": "UUID of specific cluster to which we will be replicating.\nThis need to set only if availability zone is of type PC.\nThis can only be specified if target type is AOS_CLUSTER.\nIf this field is set, recovery_point_repository_uuid should not\nbe specified.\n"
                            }, 
                            "recovery_point_repository_uuid": {
                                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                "type": "string", 
                                "description": "UUID of the repository (MST storage target) to which\nreplication will happen. If this field is set, cluster_uuid and\ncluster_uuid_list should not be specified. This field can be\nset only if target_type field is MST.\n"
                            }, 
                            "target_type": {
                                "x-ntnx-enum": [
                                    "AOS_CLUSTER", 
                                    "LTSS", 
                                    "MST"
                                ], 
                                "type": "string", 
                                "description": "Target type for replication."
                            }, 
                            "cluster_uuid_list": {
                                "items": {
                                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                                    "type": "string"
                                }, 
                                "type": "array", 
                                "description": "List of cluster UUIDs which are source or target for\nreplication. This should be set only if the availability zone\nis of type PC. If this field is set,\nrecovery_point_repository_uuid should not be specified.\n"
                            }, 
                            "availability_zone_url": {
                                "type": "string", 
                                "description": "The FQDN or IP address of the availability zone. Every\nPrism Central deployment acts as an availability zone.\n"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "A list of availability zones, each of which, receives a replica\nof the data for the entities protected by this protection rule.\nThe order of the availability zones in the list determines the\npreference order (highest to lowest) for the entity to run in the\ncase of failure of one or more availability zones. For example,\nif this list is [A, B, C, D], then the entity will prefer to run\non A unless A has failed, in which case, the entity will run on\nthe second choice, B. Failover of the entity is not automatic but\nthis information is used by DR runbook to failover an entity to\nthe desired availability zone.\n"
                }
            }, 
            "title": "Protection Rule resources"
        }, 
        "virtual_network_intent_resource": {
            "description": "Response object for intentful operations on a virtual_network", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/virtual_network_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/virtual_network"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/virtual_network_metadata"
                }
            }, 
            "title": "virtual_network Intent Response"
        }, 
        "app_custom_intent_input": {
            "description": "An intentful representation of an app", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/app"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/app_metadata"
                }
            }, 
            "title": "app Intent Entity"
        }, 
        "groups_sort_order": {
            "x-ntnx-enum": [
                "ASCENDING", 
                "DESCENDING"
            ], 
            "type": "string", 
            "description": "Sort order for entities and entity groups.", 
            "title": "Entities Request Sort Order"
        }, 
        "report_config_intent_response": {
            "description": "Response object for intentful operations on a report_config", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/report_config_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/report_config"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/report_config_metadata"
                }
            }, 
            "title": "report_config Intent Response"
        }, 
        "routing_policy_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "routing_policy", 
                    "x-ntnx-enum": [
                        "routing_policy"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for routing_policy list"
        }, 
        "rack_config": {
            "description": "Map of rack's name to the hosts it contains. The rack may or may not exist in the cluster yet.\n", 
            "type": "object", 
            "properties": {
                "host_list": {
                    "items": {
                        "$ref": "#/definitions/host_reference"
                    }, 
                    "type": "array"
                }, 
                "rack_name": {
                    "type": "string", 
                    "maxLength": 64
                }
            }, 
            "title": "Rack Config"
        }, 
        "protection_rule_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "protection_rule", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "protection_rule"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "blackout_intent_response": {
            "description": "Response object for intentful operations on a blackout", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/blackout_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/blackout"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blackout_metadata"
                }
            }, 
            "title": "blackout Intent Response"
        }, 
        "tenant": {
            "description": "Tenant definition.", 
            "required": [
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "idp_tenant_identifier": {
                    "type": "string", 
                    "description": "IDP Tenant Identifier.", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the tenant."
                }, 
                "name": {
                    "type": "string", 
                    "description": "name of the tenant.", 
                    "maxLength": 64
                }
            }, 
            "title": "Tenant definition."
        }, 
        "recovery_plan_stage": {
            "description": "A stage specifies the work to be performed when the Recovery Plan is executed. A stage work can be execute an user script or recover entities in case of failover. If there are multiple entities to recover in a stage, all of them will be recovered in parallel.\n", 
            "required": [
                "stage_work"
            ], 
            "type": "object", 
            "properties": {
                "stage_work": {
                    "description": "Information about work to be performed as part of this stage on execution. Only one of recover_entities or script has to be provided.\n", 
                    "type": "object", 
                    "x-ntnx-one-of": [
                        {
                            "required": [
                                "recover_entities"
                            ]
                        }
                    ], 
                    "properties": {
                        "recover_entities": {
                            "description": "Information about entities to be recovered. This can be either explicit entity list or entity filter to identify list of entities to be recovered.\n", 
                            "$ref": "#/definitions/recover_entities"
                        }
                    }
                }, 
                "stage_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of stage.", 
                    "format": "UUID"
                }, 
                "delay_time_secs": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Amount of time in seconds to delay the execution of next stage after execution of current stage.\n", 
                    "format": "int64"
                }
            }, 
            "title": "Information about a stage in the Recovery Plan"
        }, 
        "app_runlog_output": {
            "description": "Response of app runlog response output", 
            "type": "object", 
            "properties": {
                "trl_id": {
                    "type": "string"
                }, 
                "output": {
                    "type": "string"
                }
            }, 
            "title": "Response of app runlog result output"
        }, 
        "route": {
            "description": "Route directing network traffic through a link to another site or the\nInternet.\n", 
            "required": [
                "destination", 
                "nexthop"
            ], 
            "type": "object", 
            "properties": {
                "nexthop": {
                    "$ref": "#/definitions/route_nexthop_reference"
                }, 
                "destination": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\/(\\d|[1-2]\\d|3[0-2]))$", 
                    "type": "string"
                }
            }, 
            "title": "Route"
        }, 
        "action_rule": {
            "description": "Action rule entity definition", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/action_rule_resources"
                }
            }, 
            "title": "Action rule entity"
        }, 
        "category_value_list_response": {
            "description": "Category Value list response.", 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/category_value_status"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/category_list_metadata"
                }
            }, 
            "title": "Category value list response."
        }, 
        "layer2_stretch_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "layer2_stretch", 
                    "x-ntnx-enum": [
                        "layer2_stretch"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for layer2_stretch list output"
        }, 
        "volume_group_def_status": {
            "description": "Volume group configuration.", 
            "required": [
                "resources", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "Volume group description."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the volume group entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/volume_group_resources_output"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Volume group name."
                }
            }, 
            "title": "Volume group configuration"
        }, 
        "log_collector_support_case_upload": {
            "description": "Log Collector object.", 
            "type": "object", 
            "properties": {
                "start_time": {
                    "type": "string", 
                    "description": "Start time of the schedule.\nThe time should be specified in this manner.\ndate-fullyear(4digit) \"-\" date-month(2digit) \"-\" date-mday(2digit) \"T\" time-hour(2digit)\n\":\" time-minute(2digit) \":\" time-second(2digit) [.] \"Z\"  or\n(\"+\" / \"-\") time-hour(2digit) \":\" time-minute(2digit)\nExamples\n- 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of\n  April 12th, 1985 in UTC.\n- 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour\n  of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).\n  Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.\n", 
                    "format": "date-time"
                }, 
                "anonymize_output": {
                    "type": "boolean", 
                    "description": "Flag for anonymized log collection."
                }, 
                "end_time": {
                    "type": "string", 
                    "description": "End time of the schedule.\nThe time should be specified in this manner.\ndate-fullyear(4digit) \"-\" date-month(2digit) \"-\" date-mday(2digit) \"T\" time-hour(2digit)\n\":\" time-minute(2digit) \":\" time-second(2digit) [.] \"Z\"  or\n(\"+\" / \"-\") time-hour(2digit) \":\" time-minute(2digit)\nExamples\n- 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of\n  April 12th, 1985 in UTC.\n- 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour\n  of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).\n  Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.\n", 
                    "format": "date-time"
                }, 
                "num_hours": {
                    "type": "integer", 
                    "description": "Number of hours for which log has to be collected. Starts from current time - no_of_hours till current time.", 
                    "format": "int32"
                }
            }, 
            "title": "Log Collector object."
        }, 
        "datacenter_metadata": {
            "description": "The datacenter kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when datacenter was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "datacenter", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "datacenter"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "datacenter uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the datacenter is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when datacenter was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the datacenter. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the datacenter. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "datacenter name", 
                    "maxLength": 80
                }
            }, 
            "title": "datacenter metadata"
        }, 
        "batch_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "batch", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "batch"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "gcp_list_metadata": {
            "description": "All GCP list calls will have this metadata block as input", 
            "type": "object", 
            "properties": {
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for GCP list calls"
        }, 
        "network_function_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_function", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_function"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "aws_vm_reference": {
            "description": "The reference to a aws_vm", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_vm", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_vm"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a aws_vm"
        }, 
        "recovery_plan_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "recovery_plan", 
                    "x-ntnx-enum": [
                        "recovery_plan"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for recovery_plan list output"
        }, 
        "aws_image_metadata": {
            "description": "The aws_image kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_image was last updated\n", 
                    "format": "date-time"
                }, 
                "kind": {
                    "default": "aws_image", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_image"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "aws_image uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the aws_image is in", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_image was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the aws_image"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "aws_image name"
                }
            }, 
            "title": "aws_image metadata"
        }, 
        "vm_spec_output": {
            "description": "VM spec generated from an OVA that can be used to create a VM.\n", 
            "type": "object", 
            "properties": {
                "vm_spec": {
                    "$ref": "#/definitions/vm_intent_input"
                }, 
                "warnings": {
                    "items": {
                        "$ref": "#/definitions/vm_spec_warning"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "VM spec generated from an OVA"
        }, 
        "app_list_intent_response": {
            "description": "Response object for intentful operation of apps", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/app_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/app_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "entity_spec": {
            "properties": {
                "volume_spec": {
                    "description": "Volume config specification.", 
                    "$ref": "#/definitions/volume_spec"
                }, 
                "vm_spec": {
                    "description": "VM config specification.", 
                    "$ref": "#/definitions/vm_spec"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "vm_spec"
                    ]
                }, 
                {
                    "required": [
                        "volume_spec"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Specification of the entities which need to be placed.", 
            "title": "Entity specs"
        }, 
        "vswitch_config": {
            "description": "VSwitch configuration.", 
            "required": [
                "nic_teaming_policy", 
                "uplink_grouping"
            ], 
            "type": "object", 
            "properties": {
                "nic_teaming_policy": {
                    "x-ntnx-enum": [
                        "ACTIVE_BACKUP", 
                        "BALANCE_SLB", 
                        "BALANCE_TCP"
                    ], 
                    "type": "string", 
                    "description": "NIC teaming policy."
                }, 
                "uplink_grouping": {
                    "x-ntnx-enum": [
                        "NO_UPLINKS", 
                        "ALL", 
                        "ALL_1G", 
                        "ALL_10G", 
                        "ALL_25G", 
                        "ALL_40G", 
                        "ALL_100G"
                    ], 
                    "type": "string", 
                    "description": "Determines how the ethernet uplinks are selected for this vswitch."
                }
            }, 
            "title": "VSwitch configuration"
        }, 
        "remote_syslog_server_def_status": {
            "description": "Remote Syslog server configured on PC.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/syslog_server_resources"
                }
            }, 
            "title": "Remote Syslog server configured on PC."
        }, 
        "volume_group": {
            "description": "Volume group input spec.", 
            "required": [
                "resources", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Volume group name.", 
                    "maxLength": 256
                }, 
                "description": {
                    "type": "string", 
                    "description": "Volume group description.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/volume_group_resources_input"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "Volume group object"
        }, 
        "subnet_resources": {
            "description": "Subnet creation/modification spec.", 
            "required": [
                "subnet_type"
            ], 
            "type": "object", 
            "properties": {
                "subnet_type": {
                    "x-ntnx-enum": [
                        "VLAN", 
                        "OVERLAY"
                    ], 
                    "type": "string"
                }, 
                "vpc_reference": {
                    "description": "The VPC this subnet belongs to (Only supported on Xi).\n", 
                    "$ref": "#/definitions/vpc_reference"
                }, 
                "virtual_switch_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Reference to virtual switch", 
                    "format": "UUID"
                }, 
                "is_external": {
                    "type": "boolean", 
                    "description": "Whether the subnet is external subnet or not."
                }, 
                "vswitch_name": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "network_function_chain_reference": {
                    "$ref": "#/definitions/network_function_chain_reference"
                }, 
                "reserved_ip_address_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of IPs that are not considered while allocating IP addresses to Atlas ports.\n"
                }, 
                "availability_zone_reference_list": {
                    "items": {
                        "$ref": "#/definitions/availability_zone_reference"
                    }, 
                    "type": "array", 
                    "description": "List of availability zones from which resources are derived (Only supported on Xi).\n"
                }, 
                "advanced_networking": {
                    "type": "boolean", 
                    "description": "Whether the subnet should be realized on OVN stack or not."
                }, 
                "ip_config": {
                    "$ref": "#/definitions/ip_config"
                }, 
                "enable_nat": {
                    "type": "boolean", 
                    "description": "Whether NAT should be performed for VPCs attaching to the subnet. This field is supported only for external subnets. NAT is enabled by default on external subnets.\n"
                }, 
                "external_connectivity_state": {
                    "x-ntnx-enum": [
                        "ENABLED", 
                        "DISABLED"
                    ], 
                    "type": "string", 
                    "description": "External connectivity state (Only supported on Xi)"
                }, 
                "vlan_id": {
                    "minimum": 0, 
                    "type": "integer", 
                    "format": "int32"
                }, 
                "virtual_network_reference": {
                    "description": "The virtual network this subnet belongs to (Only supported on Xi). This reference is deprecated, use vpc_reference instead.\n", 
                    "$ref": "#/definitions/virtual_network_reference"
                }
            }, 
            "title": "Subnet creation/modification spec"
        }, 
        "udp": {
            "description": "UDP parameters to be matched in routing policy", 
            "type": "object", 
            "properties": {
                "destination_port_range_list": {
                    "items": {
                        "$ref": "#/definitions/port_range"
                    }, 
                    "type": "array", 
                    "description": "List of ranges of UDP destination ports."
                }, 
                "source_port_range": {
                    "description": "Range of UDP source ports. This field is deprecated, use source_port_range_list instead.\n", 
                    "$ref": "#/definitions/port_range"
                }, 
                "source_port_range_list": {
                    "items": {
                        "$ref": "#/definitions/port_range"
                    }, 
                    "type": "array", 
                    "description": "List of ranges of UDP source ports."
                }, 
                "destination_port_range": {
                    "description": "Range of UDP destination ports. This field is deprecated, use destination_port_range_list instead.\n", 
                    "$ref": "#/definitions/port_range"
                }
            }, 
            "title": "UDP parameters"
        }, 
        "datacenter_component": {
            "description": "Common properties for node or a network device in datacenters\n", 
            "type": "object", 
            "properties": {
                "rack_unit_height": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "rack unit height", 
                    "format": "int32"
                }, 
                "management_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "management IP address"
                }, 
                "management_mac_address": {
                    "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$", 
                    "type": "string", 
                    "description": "management mac address", 
                    "x-example": "50:6b:8d:ee:de:2b"
                }, 
                "rack_unit_position": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "rack unit position", 
                    "format": "int32"
                }, 
                "installation_time": {
                    "type": "string", 
                    "description": "installation date time", 
                    "format": "date-time"
                }
            }, 
            "title": "Hardware component"
        }, 
        "aws_security_group_list_intent_response": {
            "description": "AWS VPC entity list.", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/aws_security_group_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/aws_security_group_list_metadata_output"
                }
            }, 
            "title": "aws_security_group entity list"
        }, 
        "service_group_response": {
            "description": "Service group response object for GET calls. This can have an associated policies list in the future.", 
            "type": "object", 
            "properties": {
                "service_group": {
                    "$ref": "#/definitions/service_group"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Service group response"
        }, 
        "vm_host_affinity_policy_list_response": {
            "description": "Response object for list operation of VM Host Affinity Policy.", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/vm_host_affinity_policy_get_response"
                    }, 
                    "type": "array"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_host_affinity_policy_list_metadata_output"
                }
            }, 
            "title": "VM Host Affinity Policy list response"
        }, 
        "network_device_def_status": {
            "description": "Network device entity status definition", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "An optional name for the device", 
                    "maxLength": 50
                }, 
                "resources": {
                    "$ref": "#/definitions/network_device_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "An optional description for the device", 
                    "maxLength": 1000
                }
            }, 
            "title": "Network device Entity Status"
        }, 
        "app_substrate_input_upload": {
            "description": "Substrate definition", 
            "required": [
                "name", 
                "type", 
                "variable_list", 
                "action_list"
            ], 
            "type": "object", 
            "properties": {
                "platform_data": {
                    "type": "string", 
                    "description": ""
                }, 
                "instance_address": {
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_input_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "instance_id": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "instance_name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "readiness_probe": {
                    "$ref": "#/definitions/app_substrate_readiness_probe_upload"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "config_reference": {
                    "$ref": "#/definitions/app_substrate_reference_upload"
                }, 
                "os_type": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "VM", 
                        "AHV_VM", 
                        "AWS_VM", 
                        "GCP_VM", 
                        "AZURE_VM", 
                        "EXISTING_VM", 
                        "BARE_METAL", 
                        "GENERIC", 
                        "VMWARE_VM", 
                        "K8S_POD"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "create_spec": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Spec of the substrate"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_input_upload"
                    }, 
                    "type": "array", 
                    "description": "List of variables"
                }, 
                "instance_power_state": {
                    "type": "string", 
                    "description": ""
                }
            }, 
            "title": "Substrate definition"
        }, 
        "ipfix_exporter": {
            "description": "Inputs to configure IPFIX exporter .", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/ipfix_exporter_resources"
                }
            }, 
            "title": "IPFIX exporter configuration."
        }, 
        "disk_intent_input": {
            "description": "An intentful representation of a disk", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/disk"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/disk_metadata"
                }
            }, 
            "title": "disk Intent Entity"
        }, 
        "pool_stats": {
            "description": "IP pool usage stats.", 
            "type": "object", 
            "properties": {
                "num_total_ips": {
                    "type": "integer", 
                    "description": "Number of total IPs in the pool.", 
                    "format": "int32"
                }, 
                "range": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[ ](?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Range of IPs (example: 10.0.0.9 10.0.0.19).\n"
                }, 
                "num_free_ips": {
                    "type": "integer", 
                    "description": "Number of free IPs in the pool.", 
                    "format": "int32"
                }
            }, 
            "title": "IP pool usage stats"
        }, 
        "topology_request": {
            "description": "Topology request.", 
            "type": "object", 
            "properties": {
                "enable_one_hop_traffic": {
                    "type": "boolean", 
                    "description": "Toggle to view one hop traffic"
                }, 
                "filter_criteria": {
                    "type": "string", 
                    "description": "FIQL filter criteria that will be used to form the filter field for the backend queries.\n"
                }, 
                "interval_end_ms": {
                    "type": "integer", 
                    "description": "For a time-series query, the end of the interval since epoch in ms.\n", 
                    "format": "int64"
                }, 
                "interval_start_ms": {
                    "type": "integer", 
                    "description": "For a time-series query, the start of the interval since epoch in ms.\n", 
                    "format": "int64"
                }, 
                "group_by": {
                    "type": "string", 
                    "description": "GroupBy field"
                }
            }, 
            "title": "Topology Request"
        }, 
        "streaming_policy_intent_input": {
            "description": "An intentful representation of a streaming_policy", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/streaming_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/streaming_policy_metadata"
                }
            }, 
            "title": "streaming_policy Intent Entity"
        }, 
        "identity_provider_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "identity_provider", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "identity_provider"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "recovery_plan_floating_ip_config": {
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IP to be assigned to VM, in case of failover.\n"
                }, 
                "should_allocate_dynamically": {
                    "type": "boolean", 
                    "description": "Whether to allocate the floating IPs for the VMs dynamically.\n"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "ip"
                    ]
                }, 
                {
                    "required": [
                        "should_allocate_dynamically"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Configuration for assigning floating IP to a VM on the execution of the Recovery Plan.\n", 
            "title": "Floating IP configuration for a VM\n"
        }, 
        "availability_zone_intent_response": {
            "description": "Response object for intentful operations on a availability_zone", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/availability_zone_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/availability_zone"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/availability_zone_metadata"
                }
            }, 
            "title": "availability_zone Intent Response"
        }, 
        "remote_connection_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_connection", 
                    "x-ntnx-enum": [
                        "remote_connection"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for remote_connection list"
        }, 
        "cloud_trust_metadata": {
            "description": "The cloud_trust kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when cloud_trust was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "cloud_trust", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cloud_trust"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "cloud_trust uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the cloud_trust is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when cloud_trust was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the cloud_trust. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the cloud_trust. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "cloud_trust name", 
                    "maxLength": 80
                }
            }, 
            "title": "cloud_trust metadata"
        }, 
        "aws_role_def_status": {
            "description": "aws_role resources status", 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string"
                }, 
                "name": {
                    "type": "string", 
                    "description": "aws_role name."
                }, 
                "resources": {
                    "$ref": "#/definitions/aws_role_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for aws_role."
                }
            }, 
            "title": "aws_role resources status"
        }, 
        "cluster_synchronous_replication_capable_response": {
            "items": {
                "type": "object", 
                "description": "Source cluster to given remote cluster latency.", 
                "properties": {
                    "rtt_msecs": {
                        "type": "string", 
                        "description": "Round trip time in milliseconds."
                    }, 
                    "cluster_reference": {
                        "$ref": "#/definitions/cluster_reference"
                    }
                }
            }, 
            "type": "array", 
            "description": "Response object for the API to check if a remote cluster is capable of\nsynchronous replication.\n", 
            "title": "Response schmea for synchronous_replication_capable API."
        }, 
        "vm_workload": {
            "description": "VM workload Object.", 
            "type": "object", 
            "properties": {
                "num_vms": {
                    "type": "integer"
                }, 
                "resource_spec": {
                    "$ref": "#/definitions/vm_resource_spec"
                }
            }, 
            "title": "VM workload Definition"
        }, 
        "support_case_intent_resource": {
            "description": "Response object for intentful operations on a support_case", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/support_case_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/support_case"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/support_case_metadata"
                }
            }, 
            "title": "support_case Intent Response"
        }, 
        "image_resources": {
            "description": "Describes the image spec resources object.", 
            "type": "object", 
            "properties": {
                "image_type": {
                    "$ref": "#/definitions/image_type"
                }, 
                "checksum": {
                    "description": "Checksum of the image. The checksum is used for image validation if the image has a source specified. For images that do not have their source specified the checksum is generated by the image service.\n", 
                    "$ref": "#/definitions/checksum"
                }, 
                "source_uri": {
                    "type": "string", 
                    "description": "The source URI points at the location of a the source image which is used to create/update image.\n"
                }, 
                "initial_placement_ref_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_image_reference"
                    }, 
                    "type": "array", 
                    "description": "List of clusters where image is requested to be placed at time of creation. This argument will not be honored at time of update.\n"
                }, 
                "version": {
                    "description": "The image version", 
                    "$ref": "#/definitions/image_version_resources"
                }, 
                "architecture": {
                    "description": "Indicates the CPU architecture that the image is compatible with. If this is not specified for an image this will default to the CPU architecture type of the cluster.\n", 
                    "$ref": "#/definitions/image_architecture"
                }, 
                "data_source_reference": {
                    "description": "Reference to VM disk. The expected kind for VMs Disk is vm_disk. The uuid should be the disk device uuid, where the disk device is from disk_list from VM status.\n", 
                    "$ref": "#/definitions/reference"
                }, 
                "source_options": {
                    "$ref": "#/definitions/source_options"
                }
            }, 
            "title": "Image spec resources"
        }, 
        "blueprint_download_resources_def_status": {
            "description": "Status of the Blueprint.", 
            "type": "object", 
            "properties": {
                "client_attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Data needed for clients."
                }, 
                "service_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_response_download"
                    }, 
                    "type": "array", 
                    "description": "Service definitions for Blueprint."
                }, 
                "substrate_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_substrate_response_download"
                    }, 
                    "type": "array", 
                    "description": "Substrate definitions for Blueprint."
                }, 
                "credential_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_credential_response_download"
                    }, 
                    "type": "array", 
                    "description": "Credential definitions for Blueprint."
                }, 
                "package_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_response_download"
                    }, 
                    "type": "array", 
                    "description": "Package definitions for Blueprint."
                }, 
                "app_profile_list": {
                    "items": {
                        "$ref": "#/definitions/app_profile_response_download"
                    }, 
                    "type": "array", 
                    "description": "App profile definitions for Blueprint."
                }, 
                "published_service_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_response_download"
                    }, 
                    "type": "array", 
                    "description": "Published service definitions for Blueprint."
                }, 
                "default_credential_local_reference": {
                    "$ref": "#/definitions/app_credential_reference_upload"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of blueprint", 
                    "maxLength": 64
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for app blueprint"
                }, 
                "is_cloned": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Cloned or original blueprint"
                }
            }, 
            "title": "Status of the Blueprint."
        }, 
        "groups_aggregation_function": {
            "x-ntnx-enum": [
                "SUM", 
                "AVG", 
                "MIN", 
                "MAX", 
                "LAST", 
                "COUNT", 
                "BUCKETS"
            ], 
            "type": "string", 
            "description": "Downsampling function to take time series data and resolve to one value for aggregation purposes.\n", 
            "title": "Entities Request Aggregation Function"
        }, 
        "route_nexthop_status": {
            "properties": {
                "direct_connect_virtual_interface_reference": {
                    "$ref": "#/definitions/direct_connect_virtual_interface_reference"
                }, 
                "external_subnet_reference": {
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "nexthop_ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Nexthop IP address of this route."
                }, 
                "local_subnet_reference": {
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "vpn_connection_reference": {
                    "$ref": "#/definitions/vpn_connection_reference"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "vpn_connection_reference"
                    ]
                }, 
                {
                    "required": [
                        "direct_connect_virtual_interface_reference"
                    ]
                }, 
                {
                    "required": [
                        "local_subnet_reference"
                    ]
                }, 
                {
                    "required": [
                        "external_subnet_reference"
                    ]
                }, 
                {
                    "required": [
                        "nexthop_ip_address"
                    ]
                }
            ], 
            "description": "Targeted link being used as the nexthop in a route.", 
            "title": "Route nexthop status"
        }, 
        "oauth_client_list": {
            "description": "Oauth Client list", 
            "required": [
                "metadata", 
                "entities"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/oauth_client_response"
                    }, 
                    "type": "array"
                }, 
                "metadata": {
                    "$ref": "#/definitions/oauth_client_list_metadata"
                }
            }, 
            "title": "Oauth Client list"
        }, 
        "network_function_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_function", 
                    "x-ntnx-enum": [
                        "network_function"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for network_function list"
        }, 
        "vm_storage_config_status": {
            "description": "Current state of storage configuration parameters.", 
            "type": "object", 
            "properties": {
                "qos_policy": {
                    "description": "Storage QoS parameters applied on the VM.", 
                    "$ref": "#/definitions/storage_qos_policy_config_output"
                }, 
                "flash_mode": {
                    "description": "Indicates whether Flash Mode is enabled or disabled on the VM.\nWhen enabled, virtual disks of VM are pinned to the hot tier.\n", 
                    "$ref": "#/definitions/flash_mode"
                }
            }, 
            "title": "VM Storage Config output"
        }, 
        "protocol_parameters": {
            "properties": {
                "udp": {
                    "description": "UDP parameters to be matched", 
                    "$ref": "#/definitions/udp"
                }, 
                "icmp": {
                    "description": "ICMP parameters to be matched", 
                    "$ref": "#/definitions/icmp"
                }, 
                "protocol_number": {
                    "minimum": 0, 
                    "type": "integer", 
                    "maximum": 255, 
                    "format": "uint8"
                }, 
                "tcp": {
                    "description": "TCP parameters to be matched", 
                    "$ref": "#/definitions/tcp"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "tcp"
                    ]
                }, 
                {
                    "required": [
                        "udp"
                    ]
                }, 
                {
                    "required": [
                        "icmp"
                    ]
                }, 
                {
                    "required": [
                        "protocol_number"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Routing policy IP protocol parameters", 
            "title": "IP protocol"
        }, 
        "streaming_policy_details": {
            "description": "Streaming Policy details", 
            "required": [
                "sql_query"
            ], 
            "type": "object", 
            "properties": {
                "is_enabled": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "If policy is enabled"
                }, 
                "window_duration": {
                    "default": "FIVE_MINUTES", 
                    "x-ntnx-enum": [
                        "THIRTY_SECONDS", 
                        "ONE_MINUTE", 
                        "FIVE_MINUTES", 
                        "TEN_MINUTES", 
                        "THIRTY_MINUTES", 
                        "ONE_HOUR", 
                        "TWO_HOURS"
                    ], 
                    "type": "string", 
                    "description": "Time window on which policy needs to be applied"
                }, 
                "execution_frequency": {
                    "default": "FIVE_MINUTES", 
                    "x-ntnx-enum": [
                        "THIRTY_SECONDS", 
                        "ONE_MINUTE", 
                        "FIVE_MINUTES", 
                        "TEN_MINUTES", 
                        "THIRTY_MINUTES", 
                        "ONE_HOUR", 
                        "TWO_HOURS"
                    ], 
                    "type": "string", 
                    "description": "How often policy needs to be evaluated"
                }, 
                "sql_query": {
                    "type": "string", 
                    "description": "Policy as SQL string"
                }
            }, 
            "title": "Streaming Policy details"
        }, 
        "placement_spec": {
            "properties": {
                "cerebro_features_list": {
                    "items": {
                        "type": "integer"
                    }, 
                    "type": "array", 
                    "description": "List of Cerebro features. Each value represents a feature present in\nCerebroFeatures enum. If specified, cluster which support given\nfeatures will be returned.\n"
                }, 
                "entity_spec_list": {
                    "items": {
                        "$ref": "#/definitions/entity_spec"
                    }, 
                    "type": "array", 
                    "description": "List of entity specs."
                }, 
                "hypervisor_type": {
                    "x-ntnx-enum": [
                        "ESX", 
                        "AHV", 
                        "HYPERV"
                    ], 
                    "type": "string", 
                    "description": "Preferred hypervisor type for the entities.\n"
                }, 
                "exclude_cluster_uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "List of UUIDs of the clusters which have to be excluded while\nauto selecting a target cluster for replication.\n"
                }, 
                "preferred_cluster_uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "List of uuids of the cluster which are preferred to be the\nreplication target.\n"
                }, 
                "preferred_cluster_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Uuid of the cluster which is preferred to be the replication target.\n", 
                    "format": "UUID"
                }, 
                "storage_target_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the MST storage target to which replication will happen.\n", 
                    "format": "UUID"
                }, 
                "replication_type": {
                    "x-ntnx-enum": [
                        "ASYNCHRONOUS", 
                        "SYNCHRONOUS"
                    ], 
                    "type": "string", 
                    "description": "Type of the replication. It can be asynchronous or synchronous.\n"
                }, 
                "operation_type": {
                    "x-ntnx-enum": [
                        "REPLICATION", 
                        "MIGRATION"
                    ], 
                    "type": "string", 
                    "description": "Operation to be performed for entities."
                }, 
                "source_availability_zone_url": {
                    "type": "string", 
                    "description": "URL of the source availability zone. Based on this, the mapped load\nbalancer ip address and port of the replication target will be\nreturned.\n"
                }, 
                "tenant_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the tenant.", 
                    "format": "UUID"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "entity_spec_list", 
                        "tenant_uuid", 
                        "hypervisor_type", 
                        "operation_type", 
                        "source_availability_zone_url"
                    ]
                }, 
                {
                    "required": [
                        "preferred_cluster_uuid", 
                        "source_availability_zone_url"
                    ]
                }, 
                {
                    "required": [
                        "storage_target_uuid"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Entity placement spec.", 
            "title": "Entity placement spec"
        }, 
        "remote_syslog_server_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_syslog_server", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "remote_syslog_server"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "category_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "category", 
                    "x-ntnx-enum": [
                        "category"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for category list"
        }, 
        "aws_key_pair_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_key_pair", 
                    "x-ntnx-enum": [
                        "aws_key_pair"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for aws_key_pair list output"
        }, 
        "app_variable_input_upload": {
            "description": "Variable definition for application.", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "val_type": {
                    "x-ntnx-enum": [
                        "STRING", 
                        "INT", 
                        "LIST", 
                        "DICT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "value": {
                    "type": "string", 
                    "description": ""
                }, 
                "label": {
                    "type": "string", 
                    "description": ""
                }, 
                "attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "LOCAL", 
                        "SECRET", 
                        "EXTERNAL_STORE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Variable definition for application."
        }, 
        "network_device_intent_response": {
            "description": "Response object for intentful operations on a network_device", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/network_device_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/network_device"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/network_device_metadata"
                }
            }, 
            "title": "network_device Intent Response"
        }, 
        "app_credential_response": {
            "description": "Credential definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "type", 
                "username", 
                "secret"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "secret": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Credential secret object"
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "PASSWORD", 
                        "KEY"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "passphrase": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Credential passphrase object associated with the provided key"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }
            }, 
            "title": "Credential for Application"
        }, 
        "routing_policy_action_status": {
            "description": "Routing policy action", 
            "required": [
                "action"
            ], 
            "type": "object", 
            "properties": {
                "nexthop_ip_address": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IP addresses to which traffic should be forwarded. This field is valid only when action is FORWARD.\n"
                }, 
                "egress_service_ip_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string", 
                        "description": "device outgoing IP address"
                    }, 
                    "minimum": 0, 
                    "type": "array", 
                    "description": "IP address of the outgoing interface of network service in the chain. This field is valid only when action is REROUTE. Specify either only this and 'ingress_service_ip_list' or 'service_ip_list' field.", 
                    "maximum": 1
                }, 
                "reroute_fallback": {
                    "x-ntnx-enum": [
                        "PASSTHROUGH", 
                        "DROP", 
                        "ALLOW", 
                        "NO_ACTION"
                    ], 
                    "type": "string", 
                    "description": "Flag denoting reroute fallback action when service VM is down. This field is valid only when action is REROUTE. Default reroute fallback action is PASSTHROUGH.\n"
                }, 
                "service_ip_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string", 
                        "description": "device IP address"
                    }, 
                    "type": "array", 
                    "description": "IP addresses of network services in the chain.> This field is valid only when action is REROUTE."
                }, 
                "action": {
                    "x-ntnx-enum": [
                        "PERMIT", 
                        "DENY", 
                        "REROUTE", 
                        "FORWARD"
                    ], 
                    "type": "string"
                }, 
                "ingress_service_ip_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string", 
                        "description": "device incoming IP address"
                    }, 
                    "minimum": 0, 
                    "type": "array", 
                    "description": "IP address of the incoming interface of network service in the chain. This field is valid only when action is REROUTE. Specify either only this and 'egress_service_ip_list' or 'service_ip_list' field.", 
                    "maximum": 1
                }
            }, 
            "title": "Action"
        }, 
        "widget_config": {
            "description": "Configuration of the widget.", 
            "required": [
                "widget_type"
            ], 
            "type": "object", 
            "properties": {
                "widget_field_list": {
                    "items": {
                        "$ref": "#/definitions/widget_field_descriptor"
                    }, 
                    "type": "array", 
                    "description": "List of selected fields for the widget."
                }, 
                "entity_type": {
                    "type": "string", 
                    "description": "Type of the entity."
                }, 
                "repetition_criteria": {
                    "$ref": "#/definitions/repetition_criteria"
                }, 
                "widget_data_projection": {
                    "$ref": "#/definitions/widget_data_projection"
                }, 
                "widget_description": {
                    "type": "string", 
                    "description": "Description of the entity.", 
                    "maxLength": 1000
                }, 
                "widget_type": {
                    "type": "string", 
                    "description": "Type of widget. Widget type can be one of these.\n  - bar_chart\n  - config_summary\n  - count_summary\n  - line_chart\n  - metric_summary_chart\n  - metric_summary_text\n  - table\n  - text\n"
                }, 
                "widget_size": {
                    "x-ntnx-enum": [
                        "SMALL", 
                        "LARGE", 
                        "FULLSPAN"
                    ], 
                    "type": "string", 
                    "description": "Size of the widget."
                }, 
                "widget_heading": {
                    "type": "string", 
                    "description": "Heading for a widget.", 
                    "maxLength": 64
                }
            }, 
            "title": "Configuration of the widget."
        }, 
        "cluster_synchronous_replication_capable_input": {
            "description": "Input object for API to check if a remote cluster is capable of\nsynchronous replication.\n", 
            "required": [
                "remote_cluster_reference", 
                "remote_availability_zone_reference"
            ], 
            "type": "object", 
            "properties": {
                "source_cluster_reference_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_reference"
                    }, 
                    "type": "array"
                }, 
                "remote_availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "remote_cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "Input schmea for synchronous_replication_capable API."
        }, 
        "app_runlog_reference": {
            "description": "The reference to a app_runlog", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_runlog", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_runlog"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_runlog"
        }, 
        "aws_volume_type_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_volume_type", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_volume_type"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "ssl_key": {
            "description": "SSL certificate.", 
            "required": [
                "key_type"
            ], 
            "type": "object", 
            "properties": {
                "key_type": {
                    "$ref": "#/definitions/ssl_key_type"
                }, 
                "key_name": {
                    "type": "string"
                }, 
                "signing_info": {
                    "$ref": "#/definitions/certification_signing_info"
                }, 
                "expire_datetime": {
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when the key expires", 
                    "format": "date-time"
                }
            }, 
            "title": "SSL certificate"
        }, 
        "rackable_unit_intent_input": {
            "description": "An intentful representation of a rackable_unit", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/rackable_unit"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/rackable_unit_metadata"
                }
            }, 
            "title": "rackable_unit Intent Entity"
        }, 
        "protocol_parameters_status": {
            "properties": {
                "udp": {
                    "description": "UDP parameters to be matched", 
                    "$ref": "#/definitions/udp_status"
                }, 
                "icmp": {
                    "description": "ICMP parameters to be matched", 
                    "$ref": "#/definitions/icmp_status"
                }, 
                "protocol_number": {
                    "type": "integer", 
                    "format": "uint8"
                }, 
                "tcp": {
                    "description": "TCP parameters to be matched", 
                    "$ref": "#/definitions/tcp_status"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "tcp"
                    ]
                }, 
                {
                    "required": [
                        "udp"
                    ]
                }, 
                {
                    "required": [
                        "icmp"
                    ]
                }, 
                {
                    "required": [
                        "protocol_number"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Routing policy IP protocol parameters", 
            "title": "IP protocol"
        }, 
        "adjusted_workload": {
            "description": "Adjusted workload Object.", 
            "type": "object", 
            "properties": {
                "percentage": {
                    "type": "number"
                }
            }, 
            "title": "Adjusted workload Definition"
        }, 
        "project_metadata": {
            "description": "The project kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when project was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "project", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "project"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "project uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the project is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when project was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the project. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the project. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "project name", 
                    "maxLength": 80
                }
            }, 
            "title": "project metadata"
        }, 
        "vm_nic_output_status": {
            "description": "Virtual Machine NIC Status.", 
            "type": "object", 
            "properties": {
                "dns_ip_addresses_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of DNS IP addresses."
                }, 
                "nic_type": {
                    "x-ntnx-enum": [
                        "NORMAL_NIC", 
                        "DIRECT_NIC", 
                        "NETWORK_FUNCTION_NIC", 
                        "SPAN_DESTINATION_NIC"
                    ], 
                    "type": "string", 
                    "description": "The type of this NIC. Defaults to NORMAL_NIC."
                }, 
                "subnet_reference": {
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The NIC's UUID, which is used to uniquely identify this particular NIC. This UUID may be used to refer to the NIC outside the context of the particular VM it is attached to.\n", 
                    "format": "UUID"
                }, 
                "ip_endpoint_list": {
                    "items": {
                        "$ref": "#/definitions/ip_address"
                    }, 
                    "type": "array", 
                    "description": "IP endpoints for the adapter. Currently, IPv4 addresses are supported.\n"
                }, 
                "network_function_chain_reference": {
                    "$ref": "#/definitions/network_function_chain_reference"
                }, 
                "secondary_ip_address_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Secondary IPv4 Addresses for this NIC."
                }, 
                "floating_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The Floating IP associated with the vnic."
                }, 
                "mac_address": {
                    "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$", 
                    "type": "string", 
                    "description": "The MAC address for the adapter.", 
                    "x-example": "50:6b:8d:ee:de:2b"
                }, 
                "network_function_nic_type": {
                    "x-ntnx-enum": [
                        "INGRESS", 
                        "EGRESS", 
                        "TAP"
                    ], 
                    "type": "string", 
                    "description": "The type of this Network function NIC. Defaults to INGRESS.\n"
                }, 
                "vlan_mode": {
                    "x-ntnx-enum": [
                        "ACCESS", 
                        "TRUNKED"
                    ], 
                    "type": "string", 
                    "description": "VLAN mode."
                }, 
                "num_queues": {
                    "type": "integer", 
                    "description": "The number of tx/rx queue pairs for this NIC.\n"
                }, 
                "default_gateway_address_list": {
                    "items": {
                        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Default gateway IP addresses."
                }, 
                "dhcp_server_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IP address of the DHCP server."
                }, 
                "model": {
                    "x-ntnx-enum": [
                        "VIRTIO", 
                        "E1000"
                    ], 
                    "type": "string", 
                    "description": "The model of this NIC."
                }, 
                "is_connected": {
                    "type": "boolean", 
                    "description": "Whether or not the NIC is connected. True by default."
                }, 
                "trunked_vlan_list": {
                    "items": {
                        "type": "integer"
                    }, 
                    "type": "array", 
                    "description": "List of VLANs to trunk if vlan_mode is TRUNKED. If empty, all VLANs are trunked.\n"
                }
            }, 
            "title": "Virtual Machine NIC Status"
        }, 
        "datacenter_list_intent_response": {
            "description": "Response object for intentful operation of datacenters", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/datacenter_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/datacenter_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "security_planning_cluster_capability": {
            "description": "Flow Security Planning capability of a cluster.", 
            "type": "object", 
            "properties": {
                "cluster_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Cluster UUID of a cluster managed by Prism Central.\n", 
                    "format": "UUID"
                }, 
                "cluster_name": {
                    "type": "string", 
                    "description": "Name of the cluster."
                }, 
                "data_collector_prechecks": {
                    "description": "Data Collector Support Details", 
                    "$ref": "#/definitions/security_planning_prechecks"
                }, 
                "traffic_visibility_prechecks": {
                    "description": "Traffic Export Support Details", 
                    "$ref": "#/definitions/traffic_visibility_precheck_results"
                }
            }, 
            "title": "Status of capability of each cluster for Flow Security Planning."
        }, 
        "report_instance_def_status": {
            "description": "Report instance creation/modification spec.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The state of the cluster entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Report instance name."
                }, 
                "resources": {
                    "description": "Report instance resources.", 
                    "type": "object", 
                    "properties": {
                        "description": {
                            "type": "string", 
                            "description": "Description of the report."
                        }, 
                        "recipient_list": {
                            "items": {
                                "$ref": "#/definitions/recipient"
                            }, 
                            "type": "array", 
                            "description": "Recipients in addition to specified on the report config.\n"
                        }, 
                        "error_message": {
                            "type": "string", 
                            "description": "Error message when generation failed."
                        }, 
                        "data_start_time": {
                            "type": "string", 
                            "description": "UTC date and time in \"%Y-%m-%d %H:%M:%S\" format for data\ncollection start point.\n", 
                            "format": "date-time"
                        }, 
                        "generation_format": {
                            "items": {
                                "x-ntnx-enum": [
                                    "PDF", 
                                    "CSV"
                                ], 
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "List specifying the formats in which report is to be created."
                        }, 
                        "recipient_format": {
                            "items": {
                                "x-ntnx-enum": [
                                    "PDF", 
                                    "CSV"
                                ], 
                                "type": "string"
                            }, 
                            "type": "array", 
                            "description": "List specifying the formats in which report is to be sent."
                        }, 
                        "save_instance": {
                            "type": "boolean", 
                            "description": "Generated instance saved or not."
                        }, 
                        "data_end_time": {
                            "type": "string", 
                            "description": "UTC date and time in \"%Y-%m-%d %H:%M:%S\" format for data\ncollection end point.\n", 
                            "format": "date-time"
                        }, 
                        "timezone": {
                            "type": "string", 
                            "description": "Timezone in which report is to be generated. This is the list\nsupported by pytz.all_timezones. For more info, check\nhttps://pytz.sourceforge.net\n"
                        }, 
                        "runtime_key_values": {
                            "$ref": "#/definitions/generic_key_value_pair"
                        }, 
                        "generation_status": {
                            "type": "string", 
                            "description": "Generation status of the report."
                        }, 
                        "report_config_reference": {
                            "$ref": "#/definitions/report_config_reference"
                        }
                    }, 
                    "title": "Report Instance."
                }
            }, 
            "title": "Report instance definition."
        }, 
        "action_trigger_type": {
            "description": "Trigger type entity definition", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "$ref": "#/definitions/action_service_component_type"
                }
            }, 
            "title": "Trigger type entity"
        }, 
        "action_rule_result_intent_response": {
            "description": "Response object for intentful operations on a action_rule_result", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/action_rule_result_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/action_rule_result"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_rule_result_metadata"
                }
            }, 
            "title": "action_rule_result Intent Response"
        }, 
        "placement_detail": {
            "properties": {
                "cluster_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "IP of the cluster."
                }, 
                "cluster_dr_network_segmented_vip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "DR network segmentation virtual IP of the cluster."
                }, 
                "cluster_port": {
                    "type": "integer", 
                    "description": "Port of the cluster."
                }, 
                "cluster_reference": {
                    "description": "Reference to the cluster.", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "ltss_service_details": {
                    "description": "Information about the LTSS service.", 
                    "$ref": "#/definitions/ltss_service_info"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "cluster_reference", 
                        "cluster_ip"
                    ]
                }, 
                {
                    "required": [
                        "ltss_service_details"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Details of the cluster or the LTSS service where the entity need to be\nplaced.\n", 
            "title": "Placement details"
        }, 
        "volume_group_resources_output": {
            "description": "Volume group resources.", 
            "type": "object", 
            "properties": {
                "flash_mode": {
                    "x-ntnx-enum": [
                        "ENABLED", 
                        "DISABLED"
                    ], 
                    "type": "string", 
                    "description": "Flash Mode, if enabled all volume disks of the VG will be pinned to SSD tier.\n"
                }, 
                "iscsi_target_name": {
                    "type": "string", 
                    "description": "iSCSI target full name"
                }, 
                "enabled_authentications": {
                    "x-ntnx-enum": [
                        "CHAP", 
                        "NONE"
                    ], 
                    "type": "string", 
                    "description": "Which authentication is enabled for VG."
                }, 
                "attachment_list": {
                    "items": {
                        "$ref": "#/definitions/attachment_reference_output"
                    }, 
                    "type": "array", 
                    "description": "VMs attached to volume group."
                }, 
                "created_by": {
                    "type": "string", 
                    "description": "Service/user who created this Volume Group."
                }, 
                "parent_reference": {
                    "description": "Reference to an entity that the VG was cloned or created from.\n", 
                    "$ref": "#/definitions/reference"
                }, 
                "sharing_status": {
                    "x-ntnx-enum": [
                        "SHARED", 
                        "NOT_SHARED"
                    ], 
                    "type": "string", 
                    "description": "Whether the volume group can be shared across multiple iSCSI initiators.\n"
                }, 
                "disk_list": {
                    "items": {
                        "$ref": "#/definitions/volume_disk_resource_output"
                    }, 
                    "type": "array", 
                    "description": "Volume group disk specification."
                }, 
                "size_bytes": {
                    "type": "integer", 
                    "description": "The total size of the Volume Group in bytes", 
                    "format": "int64"
                }, 
                "usage_type": {
                    "x-ntnx-enum": [
                        "USER", 
                        "INTERNAL", 
                        "TEMPORARY", 
                        "BACKUP_TARGET", 
                        "UNKNOWN"
                    ], 
                    "type": "string", 
                    "description": "Expected usage type for the volume group."
                }, 
                "load_balance_vm_attachments": {
                    "type": "boolean", 
                    "description": "Whether volume group load balancing is enabled."
                }, 
                "is_hidden": {
                    "type": "boolean", 
                    "description": "Whether the VG is meant to be hidden or not."
                }, 
                "size_mib": {
                    "type": "integer", 
                    "description": "The total size of the Volume Group in mib", 
                    "format": "int64"
                }, 
                "iscsi_target_prefix": {
                    "type": "string", 
                    "description": "iSCSI target prefix-name."
                }
            }, 
            "title": "Volume group resources"
        }, 
        "vm_host_affinity_legacy_policy_list_response": {
            "description": "Response object for list operation of VM Host Affinity Legacy Policy.", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/vm_host_affinity_legacy_policy_info"
                    }, 
                    "type": "array"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_host_affinity_legacy_policy_list_metadata_output"
                }
            }, 
            "title": "list response"
        }, 
        "cloud_trust_reference": {
            "description": "The reference to a cloud_trust", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cloud_trust", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cloud_trust"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a cloud_trust"
        }, 
        "vm_disk": {
            "description": "VirtualMachine Disk (VM Disk).", 
            "type": "object", 
            "properties": {
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The device ID which is used to uniquely identify this particular disk.\n", 
                    "format": "UUID"
                }, 
                "disk_size_bytes": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Size of the disk in Bytes.", 
                    "format": "int64"
                }, 
                "storage_config": {
                    "description": "Storage configuration for disks.", 
                    "$ref": "#/definitions/disk_storage_config"
                }, 
                "device_properties": {
                    "type": "object", 
                    "properties": {
                        "device_type": {
                            "default": "DISK", 
                            "x-ntnx-enum": [
                                "DISK", 
                                "CDROM", 
                                "VOLUME_GROUP"
                            ], 
                            "type": "string"
                        }, 
                        "disk_address": {
                            "$ref": "#/definitions/disk_address"
                        }
                    }
                }, 
                "data_source_reference": {
                    "type": "object", 
                    "properties": {
                        "is_direct_attach": {
                            "type": "boolean", 
                            "description": "This is to indicate if attaching the referenced disk directly. Important: this should only be used by internal services. Direct attaching a disk that is used by another VM will result in data loss.\n"
                        }, 
                        "url": {
                            "pattern": "^((((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\/)([\\w\\-\\.]+[^#?\\s]+)(.*)?)(#[\\w\\-]+)?$|(http[s]?:\\/\\/([\\w\\d\\-_\\.])((\\/?\\w+\\.*)*(:[0-9]+)*\\/?)))", 
                            "type": "string", 
                            "description": "AHV sync rep uses this field to identify a dormant VM disk.\n"
                        }, 
                        "kind": {
                            "type": "string"
                        }, 
                        "uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "format": "UUID"
                        }, 
                        "name": {
                            "readOnly": true, 
                            "type": "string"
                        }
                    }
                }, 
                "disk_size_mib": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Size of the disk in MiB. Must match the size specified in 'disk_size_bytes' - rounded up to the nearest MiB -  when that field is present.\n", 
                    "format": "int32"
                }, 
                "volume_group_reference": {
                    "$ref": "#/definitions/reference"
                }
            }, 
            "title": "VirtualMachine Disk (VM Disk)"
        }, 
        "action_rule_result_list_intent_response": {
            "description": "Response object for intentful operation of action_rule_results", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/action_rule_result_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_rule_result_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "multicluster_config_reference": {
            "description": "The reference to a multicluster_config", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "multicluster_config", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "multicluster_config"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a multicluster_config"
        }, 
        "app_reference": {
            "description": "The reference to a app", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app"
        }, 
        "floating_ip_def_status": {
            "description": "An intentful representation of a floating_ip status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "floating_ip Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the floating_ip."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the floating_ip, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/floating_ip_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for floating_ip."
                }
            }, 
            "title": "floating_ip Intent Status with placement specified"
        }, 
        "report_instance_reference": {
            "description": "The reference to a report_instance", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "report_instance", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "report_instance"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a report_instance"
        }, 
        "ipsec_config_status": {
            "description": "IPSEC related configuration status for the VPN connections.", 
            "type": "object", 
            "properties": {
                "remote_vti_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Virtual tunnel interface IP of the remote VPN gateway."
                }, 
                "negotiated_proposal": {
                    "type": "object", 
                    "description": "Describes the proposal (encryption and authentication algorithms) that\nwas negotiated for this VPN connection.\n", 
                    "properties": {
                        "ipsec_authentication_algorithm": {
                            "x-ntnx-enum": [
                                "MD5", 
                                "SHA1", 
                                "SHA256", 
                                "SHA384", 
                                "SHA512"
                            ], 
                            "type": "string", 
                            "description": "Authentication algorithm used in IPSEC."
                        }, 
                        "ipsec_encryption_algorithm": {
                            "x-ntnx-enum": [
                                "AES128", 
                                "AES256", 
                                "3DES", 
                                "AES256GCM128"
                            ], 
                            "type": "string", 
                            "description": "Encryption algorithm used in IPSEC."
                        }, 
                        "ike_encryption_algorithm": {
                            "x-ntnx-enum": [
                                "AES128", 
                                "AES256", 
                                "3DES", 
                                "AES256GCM128"
                            ], 
                            "type": "string", 
                            "description": "Encryption algorithm used in IKE."
                        }, 
                        "ike_authentication_algorithm": {
                            "x-ntnx-enum": [
                                "MD5", 
                                "SHA1", 
                                "SHA256", 
                                "SHA384", 
                                "SHA512"
                            ], 
                            "type": "string", 
                            "description": "Authentication algorithm used in IKE."
                        }
                    }
                }, 
                "remote_authentication_id": {
                    "type": "string", 
                    "description": "IKE Authentication ID of the remote peer."
                }, 
                "local_vti_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Virtual tunnel interface IP of the local VPN gateway."
                }, 
                "ike_lifetime_secs": {
                    "type": "integer", 
                    "description": "IKE lifetime (in seconds)", 
                    "format": "uint64"
                }, 
                "esp_pfs_dh_group_number": {
                    "type": "integer", 
                    "description": "Diffie-Hellman group configured for Perfect Forward Secrecy (PFS). Supported DH groups are 14, 19 and 20.\n", 
                    "format": "uint64"
                }, 
                "local_authentication_id": {
                    "type": "string", 
                    "description": "Local IKE authentication ID used for this connection."
                }, 
                "ipsec_lifetime_secs": {
                    "type": "integer", 
                    "description": "IPSec lifetime (in seconds)", 
                    "format": "uint64"
                }, 
                "vti_ip_prefix_length": {
                    "type": "integer", 
                    "description": "IP prefix length of the virtual tunnel interface."
                }, 
                "pre_shared_key": {
                    "type": "string", 
                    "description": "Shared secret for authentication between gateway peers. Note that the\nclear-text secret value specfied in the input spec is never revealed\nin the status. Use this field only as means to verify if the secret is\ncurrently set or not.\n", 
                    "format": "password"
                }
            }, 
            "title": "IPSEC related configuration status for the VPN connection"
        }, 
        "blueprint_launch_input": {
            "description": "Launch Blueprint request.", 
            "required": [
                "api_version", 
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/blueprint_launch_spec"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blueprint_metadata"
                }
            }, 
            "title": "Launch Blueprint request."
        }, 
        "image_placement_policy_intent_input": {
            "description": "An intentful representation of a image_placement_policy", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/image_placement_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/image_placement_policy_metadata"
                }
            }, 
            "title": "image_placement_policy Intent Entity"
        }, 
        "permission_metadata": {
            "description": "The permission kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when permission was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "permission", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "permission"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "permission uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the permission is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when permission was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the permission. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the permission. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "permission name", 
                    "maxLength": 80
                }
            }, 
            "title": "permission metadata"
        }, 
        "cloud_trust_intent_response": {
            "description": "Response object for intentful operations on a cloud_trust", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/cloud_trust_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/cloud_trust"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cloud_trust_metadata"
                }
            }, 
            "title": "cloud_trust Intent Response"
        }, 
        "udp_status": {
            "description": "UDP parameters to be matched in routing policy", 
            "type": "object", 
            "properties": {
                "destination_port_range_list": {
                    "items": {
                        "$ref": "#/definitions/port_range_status"
                    }, 
                    "type": "array", 
                    "description": "List of ranges of UDP destination ports."
                }, 
                "source_port_range": {
                    "description": "Range of UDP source ports. This field is deprecated, use source_port_range_list instead.\n", 
                    "$ref": "#/definitions/port_range_status"
                }, 
                "source_port_range_list": {
                    "items": {
                        "$ref": "#/definitions/port_range_status"
                    }, 
                    "type": "array", 
                    "description": "List of ranges of UDP source ports."
                }, 
                "destination_port_range": {
                    "description": "Range of UDP destination ports. This field is deprecated, use destination_port_range_list instead.\n", 
                    "$ref": "#/definitions/port_range_status"
                }
            }, 
            "title": "UDP parameters"
        }, 
        "app_package_element": {
            "description": "Package definition for Application", 
            "required": [
                "name", 
                "uuid", 
                "type", 
                "state"
            ], 
            "type": "object", 
            "properties": {
                "image_spec": {
                    "additionalProperties": true, 
                    "description": "Additional properties for k8s image spec"
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for package"
                }, 
                "service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_reference"
                    }, 
                    "type": "array", 
                    "description": "References of the service."
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "version": {
                    "type": "string", 
                    "description": ""
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "SNAPSHOT", 
                        "ISO", 
                        "DEB", 
                        "RPM", 
                        "DOCKER_IMAGE", 
                        "CHEF_COOKBOOK", 
                        "PUPPET_MANIFEST", 
                        "CUSTOM", 
                        "SUBSTRATE_IMAGE", 
                        "K8S_IMAGE"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "options": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Details based on type of the package."
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Package element for Application"
        }, 
        "oauth_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "oauth", 
                    "x-ntnx-enum": [
                        "oauth"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for oauth list output"
        }, 
        "cluster_intent_input": {
            "description": "An intentful representation of a cluster", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/cluster"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cluster_metadata"
                }
            }, 
            "title": "cluster Intent Entity"
        }, 
        "ova_update_input": {
            "description": "Input for OVA item update or create.", 
            "required": [
                "name"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the OVA.", 
                    "maxLength": 64
                }
            }, 
            "title": "OVA input"
        }, 
        "pemkey_spec": {
            "description": "SSL key", 
            "required": [
                "type", 
                "key", 
                "cert"
            ], 
            "type": "object", 
            "properties": {
                "ca_chain": {
                    "type": "string", 
                    "format": "byte"
                }, 
                "type": {
                    "$ref": "#/definitions/ssl_key_type"
                }, 
                "cert": {
                    "type": "string", 
                    "format": "byte"
                }, 
                "key": {
                    "type": "string", 
                    "format": "byte"
                }, 
                "name": {
                    "type": "string", 
                    "maxLength": 64
                }
            }, 
            "title": "SSL key"
        }, 
        "availability_zone_def_status": {
            "description": "Availability Zone creation/modification spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Availability Zone Name"
                }, 
                "resources": {
                    "$ref": "#/definitions/availability_zone_resources"
                }
            }, 
            "title": "Availability Zone creation/modification spec"
        }, 
        "support_case_resources": {
            "description": "Support case resources definition.", 
            "required": [
                "contact_details"
            ], 
            "type": "object", 
            "properties": {
                "contact_details": {
                    "$ref": "#/definitions/contact_information"
                }, 
                "ncc_checks_pc": {
                    "$ref": "#/definitions/ncc_checks_support_case_upload"
                }, 
                "log_collector_pc": {
                    "$ref": "#/definitions/log_collector_support_case_upload"
                }, 
                "nos_version": {
                    "type": "string", 
                    "description": "Nos version of the block for which support case is opened."
                }, 
                "priority": {
                    "x-ntnx-enum": [
                        "P1", 
                        "P2", 
                        "P3", 
                        "P4", 
                        "RFE"
                    ], 
                    "type": "string", 
                    "description": "Priority of the support case being created Example P4-Low, P3-Normal, P2-Critical, P1-Emergency.\n"
                }, 
                "case_type": {
                    "type": "string", 
                    "description": "Type of the support case being opened."
                }, 
                "hypervisor_version": {
                    "type": "string", 
                    "description": "Hypervisor version for which support case is opened."
                }, 
                "serial_number": {
                    "type": "string", 
                    "description": "Serial Number of the block for which help is needed."
                }, 
                "additional_notification_list": {
                    "items": {
                        "$ref": "#/definitions/contact_information"
                    }, 
                    "type": "array", 
                    "description": "List of email addresses of the extra recipients who need to be notified for case management.\n", 
                    "maxItems": 3
                }, 
                "log_collector": {
                    "$ref": "#/definitions/log_collector_support_case_upload"
                }, 
                "cluster_reference": {
                    "description": "Reference of the cluster for which logs and health checks need to be uploaded.\n", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "ncc_checks": {
                    "$ref": "#/definitions/ncc_checks_support_case_upload"
                }
            }, 
            "title": "Support Case Resources."
        }, 
        "aws_machine_type_metadata": {
            "description": "The aws_machine_type kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_machine_type was last updated\n", 
                    "format": "date-time"
                }, 
                "kind": {
                    "default": "aws_machine_type", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_machine_type"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "aws_machine_type uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the aws_machine_type is in", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_machine_type was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the aws_machine_type"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "aws_machine_type name"
                }
            }, 
            "title": "aws_machine_type metadata"
        }, 
        "mh_vm_resources_def_status": {
            "description": "VM Resources Status Definition.", 
            "type": "object", 
            "properties": {
                "hypervisor_specific_id": {
                    "type": "string", 
                    "description": "The hypervisor specific ID of the VM.\n"
                }, 
                "host_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "guest_tools": {
                    "description": "Information regarding guest tools.", 
                    "$ref": "#/definitions/guest_tools_status"
                }, 
                "hypervisor_type": {
                    "x-ntnx-enum": [
                        "ESX", 
                        "AHV"
                    ], 
                    "type": "string", 
                    "description": "The hypervisor type for the hypervisor the VM is hosted on.\n"
                }, 
                "storage_config": {
                    "description": "Storage configuration of the VM.", 
                    "$ref": "#/definitions/mh_vm_storage_config_status"
                }, 
                "protection_type": {
                    "x-ntnx-enum": [
                        "UNPROTECTED", 
                        "PD_PROTECTED", 
                        "RULE_PROTECTED"
                    ], 
                    "type": "string", 
                    "description": "The type of protection applied on a VM. PD_PROTECTED indicates a VM protected using Prism Element. RULE_PROTECTED indicates a VM protected using Prism Central.\n"
                }, 
                "parent_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "recovery_plan_state_list": {
                    "items": {
                        "$ref": "#/definitions/recovery_plan_policy_state"
                    }, 
                    "type": "array", 
                    "description": "Status of the Recovery Plans associated with the VM."
                }, 
                "protection_policy_state": {
                    "description": "Status of protection policy applied to this VM.\n", 
                    "$ref": "#/definitions/protection_policy_state"
                }
            }, 
            "title": "VM Resources Status Definition"
        }, 
        "vg_recovery_point_reference": {
            "description": "The reference to a vg_recovery_point", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vg_recovery_point", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vg_recovery_point"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a vg_recovery_point"
        }, 
        "right_hand_side": {
            "properties": {
                "categories": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "The category values represented as a dictionary of key -> list of values. e.g.{\"env\":[\"env1\", \"env2\"]}\n"
                }, 
                "collection": {
                    "x-ntnx-enum": [
                        "ALL", 
                        "SELF_OWNED"
                    ], 
                    "type": "string", 
                    "description": "A representative term for supported groupings of entities. ALL = All the entities of a given kind. SELF_OWNED = The entities of a given kind, that are owned by the user.\n"
                }, 
                "uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "The explicit list of UUIDs for the given kind."
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "collection"
                    ]
                }, 
                {
                    "required": [
                        "categories"
                    ]
                }, 
                {
                    "required": [
                        "uuid_list"
                    ]
                }
            ], 
            "type": "object", 
            "description": "The right hand side of an expression.", 
            "title": "The right hand side (RHS) of an expression."
        }, 
        "app_runbook_response_download": {
            "description": "Runbook definition for Application", 
            "required": [
                "name", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "task_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_task_response_download"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 128
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "main_task_local_reference": {
                    "$ref": "#/definitions/app_task_reference_upload"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response_download"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Runbook for Application"
        }, 
        "vm_disk_output_status": {
            "description": "VirtualMachine Disk (VM Disk).", 
            "type": "object", 
            "properties": {
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "The device ID which is used to uniquely identify this particular disk.\n", 
                    "format": "UUID"
                }, 
                "is_encryption_in_progress": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Indicates whether encryption is in progress or not."
                }, 
                "is_migration_in_progress": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Indicated if the disk is undergoing migration to another container or not.\n"
                }, 
                "disk_size_bytes": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Size of the disk in Bytes.", 
                    "format": "int64"
                }, 
                "storage_config": {
                    "description": "Storage configuration for disks.", 
                    "$ref": "#/definitions/disk_storage_config"
                }, 
                "device_properties": {
                    "type": "object", 
                    "properties": {
                        "device_type": {
                            "default": "DISK", 
                            "x-ntnx-enum": [
                                "DISK", 
                                "CDROM", 
                                "VOLUME_GROUP"
                            ], 
                            "type": "string"
                        }, 
                        "disk_address": {
                            "$ref": "#/definitions/disk_address"
                        }
                    }
                }, 
                "data_source_reference": {
                    "type": "object", 
                    "properties": {
                        "is_direct_attach": {
                            "type": "boolean", 
                            "description": "This is to indicate if attaching the referenced disk directly. Important: this should only be used by internal services. Direct attaching a disk that is used by another VM will result in data loss.\n"
                        }, 
                        "url": {
                            "pattern": "^((((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\/)([\\w\\-\\.]+[^#?\\s]+)(.*)?)(#[\\w\\-]+)?$|(http[s]?:\\/\\/([\\w\\d\\-_\\.])((\\/?\\w+\\.*)*(:[0-9]+)*\\/?)))", 
                            "type": "string", 
                            "description": "AHV sync rep uses this field to identify a dormant VM disk.\n"
                        }, 
                        "kind": {
                            "type": "string"
                        }, 
                        "uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "format": "UUID"
                        }, 
                        "name": {
                            "type": "string"
                        }
                    }
                }, 
                "disk_size_mib": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Size of the disk in MiB. Must match the size specified in 'disk_size_bytes' - rounded up to the nearest MiB -  when that field is present.\n", 
                    "format": "int32"
                }, 
                "volume_group_reference": {
                    "$ref": "#/definitions/reference"
                }
            }, 
            "title": "VirtualMachine Disk (VM Disk)"
        }, 
        "availability_zone_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "availability_zone", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "availability_zone"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "aws_block_device_map_output_status": {
            "description": "Describes the EBS Volumes associated.", 
            "type": "object", 
            "properties": {
                "data_disk_list": {
                    "items": {
                        "$ref": "#/definitions/aws_instance_disk_output_status"
                    }, 
                    "type": "array", 
                    "description": "Data disks of the instance."
                }, 
                "root_disk": {
                    "description": "Root disk of the instance.", 
                    "$ref": "#/definitions/aws_instance_disk_output_status"
                }
            }, 
            "title": "AWS Block Device Map Output Status"
        }, 
        "mh_vm_reference": {
            "description": "The reference to a mh_vm", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "mh_vm", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "mh_vm"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a mh_vm"
        }, 
        "mh_vm_intent_input": {
            "description": "An intentful representation of a mh_vm", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/mh_vm"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/mh_vm_metadata"
                }
            }, 
            "title": "mh_vm Intent Entity"
        }, 
        "aws_vm_def_status": {
            "description": "An intentful representation of a aws_vm status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "aws_vm Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the aws_vm."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the aws_vm, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/aws_vm_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for aws_vm."
                }
            }, 
            "title": "aws_vm Intent Status with placement specified"
        }, 
        "physical_availability_zone_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "physical_availability_zone", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "physical_availability_zone"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "query_value": {
            "description": "Object Encompassing Specific Datatypes for Values.", 
            "type": "object", 
            "properties": {
                "string_value": {
                    "type": "string"
                }, 
                "int_list": {
                    "items": {
                        "type": "integer", 
                        "format": "int64"
                    }, 
                    "type": "array"
                }, 
                "float_value": {
                    "type": "number", 
                    "format": "float"
                }, 
                "string_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "float_list": {
                    "items": {
                        "type": "number", 
                        "format": "float"
                    }, 
                    "type": "array"
                }, 
                "int_value": {
                    "type": "integer", 
                    "format": "int64"
                }
            }, 
            "title": "Object Encompassing Specific Datatypes for Values."
        }, 
        "environment_intent_resource": {
            "description": "Response object for intentful operations on a environment", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/environment_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/environment"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/environment_metadata"
                }
            }, 
            "title": "environment Intent Response"
        }, 
        "category_metadata": {
            "description": "The category kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when category was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "category", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "category"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "category uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the category is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when category was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the category. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the category. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "category name", 
                    "maxLength": 80
                }
            }, 
            "title": "category metadata"
        }, 
        "common_report_config": {
            "description": "Common Report Config creation/modification spec.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the common report config.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "description": "Common report config resources definition.", 
                    "type": "object", 
                    "properties": {
                        "report_customization": {
                            "$ref": "#/definitions/report_customization"
                        }, 
                        "retention_policy": {
                            "$ref": "#/definitions/retention_policy"
                        }, 
                        "description": {
                            "type": "string", 
                            "description": "Description of the common report config.", 
                            "maxLength": 1000
                        }, 
                        "notification_policy": {
                            "$ref": "#/definitions/notification_policy"
                        }
                    }, 
                    "title": "Common Report Config Resources."
                }
            }, 
            "title": "Common Report Config creation/modification spec."
        }, 
        "aws_security_group_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_security_group", 
                    "x-ntnx-enum": [
                        "aws_security_group"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for aws_security_group list output"
        }, 
        "api_version": {
            "default": "3.1.0", 
            "readOnly": true, 
            "type": "string", 
            "description": "API Version of the Nutanix v3 API framework.", 
            "title": "API Version"
        }, 
        "cloud_trust_list_intent_response": {
            "description": "Response object for intentful operation of cloud_trusts", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/cloud_trust_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cloud_trust_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "layer2_stretch_reference": {
            "description": "The reference to a layer2_stretch", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "layer2_stretch", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "layer2_stretch"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a layer2_stretch"
        }, 
        "cluster_image_reference": {
            "description": "The reference to a cluster and related image location", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "file_location": {
                    "$ref": "#/definitions/file_location"
                }, 
                "kind": {
                    "default": "cluster", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cluster"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a cluster"
        }, 
        "vm_boot_config": {
            "description": "Indicates which device a VM should boot from.\n", 
            "type": "object", 
            "properties": {
                "boot_device_order_list": {
                    "items": {
                        "x-ntnx-enum": [
                            "CDROM", 
                            "DISK", 
                            "NETWORK"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Indicates the order of device types in which VM should try to boot from. If boot device order is not provided the system will decide appropriate boot device order.\n"
                }, 
                "boot_device": {
                    "description": "Indicates which device a VM should boot from. Boot device takes precdence over boot device order. If both are given then specified boot device will be primary boot device and remaining devices will be assigned boot order according to boot device order field.\n", 
                    "$ref": "#/definitions/vm_boot_device"
                }, 
                "data_source_reference": {
                    "$ref": "#/definitions/reference"
                }, 
                "boot_type": {
                    "x-ntnx-enum": [
                        "UEFI", 
                        "LEGACY", 
                        "SECURE_BOOT"
                    ], 
                    "type": "string", 
                    "description": "Indicates whether the VM should use Secure boot, UEFI boot or Legacy boot.If UEFI or Secure boot is enabled then other legacy boot options (like boot_device and boot_device_order_list) are ignored. Secure boot depends on UEFI boot, i.e. enabling Secure boot means that UEFI boot is also enabled.\n"
                }
            }, 
            "title": "VM Boot configuration"
        }, 
        "category_mapping_def_status": {
            "description": "An intentful representation of a category_mapping status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "category_mapping Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the category_mapping."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the category_mapping, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/category_mapping_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for category_mapping."
                }
            }, 
            "title": "category_mapping Intent Status with placement specified"
        }, 
        "mh_vm_metadata": {
            "description": "The mh_vm kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when mh_vm was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "mh_vm", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "mh_vm"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "mh_vm uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the mh_vm is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when mh_vm was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the mh_vm. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the mh_vm. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "mh_vm name", 
                    "maxLength": 80
                }
            }, 
            "title": "mh_vm metadata"
        }, 
        "action_trigger_type_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_trigger_type", 
                    "x-ntnx-enum": [
                        "action_trigger_type"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for action_trigger_type list output"
        }, 
        "query_groups_entity": {
            "description": "An Individual Entity.", 
            "type": "object", 
            "properties": {
                "entity_id": {
                    "type": "string"
                }, 
                "data": {
                    "items": {
                        "$ref": "#/definitions/query_groups_field_data"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Entity"
        }, 
        "cloud_credentials_def_status": {
            "description": "Cloud credentials configuration", 
            "required": [
                "id", 
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "id": {
                    "type": "integer", 
                    "description": "ID to uniquely identify cloud credentials", 
                    "format": "int64"
                }, 
                "resources": {
                    "$ref": "#/definitions/cloud_credentials_resources"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Credentials name."
                }
            }, 
            "title": "Cloud credentials Configuration"
        }, 
        "vm_nic_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vm_nic", 
                    "x-ntnx-enum": [
                        "vm_nic"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for vm_nic list output"
        }, 
        "physical_availability_zone_reference": {
            "description": "The reference to a physical_availability_zone", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "physical_availability_zone", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "physical_availability_zone"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a physical_availability_zone"
        }, 
        "aws_region_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_region", 
                    "x-ntnx-enum": [
                        "aws_region"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for aws_region list"
        }, 
        "flow_service": {
            "description": "The ports, protocol and icmp codes for the service.", 
            "type": "object", 
            "properties": {
                "tcp_port_range_list": {
                    "items": {
                        "$ref": "#/definitions/port_range"
                    }, 
                    "type": "array", 
                    "description": "List of TCP ports in the service"
                }, 
                "protocol": {
                    "x-ntnx-enum": [
                        "ALL", 
                        "ICMP", 
                        "TCP", 
                        "UDP"
                    ], 
                    "type": "string", 
                    "description": "protocol for the service"
                }, 
                "udp_port_range_list": {
                    "items": {
                        "$ref": "#/definitions/port_range"
                    }, 
                    "type": "array", 
                    "description": "List of UDP ports in the service"
                }, 
                "icmp_type_code_list": {
                    "items": {
                        "type": "object", 
                        "properties": {
                            "code": {
                                "type": "integer", 
                                "format": "int32"
                            }, 
                            "type": {
                                "type": "integer", 
                                "format": "int32"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "List of ICMP types and codes in the service"
                }
            }, 
            "title": "Flow service per protocol"
        }, 
        "validate_rack_config_input": {
            "description": "List of rack_config objects, which represent a group of racks.\n", 
            "type": "object", 
            "properties": {
                "rack_list": {
                    "items": {
                        "$ref": "#/definitions/rack_config"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Validate Rack Configuration Input"
        }, 
        "aws_vpc_metadata": {
            "description": "The aws_vpc kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_vpc was last updated\n", 
                    "format": "date-time"
                }, 
                "kind": {
                    "default": "aws_vpc", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_vpc"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "aws_vpc uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the aws_vpc is in", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_vpc was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the aws_vpc"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "aws_vpc name"
                }
            }, 
            "title": "aws_vpc metadata"
        }, 
        "ssh_user_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ssh_user", 
                    "x-ntnx-enum": [
                        "ssh_user"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for ssh_user list output"
        }, 
        "task_list_intent_response": {
            "description": "Task entity list.", 
            "required": [
                "api_version", 
                "metadata", 
                "entities"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/task"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/task_list_metadata_output"
                }
            }, 
            "title": "Task entity list"
        }, 
        "cloud_tenant_metadata": {
            "description": "The cloud_tenant kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when cloud_tenant was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "cloud_tenant", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cloud_tenant"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "cloud_tenant uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the cloud_tenant is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when cloud_tenant was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the cloud_tenant. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the cloud_tenant. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "cloud_tenant name", 
                    "maxLength": 80
                }
            }, 
            "title": "cloud_tenant metadata"
        }, 
        "identity_provider_reference": {
            "description": "The reference to a identity_provider", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "identity_provider", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "identity_provider"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a identity_provider"
        }, 
        "blueprint_pending_launches_status": {
            "description": "Response containing state, milestone reached and application uuid", 
            "type": "object", 
            "properties": {
                "application_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "application uuid present after the status moves to success", 
                    "format": "UUID"
                }, 
                "app_name": {
                    "type": "string", 
                    "description": "name of the application"
                }, 
                "state": {
                    "type": "string", 
                    "description": "Status of the launch"
                }, 
                "blueprint_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "blueprint uuid", 
                    "format": "UUID"
                }, 
                "details": {
                    "type": "string", 
                    "description": "additional details about the status of launch"
                }, 
                "milestone": {
                    "type": "string", 
                    "description": "gives more granularity in status"
                }, 
                "bp_name": {
                    "type": "string", 
                    "description": "name of the blueprint"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for app blueprint"
                }
            }, 
            "title": "Status of the launch"
        }, 
        "param_descriptor": {
            "description": "The metadata describes what a parameter is.", 
            "required": [
                "name", 
                "display_name", 
                "element_data_type"
            ], 
            "type": "object", 
            "properties": {
                "default_value": {
                    "description": "Deprecated. Please use default_value_list instead.\nThe default value of this parameter.  We do not support default\nvalue for complex type\n", 
                    "$ref": "#/definitions/action_service_param_value"
                }, 
                "filter_criteria": {
                    "type": "string", 
                    "description": "Groups api filter to be used when determining the list of entities\nthat are valid for param of type kEntityInfo\n"
                }, 
                "entity_types": {
                    "items": {
                        "pattern": "^[^&<>'/\"]*$", 
                        "type": "string", 
                        "maxLength": 64
                    }, 
                    "type": "array", 
                    "description": "The possible entity types the param value be holding like vm, etc."
                }, 
                "display_name": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "parameter display name", 
                    "maxLength": 64
                }, 
                "name": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "parameter name", 
                    "maxLength": 64
                }, 
                "is_parameterized": {
                    "type": "boolean", 
                    "description": "The field can take parameter or not."
                }, 
                "choice_list": {
                    "items": {
                        "type": "object", 
                        "description": "parameter choice list element.", 
                        "properties": {
                            "name": {
                                "pattern": "^[^&<>'/\"]*$", 
                                "type": "string", 
                                "description": "the name of the choice item.", 
                                "maxLength": 64
                            }, 
                            "value": {
                                "description": "The value of the choice item.  The data type should match the\none defined in element_data_type.\n", 
                                "$ref": "#/definitions/action_service_param_value"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "The parameter can only be one of the choices in this ordered list.\nWe do not support choice list of elements with complex type.\n"
                }, 
                "is_array": {
                    "type": "boolean", 
                    "description": "Is this parameter a list or a scalar value"
                }, 
                "entity_type": {
                    "pattern": "^[^&<>'/\"]*$",
                    "type": "string",
                    "description": "Deprecated. Please use entity_types instead.\nThe entity type the param value be holding like vm, etc.\n", 
                    "maxLength": 64
                }, 
                "value_info": {
                    "description": "parameter value info.", 
                    "$ref": "#/definitions/value_info"
                }, 
                "is_secret": {
                    "type": "boolean", 
                    "description": "Is this parameter a secret like password, security token?\n"
                }, 
                "element_data_type": {
                    "x-ntnx-enum": [
                        "BOOLEAN", 
                        "LONG", 
                        "DOUBLE", 
                        "STRING", 
                        "ENTITY_INFO", 
                        "BYTES", 
                        "FILE"
                    ], 
                    "type": "string", 
                    "description": "The parameter's data type.  If the parameter is a list, it is the\nelement data type.\n"
                }, 
                "is_deprecated": {
                    "type": "boolean", 
                    "description": "Flag to indicate if this parameter is deprecated."
                }, 
                "default_value_list": {
                    "items": {
                        "$ref": "#/definitions/action_service_param_value"
                    }, 
                    "type": "array", 
                    "description": "The default values of this parameter. We do not support default\nvalue for complex type.\n"
                }, 
                "parent_params": {
                    "items": {
                        "type": "object", 
                        "description": "Parent field", 
                        "properties": {
                            "name": {
                                "pattern": "^[^&<>'/\"]*$", 
                                "type": "string", 
                                "description": "the name of the parent param.", 
                                "maxLength": 64
                            }, 
                            "value": {
                                "type": "string", 
                                "description": "Expected value of the parent param.\n", 
                                "maxLength": 2000
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "A list of parent params with their expected values. Any one of these params must have the provided value in order for this field to be valid."
                }, 
                "is_hidden": {
                    "type": "boolean", 
                    "description": "The field is hidden from other actions or triggers.  For example,\nnot showing in the UI.\n"
                }, 
                "is_required": {
                    "type": "boolean", 
                    "description": "Is this parameter optional."
                }
            }, 
            "title": "Action component parameter descriptor"
        }, 
        "action_trigger_type_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_trigger_type", 
                    "x-ntnx-enum": [
                        "action_trigger_type"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for action_trigger_type list"
        }, 
        "vpn_gateway_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpn_gateway", 
                    "x-ntnx-enum": [
                        "vpn_gateway"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vpn_gateway list"
        }, 
        "placement_entity_filter": {
            "description": "Image placement policy filter. Specify the filter match type and categories\n", 
            "required": [
                "params", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "params": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "A list of category key and list of values."
                }, 
                "type": {
                    "default": "CATEGORIES_MATCH_ANY", 
                    "x-ntnx-enum": [
                        "CATEGORIES_MATCH_ALL", 
                        "CATEGORIES_MATCH_ANY"
                    ], 
                    "type": "string", 
                    "description": "The type of the filter being used."
                }
            }, 
            "title": "Image placement policy entity filter"
        }, 
        "image_list_intent_response": {
            "description": "Response object for intentful operation of images", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/image_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/image_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "multicluster_config_def_status": {
            "description": "Status for multicluster configuration request.", 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the multicluster configuration request."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Status for multicluster configuration request"
        }, 
        "app_cost_response_download": {
            "description": "Cost definition for Application", 
            "required": [
                "name", 
                "type", 
                "interval", 
                "value", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list"
                }, 
                "interval": {
                    "x-ntnx-enum": [
                        "HOUR", 
                        "WEEK", 
                        "MONTH"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "value": {
                    "type": "string", 
                    "description": ""
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "LIVE", 
                        "STATIC"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }
            }, 
            "title": "Cost for Application"
        }, 
        "configuration_info": {
            "description": "Information needed by the caller before they enable the service\n", 
            "type": "object", 
            "properties": {
                "original_memory_bytes": {
                    "type": "number", 
                    "description": "Original memory (in bytes)", 
                    "format": "double"
                }, 
                "additional_vcpu": {
                    "type": "integer", 
                    "description": "Additional vcpu required to enable the service", 
                    "format": "int64"
                }, 
                "additional_memory": {
                    "type": "integer", 
                    "description": "Additional memory (in GiB) required to enable the service", 
                    "format": "int64"
                }, 
                "additional_memory_bytes": {
                    "type": "number", 
                    "description": "Additional memory (in bytes) required to enable the service", 
                    "format": "double"
                }
            }, 
            "title": "Information needed prior to enable the service"
        }, 
        "recovery_plan_subnet_config": {
            "description": "Subnet configuration for network mapping in the Recovery Plan.\n", 
            "required": [
                "gateway_ip", 
                "prefix_length"
            ], 
            "type": "object", 
            "properties": {
                "l2_stretch_config": {
                    "items": {
                        "$ref": "#/definitions/recovery_plan_l2_stretch_config"
                    }, 
                    "type": "array", 
                    "description": "Configurations for creating Layer2 stretches for the subnet.\n"
                }, 
                "external_connectivity_state": {
                    "x-ntnx-enum": [
                        "ENABLED", 
                        "DISABLED"
                    ], 
                    "type": "string", 
                    "description": "External connectivity state of the subnet. This is applicable only for the subnet to be created in public cloud Availability Zone.\n"
                }, 
                "gateway_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Gateway IP address for the subnet.\n"
                }, 
                "subnet_range": {
                    "description": "Network subnet range carved out of given CIDR for this network. For example, if given gateway_ip is 10.0.0.0 and prefix_length is 24 then subnet_range can have start_ip_address and end_ip_address anywhere in the range 10.0.0.0 to 10.0.0.256.\n", 
                    "$ref": "#/definitions/recovery_plan_subnet_range_config"
                }, 
                "prefix_length": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Prefix length for the subnet.\n", 
                    "maximum": 32, 
                    "format": "int32"
                }
            }, 
            "title": "Subnet configuration for the Recovery Plan\n"
        }, 
        "app_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app", 
                    "x-ntnx-enum": [
                        "app"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for app list output"
        }, 
        "network_security_rule_intent_input": {
            "description": "An intentful representation of a network_security_rule", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/network_security_rule"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/network_security_rule_metadata"
                }
            }, 
            "title": "network_security_rule Intent Entity"
        }, 
        "recovery_plan_list_intent_response": {
            "description": "Response object for intentful operation of recovery_plans", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/recovery_plan_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/recovery_plan_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "cloud_credentials_intent_response": {
            "description": "Response object for intentful operations on a cloud_credentials", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/cloud_credentials_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/cloud_credentials"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cloud_credentials_metadata"
                }
            }, 
            "title": "cloud_credentials Intent Response"
        }, 
        "windows_domain": {
            "description": "Hyper-V node domain.", 
            "required": [
                "domain_credential"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "The name of the node to be renamed to during domain-join. If not given,a new name will be automatically assigned.\n"
                }, 
                "domain_name": {
                    "type": "string", 
                    "description": "Full name of domain."
                }, 
                "domain_credential": {
                    "$ref": "#/definitions/credentials"
                }, 
                "organization_unit_path": {
                    "type": "string", 
                    "description": "Path to organization unit in the domain."
                }, 
                "name_prefix": {
                    "type": "string", 
                    "description": "The name prefix in the domain in case of CPS deployment."
                }, 
                "name_server_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "The ip of name server that can resolve the domain name. Required during joining domain.\n"
                }
            }, 
            "title": "Hyper-v Domain"
        }, 
        "tenant_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "tenant", 
                    "x-ntnx-enum": [
                        "tenant"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for tenant list output"
        }, 
        "protection_rule_reference": {
            "description": "The reference to a protection_rule", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "protection_rule", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "protection_rule"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a protection_rule"
        }, 
        "direct_connect_virtual_interface_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "direct_connect_virtual_interface", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "direct_connect_virtual_interface"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "category_mapping_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "category_mapping", 
                    "x-ntnx-enum": [
                        "category_mapping"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for category_mapping list"
        }, 
        "action_trigger_type_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_trigger_type", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "action_trigger_type"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "streaming_policy_intent_resource": {
            "description": "Response object for intentful operations on a streaming_policy", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/streaming_policy_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/streaming_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/streaming_policy_metadata"
                }
            }, 
            "title": "streaming_policy Intent Response"
        }, 
        "nic_update_ip_info": {
            "description": "Parameters when requesting IP address for a NIC.", 
            "required": [
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "If specified, try to request this IP address. Otherwise request any IP address from the network pool.\n"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the NIC whose IP is being requested.", 
                    "format": "UUID"
                }
            }, 
            "title": "NIC update IP Info."
        }, 
        "host_reference": {
            "description": "The reference to a host", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "host", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "host"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a host"
        }, 
        "rca_metadata": {
            "description": "Root cause analysis from alert RCA metadata.", 
            "type": "object", 
            "properties": {
                "title": {
                    "type": "string", 
                    "description": "RCA title"
                }, 
                "actions": {
                    "type": "string", 
                    "description": "Alert possible actions"
                }, 
                "parent_cause_id": {
                    "type": "string", 
                    "description": "cause id of parent"
                }, 
                "details": {
                    "type": "string", 
                    "description": "Alert cause detail information"
                }, 
                "cause": {
                    "type": "string", 
                    "description": "Alert cause description"
                }, 
                "id": {
                    "type": "string", 
                    "description": "rca metadata id"
                }
            }, 
            "title": "Root cause analysis metadata."
        }, 
        "vm_validate_migration_input": {
            "description": "Contains reference to migration target to which the migrate validation\nneeds to be checked upon.\n", 
            "required": [
                "migration_target"
            ], 
            "type": "object", 
            "properties": {
                "migration_target": {
                    "$ref": "#/definitions/migration_target"
                }
            }, 
            "title": "Validate migration input definition."
        }, 
        "groups_requested_attribute": {
            "description": "An attribute that has been requested to be returned in the response.\n", 
            "required": [
                "attribute"
            ], 
            "type": "object", 
            "properties": {
                "attribute": {
                    "type": "string"
                }, 
                "operation": {
                    "$ref": "#/definitions/groups_aggregation_function"
                }, 
                "ancestor_entity_type": {
                    "type": "string"
                }
            }, 
            "title": "Entities Request Attribute"
        }, 
        "app_metadata": {
            "description": "The app kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when app was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "app", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "app uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the app is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when app was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the app. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the app. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "app name", 
                    "maxLength": 80
                }
            }, 
            "title": "app metadata"
        }, 
        "syslog_module": {
            "description": "Remote Syslog Module definition", 
            "type": "object", 
            "properties": {
                "module_name": {
                    "x-ntnx-enum": [
                        "API_AUDIT", 
                        "AUDIT", 
                        "FLOW", 
                        "FLOW_SERVICE_LOGS", 
                        "LCM", 
                        "CALM", 
                        "EPSILON"
                    ], 
                    "type": "string", 
                    "description": "Name of the Remote Syslog module"
                }, 
                "log_severity_level": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Severity level of the logs", 
                    "maximum": 7, 
                    "format": "int32"
                }
            }, 
            "title": "Remote Syslog Module"
        }, 
        "remote_connection_token": {
            "description": "Token information for communicating with remote peer", 
            "type": "object", 
            "properties": {
                "access_token": {
                    "type": "string", 
                    "description": "Access token"
                }, 
                "client_secret": {
                    "type": "string", 
                    "description": "Client Secret"
                }, 
                "refresh_token_endpoint": {
                    "type": "string", 
                    "description": "Refresh token endpoint"
                }, 
                "client_id": {
                    "type": "string", 
                    "description": "Client Id"
                }, 
                "refresh_token": {
                    "type": "string", 
                    "description": "Refresh token"
                }
            }, 
            "title": "Token info"
        }, 
        "support_case_intent_input": {
            "description": "An intentful representation of a support_case", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/support_case"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/support_case_metadata"
                }
            }, 
            "title": "support_case Intent Entity"
        }, 
        "prism_central_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "prism_central", 
                    "x-ntnx-enum": [
                        "prism_central"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for prism_central list output"
        }, 
        "category_mapping_intent_input": {
            "description": "An intentful representation of a category_mapping", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/category_mapping"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/category_mapping_metadata"
                }
            }, 
            "title": "category_mapping Intent Entity"
        }, 
        "perspective_link_group": {
            "description": "Perspective link group object definition.", 
            "type": "object", 
            "properties": {
                "persepective_link_list": {
                    "items": {
                        "$ref": "#/definitions/perspective_link"
                    }, 
                    "type": "array", 
                    "description": "List of all the perspectives for a query."
                }
            }, 
            "title": "Perspective Link Group Definition"
        }, 
        "vendor_config": {
            "description": "Vendor device and its versions.", 
            "type": "object", 
            "properties": {
                "version_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Vendor device version list."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Vendor device name."
                }
            }, 
            "title": "Vendor device and its versions."
        }, 
        "prism_central_enable_cmsp_status": {
            "description": "Prism central CMSP enablement status definition.", 
            "required": [
                "task_uuid"
            ], 
            "type": "object", 
            "properties": {
                "task_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of created task to enable MSP.", 
                    "format": "UUID"
                }
            }, 
            "title": "Prism central CMSP enablement status."
        }, 
        "day_time": {
            "description": "Day and Time at which NGT policy should be triggered.", 
            "required": [
                "day_of_week", 
                "time"
            ], 
            "type": "object", 
            "properties": {
                "day_of_week": {
                    "x-ntnx-enum": [
                        "SUNDAY", 
                        "MONDAY", 
                        "TUESDAY", 
                        "WEDNESDAY", 
                        "THURSDAY", 
                        "FRIDAY", 
                        "SATURDAY"
                    ], 
                    "type": "string", 
                    "description": "Day of week the policy has to take effect."
                }, 
                "time": {
                    "type": "string", 
                    "description": "Time of the day, the policy will be started. This is in \"<x>h:<y>m\"\nformat. The values must be between 00h:00m and 23h:59m. For example\nuser specified 18h:00m and the current time is 17h:00m then the first\nsnapshot will be captured at 18h:00m. If the current time is 19h:00m\nthen the first snapshot will be captured at 18h:00m next day. If not\nset, policy will be applicable immediately.\n"
                }
            }, 
            "title": "Day and Time at which NGT policy should be triggered"
        }, 
        "cloud_tenant_intent_input": {
            "description": "An intentful representation of a cloud_tenant", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/cloud_tenant"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/cloud_tenant_metadata"
                }
            }, 
            "title": "cloud_tenant Intent Entity"
        }, 
        "vm_clone_override_spec": {
            "description": "Properties of the VM that can be overriden during clone.", 
            "type": "object", 
            "properties": {
                "num_threads_per_core": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Number of logical threads per core.", 
                    "format": "int32"
                }, 
                "nic_list": {
                    "items": {
                        "$ref": "#/definitions/vm_nic"
                    }, 
                    "type": "array", 
                    "description": "If specified, the complete list of NICs attached to the cloned VM.\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": "VM Name.", 
                    "maxLength": 80
                }, 
                "num_vcpus_per_socket": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Number of vCPUs per socket.", 
                    "format": "int32"
                }, 
                "num_sockets": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Number of vCPU sockets.", 
                    "format": "int32"
                }, 
                "memory_size_mib": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "Memory size in MiB.", 
                    "format": "int32"
                }, 
                "boot_config": {
                    "description": "Indicates which device the VM should boot from.", 
                    "$ref": "#/definitions/vm_boot_config"
                }, 
                "guest_customization": {
                    "$ref": "#/definitions/guest_customization"
                }
            }, 
            "title": "VM clone override spec."
        }, 
        "action_trigger_type_reference": {
            "description": "The reference to a action_trigger_type", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "action_trigger_type", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "action_trigger_type"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a action_trigger_type"
        }, 
        "vm": {
            "description": "An intentful representation of a vm spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "vm Name.", 
                    "maxLength": 256
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for vm.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/vm_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "vm Intent Spec with placement specified"
        }, 
        "customization_spec_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "customization_spec", 
                    "x-ntnx-enum": [
                        "customization_spec"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for customization_spec list"
        }, 
        "app_runlog_response": {
            "description": "Response containing the current state of the runlog", 
            "required": [
                "api_version", 
                "metadata", 
                "status"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/app_runlog_resources"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/app_runlog_metadata"
                }
            }, 
            "title": "Response containing the current state of the runlog"
        }, 
        "disk_list_intent_response": {
            "description": "Response object for intentful operation of disks", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/disk_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/disk_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "rackable_unit_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "rackable_unit", 
                    "x-ntnx-enum": [
                        "rackable_unit"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for rackable_unit list output"
        }, 
        "ova_list_metadata": {
            "description": "API call for OVA that returns a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ova", 
                    "x-ntnx-enum": [
                        "ova"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for OVA list"
        }, 
        "action_result": {
            "description": "The execution of a single action instance from an action rule.\nIt includes input and output parameters, as well as properties such as\nexecution start time and any errors during execution.\n", 
            "required": [
                "execution_start_time", 
                "action_type_reference", 
                "execution_status"
            ], 
            "type": "object", 
            "properties": {
                "action_instance_index": {
                    "type": "integer", 
                    "description": "Index of action instance in action rule.", 
                    "format": "int64"
                }, 
                "action_type_reference": {
                    "description": "the action type for the action.", 
                    "$ref": "#/definitions/action_type_reference"
                }, 
                "output_parameter_values": {
                    "description": "Trigger output parameters.", 
                    "$ref": "#/definitions/component_instance_parameters"
                }, 
                "action_type_display_name": {
                    "pattern": "^[^&<>'/\"]*$", 
                    "type": "string", 
                    "description": "the display name", 
                    "maxLength": 64
                }, 
                "error_message_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "A list of error messages if failed, or if timed out.  For actions that\nhave rule's on_timeout property set to RETRY, each of the retry could\nhave one timeout message.\n"
                }, 
                "execution_status": {
                    "description": "the action execution status", 
                    "$ref": "#/definitions/execution_status"
                }, 
                "info_message_list": {
                    "items": {
                        "pattern": "^[^&<>'/\"]*$", 
                        "type": "string", 
                        "maxLength": 2000
                    }, 
                    "type": "array", 
                    "description": "A list of informational messages associated with the actions result.\n"
                }, 
                "execution_start_time": {
                    "type": "string", 
                    "description": "Denotes the timestamp when the action is invoked.", 
                    "format": "date-time"
                }, 
                "input_parameter_values": {
                    "description": "The ordered action input parameters.", 
                    "$ref": "#/definitions/component_instance_parameters"
                }, 
                "execution_end_time": {
                    "type": "string", 
                    "description": "Denotes the timestamp when the action is completed.", 
                    "format": "date-time"
                }
            }, 
            "title": "Action execution result"
        }, 
        "app_runlog_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_runlog", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_runlog"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "vpc_route_table_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "vpc_route_table", 
                    "x-ntnx-enum": [
                        "vpc_route_table"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for vpc_route_table list"
        }, 
        "vpc_metadata": {
            "description": "The vpc kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vpc was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "vpc", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "vpc"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "vpc uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the vpc is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when vpc was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vpc. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the vpc. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "vpc name", 
                    "maxLength": 80
                }
            }, 
            "title": "vpc metadata"
        }, 
        "role_metadata": {
            "description": "The role kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when role was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "role", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "role"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "role uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the role is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when role was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the role. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the role. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "role name", 
                    "maxLength": 80
                }
            }, 
            "title": "role metadata"
        }, 
        "resource_domain_metadata": {
            "description": "The resource_domain kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when resource_domain was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "resource_domain", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "resource_domain"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "resource_domain uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the resource_domain is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when resource_domain was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the resource_domain. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the resource_domain. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "resource_domain name", 
                    "maxLength": 80
                }
            }, 
            "title": "resource_domain metadata"
        }, 
        "aws_subnet_metadata": {
            "description": "The aws_subnet kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_subnet was last updated\n", 
                    "format": "date-time"
                }, 
                "kind": {
                    "default": "aws_subnet", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_subnet"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "aws_subnet uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the aws_subnet is in", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_subnet was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the aws_subnet"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "aws_subnet name"
                }
            }, 
            "title": "aws_subnet metadata"
        }, 
        "network_device": {
            "description": "Network device entity definition", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "An optional name for the device", 
                    "maxLength": 50
                }, 
                "resources": {
                    "$ref": "#/definitions/network_device_resources"
                }, 
                "description": {
                    "type": "string", 
                    "description": "An optional description for the device", 
                    "maxLength": 1000
                }
            }, 
            "title": "Network device entity"
        }, 
        "recovery_plan_network": {
            "description": "Network configuration to be used for performing network mapping and IP preservation/mapping on Recovery Plan execution.\n", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the network.\n", 
                    "maxLength": 64
                }, 
                "vpc_reference": {
                    "description": "Reference to the VPC.", 
                    "$ref": "#/definitions/vpc_reference"
                }, 
                "use_vpc_reference": {
                    "type": "boolean", 
                    "description": "Client need to specify this field as true while using vpc_reference for specifying the VPC for the network. Without this values in vpc_reference will be ignored.\n"
                }, 
                "virtual_network_reference": {
                    "description": "Reference to the Virtual Network. This reference is deprecated, use vpc_reference instead.", 
                    "$ref": "#/definitions/virtual_network_reference"
                }, 
                "subnet_list": {
                    "items": {
                        "$ref": "#/definitions/recovery_plan_subnet_config"
                    }, 
                    "type": "array", 
                    "description": "List of subnets for the network.\n"
                }
            }, 
            "title": "Network configuration for the Recovery Plan\n"
        }, 
        "blackout_intent_resource": {
            "description": "Response object for intentful operations on a blackout", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/blackout_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/blackout"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/blackout_metadata"
                }
            }, 
            "title": "blackout Intent Response"
        }, 
        "logout_response": {
            "description": "Response from logout object", 
            "type": "object", 
            "properties": {
                "external_logout_url_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of addition logout urls which should be called by UI"
                }
            }, 
            "title": "Logout response"
        }, 
        "target_group": {
            "description": "Target group", 
            "type": "object", 
            "properties": {
                "filter": {
                    "description": "The set of categories that matching VMs need to have.", 
                    "$ref": "#/definitions/category_filter"
                }, 
                "default_internal_policy": {
                    "x-ntnx-enum": [
                        "ALLOW_ALL", 
                        "DENY_ALL"
                    ], 
                    "type": "string", 
                    "description": "Default policy for communication within target group."
                }, 
                "peer_specification_type": {
                    "x-ntnx-enum": [
                        "FILTER"
                    ], 
                    "type": "string", 
                    "description": "Way to identify the object for which rule is applied."
                }
            }, 
            "title": "Target group"
        }, 
        "recovery_plan_job_metadata": {
            "description": "The recovery_plan_job kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when recovery_plan_job was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "recovery_plan_job", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "recovery_plan_job"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "recovery_plan_job uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the recovery_plan_job is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when recovery_plan_job was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the recovery_plan_job. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the recovery_plan_job. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "recovery_plan_job name", 
                    "maxLength": 80
                }
            }, 
            "title": "recovery_plan_job metadata"
        }, 
        "cloud_trust_response": {
            "description": "Cloud trusts response definition.", 
            "required": [
                "remote_connection_reference"
            ], 
            "type": "object", 
            "properties": {
                "url": {
                    "type": "string", 
                    "description": "URL of the Cloud (Nutanix hosted cloud/ Onprem Cloud) to pair to.", 
                    "maxLength": 2083
                }, 
                "username": {
                    "type": "string", 
                    "description": "Username to be used for basic authentication."
                }, 
                "password": {
                    "type": "string", 
                    "description": "Password to be used for basic authentication."
                }, 
                "cloud_type": {
                    "description": "Type of cloud to pair to.", 
                    "$ref": "#/definitions/cloud_type"
                }, 
                "remote_connection_reference": {
                    "description": "Reference of the remote connection created while cloud pairing\n", 
                    "$ref": "#/definitions/remote_connection_reference"
                }
            }, 
            "title": "Cloud Trusts Response."
        }, 
        "guest_tools_status": {
            "description": "Information regarding guest tools.", 
            "type": "object", 
            "properties": {
                "nutanix_guest_tools": {
                    "description": "Nutanix Guest Tools information", 
                    "$ref": "#/definitions/nutanix_guest_tools_status"
                }
            }, 
            "title": "Guest Tools information"
        }, 
        "recovery_plan_metadata": {
            "description": "The recovery_plan kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when recovery_plan was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "recovery_plan", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "recovery_plan"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "recovery_plan uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the recovery_plan is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when recovery_plan was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the recovery_plan. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the recovery_plan. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "recovery_plan name", 
                    "maxLength": 80
                }
            }, 
            "title": "recovery_plan metadata"
        }, 
        "vm_storage_config": {
            "description": "User inputs of storage configuration parameters for VMs.", 
            "type": "object", 
            "properties": {
                "qos_policy": {
                    "description": "Storage QoS parameters to be applied on the VM.\nThe parameters are reset if the default values are passed.\n", 
                    "$ref": "#/definitions/storage_qos_policy_config_input"
                }, 
                "flash_mode": {
                    "description": "State of the storage policy to pin virtual disks of the VM to the\nhot tier.\n", 
                    "$ref": "#/definitions/flash_mode"
                }
            }, 
            "title": "VM Storage Config input"
        }, 
        "image_migrate_input": {
            "description": "Specify the cluster and image(s) from the cluster to migrate to PC\n", 
            "required": [
                "cluster_reference"
            ], 
            "type": "object", 
            "properties": {
                "image_reference_list": {
                    "items": {
                        "$ref": "#/definitions/image_reference"
                    }, 
                    "type": "array", 
                    "description": "Reference to the images from PE cluster to be migrated\n"
                }, 
                "cluster_reference": {
                    "description": "Reference to the PE cluster that currently owns images to be migrated.\n", 
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "Input for image migration"
        }, 
        "query_response": {
            "description": "Query response.", 
            "type": "object", 
            "properties": {
                "filtered_entity_count": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "group_results": {
                    "items": {
                        "$ref": "#/definitions/query_group_results"
                    }, 
                    "type": "array"
                }, 
                "total_group_count": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "total_entity_count": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "entity_type": {
                    "type": "string", 
                    "description": "The entity type for the query response."
                }
            }, 
            "title": "Query Response"
        }, 
        "remote_rpc_request_input": {
            "description": "Request spec for performing remote RPC execution.", 
            "required": [
                "rpc_payload"
            ], 
            "properties": {
                "rpc_payload": {
                    "type": "string", 
                    "description": "Argument to be passed to the RPC in bytes.", 
                    "format": "bytes"
                }
            }, 
            "title": "Request spec for performing remote RPC execution"
        }, 
        "app_credential_reference_upload": {
            "description": "The reference to a app_credential", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_credential", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_credential"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_credential"
        }, 
        "category_query_input": {
            "description": "Categories query input object.", 
            "type": "object", 
            "properties": {
                "usage_type": {
                    "$ref": "#/definitions/category_query_usage_type"
                }, 
                "group_member_offset": {
                    "type": "integer", 
                    "description": "The offset into the total member set to return per group.", 
                    "format": "int64"
                }, 
                "group_member_count": {
                    "type": "integer", 
                    "description": "The maximum number of members to return per group.", 
                    "format": "int64"
                }, 
                "category_filter": {
                    "$ref": "#/definitions/category_filter"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Category Query Input"
        }, 
        "disk_intent_response": {
            "description": "Response object for intentful operations on a disk", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/disk_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/disk"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/disk_metadata"
                }
            }, 
            "title": "disk Intent Response"
        }, 
        "task_metadata": {
            "description": "The task kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when task was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "task", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "task"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "task uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the task is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when task was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the task. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the task. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "task name", 
                    "maxLength": 80
                }
            }, 
            "title": "task metadata"
        }, 
        "routing_policy_reference": {
            "description": "The reference to a routing_policy", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "routing_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "routing_policy"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a routing_policy"
        }, 
        "image_resources_def_status": {
            "description": "Describes the image status resources object.", 
            "type": "object", 
            "properties": {
                "retrieval_uri_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of URIs where the raw image data can be accessed.\n"
                }, 
                "current_cluster_reference_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_image_reference"
                    }, 
                    "type": "array", 
                    "description": "List of clusters where image is currently present."
                }, 
                "image_type": {
                    "$ref": "#/definitions/image_type"
                }, 
                "checksum": {
                    "description": "Checksum of the image. The checksum is used for image validation if the image has a source specified. For images that do not have their source specified the checksum is generated by the image service.\n", 
                    "$ref": "#/definitions/checksum"
                }, 
                "source_uri": {
                    "type": "string", 
                    "description": "The source URI points at the location of a the source image which is used to create/update image.\n"
                }, 
                "initial_placement_ref_list": {
                    "items": {
                        "$ref": "#/definitions/cluster_image_reference"
                    }, 
                    "type": "array", 
                    "description": "List of clusters where image is requested to be placed at time of creation. This argument will not be honored at time of update.\n"
                }, 
                "version": {
                    "description": "The image version", 
                    "$ref": "#/definitions/image_version_status"
                }, 
                "architecture": {
                    "description": "Indicates the CPU architecture that the image is compatible with. If this is not specified for an image this will default to the CPU architecture type of the cluster.\n", 
                    "$ref": "#/definitions/image_architecture"
                }, 
                "size_bytes": {
                    "type": "integer", 
                    "description": "The size of the image in bytes.", 
                    "format": "int64"
                }, 
                "data_source_reference": {
                    "description": "Reference to VM disk. The expected kind for VMs Disk is vm_disk. The uuid should be the disk device uuid, where the disk device is from disk_list from VM status.\n", 
                    "$ref": "#/definitions/reference"
                }, 
                "image_placement_policy_state_list": {
                    "items": {
                        "$ref": "#/definitions/image_placement_policy_state"
                    }, 
                    "type": "array", 
                    "description": "A single image could get multiple policies applied to it. In such cases, each policy state is shown as an element of this list.\n"
                }, 
                "source_options": {
                    "$ref": "#/definitions/source_options"
                }
            }, 
            "title": "Image status resources"
        }, 
        "network_security_rule_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_security_rule", 
                    "x-ntnx-enum": [
                        "network_security_rule"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for network_security_rule list"
        }, 
        "direct_connect_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "direct_connect", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "direct_connect"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "aws_subnet_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_subnet", 
                    "x-ntnx-enum": [
                        "aws_subnet"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for aws_subnet list"
        }, 
        "software_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "software", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "software"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "vm_intent_input": {
            "description": "An intentful representation of a vm", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/vm"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_metadata"
                }
            }, 
            "title": "vm Intent Entity"
        }, 
        "recovery_point_restore_input": {
            "description": "Input object for the generic restore API. It contains the details of sub recovery points that need to be restored. If nothing is populated in the body, the entire composite recovery point is restored.\n", 
            "type": "object", 
            "properties": {
                "vm_list": {
                    "items": {
                        "required": [
                            "vm_recovery_point_reference"
                        ], 
                        "type": "object", 
                        "properties": {
                            "vm_recovery_point_reference": {
                                "$ref": "#/definitions/vm_recovery_point_reference"
                            }, 
                            "mh_vm_spec": {
                                "$ref": "#/definitions/mh_vm_spec_override"
                            }, 
                            "vm_spec": {
                                "$ref": "#/definitions/vm_spec_override"
                            }, 
                            "metadata": {
                                "$ref": "#/definitions/vm_metadata_override"
                            }
                        }
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Restore API input"
        }, 
        "streaming_policy_def_status": {
            "description": "Streaming Policy Entity", 
            "required": [
                "name", 
                "description", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the streaming policy."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the streaming policy, if in an error state.\n"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Policy name"
                }, 
                "resources": {
                    "$ref": "#/definitions/streaming_policy_details"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Policy description"
                }
            }, 
            "title": "Streaming Policy Entity"
        }, 
        "audit_metadata": {
            "description": "The audit kind metadata", 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when audit was last updated\n", 
                    "format": "date-time"
                }, 
                "kind": {
                    "default": "audit", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "audit"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "audit uuid", 
                    "format": "UUID"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when audit was created\n", 
                    "format": "date-time"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "audit name", 
                    "maxLength": 80
                }
            }, 
            "title": "audit metadata"
        }, 
        "capabilities": {
            "description": "Category key capabilities defintion.", 
            "type": "object", 
            "properties": {
                "cardinality": {
                    "type": "integer", 
                    "description": "Cardinality of the category key.", 
                    "format": "int64"
                }
            }, 
            "title": "Category key capabilities definition."
        }, 
        "batch_response": {
            "description": "List of responses for the API requests in the batch.", 
            "type": "object", 
            "properties": {
                "api_response_list": {
                    "items": {
                        "$ref": "#/definitions/api_response"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Batch api success response"
        }, 
        "tunnel_reference": {
            "description": "The reference to a tunnel", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "tunnel", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "tunnel"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a tunnel"
        }, 
        "entity_counts_output": {
            "description": "The object dictates the counts of realized entities,\nCOMPLIANT entities, NON_COMPLIANT entities and\nIN_PROGRESS entities.\n", 
            "type": "object", 
            "properties": {
                "non_compliant_entities_count": {
                    "type": "integer", 
                    "description": "Counts of NON_COMPLIANT entities.", 
                    "format": "int32"
                }, 
                "realized_entities_count": {
                    "type": "integer", 
                    "description": "Counts of realized entities.", 
                    "format": "int32"
                }, 
                "in_progress_entities_count": {
                    "type": "integer", 
                    "description": "Counts of IN_PROGRESS entities.", 
                    "format": "int32"
                }, 
                "unrealized_entities_count": {
                    "type": "integer", 
                    "description": "Counts of unrealized entities.", 
                    "format": "int32"
                }, 
                "compliant_entities_count": {
                    "type": "integer", 
                    "description": "Counts of COMPLIANT entities.", 
                    "format": "int32"
                }
            }, 
            "title": "Counts pertaining to corresponding entity."
        }, 
        "vm_def_status": {
            "description": "An intentful representation of a vm status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "vm Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the vm."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the vm, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/vm_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for vm."
                }
            }, 
            "title": "vm Intent Status with placement specified"
        }, 
        "my_ntnx_token": {
            "description": "MCM My Nutanix token.", 
            "required": [
                "api_key", 
                "key_id", 
                "scope_id", 
                "subscope_id"
            ], 
            "type": "object", 
            "properties": {
                "key_id": {
                    "type": "string", 
                    "description": "Unique identifier for the API key."
                }, 
                "api_key": {
                    "type": "string", 
                    "description": "API Key issue by my.nutanix API Keys app."
                }, 
                "scope_id": {
                    "type": "string", 
                    "description": "my.nutanix scope Id assigned to the deployed component."
                }, 
                "subscope_id": {
                    "type": "string", 
                    "description": "my.nutanix subscope Id assigned to the deployed component."
                }
            }, 
            "title": "MCM My Nutanix token."
        }, 
        "identity_provider_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "identity_provider", 
                    "x-ntnx-enum": [
                        "identity_provider"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for identity_provider list"
        }, 
        "direct_connect_virtual_interface_intent_response": {
            "description": "Response object for intentful operations on a direct_connect_virtual_interface", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/direct_connect_virtual_interface_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/direct_connect_virtual_interface"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/direct_connect_virtual_interface_metadata"
                }
            }, 
            "title": "direct_connect_virtual_interface Intent Response"
        }, 
        "vm_revert_input": {
            "description": "Input object for the revert API. Pass the UUID of the vm_recovery_point to which the vm is to be reverted to.\n", 
            "required": [
                "vm_recovery_point_uuid"
            ], 
            "type": "object", 
            "properties": {
                "vm_recovery_point_uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Revert API input"
        }, 
        "deployment": {
            "description": "Deployment related config for this gateway.", 
            "type": "object", 
            "properties": {
                "install_lb_route": {
                    "type": "boolean", 
                    "description": "Boolean flag indicating user opt-in for installing Xi LB route in\non-prem PC and PE CVMs provided on-prem PC, PE and VPN VM are in\nthe same subnet\n"
                }, 
                "vcenter_deployment_details": {
                    "description": "vCenter specific information required to deploy the VPN VM\non on-prem ESXi clusters.\n", 
                    "$ref": "#/definitions/vcenter_deployment_details"
                }, 
                "ip_prefix_length": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "IP prefix length of the subnet that the gateway VM is on.", 
                    "maximum": 32, 
                    "format": "uint16"
                }, 
                "static_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Static IP address of the VPN gateway VM."
                }, 
                "default_gateway_ip": {
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", 
                    "type": "string", 
                    "description": "Default gateway IP address."
                }, 
                "image_source_url": {
                    "type": "string", 
                    "description": "The software image to install on the gateway appliance.\nIf set, \"installed_software_version\" must be omitted.\n"
                }, 
                "pe_cluster_reference": {
                    "description": "cluster reference required to identify which on-prem cluster to deploy\nthe vpn gateway vm on. this is required only for deployment on\non-prem clusters running esxi.\n", 
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "subnet_reference": {
                    "description": "The on-prem vlan subnet to deploy the VPN gateway VM on.", 
                    "$ref": "#/definitions/subnet_reference"
                }, 
                "installed_software_version": {
                    "type": "string", 
                    "description": "The software version to install on the gateway appliance.\nIf set, \"image_source_url\" must be omitted.\n", 
                    "maxLength": 1000
                }, 
                "vlan_id": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "The on-prem VLAN to deploy the VPN gateway on. This is not needed if\nthe subnet_reference is provided.\n", 
                    "maximum": 4095, 
                    "format": "uint16"
                }
            }, 
            "title": "Deployment related config for this gateway."
        }, 
        "permission_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "permission", 
                    "x-ntnx-enum": [
                        "permission"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for permission list output"
        }, 
        "direct_connect": {
            "description": "An intentful representation of a direct_connect spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for direct_connect.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/direct_connect_resources"
                }, 
                "name": {
                    "type": "string", 
                    "description": "direct_connect Name.", 
                    "maxLength": 256
                }
            }, 
            "title": "direct_connect Intent Spec with placement specified"
        }, 
        "aws_resource_state": {
            "x-ntnx-enum": [
                "AVAILABLE", 
                "PENDING"
            ], 
            "type": "string", 
            "description": "State of the AWS resource", 
            "title": "Resource State"
        }, 
        "subnet_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "subnet", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "subnet"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "network_function_chain": {
            "description": "network function chain Input Definition.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Network function chain name.", 
                    "maxLength": 64
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for the network function chain.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "$ref": "#/definitions/network_function_chain_resource"
                }, 
                "cluster_reference": {
                    "description": "UUID of cluster that hosts the network function chain.", 
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "network function chain Input Definition"
        }, 
        "network_device_metadata": {
            "description": "The network_device kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when network_device was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "network_device", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_device"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "network_device uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the network_device is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when network_device was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the network_device. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the network_device. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "network_device name", 
                    "maxLength": 80
                }
            }, 
            "title": "network_device metadata"
        }, 
        "citrix_connector_config_details": {
            "description": "Citrix Connector details.", 
            "type": "object", 
            "properties": {
                "citrix_vm_reference_list": {
                    "items": {
                        "$ref": "#/definitions/vm_reference"
                    }, 
                    "type": "array", 
                    "description": "Reference to the list of vm ids registered with citrix cloud."
                }, 
                "client_secret": {
                    "type": "string", 
                    "description": "The client secret for the Citrix Cloud."
                }, 
                "customer_id": {
                    "type": "string", 
                    "description": "The customer id registered with Citrix Cloud."
                }, 
                "client_id": {
                    "type": "string", 
                    "description": "The client id for the Citrix Cloud."
                }, 
                "resource_location": {
                    "$ref": "#/definitions/citrix_resource_location"
                }
            }, 
            "title": "Citrix Connector details."
        }, 
        "action_trigger_type_intent_response": {
            "description": "Response object for intentful operations on a action_trigger_type", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/action_trigger_type_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/action_trigger_type"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_trigger_type_metadata"
                }
            }, 
            "title": "action_trigger_type Intent Response"
        }, 
        "streaming_policy_list_intent_response": {
            "description": "Response object for intentful operation of streaming_policys", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/streaming_policy_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/streaming_policy_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "page": {
            "description": "Page object definition.", 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "Description of the page."
                }, 
                "display_info": {
                    "$ref": "#/definitions/entity_metadata"
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of the page."
                }, 
                "children": {
                    "items": {
                        "type": "object"
                    }, 
                    "type": "array", 
                    "description": "List of child pages of this page. Page is being referred here.\n"
                }, 
                "page_metadata": {
                    "$ref": "#/definitions/page_metadata"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the page."
                }
            }, 
            "title": "Page Defintion"
        }, 
        "blueprint_resources": {
            "description": "Resources for Blueprint.", 
            "type": "object", 
            "properties": {
                "client_attrs": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Data needed for clients."
                }, 
                "service_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_service_input"
                    }, 
                    "type": "array", 
                    "description": "Service definitions for Blueprint."
                }, 
                "substrate_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_substrate_input"
                    }, 
                    "type": "array", 
                    "description": "Substrate definitions for Blueprint."
                }, 
                "credential_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_credential_input"
                    }, 
                    "type": "array", 
                    "description": "Credential definitions for Blueprint."
                }, 
                "package_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_input"
                    }, 
                    "type": "array", 
                    "description": "Package definitions for Blueprint."
                }, 
                "app_profile_list": {
                    "items": {
                        "$ref": "#/definitions/app_profile_input"
                    }, 
                    "type": "array", 
                    "description": "App profile definitions for Blueprint."
                }, 
                "published_service_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_input"
                    }, 
                    "type": "array", 
                    "description": "Published service definitions for Blueprint."
                }, 
                "default_credential_local_reference": {
                    "$ref": "#/definitions/app_credential_reference"
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of blueprint", 
                    "maxLength": 64
                }
            }, 
            "title": "Resources for Blueprint."
        }, 
        "account_intent_input": {
            "description": "An intentful representation of a account", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/account"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/account_metadata"
                }
            }, 
            "title": "account Intent Entity"
        }, 
        "permission_intent_input": {
            "description": "An intentful representation of a permission", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/permission"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/permission_metadata"
                }
            }, 
            "title": "permission Intent Entity"
        }, 
        "network_function_chain_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "network_function_chain", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "network_function_chain"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "environment_reference": {
            "description": "The reference to a environment", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "environment", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "environment"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a environment"
        }, 
        "attachment_reference_output": {
            "properties": {
                "iscsi_initiator_network_id": {
                    "type": "string", 
                    "description": "IPv4 address of the external client.", 
                    "format": "string"
                }, 
                "enabled_authentications": {
                    "x-ntnx-enum": [
                        "CHAP", 
                        "NONE"
                    ], 
                    "type": "string", 
                    "description": "Which authentication is enabled for client."
                }, 
                "vm_reference": {
                    "$ref": "#/definitions/vm_reference"
                }, 
                "iscsi_initiator_name": {
                    "type": "string", 
                    "description": "Name of the iSCSI initiator of the workload outside Nutanix cluster.\n"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "vm_reference"
                    ]
                }, 
                {
                    "required": [
                        "iscsi_initiator_name"
                    ]
                }, 
                {
                    "required": [
                        "iscsi_initiator_network_id"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Attached iSCSI initiators.", 
            "title": "Attached iSCSI initiators"
        }, 
        "vm_gpu": {
            "description": "Graphics resource information for the Virtual Machine.", 
            "type": "object", 
            "properties": {
                "vendor": {
                    "x-ntnx-enum": [
                        "NVIDIA", 
                        "INTEL", 
                        "AMD"
                    ], 
                    "type": "string", 
                    "description": "The vendor of the GPU."
                }, 
                "mode": {
                    "x-ntnx-enum": [
                        "PASSTHROUGH_GRAPHICS", 
                        "PASSTHROUGH_COMPUTE", 
                        "VIRTUAL"
                    ], 
                    "type": "string", 
                    "description": "The mode of this GPU."
                }, 
                "device_id": {
                    "type": "integer", 
                    "description": "The device ID of the GPU.", 
                    "format": "int32"
                }
            }, 
            "title": "VirtualMachine GPU"
        }, 
        "directory_service_user_status": {
            "description": "A Directory Service user.", 
            "type": "object", 
            "properties": {
                "user_principal_name": {
                    "type": "string", 
                    "description": "The UserPrincipalName of the user from the directory service. It will be same as default user principal name if no upn suffix is enabled for user logon name in directory service.\n", 
                    "maxLength": 104
                }, 
                "directory_service_reference": {
                    "description": "Directory service reference if the user type is directory service.\n", 
                    "$ref": "#/definitions/directory_service_reference"
                }, 
                "default_user_principal_name": {
                    "type": "string", 
                    "description": "The Default UserPrincipalName of the user from the directory service. This is of format samAccountName@domain_name.\n", 
                    "maxLength": 104
                }
            }, 
            "title": "Directory Service user Response."
        }, 
        "blackout_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "blackout", 
                    "x-ntnx-enum": [
                        "blackout"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for blackout list"
        }, 
        "ipfix_exporter_reference": {
            "description": "The reference to a ipfix_exporter", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "ipfix_exporter", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "ipfix_exporter"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a ipfix_exporter"
        }, 
        "aws_vm_metadata": {
            "description": "The aws_vm kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_vm was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "aws_vm", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "aws_vm"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "aws_vm uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the aws_vm is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when aws_vm was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the aws_vm. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the aws_vm. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "aws_vm name", 
                    "maxLength": 80
                }
            }, 
            "title": "aws_vm metadata"
        }, 
        "vm_vnuma_config": {
            "description": "Indicates how VM vNUMA should be configured\n", 
            "type": "object", 
            "properties": {
                "num_vnuma_nodes": {
                    "type": "integer", 
                    "description": "Number of vNUMA nodes. 0 means vNUMA is disabled.", 
                    "format": "int64"
                }
            }, 
            "title": "VM vNUMA configuration"
        }, 
        "ipfix_exporter_intent_resource": {
            "description": "Response object for intentful operations on a ipfix_exporter", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/ipfix_exporter_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/ipfix_exporter"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ipfix_exporter_metadata"
                }
            }, 
            "title": "ipfix_exporter Intent Response"
        }, 
        "support_case_upload": {
            "description": "Support Case upload spec.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "description": "Support Case upload resource definition.", 
                    "type": "object", 
                    "properties": {
                        "portal_request_params": {
                            "$ref": "#/definitions/generic_key_value_pair"
                        }, 
                        "log_collector": {
                            "$ref": "#/definitions/log_collector_support_case_upload"
                        }, 
                        "ncc_checks": {
                            "$ref": "#/definitions/ncc_checks_support_case_upload"
                        }, 
                        "case_number": {
                            "type": "string", 
                            "description": "Support Case Number. This is the pretty version of case as visible to the user. Example \"00151752\"\n"
                        }
                    }, 
                    "title": "Support Case Upload Resources."
                }
            }, 
            "title": "Support Case Upload Spec."
        }, 
        "directory_service": {
            "description": "The configuration details of the directory service.", 
            "required": [
                "resources", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "The name of the directory service.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "description": "The details of the directory service.", 
                    "required": [
                        "url", 
                        "domain_name", 
                        "directory_type", 
                        "service_account"
                    ], 
                    "type": "object", 
                    "properties": {
                        "open_ldap_configuration": {
                            "description": "Configuration for OpenLDAP.", 
                            "$ref": "#/definitions/open_ldap_configuration"
                        }, 
                        "url": {
                            "type": "string", 
                            "description": "URL of the directory.", 
                            "maxLength": 2000
                        }, 
                        "directory_type": {
                            "x-ntnx-enum": [
                                "ACTIVE_DIRECTORY", 
                                "OPEN_LDAP"
                            ], 
                            "type": "string", 
                            "description": "Type of the directory service."
                        }, 
                        "admin_user_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_reference"
                            }, 
                            "type": "array", 
                            "description": "The list of admin users available in the directory service.\n"
                        }, 
                        "secondary_urls": {
                            "items": {
                                "type": "string", 
                                "maxLength": 2000
                            }, 
                            "type": "array", 
                            "description": "Secondary URLs of the directory"
                        }, 
                        "domain_name": {
                            "type": "string", 
                            "description": "The domain name of the directory service."
                        }, 
                        "service_account": {
                            "$ref": "#/definitions/service_account"
                        }, 
                        "admin_group_reference_list": {
                            "items": {
                                "$ref": "#/definitions/user_group_reference"
                            }, 
                            "type": "array", 
                            "description": "List of admin user groups available in the directory service.\n"
                        }
                    }, 
                    "title": "Directory service resources"
                }
            }, 
            "title": "Directory service"
        }, 
        "vm_host_affinity_legacy_policy_metadata": {
            "description": "Metadata for VM Host Affinity Legacy Policy.", 
            "type": "object", 
            "properties": {
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of VM Host Affinity Legacy Policy.", 
                    "format": "UUID"
                }
            }, 
            "title": "VM Host Affinity Legacy Policy update metadata"
        }, 
        "schedule": {
            "description": "Defines the schedule parameters.", 
            "required": [
                "interval_type", 
                "interval_multiple"
            ], 
            "type": "object", 
            "properties": {
                "interval_type": {
                    "x-ntnx-enum": [
                        "ONCE", 
                        "MINUTELY", 
                        "HOURLY", 
                        "DAILY", 
                        "WEEKLY", 
                        "MONTHLY", 
                        "YEARLY"
                    ], 
                    "type": "string", 
                    "description": "Type of schedule interval. For schedule once, the interval_type is set\nto Once. ONCE is for aperiodic schedules.\n"
                }, 
                "duration_secs": {
                    "type": "integer", 
                    "description": "Duration of the event. If set, an event of duration duration_usecs\nwill repeat as per the recurrence defined in interval_type.\n", 
                    "format": "int64"
                }, 
                "start_time": {
                    "type": "string", 
                    "description": "Start time of the schedule.\nThe time should be specified in this manner.\ndate-fullyear(4digit) \"-\" date-month(2digit) \"-\" date-mday(2digit) \"T\" time-hour(2digit)\n\":\" time-minute(2digit) \":\" time-second(2digit) [.] \"Z\"  or\n(\"+\" / \"-\") time-hour(2digit) \":\" time-minute(2digit)\nExamples\n- 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of\n  April 12th, 1985 in UTC.\n- 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour\n  of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).\n  Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.\n", 
                    "format": "date-time"
                }, 
                "interval_multiple": {
                    "type": "integer", 
                    "description": "Multiple of interval_type.", 
                    "format": "int32"
                }, 
                "day_of_week": {
                    "items": {
                        "x-ntnx-enum": [
                            "MONDAY", 
                            "TUESDAY", 
                            "WEDNESDAY", 
                            "THURSDAY", 
                            "FRIDAY", 
                            "SATURDAY", 
                            "SUNDAY"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "For schedule on weekly basis,like every Monday and Friday 10:00. To use this field, it is\nrequired that start_time (datetime) is set, and the interval_type is set to weekly or\nNONE.  If interval_type is set to NONE, then, only schedule for Monday and Friday once, in\nthis example.\n"
                }, 
                "end_time": {
                    "type": "string", 
                    "description": "End time of the schedule.\nThe time should be specified in this manner.\ndate-fullyear(4digit) \"-\" date-month(2digit) \"-\" date-mday(2digit) \"T\" time-hour(2digit)\n\":\" time-minute(2digit) \":\" time-second(2digit) [.] \"Z\"  or\n(\"+\" / \"-\") time-hour(2digit) \":\" time-minute(2digit)\nExamples\n- 1985-04-12T23:20:50.52Z represents 20 minutes and 50.52 seconds after the 23rd hour of\n  April 12th, 1985 in UTC.\n- 1996-12-19T16:39:57-08:00 This represents 39 minutes and 57 seconds after the 16th hour\n  of December 19th, 1996 with an offset of -08:00 from UTC (Pacific Standard Time).\n  Note that this is equivalent to 1996-12-20T00:39:57Z in UTC.\n", 
                    "format": "date-time"
                }, 
                "is_suspended": {
                    "type": "boolean", 
                    "description": "Whether the schedule is suspended."
                }
            }, 
            "title": "Schedule definition."
        }, 
        "aws_vm_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "aws_vm", 
                    "x-ntnx-enum": [
                        "aws_vm"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for aws_vm list"
        }, 
        "execution_status": {
            "x-ntnx-enum": [
                "SUCCEEDED", 
                "COMPLETED_WITH_ERROR", 
                "FAILED", 
                "ABORTED", 
                "TIMEDOUT", 
                "INPROGRESS", 
                "SCHEDULED", 
                "TRIGGERED", 
                "PAUSED", 
                "NON_RESUMABLE_PAUSED", 
                "RESUMED"
            ], 
            "type": "string", 
            "description": "The execution status of an action or an action rule.", 
            "title": "Action execution status or action rule execution status."
        }, 
        "host": {
            "description": "Host Definition.", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Host Name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "type": "object", 
                    "description": "Host resources.", 
                    "properties": {
                        "windows_domain": {
                            "$ref": "#/definitions/windows_domain"
                        }, 
                        "controller_vm": {
                            "$ref": "#/definitions/controller_vm"
                        }, 
                        "failover_cluster": {
                            "$ref": "#/definitions/failover_cluster"
                        }
                    }
                }
            }, 
            "title": "Host Input definition"
        }, 
        "identity_categorization_config": {
            "description": "Configuration for identity categorization such as registered directories,\netc.\n", 
            "type": "object", 
            "properties": {
                "is_default_category_enabled": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Enablement status of the default category."
                }, 
                "keep_default_category_on_login": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Retain default category on user login."
                }, 
                "directory_service_config_list": {
                    "items": {
                        "$ref": "#/definitions/identity_categorization_directory_config"
                    }, 
                    "type": "array", 
                    "description": "Directory service specific config."
                }
            }, 
            "title": "Identity Categorization Configuration"
        }, 
        "floating_ip_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "floating_ip", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "floating_ip"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "app_service_reference_upload": {
            "description": "The reference to a app_service", 
            "required": [
                "kind", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_service", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_service"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a app_service"
        }, 
        "environment_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "environment", 
                    "x-ntnx-enum": [
                        "environment"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for environment list"
        }, 
        "recovered_entity_information": {
            "description": "This contains Source entity reference and Recovered entity information such as Entity name, Entity UUID.\n", 
            "type": "object", 
            "properties": {
                "error_detail": {
                    "type": "string", 
                    "description": "Error detail information in case there was a failure in recovering the entity.\n"
                }, 
                "source_entity_reference": {
                    "description": "Source entity reference.", 
                    "$ref": "#/definitions/reference"
                }, 
                "recovered_entity_info": {
                    "type": "object", 
                    "description": "Information about recovered entity.", 
                    "properties": {
                        "entity_uuid": {
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                            "type": "string", 
                            "description": "UUID of the recovered entity.", 
                            "format": "UUID"
                        }, 
                        "entity_name": {
                            "type": "string", 
                            "description": "Name of the recovered entity."
                        }
                    }
                }
            }, 
            "title": "Recovered entity information."
        }, 
        "action_trigger_type_def_status": {
            "description": "Action trigger type entity status definition", 
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "state": {
                    "type": "string", 
                    "description": "The state of the entity."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array"
                }, 
                "resources": {
                    "$ref": "#/definitions/action_trigger_type"
                }
            }, 
            "title": "Action trigger type entity status"
        }, 
        "multicluster_config_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "multicluster_config", 
                    "x-ntnx-enum": [
                        "multicluster_config"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for multicluster_config list output"
        }, 
        "json_web_key": {
            "description": "JSON Web Key.", 
            "required": [
                "alg", 
                "use", 
                "kty", 
                "n", 
                "e"
            ], 
            "type": "object", 
            "properties": {
                "use": {
                    "x-ntnx-enum": [
                        "SIG"
                    ], 
                    "type": "string", 
                    "description": "How the key should be used"
                }, 
                "e": {
                    "type": "string", 
                    "description": "RSA key value (exponent) for key blinding"
                }, 
                "kty": {
                    "x-ntnx-enum": [
                        "RSA"
                    ], 
                    "type": "string", 
                    "description": "Key type"
                }, 
                "alg": {
                    "x-ntnx-enum": [
                        "RSA256"
                    ], 
                    "type": "string", 
                    "description": "Algorithm intended for use with the key"
                }, 
                "n": {
                    "type": "string", 
                    "description": "RSA modulus value"
                }, 
                "kid": {
                    "type": "string", 
                    "description": "Unique identifier for the key"
                }
            }, 
            "title": "JSON Web Key"
        }, 
        "remote_syslog_module_intent_resource": {
            "description": "Response object for intentful operations on a remote_syslog_module", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/remote_syslog_module_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/remote_syslog_module"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_syslog_module_metadata"
                }
            }, 
            "title": "remote_syslog_module Intent Response"
        }, 
        "action_rule_intent_response": {
            "description": "Response object for intentful operations on a action_rule", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/action_rule_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/action_rule"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/action_rule_metadata"
                }
            }, 
            "title": "action_rule Intent Response"
        }, 
        "cloud_credentials_reference": {
            "description": "The reference to a cloud_credentials", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "cloud_credentials", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "cloud_credentials"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a cloud_credentials"
        }, 
        "protection_rule_intent_response": {
            "description": "Response object for intentful operations on a protection_rule", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/protection_rule_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/protection_rule"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/protection_rule_metadata"
                }
            }, 
            "title": "protection_rule Intent Response"
        }, 
        "query_groups_field_data": {
            "description": "Query Group Summary Data.", 
            "type": "object", 
            "properties": {
                "values": {
                    "items": {
                        "$ref": "#/definitions/query_timevalue_pair"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "type": "string", 
                    "maxLength": 64
                }
            }, 
            "title": "Query Field Data."
        }, 
        "virtual_network_reference": {
            "description": "The reference to a virtual_network", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "virtual_network", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "virtual_network"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a virtual_network"
        }, 
        "remote_syslog_server_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "remote_syslog_server", 
                    "x-ntnx-enum": [
                        "remote_syslog_server"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for remote_syslog_server list output"
        }, 
        "vm_validate_restore_output": {
            "items": {
                "type": "object", 
                "x-ntnx-one-of": [
                    {
                        "required": [
                            "error_code"
                        ]
                    }, 
                    {
                        "required": [
                            "warning_code"
                        ]
                    }
                ], 
                "properties": {
                    "warning_code": {
                        "x-ntnx-enum": [
                            "UNKNOWN_WARNING", 
                            "VM_NGT_MULTIPATHING_ENABLED", 
                            "VM_NGT_NOT_INSTALLED"
                        ], 
                        "type": "string", 
                        "description": "Warning due to which vm may not be fully recoverable from\nthe vm recovery point.\n"
                    }, 
                    "unrecoverability_detail": {
                        "type": "string", 
                        "description": "Detailed message which describes unrecoverability warning or error.\n"
                    }, 
                    "error_code": {
                        "x-ntnx-enum": [
                            "VM_RESTORE_NOT_SUPPORTED", 
                            "VIRTUAL_HARDWARE_VERSION_MISMATCH", 
                            "LEGACY_SNAPSHOT_NOT_SUPPORTED", 
                            "TARGET_NOT_REGISTERED_TO_MANAGEMENT_SERVER", 
                            "UNKNOWN_ERROR", 
                            "UNSUPPORTED_DISK_TYPE", 
                            "UNSUPPORTED_RECOVERY_FROM_ESX_TO_AHV", 
                            "UNSUPPORTED_RECOVERY_FROM_AHV_TO_ESX", 
                            "UNSUPPORTED_HYPERVISOR_TYPE", 
                            "UNSUPPORTED_VOLUME_GROUP_ATTACHMENT", 
                            "VM_WITH_DELTA_DISKS", 
                            "VM_WITH_SHARED_VDISKS", 
                            "VM_WITH_UEFI_FIRMWARE", 
                            "VSS_SNAPSHOT_NOT_SUPPORTED"
                        ], 
                        "type": "string", 
                        "description": "Error due to which vm will not be unrecoverable from the\nvm recovery point.\n"
                    }, 
                    "resolution": {
                        "type": "string", 
                        "description": "Detailed message which describes the resolution for warning or\nerror.\n"
                    }
                }
            }, 
            "type": "array", 
            "description": "If vm restoration is not feasible, it contains detailed list of the\ncorresponding errors and warnings. Otherwise none.\n", 
            "title": "vm validate restore output definition."
        }, 
        "project_reference": {
            "description": "The reference to a project", 
            "required": [
                "kind", 
                "uuid"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "project", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "project"
                    ]
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "maxLength": 1024
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "format": "UUID"
                }
            }, 
            "title": "Reference to a project"
        }, 
        "entity_counts_input": {
            "description": "The object dictates whether counts of realized entities,\nCOMPLIANT entities, NON_COMPLIANT entities and\nIN_PROGRESS entities need to be computed.\n", 
            "type": "object", 
            "properties": {
                "realized_count": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Whether to compute counts of realized entities."
                }, 
                "compliance_count": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Whether to compute individual counts of entities which\nare COMPLIANT, NON_COMPLIANT and IN_PROGRESS.\n"
                }, 
                "unrealized_count": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Whether to compute counts of unrealized entities."
                }
            }, 
            "title": "Counts pertaining to corresponding entity."
        }, 
        "ova_get_response": {
            "description": "Response while getting an OVA", 
            "type": "object", 
            "properties": {
                "info": {
                    "$ref": "#/definitions/ova_info"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ova_metadata"
                }
            }, 
            "title": "OVA get response"
        }, 
        "app_task": {
            "description": "An intentful representation of a app_task spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "app_task Name.", 
                    "maxLength": 256
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for app_task.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/app_task_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "app_task Intent Spec with placement specified"
        }, 
        "app_runlog_archive_response": {
            "description": "App Archive Response", 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Archive file name."
                }, 
                "start_time": {
                    "type": "string", 
                    "description": "From time for archive.", 
                    "format": "date-time"
                }, 
                "creation_time": {
                    "type": "string", 
                    "description": "Creation time of archive.", 
                    "format": "date-time"
                }, 
                "is_available": {
                    "type": "boolean", 
                    "description": "Archive available flag."
                }, 
                "end_time": {
                    "type": "string", 
                    "description": "Till time for archive.", 
                    "format": "date-time"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "Archive file uuid.", 
                    "format": "UUID"
                }
            }, 
            "title": "App Archive Response"
        }, 
        "routing_policy_list_intent_response": {
            "description": "Response object for intentful operation of routing_policys", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/routing_policy_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/routing_policy_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "ngt_policy_intent_resource": {
            "description": "Response object for intentful operations on a ngt_policy", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/ngt_policy_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/ngt_policy"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ngt_policy_metadata"
                }
            }, 
            "title": "ngt_policy Intent Response"
        }, 
        "user_list_intent_response": {
            "description": "Response object for intentful operation of users", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/user_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/user_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "access_control_policy_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "access_control_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "access_control_policy"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "traffic_visibility_precheck_results": {
            "description": "IPFix export capability related information.", 
            "type": "object", 
            "properties": {
                "has_passed": {
                    "type": "boolean", 
                    "description": "IPFix export is capable or not on this cluster"
                }, 
                "precheck_result_list": {
                    "items": {
                        "$ref": "#/definitions/traffic_visibility_validation_result"
                    }, 
                    "type": "array", 
                    "description": "Enumerates prechecks for this type and its status (pass or fail)\n"
                }
            }, 
            "title": "IPFix export capablility information."
        }, 
        "remote_connection_list_intent_response": {
            "description": "Response object for intentful operation of remote_connections", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/remote_connection_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_connection_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "layer2_stretch_resources_def_status": {
            "description": "Layer2 stretch status.", 
            "type": "object", 
            "properties": {
                "local_site_params": {
                    "$ref": "#/definitions/stretch_site_params"
                }, 
                "stretch_status": {
                    "$ref": "#/definitions/stretch_status"
                }, 
                "remote_site_params": {
                    "$ref": "#/definitions/stretch_site_params"
                }
            }, 
            "title": "Layer2 stretch status"
        }, 
        "layer2_stretch_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "layer2_stretch", 
                    "x-ntnx-enum": [
                        "layer2_stretch"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for layer2_stretch list"
        }, 
        "environment_resources_def_status": {
            "description": "Status of the environment", 
            "type": "object", 
            "properties": {
                "project_reference": {
                    "description": "The project the environment is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "substrate_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_substrate_response"
                    }, 
                    "type": "array", 
                    "description": "Substrate definitions for Environment."
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response"
                    }, 
                    "type": "array", 
                    "description": "List of variables"
                }, 
                "credential_definition_list": {
                    "items": {
                        "$ref": "#/definitions/app_credential_response"
                    }, 
                    "type": "array", 
                    "description": "Credential definitions for Environment."
                }
            }, 
            "title": "Status of the environment"
        }, 
        "scope_right_hand_side": {
            "properties": {
                "value_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The explicit list of values for the given kind."
                }, 
                "categories": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "The category values represented as a dictionary of key -> list of values. e.g.{\"env\":[\"env1\", \"env2\"]}\n"
                }, 
                "collection": {
                    "x-ntnx-enum": [
                        "ALL"
                    ], 
                    "type": "string", 
                    "description": "A representative term for supported groupings of entities. ALL = All the entities of a given kind.\n"
                }, 
                "uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array", 
                    "description": "The explicit list of UUIDs for the given kind."
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "collection"
                    ]
                }, 
                {
                    "required": [
                        "categories"
                    ]
                }, 
                {
                    "required": [
                        "uuid_list"
                    ]
                }, 
                {
                    "required": [
                        "value_list"
                    ]
                }
            ], 
            "type": "object", 
            "description": "The right hand side of an scope expression.", 
            "title": "The right hand side (RHS) of an scope expression."
        }, 
        "remote_connection_intent_resource": {
            "description": "Response object for intentful operations on a remote_connection", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/remote_connection_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/remote_connection"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/remote_connection_metadata"
                }
            }, 
            "title": "remote_connection Intent Response"
        }, 
        "cluster_service_list": {
            "items": {
                "default": "AOS", 
                "x-ntnx-enum": [
                    "AOS", 
                    "PRISM_CENTRAL", 
                    "CLOUD_DATA_GATEWAY", 
                    "AFS", 
                    "WITNESS", 
                    "XI_PORTAL", 
                    "ONE_NODE", 
                    "TWO_NODE"
                ], 
                "type": "string"
            }, 
            "type": "array", 
            "description": "Array of enabled cluster services. For example, a cluster can function\nas both AOS and cloud data gateway.\n- 'AOS': Regular Prism Element\n- 'PRISM_CENTRAL': Prism Central\n- 'CLOUD_DATA_GATEWAY': Cloud backup and DR gateway\n- 'AFS': Cluster for file server\n- 'WITNESS' : Witness cluster\n- 'XI_PORTAL': Xi cluster\n- 'ONE_NODE_CLUSTER': Single node backup cluster\n- 'TWO_NODE_CLUSTER': Two node cluster\n", 
            "title": "List of Cluster Services"
        }, 
        "flow_security_planning_config_input": {
            "properties": {
                "data_collector_config": {
                    "description": "Parameters required to deploy MSP cluster that will host the Epoch data collector for IPFix records.\n", 
                    "$ref": "#/definitions/data_collector_config"
                }, 
                "state": {
                    "x-ntnx-enum": [
                        "ENABLE", 
                        "DISABLE"
                    ], 
                    "type": "string", 
                    "description": "The desired state of Security Planning."
                }, 
                "epoch_config": {
                    "description": "Parameters required to configure the PC with Epoch AOC and spin up the IPFix aggregator in the PE.\n", 
                    "$ref": "#/definitions/epoch_config"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "state"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Input to configure Security Planning.", 
            "title": "Security Planning configuration."
        }, 
        "category_mapping_list_intent_response": {
            "description": "Response object for intentful operation of category_mappings", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/category_mapping_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/category_mapping_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "vm_boot_device": {
            "properties": {
                "disk_address": {
                    "description": "Address of disk to boot from.", 
                    "$ref": "#/definitions/disk_address"
                }, 
                "mac_address": {
                    "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$", 
                    "type": "string", 
                    "description": "MAC address of nic to boot from.", 
                    "x-example": "50:6b:8d:ee:de:2b"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "disk_address"
                    ]
                }, 
                {
                    "required": [
                        "mac_address"
                    ]
                }
            ], 
            "type": "object", 
            "description": "Indicates which device a VM should boot from. One of disk_address or mac_address should be provided.\n", 
            "title": "VM Boot device"
        }, 
        "csrs_spec": {
            "description": "Spec for CSRs download. If node uuid list is empty, all cluster nodes will\nbe assumed.\n", 
            "type": "object", 
            "properties": {
                "node_uuid_list": {
                    "items": {
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                        "type": "string", 
                        "format": "UUID"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "Spec for CSRs download"
        }, 
        "data_store_config": {
            "description": "data_store_config Object.", 
            "type": "object", 
            "properties": {
                "compression_saving_pct": {
                    "type": "number"
                }, 
                "cpu_overcommit_ratio": {
                    "type": "number"
                }, 
                "cpu_reservation_pct": {
                    "type": "number"
                }, 
                "inline_dedup_saving_pct": {
                    "type": "number"
                }, 
                "dedup_saving_pct": {
                    "type": "number"
                }, 
                "overall_saving_pct": {
                    "type": "number"
                }, 
                "erasure_coding_saving_pct": {
                    "type": "number"
                }, 
                "ram_overcommit_ratio": {
                    "type": "number"
                }, 
                "rf": {
                    "type": "integer"
                }, 
                "n_plus": {
                    "type": "integer"
                }, 
                "ram_reservation_pct": {
                    "type": "number"
                }, 
                "storage_reservation_pct": {
                    "type": "number"
                }
            }, 
            "title": "Data Store Configuration Definition"
        }, 
        "role_list_metadata_output": {
            "description": "All api calls that return a list will have this metadata block\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "role", 
                    "x-ntnx-enum": [
                        "role"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "total_matches": {
                    "type": "integer", 
                    "description": "Total matches found"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter used for the results", 
                    "x-deprecated": true
                }, 
                "length": {
                    "type": "integer", 
                    "description": "The number of records retrieved relative to the offset"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "type": "integer", 
                    "description": "Offset from the start of the entity list"
                }
            }, 
            "title": "Metadata for role list output"
        }, 
        "recovery_plan_job": {
            "description": "Resources for Recovery Plan Job creation.", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Recovery Plan Job name.", 
                    "maxLength": 64
                }, 
                "resources": {
                    "description": "Resources for Recovery Plan Job.", 
                    "$ref": "#/definitions/recovery_plan_job_resources"
                }
            }, 
            "title": "Resources for Recovery Plan Job creation."
        }, 
        "billing_summary_charge_group": {
            "description": "Charges incurred for charge_date.", 
            "type": "object", 
            "properties": {
                "charge_amount": {
                    "description": "total value to be charge/already charged to customer.", 
                    "$ref": "#/definitions/monetary_value"
                }, 
                "charge_date": {
                    "type": "string", 
                    "description": "date on which charge occurred.", 
                    "format": "date"
                }, 
                "quantity": {
                    "type": "integer", 
                    "description": "Total number of billing items for which customer was charged.\n", 
                    "format": "int64"
                }
            }, 
            "title": "Charges incurred for the date."
        }, 
        "vm_host_affinity_policy_update_input": {
            "description": "Defines an affinity policy between a set of VM categories to a set of Host categories.\n", 
            "required": [
                "config", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "config": {
                    "$ref": "#/definitions/vm_host_affinity_policy_config"
                }, 
                "metadata": {
                    "$ref": "#/definitions/vm_host_affinity_policy_update_metadata"
                }
            }, 
            "title": "VM Host Affinity Policy update input"
        }, 
        "external_configurations": {
            "description": "External configurations for the connectors.", 
            "type": "object", 
            "properties": {
                "citrix_connector_config": {
                    "$ref": "#/definitions/citrix_connector_config_details"
                }
            }, 
            "title": "External Connector Configurations."
        }, 
        "report_instance_intent_response": {
            "description": "Response object for intentful operations on a report_instance", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/report_instance_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/report_instance"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/report_instance_metadata"
                }
            }, 
            "title": "report_instance Intent Response"
        }, 
        "disk_state_list": {
            "items": {
                "x-ntnx-enum": [
                    "DATA_MIGRATION_INITIATED", 
                    "MARKED_FOR_REMOVAL_BUT_NOT_DETACHABLE", 
                    "READY_TO_DETACH", 
                    "DATA_MIGRATED", 
                    "MARKED_FOR_REMOVAL", 
                    "ONLINE", 
                    "BAD", 
                    "MOUNTED", 
                    "UNDER_DIAGNOSIS"
                ], 
                "type": "string"
            }, 
            "type": "array", 
            "description": "Array of disk states\n- 'DataMigrationInitiated': Data Migration Initiated.\n- 'MarkedForRemovalButNotDetachable': Marked for removal, data\n   migration is in progress.\n- 'ReadyToDetach': Flag to indicate the disk is detachable.\n- 'DataMigrated': Flag to indicate if data migration is completed for\n   this disk.\n- 'MarkedForRemoval': Flag to indicate if the disk is marked for\n   removal.\n- 'Online': Flag to indicate if the disk is online.\n- 'Bad': Flag to indicate if the disk is bad.\n- 'Mounted': Flag to indicate if the disk is mounted.\n- 'UnderDiagnosis': Flag to indicate if the disk is under diagnosis.\n", 
            "title": "Disk State List"
        }, 
        "ssh_user_intent_input": {
            "description": "An intentful representation of a ssh_user", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/ssh_user"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ssh_user_metadata"
                }
            }, 
            "title": "ssh_user Intent Entity"
        }, 
        "certificate_spec_upload_input": {
            "description": "Input spec for certificate upload.", 
            "required": [
                "spec_list"
            ], 
            "type": "object", 
            "properties": {
                "spec_list": {
                    "items": {
                        "$ref": "#/definitions/certificate_spec"
                    }, 
                    "type": "array", 
                    "description": "List of certificate specs"
                }
            }, 
            "title": "Input spec for certificate upload"
        }, 
        "virtual_server_workload": {
            "description": "Virtual Server workload Object.", 
            "type": "object", 
            "properties": {
                "numVms": {
                    "type": "integer"
                }, 
                "server_profile_type": {
                    "x-ntnx-enum": [
                        "$unknown", 
                        "Small", 
                        "Medium", 
                        "Large"
                    ], 
                    "type": "string"
                }
            }, 
            "title": "Virtual Server workload Definition"
        }, 
        "image_intent_resource": {
            "description": "Response object for intentful operations on a image", 
            "required": [
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "$ref": "#/definitions/image_def_status"
                }, 
                "spec": {
                    "$ref": "#/definitions/image"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/image_metadata"
                }
            }, 
            "title": "image Intent Response"
        }, 
        "user_group_input_resource": {
            "properties": {
                "saml_user_group": {
                    "$ref": "#/definitions/saml_user_group_input"
                }, 
                "directory_service_user_group": {
                    "$ref": "#/definitions/directory_service_user_group_input"
                }, 
                "directory_service_ou": {
                    "$ref": "#/definitions/directory_service_ou_input"
                }
            }, 
            "x-ntnx-one-of": [
                {
                    "required": [
                        "directory_service_user_group"
                    ]
                }, 
                {
                    "required": [
                        "directory_service_ou"
                    ]
                }, 
                {
                    "required": [
                        "saml_user_group"
                    ]
                }
            ], 
            "type": "object", 
            "description": "User Group Resource Definition", 
            "title": "user group resource definition."
        }, 
        "query_group_results": {
            "description": "Query results", 
            "type": "object", 
            "properties": {
                "entity_results": {
                    "items": {
                        "$ref": "#/definitions/query_groups_entity"
                    }, 
                    "type": "array"
                }, 
                "total_entity_count": {
                    "type": "integer", 
                    "format": "int64"
                }
            }, 
            "title": "Query Results"
        }, 
        "app_runlog_metadata": {
            "description": "The app_runlog kind metadata", 
            "required": [
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "last_update_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when app_runlog was last updated\n", 
                    "format": "date-time"
                }, 
                "use_categories_mapping": {
                    "default": false, 
                    "type": "boolean", 
                    "description": "Client need to specify this field as true if user want to use the\nnewer way of assigning the categories. Without this things should work\nas it was earlier.\n"
                }, 
                "kind": {
                    "default": "app_runlog", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "app_runlog"
                    ]
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "app_runlog uuid", 
                    "format": "UUID"
                }, 
                "project_reference": {
                    "description": "The project the app_runlog is in.", 
                    "$ref": "#/definitions/project_reference"
                }, 
                "creation_time": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "UTC date and time in RFC-3339 format when app_runlog was created\n", 
                    "format": "date-time"
                }, 
                "spec_version": {
                    "type": "integer", 
                    "description": "Version number of the latest spec."
                }, 
                "spec_hash": {
                    "type": "string", 
                    "description": "Hash of the spec. This will be returned from server.\n"
                }, 
                "categories_mapping": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        }, 
                        "type": "array"
                    }, 
                    "type": "object", 
                    "description": "Categories for the app_runlog. This allows setting up multiple\nvalues from a single key. Categories assigned using the older view will be\npresent here. This is the new way of assigning categories.\n"
                }, 
                "should_force_translate": {
                    "type": "boolean", 
                    "description": "Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.\n"
                }, 
                "entity_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Logical entity version that allows serializing updates to the entity\nacross multiple API namespaces.  For kinds that support\nentity_version, it overrides spec_version described above.\n"
                }, 
                "owner_reference": {
                    "$ref": "#/definitions/user_reference"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the app_runlog. This allows assigning one value\nof a key to any entity. Changes done in this will be reflected in\nthe categories_mapping field.\n"
                }, 
                "name": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "app_runlog name", 
                    "maxLength": 80
                }
            }, 
            "title": "app_runlog metadata"
        }, 
        "directory_service_search_metadata": {
            "description": "The parameters to search for directory service.", 
            "required": [
                "query"
            ], 
            "type": "object", 
            "properties": {
                "query": {
                    "type": "string", 
                    "description": "The search string."
                }, 
                "searched_attribute_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The attributes for search operation. If not specified, search is\nperformed with the common name.\n"
                }, 
                "returned_attribute_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The attributes the search operation returns. If not available, a list\nof default attributes is returned.\n"
                }, 
                "is_wildcard_search": {
                    "default": true, 
                    "type": "boolean", 
                    "description": "The attribute that tells if the query is a wildcard match or exact match query.\n"
                }
            }, 
            "title": "Directory service search metadata"
        }, 
        "resource_time_series": {
            "description": "TimeSeries Object.", 
            "type": "object", 
            "properties": {
                "start_time_sec": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "capacity_list": {
                    "items": {
                        "type": "number"
                    }, 
                    "type": "array"
                }, 
                "end_time_sec": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "name": {
                    "type": "string"
                }, 
                "sampling_interval_sec": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "usage_list": {
                    "items": {
                        "type": "number"
                    }, 
                    "type": "array"
                }, 
                "effective_capacity_list": {
                    "items": {
                        "type": "number"
                    }, 
                    "type": "array"
                }
            }, 
            "title": "TimeSeries Definition"
        }, 
        "idempotence_identifiers_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "idempotence_identifiers", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "idempotence_identifiers"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "subnet_list_intent_response": {
            "description": "Response object for intentful operation of subnets", 
            "required": [
                "api_version", 
                "metadata"
            ], 
            "type": "object", 
            "properties": {
                "entities": {
                    "items": {
                        "$ref": "#/definitions/subnet_intent_resource"
                    }, 
                    "type": "array"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/subnet_list_metadata_output"
                }
            }, 
            "title": "Entity Intent List Response"
        }, 
        "entity_reference": {
            "description": "Reference to an entity.", 
            "type": "object", 
            "properties": {
                "kind": {
                    "type": "string", 
                    "description": "Kind of the reference."
                }, 
                "type": {
                    "x-ntnx-enum": [
                        "CATEGORIES_MATCH_ALL", 
                        "CATEGORIES_MATCH_ANY"
                    ], 
                    "type": "string", 
                    "description": "The type of filter being used."
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "UUID of the entity.", 
                    "format": "UUID"
                }, 
                "categories": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Categories for the entity."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the entity.", 
                    "maxLength": 64
                }
            }, 
            "title": "Entity Reference."
        }, 
        "subnet": {
            "description": "An intentful representation of a subnet spec", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "subnet Name.", 
                    "maxLength": 256
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for subnet.", 
                    "maxLength": 1000
                }, 
                "resources": {
                    "$ref": "#/definitions/subnet_resources"
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }
            }, 
            "title": "subnet Intent Spec with placement specified"
        }, 
        "routing_policy_status": {
            "description": "The status of a REST API call. Only used when there is a failure to\nreport.\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "routing_policy", 
                    "readOnly": true, 
                    "type": "string", 
                    "description": "The kind name", 
                    "x-ntnx-enum": [
                        "routing_policy"
                    ]
                }, 
                "code": {
                    "readOnly": true, 
                    "type": "integer", 
                    "description": "The HTTP error code."
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "readOnly": true, 
                    "type": "array"
                }, 
                "state": {
                    "readOnly": true, 
                    "type": "string"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }
            }, 
            "title": "Response Kind"
        }, 
        "id_categorization_domain_controller": {
            "description": "Configuration for an AD domain controller.", 
            "required": [
                "host"
            ], 
            "type": "object", 
            "properties": {
                "host": {
                    "type": "string", 
                    "description": "IPv4 Address or hostname for the domain controller.\n", 
                    "maxLength": 200
                }
            }, 
            "title": "AD domain controller"
        }, 
        "search_request": {
            "description": "Search Query Object definitions.", 
            "type": "object", 
            "properties": {
                "query_context": {
                    "type": "string", 
                    "description": "Common context for query which needs to be shared across client and\nsearch service. Client can pass some context which will be echoed back\nalong with the response.\n", 
                    "maxLength": 1024
                }, 
                "explicit_query": {
                    "type": "boolean", 
                    "description": "Flag to indicate the user explicitly made this query (e.g by pressing\nenter) and is not still typing. Helpful for tracking concrete queries\nfired by the user.\n"
                }, 
                "generate_autocompletions_only": {
                    "type": "boolean", 
                    "description": "Flag to specify  if user is interested only in autocompletions.\n"
                }, 
                "query_term_list": {
                    "items": {
                        "$ref": "#/definitions/query_term"
                    }, 
                    "type": "array", 
                    "description": "Structured representation that infers query intent unambiguously. Client will echo this information back to the backend. Essentially, it is like a search result link. The list has an item corresponding to every query term. One user query is nothing but a collection of multiple query terms.\n"
                }, 
                "is_autocomplete_selection": {
                    "type": "boolean", 
                    "description": "Flag to indicate the user selected an autocomplete.\nHelpful for tracking concrete autocomplete selections.\n"
                }, 
                "timezone": {
                    "type": "string", 
                    "description": "Timezone in which the query is getting excecuted.\n", 
                    "maxLength": 1024
                }, 
                "user_query": {
                    "type": "string", 
                    "description": "User query in simple text.", 
                    "maxLength": 2048
                }, 
                "widget_id_list": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Optional list of widgets that a client can request for a specific\nquery.The list is meant to be populated with IDs based on the\nprevious searchresponse. For instance the first response can\nindicate that the result consists of widget ids\n\"property_summary\", \"metric_summary\" (or some other form of\nunique identifier but without any actual data). The client can\nthen make a second request for those widgets. This helps in\nperformance reasons as well as for refreshing content on demand.\n"
                }
            }, 
            "title": "Search Query Definition"
        }, 
        "affected_entity": {
            "description": "Information about an entity that is affected by a protection rule. This\nis like a union, at a time either VM or VG reference will be set.\n", 
            "type": "object", 
            "properties": {
                "conflicting_protection_rule_list": {
                    "items": {
                        "type": "object", 
                        "properties": {
                            "protection_rule_reference": {
                                "description": "Protection rule reference that has conflicts over this entity.\n", 
                                "$ref": "#/definitions/protection_rule_reference"
                            }
                        }
                    }, 
                    "type": "array", 
                    "description": "List of reference to conflicting protection rules for an entity. If\nan entity is filtered by multiple protection rules, Kanon service can\nnot protect that entity. We will flag those entities along with the\nprotection rules. This is set only incase if the entity has conflicts.\n"
                }, 
                "vm_reference": {
                    "description": "Reference to the VM entity.", 
                    "$ref": "#/definitions/vm_reference"
                }
            }, 
            "title": "Entity information"
        }, 
        "recovery_plan_job_execution_phases_status": {
            "description": "Execution status of three phases Preprocessing, Operation, Postprocessing in the Recovery Plan Job execution.\n", 
            "required": [
                "status", 
                "percentage_complete"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "x-ntnx-enum": [
                        "QUEUED", 
                        "RUNNING", 
                        "COMPLETED", 
                        "FAILED", 
                        "ABORTED", 
                        "COMPLETED_WITH_WARNING", 
                        "FAILED_WITH_WARNING"
                    ], 
                    "type": "string", 
                    "description": "State of execution of the Recovery Plan Job."
                }, 
                "postprocessing_status": {
                    "description": "Status of steps performed after the recovery for the entities for the Recovery Plan Job.\n", 
                    "$ref": "#/definitions/recovery_plan_job_step_status"
                }, 
                "operation_status": {
                    "description": "Status of the steps performed for the recovery of the entities for the Recovery Plan Job.\n", 
                    "$ref": "#/definitions/recovery_plan_job_step_status"
                }, 
                "percentage_complete": {
                    "type": "integer", 
                    "description": "Percentage completed for Recovery Plan Job.", 
                    "format": "int32"
                }, 
                "preprocessing_status": {
                    "description": "Status of the steps performed before the recovery of the entities for the Recovery Plan Job.\n", 
                    "$ref": "#/definitions/recovery_plan_job_step_status"
                }
            }, 
            "title": "Execution status of phases in the Recovery Plan Job execution."
        }, 
        "cloud_credentials_resources": {
            "description": "Cloud credentials resources", 
            "required": [
                "cloud_type"
            ], 
            "type": "object", 
            "properties": {
                "is_default": {
                    "type": "boolean", 
                    "description": "Indicates if it is the default credentials"
                }, 
                "key_id": {
                    "type": "string", 
                    "description": "Access key for AWS, or subscription id for Azure\n"
                }, 
                "cloud_type": {
                    "$ref": "#/definitions/cloud_type"
                }, 
                "secure_id": {
                    "type": "string", 
                    "description": "Secret key for AWS, or full file path of the Azure client certificate\nfile(<file_name>.pem)\n"
                }
            }, 
            "title": "Cloud Credentials resources"
        }, 
        "volume_group_intent_input": {
            "description": "An intentful representation of a volume_group", 
            "required": [
                "metadata", 
                "spec"
            ], 
            "type": "object", 
            "properties": {
                "spec": {
                    "$ref": "#/definitions/volume_group"
                }, 
                "api_version": {
                    "$ref": "#/definitions/api_version"
                }, 
                "metadata": {
                    "$ref": "#/definitions/volume_group_metadata"
                }
            }, 
            "title": "volume_group Intent Entity"
        }, 
        "list_entities_to_sync_response": {
            "items": {
                "type": "object", 
                "x-ntnx-one-of": [
                    "entity_reference", 
                    "category_reference"
                ], 
                "properties": {
                    "availability_zone_sync_details": {
                        "items": {
                            "type": "object", 
                            "properties": {
                                "operation_type": {
                                    "x-ntnx-enum": [
                                        "UPDATE", 
                                        "DELETE"
                                    ], 
                                    "type": "string", 
                                    "description": "Type of the sync operation", 
                                    "title": "Sync Operation"
                                }, 
                                "sync_status": {
                                    "x-ntnx-enum": [
                                        "IN_SYNC", 
                                        "OUT_OF_SYNC", 
                                        "SYNCING"
                                    ], 
                                    "type": "string", 
                                    "description": "Sync state of the entity.", 
                                    "title": "Sync Status"
                                }, 
                                "target_availability_zone_reference": {
                                    "description": "Reference to the target Availability Zone where entity can be\nsynced.\n", 
                                    "$ref": "#/definitions/availability_zone_reference"
                                }
                            }
                        }, 
                        "type": "array"
                    }, 
                    "entity_reference": {
                        "description": "Reference of entity that will be synced.", 
                        "$ref": "#/definitions/reference"
                    }, 
                    "category_reference": {
                        "type": "object", 
                        "description": "Category name and a list of values that will be synced.\n", 
                        "additionalProperties": {
                            "items": {
                                "type": "string"
                            }, 
                            "type": "array"
                        }
                    }
                }
            }, 
            "type": "array", 
            "description": "List of entities that needs to be synced to connected Availability Zones.\nA category name is considered as one entity irrespective of how many\ncategory values that it is paired with.\n", 
            "title": "Response of list_entities_to_sync API"
        }, 
        "mh_vm_def_status": {
            "description": "An intentful representation of a mh_vm status", 
            "required": [
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "mh_vm Name."
                }, 
                "state": {
                    "type": "string", 
                    "description": "The state of the mh_vm."
                }, 
                "availability_zone_reference": {
                    "$ref": "#/definitions/availability_zone_reference"
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Any error messages for the mh_vm, if in an error state."
                }, 
                "cluster_reference": {
                    "$ref": "#/definitions/cluster_reference"
                }, 
                "resources": {
                    "$ref": "#/definitions/mh_vm_resources_def_status"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A description for mh_vm."
                }
            }, 
            "title": "mh_vm Intent Status with placement specified"
        }, 
        "blueprint_deployment_response_download": {
            "description": "Deployment definition for Application.", 
            "required": [
                "name", 
                "substrate_local_reference", 
                "min_replicas", 
                "max_replicas", 
                "state", 
                "message_list"
            ], 
            "type": "object", 
            "properties": {
                "percent_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "fault_domain_scope": {
                    "x-ntnx-enum": [
                        "HOST", 
                        "CLUSTER", 
                        "AZ"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "description": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 1000
                }, 
                "action_list": {
                    "items": {
                        "$ref": "#/definitions/app_action_response_download"
                    }, 
                    "type": "array", 
                    "description": "List of references to action\n"
                }, 
                "type": {
                    "default": "GREENFIELD", 
                    "x-ntnx-enum": [
                        "BROWNFIELD", 
                        "GREENFIELD", 
                        "K8S_DEPLOYMENT"
                    ], 
                    "type": "string", 
                    "description": ""
                }, 
                "message_list": {
                    "items": {
                        "$ref": "#/definitions/message_resource"
                    }, 
                    "type": "array", 
                    "description": "Message list for blueprint deployment"
                }, 
                "uuid": {
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$", 
                    "type": "string", 
                    "description": "", 
                    "format": "UUID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "", 
                    "maxLength": 64
                }, 
                "editables": {
                    "additionalProperties": true, 
                    "type": "object", 
                    "description": "Runtime editable attributes for this entity. The structure for this is a dictionary. The keys in this dictionary should be the name of the attribute on the entity. If the attribute is editable, the value should be true, else false. If the attribute is a nested dictionary, the value can contain a nested dictionary with the same key value structure described above.\n"
                }, 
                "state": {
                    "type": "string", 
                    "description": ""
                }, 
                "published_service_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_published_service_reference_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references for published services"
                }, 
                "depends_on_list": {
                    "items": {
                        "$ref": "#/definitions/entity_reference"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "max_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Maximum replicas for the deployment."
                }, 
                "package_local_reference_list": {
                    "items": {
                        "$ref": "#/definitions/app_package_reference_upload"
                    }, 
                    "type": "array", 
                    "description": "List of references for the packages"
                }, 
                "substrate_local_reference": {
                    "$ref": "#/definitions/app_substrate_reference_upload"
                }, 
                "variable_list": {
                    "items": {
                        "$ref": "#/definitions/app_variable_response_download"
                    }, 
                    "type": "array", 
                    "description": ""
                }, 
                "min_replicas": {
                    "default": "1", 
                    "type": "string", 
                    "description": "Minimum replicas for the deployment."
                }, 
                "options": {
                    "additionalProperties": true, 
                    "description": "Additional deployment options"
                }, 
                "num_fault_tolerance": {
                    "type": "integer", 
                    "description": "", 
                    "format": "int64"
                }, 
                "brownfield_instance_list": {
                    "items": {
                        "$ref": "#/definitions/brownfield_instance_input"
                    }, 
                    "type": "array", 
                    "description": "brownfield map"
                }
            }, 
            "title": "Deployment Definition for Application."
        }, 
        "app_task_list_metadata": {
            "description": "All api calls that return a list will have this metadata block as input\n", 
            "type": "object", 
            "properties": {
                "kind": {
                    "default": "app_task", 
                    "x-ntnx-enum": [
                        "app_task"
                    ], 
                    "type": "string", 
                    "description": "The kind name"
                }, 
                "sort_attribute": {
                    "type": "string", 
                    "description": "The attribute to perform sort on"
                }, 
                "filter": {
                    "type": "string", 
                    "description": "The filter in FIQL syntax used for the results.", 
                    "x-deprecated": true
                }, 
                "length": {
                    "minimum": 1, 
                    "type": "integer", 
                    "description": "The number of records to retrieve relative to the offset", 
                    "format": "int32"
                }, 
                "sort_order": {
                    "$ref": "#/definitions/sort_order"
                }, 
                "offset": {
                    "minimum": 0, 
                    "type": "integer", 
                    "description": "Offset from the start of the entity list", 
                    "format": "int32"
                }
            }, 
            "title": "Metadata for app_task list"
        }
    }, 
    "security": [
        {
            "basicAuth": []
        }
    ], 
    "swagger": "2.0"
}