/*
Copyright (c) 2019 Red Hat, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Information about the API of a cluster.
struct ClusterAPI {
	// The URL of the API server of the cluster.
	URL String
	// The listening method of the API server.
	Listening ListeningMethod
	
	// Describes the CIDR Block access policy to the Kubernetes API server.
	CIDRBlockAccess CIDRBlockAccess
}

// Describes the CIDR Block access policy to the Kubernetes API server.
// Currently, only supported for ARO-HCP based clusters.
// The default policy mode is "allow_all" that is, all access is allowed.
struct CIDRBlockAccess {
	Allow CIDRBlockAllowAccess
}

struct CIDRBlockAllowAccess {
	// There are two modes: "allow_all" and "allow_list"; if "allow_list" is provided than a non-empty 'values' list must be provided.
	// Otherwise, if "allow_all" is provided then 'values' list should be omitted.
	Mode String
	// The 'values' list should contain a CIDR block list (An IPV4 address range in the format `<ipv4_address>/<network_mask>`). 
	// The maximum number of CIDR blocks supported is 500. The CIDR blocks should be non-overlapping and valid.
	// The value "0.0.0.0/0" is not considered a valid value, as the user can use "allow_all" mode to indicate this behavior.
	// The values should not contain the set of Private IP address ranges.
	Values []String
}
