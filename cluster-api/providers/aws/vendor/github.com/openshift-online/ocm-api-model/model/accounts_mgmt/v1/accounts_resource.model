/*
Copyright (c) 2019 Red Hat, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Manages the collection of accounts.
resource Accounts {
	// Retrieves the list of accounts.
	method List {
		// Index of the requested page, where one corresponds to the first page.
		in out Page Integer = 1

		// Maximum number of items that will be contained in the returned page.
		in out Size Integer = 100

		// Total number of items of the collection that match the search criteria,
		// regardless of the size of the page.
		out Total Integer

		// Order criteria.
		//
		// The syntax of this parameter is similar to the syntax of the _order by_ clause of
		// a SQL statement. For example, in order to sort the
		// accounts descending by name identifier the value should be:
		//
		// ```sql
		// name desc
		// ```
		//
		// If the parameter isn't provided, or if the value is empty, then the order of the
		// results is undefined.
		in Order String

		// Search criteria.
		//
		// The syntax of this parameter is similar to the syntax of the _where_ clause
		// of an SQL statement, but using the names of the attributes of the account
		// instead of the names of the columns of a table. For example, in order to
		// retrieve accounts with username starting with my:
		//
		// ```sql
		// username like 'my%'
		// ```
		//
		// If the parameter isn't provided, or if the value is empty, then all the
		// items that the user has permission to see will be returned.
		in Search String

		// Projection
		// This field contains a comma-separated list of fields you'd like to get in
		// a result. No new fields can be added, only existing ones can be filtered.
		// To specify a field 'id' of a structure 'plan' use 'plan.id'.
		// To specify all fields of a structure 'labels' use 'labels.*'.
		//
		in Fields String

		// If true, includes the labels on an account in the output. Could slow request response time.
		@http(name = "fetchLabels")
		in FetchLabels Boolean

		// Retrieved list of accounts.
		out Items []Account
	}

	// Creates a new account.
	method Add {
		// Account data.
		in out Body Account
	}

	// Reference to the service that manages an specific account.
	locator Account {
		target Account
		variable ID
	}
}
