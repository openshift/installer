/*
Copyright (c) 2019 Red Hat, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Manages a specific cluster.
resource Cluster {
	// Retrieves the details of the cluster.
	method Get {
		out Body Cluster
	}

	// Updates the cluster.
	method Update {
		in out Body Cluster
	}

	// Deletes the cluster.
	method Delete {
		// If false it will only delete from OCM but not the actual cluster resources.
		// false is only allowed for OCP clusters. true by default.
		in Deprovision Boolean = true

		// Dry run flag is used to check if the operation can be completed, but won't delete.
		in DryRun Boolean = false

		// BestEffort flag is used to check if the cluster deletion should be best-effort mode or not.
		in BestEffort Boolean = false
	}

	// Reference to the resource that manages the detailed status of the cluster.
	locator Status {
		target ClusterStatus
	}

	// Reference to the resource that manages the credentials of the cluster.
	locator Credentials {
		target Credentials
	}

	// Reference to the resource that manages the collection of logs of the cluster.
	locator Logs {
		target Logs
	}

	// Reference to the resource that manages the collection of groups.
	locator Groups {
		target Groups
	}

	// Reference to the resource that manages the collection of identity providers.
	locator IdentityProviders {
		target IdentityProviders
	}

    // Reference to the resource that manages the external authentication configuration.
    locator ExternalAuthConfig {
        target ExternalAuthConfig
    }

	// Reference to the resource that manages the external configuration.
	locator ExternalConfiguration {
		target ExternalConfiguration
	}

	// Reference to the resource that manages the break glass credentials.
    locator BreakGlassCredentials {
        target BreakGlassCredentials
    }

	// Reference to the resource that manages the cluster's provision shard.
	locator ProvisionShard {
		target ProvisionShard
	}

	// Reference to the resource that manages the collection of ingress resources.
	locator Ingresses {
		target Ingresses
	}

	// Reference to the resource that manages the collection of inflight checks.
	locator InflightChecks {
		target InflightChecks
	}

    // Reference to the resource that manages the collection of machine pool resources.
	locator MachinePools {
		target MachinePools
	}

    // Reference to the resource that manages the collection of node pool resources.
    locator NodePools {
        target NodePools
    }

	// Initiates cluster hibernation. While hibernating a cluster will not consume any cloud provider infrastructure
	// but will be counted for quota.
    method Hibernate {

    }

    // Resumes from Hibernation.
    method Resume {

    }

	// Reference to the resource that manages metrics queries for the cluster.
	locator MetricQueries {
		target MetricQueries
	}

	// Reference to the resource that manages the collection of add-ons installed on this cluster.
	locator Addons {
		target AddOnInstallations
	}

	// Reference to the resource that manages the collection of the add-on inquiries on this cluster.
	locator AddonInquiries {
	    target AddonInquiries
	}

	// Reference to the resource that manages the collection of AWS infrastructure
	// access role grants on this cluster.
	locator AWSInfrastructureAccessRoleGrants {
		target AWSInfrastructureAccessRoleGrants
	}

	// Reference to the resource that manages the collection of upgrade policies defined for this cluster.
	locator UpgradePolicies {
		target UpgradePolicies
	}

	// Reference to the resource that manages the collection of upgrade policies defined for control plane for this cluster.
	locator ControlPlane {
		target ControlPlane
	}

	// Reference to the resource that manages the collection of addon upgrade policies defined for this cluster.
	locator AddonUpgradePolicies {
	    target AddonUpgradePolicies
	}

	// Reference to the resource that manages the cluster deployment.
	locator Clusterdeployment {
		target Clusterdeployment
	}

	// Reference to cluster resources.
	locator Resources {
	    target Resources
	}

	// Reference to cluster limited support reasons.
	locator LimitedSupportReasons {
	    target LimitedSupportReasons
	}

	// Reference to cluster's agreed version gate.
	locator GateAgreements {
	    target VersionGateAgreements
	}

	locator STSOperatorRoles {
		target OperatorIAMRoles
	}

	locator Hypershift {
		target Hypershift
	}

	locator AWS {
		target AWS
	}

	// Reference to the resource that manages the collection of tuning configs for this cluster.
	locator TuningConfigs {
		target TuningConfigs
	}

	locator KubeletConfigs {
	    target KubeletConfigs
	}

	locator DeleteProtection {
		target DeleteProtection
	}

	locator StsSupportJumpRole{
		target StsSupportJumpRole
	}

	// Reference to the resource that manages the cluster autoscaler.
	locator Autoscaler {
		target Autoscaler
	}

	// Reference to the resource that manages the vpc resource.
	locator Vpc {
		target Vpc
	}

	locator KubeletConfig {
	    target KubeletConfig
	}

	locator Migrations {
	    target ClusterMigrations
	}

	// Reference to the resource that manages image mirror configurations for the cluster.
	locator ImageMirrors {
		target ImageMirrors
	}
}
