/*
Copyright (c) 2023 Red Hat, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Cluster-wide autoscaling configuration.
class ClusterAutoscaler {
	// BalanceSimilarNodeGroups enables/disables the
	// `--balance-similar-node-groups` cluster-autoscaler feature.
	// This feature will automatically identify node groups with
	// the same instance type and the same set of labels and try
	// to keep the respective sizes of those node groups balanced.
	BalanceSimilarNodeGroups Boolean

	// Enables/Disables `--skip-nodes-with-local-storage` CA feature flag. If true cluster autoscaler will never delete nodes with pods with local storage, e.g. EmptyDir or HostPath. true by default at autoscaler.
	SkipNodesWithLocalStorage Boolean

	// Sets the autoscaler log level.
	// Default value is 1, level 4 is recommended for DEBUGGING and level 6 will enable almost everything.
	LogVerbosity Integer

	// Gives pods graceful termination time before scaling down.
	MaxPodGracePeriod Integer

	// To allow users to schedule "best-effort" pods, which shouldn't trigger
	// Cluster Autoscaler actions, but only run when there are spare resources available,
	// More info: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#how-does-cluster-autoscaler-work-with-pod-priority-and-preemption.
	PodPriorityThreshold Integer

	// Should CA ignore DaemonSet pods when calculating resource utilization for scaling down. false by default.
	IgnoreDaemonsetsUtilization Boolean

	// Maximum time CA waits for node to be provisioned.
	MaxNodeProvisionTime String

	// This option specifies labels that cluster autoscaler should ignore when considering node group similarity.
	// For example, if you have nodes with "topology.ebs.csi.aws.com/zone" label, you can add name of this label here
	// to prevent cluster autoscaler from splitting nodes into different node groups based on its value.
	BalancingIgnoredLabels []String

	// Constraints of autoscaling resources.
	ResourceLimits AutoscalerResourceLimits

	// Configuration of scale down operation.
	ScaleDown AutoscalerScaleDownConfig
}
