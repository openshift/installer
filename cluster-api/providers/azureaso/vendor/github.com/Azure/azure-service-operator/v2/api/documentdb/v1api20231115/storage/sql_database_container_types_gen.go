// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/configmaps"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/core"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/secrets"
	"github.com/pkg/errors"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:rbac:groups=documentdb.azure.com,resources=sqldatabasecontainers,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=documentdb.azure.com,resources={sqldatabasecontainers/status,sqldatabasecontainers/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="Severity",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].severity"
// +kubebuilder:printcolumn:name="Reason",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].reason"
// +kubebuilder:printcolumn:name="Message",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].message"
// Storage version of v1api20231115.SqlDatabaseContainer
// Generator information:
// - Generated from: /cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2023-11-15/cosmos-db.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}
type SqlDatabaseContainer struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SqlDatabaseContainer_Spec   `json:"spec,omitempty"`
	Status            SqlDatabaseContainer_STATUS `json:"status,omitempty"`
}

var _ conditions.Conditioner = &SqlDatabaseContainer{}

// GetConditions returns the conditions of the resource
func (container *SqlDatabaseContainer) GetConditions() conditions.Conditions {
	return container.Status.Conditions
}

// SetConditions sets the conditions on the resource status
func (container *SqlDatabaseContainer) SetConditions(conditions conditions.Conditions) {
	container.Status.Conditions = conditions
}

var _ configmaps.Exporter = &SqlDatabaseContainer{}

// ConfigMapDestinationExpressions returns the Spec.OperatorSpec.ConfigMapExpressions property
func (container *SqlDatabaseContainer) ConfigMapDestinationExpressions() []*core.DestinationExpression {
	if container.Spec.OperatorSpec == nil {
		return nil
	}
	return container.Spec.OperatorSpec.ConfigMapExpressions
}

var _ secrets.Exporter = &SqlDatabaseContainer{}

// SecretDestinationExpressions returns the Spec.OperatorSpec.SecretExpressions property
func (container *SqlDatabaseContainer) SecretDestinationExpressions() []*core.DestinationExpression {
	if container.Spec.OperatorSpec == nil {
		return nil
	}
	return container.Spec.OperatorSpec.SecretExpressions
}

var _ genruntime.KubernetesResource = &SqlDatabaseContainer{}

// AzureName returns the Azure name of the resource
func (container *SqlDatabaseContainer) AzureName() string {
	return container.Spec.AzureName
}

// GetAPIVersion returns the ARM API version of the resource. This is always "2023-11-15"
func (container SqlDatabaseContainer) GetAPIVersion() string {
	return "2023-11-15"
}

// GetResourceScope returns the scope of the resource
func (container *SqlDatabaseContainer) GetResourceScope() genruntime.ResourceScope {
	return genruntime.ResourceScopeResourceGroup
}

// GetSpec returns the specification of this resource
func (container *SqlDatabaseContainer) GetSpec() genruntime.ConvertibleSpec {
	return &container.Spec
}

// GetStatus returns the status of this resource
func (container *SqlDatabaseContainer) GetStatus() genruntime.ConvertibleStatus {
	return &container.Status
}

// GetSupportedOperations returns the operations supported by the resource
func (container *SqlDatabaseContainer) GetSupportedOperations() []genruntime.ResourceOperation {
	return []genruntime.ResourceOperation{
		genruntime.ResourceOperationDelete,
		genruntime.ResourceOperationGet,
		genruntime.ResourceOperationPut,
	}
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers"
func (container *SqlDatabaseContainer) GetType() string {
	return "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers"
}

// NewEmptyStatus returns a new empty (blank) status
func (container *SqlDatabaseContainer) NewEmptyStatus() genruntime.ConvertibleStatus {
	return &SqlDatabaseContainer_STATUS{}
}

// Owner returns the ResourceReference of the owner
func (container *SqlDatabaseContainer) Owner() *genruntime.ResourceReference {
	group, kind := genruntime.LookupOwnerGroupKind(container.Spec)
	return container.Spec.Owner.AsResourceReference(group, kind)
}

// SetStatus sets the status of this resource
func (container *SqlDatabaseContainer) SetStatus(status genruntime.ConvertibleStatus) error {
	// If we have exactly the right type of status, assign it
	if st, ok := status.(*SqlDatabaseContainer_STATUS); ok {
		container.Status = *st
		return nil
	}

	// Convert status to required version
	var st SqlDatabaseContainer_STATUS
	err := status.ConvertStatusTo(&st)
	if err != nil {
		return errors.Wrap(err, "failed to convert status")
	}

	container.Status = st
	return nil
}

// Hub marks that this SqlDatabaseContainer is the hub type for conversion
func (container *SqlDatabaseContainer) Hub() {}

// OriginalGVK returns a GroupValueKind for the original API version used to create the resource
func (container *SqlDatabaseContainer) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: container.Spec.OriginalVersion,
		Kind:    "SqlDatabaseContainer",
	}
}

// +kubebuilder:object:root=true
// Storage version of v1api20231115.SqlDatabaseContainer
// Generator information:
// - Generated from: /cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2023-11-15/cosmos-db.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}
type SqlDatabaseContainerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SqlDatabaseContainer `json:"items"`
}

// Storage version of v1api20231115.SqlDatabaseContainer_Spec
type SqlDatabaseContainer_Spec struct {
	// AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
	// doesn't have to be.
	AzureName       string                            `json:"azureName,omitempty"`
	Location        *string                           `json:"location,omitempty"`
	OperatorSpec    *SqlDatabaseContainerOperatorSpec `json:"operatorSpec,omitempty"`
	Options         *CreateUpdateOptions              `json:"options,omitempty"`
	OriginalVersion string                            `json:"originalVersion,omitempty"`

	// +kubebuilder:validation:Required
	// Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
	// controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
	// reference to a documentdb.azure.com/SqlDatabase resource
	Owner       *genruntime.KnownResourceReference `group:"documentdb.azure.com" json:"owner,omitempty" kind:"SqlDatabase"`
	PropertyBag genruntime.PropertyBag             `json:"$propertyBag,omitempty"`
	Resource    *SqlContainerResource              `json:"resource,omitempty"`
	Tags        map[string]string                  `json:"tags,omitempty"`
}

var _ genruntime.ConvertibleSpec = &SqlDatabaseContainer_Spec{}

// ConvertSpecFrom populates our SqlDatabaseContainer_Spec from the provided source
func (container *SqlDatabaseContainer_Spec) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == container {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(container)
}

// ConvertSpecTo populates the provided destination from our SqlDatabaseContainer_Spec
func (container *SqlDatabaseContainer_Spec) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == container {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(container)
}

// Storage version of v1api20231115.SqlDatabaseContainer_STATUS
type SqlDatabaseContainer_STATUS struct {
	Conditions  []conditions.Condition                     `json:"conditions,omitempty"`
	Id          *string                                    `json:"id,omitempty"`
	Location    *string                                    `json:"location,omitempty"`
	Name        *string                                    `json:"name,omitempty"`
	Options     *OptionsResource_STATUS                    `json:"options,omitempty"`
	PropertyBag genruntime.PropertyBag                     `json:"$propertyBag,omitempty"`
	Resource    *SqlContainerGetProperties_Resource_STATUS `json:"resource,omitempty"`
	Tags        map[string]string                          `json:"tags,omitempty"`
	Type        *string                                    `json:"type,omitempty"`
}

var _ genruntime.ConvertibleStatus = &SqlDatabaseContainer_STATUS{}

// ConvertStatusFrom populates our SqlDatabaseContainer_STATUS from the provided source
func (container *SqlDatabaseContainer_STATUS) ConvertStatusFrom(source genruntime.ConvertibleStatus) error {
	if source == container {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return source.ConvertStatusTo(container)
}

// ConvertStatusTo populates the provided destination from our SqlDatabaseContainer_STATUS
func (container *SqlDatabaseContainer_STATUS) ConvertStatusTo(destination genruntime.ConvertibleStatus) error {
	if destination == container {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return destination.ConvertStatusFrom(container)
}

// Storage version of v1api20231115.SqlContainerGetProperties_Resource_STATUS
type SqlContainerGetProperties_Resource_STATUS struct {
	AnalyticalStorageTtl     *int                             `json:"analyticalStorageTtl,omitempty"`
	ClientEncryptionPolicy   *ClientEncryptionPolicy_STATUS   `json:"clientEncryptionPolicy,omitempty"`
	ComputedProperties       []ComputedProperty_STATUS        `json:"computedProperties,omitempty"`
	ConflictResolutionPolicy *ConflictResolutionPolicy_STATUS `json:"conflictResolutionPolicy,omitempty"`
	CreateMode               *string                          `json:"createMode,omitempty"`
	DefaultTtl               *int                             `json:"defaultTtl,omitempty"`
	Etag                     *string                          `json:"_etag,omitempty"`
	Id                       *string                          `json:"id,omitempty"`
	IndexingPolicy           *IndexingPolicy_STATUS           `json:"indexingPolicy,omitempty"`
	PartitionKey             *ContainerPartitionKey_STATUS    `json:"partitionKey,omitempty"`
	PropertyBag              genruntime.PropertyBag           `json:"$propertyBag,omitempty"`
	RestoreParameters        *RestoreParametersBase_STATUS    `json:"restoreParameters,omitempty"`
	Rid                      *string                          `json:"_rid,omitempty"`
	Ts                       *float64                         `json:"_ts,omitempty"`
	UniqueKeyPolicy          *UniqueKeyPolicy_STATUS          `json:"uniqueKeyPolicy,omitempty"`
}

// Storage version of v1api20231115.SqlContainerResource
// Cosmos DB SQL container resource object
type SqlContainerResource struct {
	AnalyticalStorageTtl     *int                      `json:"analyticalStorageTtl,omitempty"`
	ClientEncryptionPolicy   *ClientEncryptionPolicy   `json:"clientEncryptionPolicy,omitempty"`
	ComputedProperties       []ComputedProperty        `json:"computedProperties,omitempty"`
	ConflictResolutionPolicy *ConflictResolutionPolicy `json:"conflictResolutionPolicy,omitempty"`
	CreateMode               *string                   `json:"createMode,omitempty"`
	DefaultTtl               *int                      `json:"defaultTtl,omitempty"`
	Id                       *string                   `json:"id,omitempty"`
	IndexingPolicy           *IndexingPolicy           `json:"indexingPolicy,omitempty"`
	PartitionKey             *ContainerPartitionKey    `json:"partitionKey,omitempty"`
	PropertyBag              genruntime.PropertyBag    `json:"$propertyBag,omitempty"`
	RestoreParameters        *RestoreParametersBase    `json:"restoreParameters,omitempty"`
	UniqueKeyPolicy          *UniqueKeyPolicy          `json:"uniqueKeyPolicy,omitempty"`
}

// Storage version of v1api20231115.SqlDatabaseContainerOperatorSpec
// Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
type SqlDatabaseContainerOperatorSpec struct {
	ConfigMapExpressions []*core.DestinationExpression `json:"configMapExpressions,omitempty"`
	PropertyBag          genruntime.PropertyBag        `json:"$propertyBag,omitempty"`
	SecretExpressions    []*core.DestinationExpression `json:"secretExpressions,omitempty"`
}

// Storage version of v1api20231115.ClientEncryptionPolicy
// Cosmos DB client encryption policy.
type ClientEncryptionPolicy struct {
	IncludedPaths       []ClientEncryptionIncludedPath `json:"includedPaths,omitempty"`
	PolicyFormatVersion *int                           `json:"policyFormatVersion,omitempty"`
	PropertyBag         genruntime.PropertyBag         `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20231115.ClientEncryptionPolicy_STATUS
// Cosmos DB client encryption policy.
type ClientEncryptionPolicy_STATUS struct {
	IncludedPaths       []ClientEncryptionIncludedPath_STATUS `json:"includedPaths,omitempty"`
	PolicyFormatVersion *int                                  `json:"policyFormatVersion,omitempty"`
	PropertyBag         genruntime.PropertyBag                `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20231115.ComputedProperty
// The definition of a computed property
type ComputedProperty struct {
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Query       *string                `json:"query,omitempty"`
}

// Storage version of v1api20231115.ComputedProperty_STATUS
// The definition of a computed property
type ComputedProperty_STATUS struct {
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Query       *string                `json:"query,omitempty"`
}

// Storage version of v1api20231115.ConflictResolutionPolicy
// The conflict resolution policy for the container.
type ConflictResolutionPolicy struct {
	ConflictResolutionPath      *string                `json:"conflictResolutionPath,omitempty"`
	ConflictResolutionProcedure *string                `json:"conflictResolutionProcedure,omitempty"`
	Mode                        *string                `json:"mode,omitempty"`
	PropertyBag                 genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20231115.ConflictResolutionPolicy_STATUS
// The conflict resolution policy for the container.
type ConflictResolutionPolicy_STATUS struct {
	ConflictResolutionPath      *string                `json:"conflictResolutionPath,omitempty"`
	ConflictResolutionProcedure *string                `json:"conflictResolutionProcedure,omitempty"`
	Mode                        *string                `json:"mode,omitempty"`
	PropertyBag                 genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20231115.ContainerPartitionKey
// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKey struct {
	Kind        *string                `json:"kind,omitempty"`
	Paths       []string               `json:"paths,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Version     *int                   `json:"version,omitempty"`
}

// Storage version of v1api20231115.ContainerPartitionKey_STATUS
// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKey_STATUS struct {
	Kind        *string                `json:"kind,omitempty"`
	Paths       []string               `json:"paths,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	SystemKey   *bool                  `json:"systemKey,omitempty"`
	Version     *int                   `json:"version,omitempty"`
}

// Storage version of v1api20231115.IndexingPolicy
// Cosmos DB indexing policy
type IndexingPolicy struct {
	Automatic        *bool                  `json:"automatic,omitempty"`
	CompositeIndexes [][]CompositePath      `json:"compositeIndexes,omitempty"`
	ExcludedPaths    []ExcludedPath         `json:"excludedPaths,omitempty"`
	IncludedPaths    []IncludedPath         `json:"includedPaths,omitempty"`
	IndexingMode     *string                `json:"indexingMode,omitempty"`
	PropertyBag      genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	SpatialIndexes   []SpatialSpec          `json:"spatialIndexes,omitempty"`
}

// Storage version of v1api20231115.IndexingPolicy_STATUS
// Cosmos DB indexing policy
type IndexingPolicy_STATUS struct {
	Automatic        *bool                    `json:"automatic,omitempty"`
	CompositeIndexes [][]CompositePath_STATUS `json:"compositeIndexes,omitempty"`
	ExcludedPaths    []ExcludedPath_STATUS    `json:"excludedPaths,omitempty"`
	IncludedPaths    []IncludedPath_STATUS    `json:"includedPaths,omitempty"`
	IndexingMode     *string                  `json:"indexingMode,omitempty"`
	PropertyBag      genruntime.PropertyBag   `json:"$propertyBag,omitempty"`
	SpatialIndexes   []SpatialSpec_STATUS     `json:"spatialIndexes,omitempty"`
}

// Storage version of v1api20231115.UniqueKeyPolicy
// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure
// Cosmos DB service.
type UniqueKeyPolicy struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	UniqueKeys  []UniqueKey            `json:"uniqueKeys,omitempty"`
}

// Storage version of v1api20231115.UniqueKeyPolicy_STATUS
// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure
// Cosmos DB service.
type UniqueKeyPolicy_STATUS struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	UniqueKeys  []UniqueKey_STATUS     `json:"uniqueKeys,omitempty"`
}

// Storage version of v1api20231115.ClientEncryptionIncludedPath
// .
type ClientEncryptionIncludedPath struct {
	ClientEncryptionKeyId *string                `json:"clientEncryptionKeyId,omitempty"`
	EncryptionAlgorithm   *string                `json:"encryptionAlgorithm,omitempty"`
	EncryptionType        *string                `json:"encryptionType,omitempty"`
	Path                  *string                `json:"path,omitempty"`
	PropertyBag           genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20231115.ClientEncryptionIncludedPath_STATUS
// .
type ClientEncryptionIncludedPath_STATUS struct {
	ClientEncryptionKeyId *string                `json:"clientEncryptionKeyId,omitempty"`
	EncryptionAlgorithm   *string                `json:"encryptionAlgorithm,omitempty"`
	EncryptionType        *string                `json:"encryptionType,omitempty"`
	Path                  *string                `json:"path,omitempty"`
	PropertyBag           genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20231115.CompositePath
type CompositePath struct {
	Order       *string                `json:"order,omitempty"`
	Path        *string                `json:"path,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20231115.CompositePath_STATUS
type CompositePath_STATUS struct {
	Order       *string                `json:"order,omitempty"`
	Path        *string                `json:"path,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20231115.ExcludedPath
type ExcludedPath struct {
	Path        *string                `json:"path,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20231115.ExcludedPath_STATUS
type ExcludedPath_STATUS struct {
	Path        *string                `json:"path,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20231115.IncludedPath
// The paths that are included in indexing
type IncludedPath struct {
	Indexes     []Indexes              `json:"indexes,omitempty"`
	Path        *string                `json:"path,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20231115.IncludedPath_STATUS
// The paths that are included in indexing
type IncludedPath_STATUS struct {
	Indexes     []Indexes_STATUS       `json:"indexes,omitempty"`
	Path        *string                `json:"path,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20231115.SpatialSpec
type SpatialSpec struct {
	Path        *string                `json:"path,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Types       []string               `json:"types,omitempty"`
}

// Storage version of v1api20231115.SpatialSpec_STATUS
type SpatialSpec_STATUS struct {
	Path        *string                `json:"path,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Types       []string               `json:"types,omitempty"`
}

// Storage version of v1api20231115.UniqueKey
// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKey struct {
	Paths       []string               `json:"paths,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20231115.UniqueKey_STATUS
// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKey_STATUS struct {
	Paths       []string               `json:"paths,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20231115.Indexes
// The indexes for the path.
type Indexes struct {
	DataType    *string                `json:"dataType,omitempty"`
	Kind        *string                `json:"kind,omitempty"`
	Precision   *int                   `json:"precision,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20231115.Indexes_STATUS
// The indexes for the path.
type Indexes_STATUS struct {
	DataType    *string                `json:"dataType,omitempty"`
	Kind        *string                `json:"kind,omitempty"`
	Precision   *int                   `json:"precision,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

func init() {
	SchemeBuilder.Register(&SqlDatabaseContainer{}, &SqlDatabaseContainerList{})
}
