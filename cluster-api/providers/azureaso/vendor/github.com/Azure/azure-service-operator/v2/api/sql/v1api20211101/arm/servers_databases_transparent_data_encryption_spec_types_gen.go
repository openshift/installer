// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package arm

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type ServersDatabasesTransparentDataEncryption_Spec struct {
	Name string `json:"name,omitempty"`

	// Properties: Resource properties.
	Properties *TransparentDataEncryptionProperties `json:"properties,omitempty"`
}

var _ genruntime.ARMResourceSpec = &ServersDatabasesTransparentDataEncryption_Spec{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2021-11-01"
func (encryption ServersDatabasesTransparentDataEncryption_Spec) GetAPIVersion() string {
	return "2021-11-01"
}

// GetName returns the Name of the resource
func (encryption *ServersDatabasesTransparentDataEncryption_Spec) GetName() string {
	return encryption.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Sql/servers/databases/transparentDataEncryption"
func (encryption *ServersDatabasesTransparentDataEncryption_Spec) GetType() string {
	return "Microsoft.Sql/servers/databases/transparentDataEncryption"
}

// Properties of a transparent data encryption.
type TransparentDataEncryptionProperties struct {
	// State: Specifies the state of the transparent data encryption.
	State *TransparentDataEncryptionProperties_State `json:"state,omitempty"`
}

// +kubebuilder:validation:Enum={"Disabled","Enabled"}
type TransparentDataEncryptionProperties_State string

const (
	TransparentDataEncryptionProperties_State_Disabled = TransparentDataEncryptionProperties_State("Disabled")
	TransparentDataEncryptionProperties_State_Enabled  = TransparentDataEncryptionProperties_State("Enabled")
)

// Mapping from string to TransparentDataEncryptionProperties_State
var transparentDataEncryptionProperties_State_Values = map[string]TransparentDataEncryptionProperties_State{
	"disabled": TransparentDataEncryptionProperties_State_Disabled,
	"enabled":  TransparentDataEncryptionProperties_State_Enabled,
}
