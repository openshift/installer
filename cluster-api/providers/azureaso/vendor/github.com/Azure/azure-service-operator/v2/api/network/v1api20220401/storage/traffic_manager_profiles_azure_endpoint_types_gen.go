// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/configmaps"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/core"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/secrets"
	"github.com/pkg/errors"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:rbac:groups=network.azure.com,resources=trafficmanagerprofilesazureendpoints,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=network.azure.com,resources={trafficmanagerprofilesazureendpoints/status,trafficmanagerprofilesazureendpoints/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="Severity",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].severity"
// +kubebuilder:printcolumn:name="Reason",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].reason"
// +kubebuilder:printcolumn:name="Message",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].message"
// Storage version of v1api20220401.TrafficManagerProfilesAzureEndpoint
// Generator information:
// - Generated from: /trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/trafficmanager.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/AzureEndpoints/{endpointName}
type TrafficManagerProfilesAzureEndpoint struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TrafficManagerProfilesAzureEndpoint_Spec   `json:"spec,omitempty"`
	Status            TrafficManagerProfilesAzureEndpoint_STATUS `json:"status,omitempty"`
}

var _ conditions.Conditioner = &TrafficManagerProfilesAzureEndpoint{}

// GetConditions returns the conditions of the resource
func (endpoint *TrafficManagerProfilesAzureEndpoint) GetConditions() conditions.Conditions {
	return endpoint.Status.Conditions
}

// SetConditions sets the conditions on the resource status
func (endpoint *TrafficManagerProfilesAzureEndpoint) SetConditions(conditions conditions.Conditions) {
	endpoint.Status.Conditions = conditions
}

var _ configmaps.Exporter = &TrafficManagerProfilesAzureEndpoint{}

// ConfigMapDestinationExpressions returns the Spec.OperatorSpec.ConfigMapExpressions property
func (endpoint *TrafficManagerProfilesAzureEndpoint) ConfigMapDestinationExpressions() []*core.DestinationExpression {
	if endpoint.Spec.OperatorSpec == nil {
		return nil
	}
	return endpoint.Spec.OperatorSpec.ConfigMapExpressions
}

var _ secrets.Exporter = &TrafficManagerProfilesAzureEndpoint{}

// SecretDestinationExpressions returns the Spec.OperatorSpec.SecretExpressions property
func (endpoint *TrafficManagerProfilesAzureEndpoint) SecretDestinationExpressions() []*core.DestinationExpression {
	if endpoint.Spec.OperatorSpec == nil {
		return nil
	}
	return endpoint.Spec.OperatorSpec.SecretExpressions
}

var _ genruntime.KubernetesResource = &TrafficManagerProfilesAzureEndpoint{}

// AzureName returns the Azure name of the resource
func (endpoint *TrafficManagerProfilesAzureEndpoint) AzureName() string {
	return endpoint.Spec.AzureName
}

// GetAPIVersion returns the ARM API version of the resource. This is always "2022-04-01"
func (endpoint TrafficManagerProfilesAzureEndpoint) GetAPIVersion() string {
	return "2022-04-01"
}

// GetResourceScope returns the scope of the resource
func (endpoint *TrafficManagerProfilesAzureEndpoint) GetResourceScope() genruntime.ResourceScope {
	return genruntime.ResourceScopeResourceGroup
}

// GetSpec returns the specification of this resource
func (endpoint *TrafficManagerProfilesAzureEndpoint) GetSpec() genruntime.ConvertibleSpec {
	return &endpoint.Spec
}

// GetStatus returns the status of this resource
func (endpoint *TrafficManagerProfilesAzureEndpoint) GetStatus() genruntime.ConvertibleStatus {
	return &endpoint.Status
}

// GetSupportedOperations returns the operations supported by the resource
func (endpoint *TrafficManagerProfilesAzureEndpoint) GetSupportedOperations() []genruntime.ResourceOperation {
	return []genruntime.ResourceOperation{
		genruntime.ResourceOperationDelete,
		genruntime.ResourceOperationGet,
		genruntime.ResourceOperationPut,
	}
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Network/trafficmanagerprofiles/AzureEndpoints"
func (endpoint *TrafficManagerProfilesAzureEndpoint) GetType() string {
	return "Microsoft.Network/trafficmanagerprofiles/AzureEndpoints"
}

// NewEmptyStatus returns a new empty (blank) status
func (endpoint *TrafficManagerProfilesAzureEndpoint) NewEmptyStatus() genruntime.ConvertibleStatus {
	return &TrafficManagerProfilesAzureEndpoint_STATUS{}
}

// Owner returns the ResourceReference of the owner
func (endpoint *TrafficManagerProfilesAzureEndpoint) Owner() *genruntime.ResourceReference {
	group, kind := genruntime.LookupOwnerGroupKind(endpoint.Spec)
	return endpoint.Spec.Owner.AsResourceReference(group, kind)
}

// SetStatus sets the status of this resource
func (endpoint *TrafficManagerProfilesAzureEndpoint) SetStatus(status genruntime.ConvertibleStatus) error {
	// If we have exactly the right type of status, assign it
	if st, ok := status.(*TrafficManagerProfilesAzureEndpoint_STATUS); ok {
		endpoint.Status = *st
		return nil
	}

	// Convert status to required version
	var st TrafficManagerProfilesAzureEndpoint_STATUS
	err := status.ConvertStatusTo(&st)
	if err != nil {
		return errors.Wrap(err, "failed to convert status")
	}

	endpoint.Status = st
	return nil
}

// Hub marks that this TrafficManagerProfilesAzureEndpoint is the hub type for conversion
func (endpoint *TrafficManagerProfilesAzureEndpoint) Hub() {}

// OriginalGVK returns a GroupValueKind for the original API version used to create the resource
func (endpoint *TrafficManagerProfilesAzureEndpoint) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: endpoint.Spec.OriginalVersion,
		Kind:    "TrafficManagerProfilesAzureEndpoint",
	}
}

// +kubebuilder:object:root=true
// Storage version of v1api20220401.TrafficManagerProfilesAzureEndpoint
// Generator information:
// - Generated from: /trafficmanager/resource-manager/Microsoft.Network/stable/2022-04-01/trafficmanager.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/AzureEndpoints/{endpointName}
type TrafficManagerProfilesAzureEndpointList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TrafficManagerProfilesAzureEndpoint `json:"items"`
}

// Storage version of v1api20220401.TrafficManagerProfilesAzureEndpoint_Spec
type TrafficManagerProfilesAzureEndpoint_Spec struct {
	AlwaysServe *string `json:"alwaysServe,omitempty"`

	// AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
	// doesn't have to be.
	AzureName             string                                           `json:"azureName,omitempty"`
	CustomHeaders         []EndpointProperties_CustomHeaders               `json:"customHeaders,omitempty"`
	EndpointLocation      *string                                          `json:"endpointLocation,omitempty"`
	EndpointMonitorStatus *string                                          `json:"endpointMonitorStatus,omitempty"`
	EndpointStatus        *string                                          `json:"endpointStatus,omitempty"`
	GeoMapping            []string                                         `json:"geoMapping,omitempty"`
	MinChildEndpoints     *int                                             `json:"minChildEndpoints,omitempty"`
	MinChildEndpointsIPv4 *int                                             `json:"minChildEndpointsIPv4,omitempty"`
	MinChildEndpointsIPv6 *int                                             `json:"minChildEndpointsIPv6,omitempty"`
	OperatorSpec          *TrafficManagerProfilesAzureEndpointOperatorSpec `json:"operatorSpec,omitempty"`
	OriginalVersion       string                                           `json:"originalVersion,omitempty"`

	// +kubebuilder:validation:Required
	// Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
	// controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
	// reference to a network.azure.com/TrafficManagerProfile resource
	Owner       *genruntime.KnownResourceReference `group:"network.azure.com" json:"owner,omitempty" kind:"TrafficManagerProfile"`
	Priority    *int                               `json:"priority,omitempty"`
	PropertyBag genruntime.PropertyBag             `json:"$propertyBag,omitempty"`
	Subnets     []EndpointProperties_Subnets       `json:"subnets,omitempty"`
	Target      *string                            `json:"target,omitempty"`

	// TargetResourceReference: The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type
	// 'ExternalEndpoints'.
	TargetResourceReference *genruntime.ResourceReference `armReference:"TargetResourceId" json:"targetResourceReference,omitempty"`
	Type                    *string                       `json:"type,omitempty"`
	Weight                  *int                          `json:"weight,omitempty"`
}

var _ genruntime.ConvertibleSpec = &TrafficManagerProfilesAzureEndpoint_Spec{}

// ConvertSpecFrom populates our TrafficManagerProfilesAzureEndpoint_Spec from the provided source
func (endpoint *TrafficManagerProfilesAzureEndpoint_Spec) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == endpoint {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(endpoint)
}

// ConvertSpecTo populates the provided destination from our TrafficManagerProfilesAzureEndpoint_Spec
func (endpoint *TrafficManagerProfilesAzureEndpoint_Spec) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == endpoint {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(endpoint)
}

// Storage version of v1api20220401.TrafficManagerProfilesAzureEndpoint_STATUS
type TrafficManagerProfilesAzureEndpoint_STATUS struct {
	AlwaysServe           *string                                   `json:"alwaysServe,omitempty"`
	Conditions            []conditions.Condition                    `json:"conditions,omitempty"`
	CustomHeaders         []EndpointProperties_CustomHeaders_STATUS `json:"customHeaders,omitempty"`
	EndpointLocation      *string                                   `json:"endpointLocation,omitempty"`
	EndpointMonitorStatus *string                                   `json:"endpointMonitorStatus,omitempty"`
	EndpointStatus        *string                                   `json:"endpointStatus,omitempty"`
	GeoMapping            []string                                  `json:"geoMapping,omitempty"`
	Id                    *string                                   `json:"id,omitempty"`
	MinChildEndpoints     *int                                      `json:"minChildEndpoints,omitempty"`
	MinChildEndpointsIPv4 *int                                      `json:"minChildEndpointsIPv4,omitempty"`
	MinChildEndpointsIPv6 *int                                      `json:"minChildEndpointsIPv6,omitempty"`
	Name                  *string                                   `json:"name,omitempty"`
	Priority              *int                                      `json:"priority,omitempty"`
	PropertyBag           genruntime.PropertyBag                    `json:"$propertyBag,omitempty"`
	Subnets               []EndpointProperties_Subnets_STATUS       `json:"subnets,omitempty"`
	Target                *string                                   `json:"target,omitempty"`
	TargetResourceId      *string                                   `json:"targetResourceId,omitempty"`
	Type                  *string                                   `json:"type,omitempty"`
	Weight                *int                                      `json:"weight,omitempty"`
}

var _ genruntime.ConvertibleStatus = &TrafficManagerProfilesAzureEndpoint_STATUS{}

// ConvertStatusFrom populates our TrafficManagerProfilesAzureEndpoint_STATUS from the provided source
func (endpoint *TrafficManagerProfilesAzureEndpoint_STATUS) ConvertStatusFrom(source genruntime.ConvertibleStatus) error {
	if source == endpoint {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return source.ConvertStatusTo(endpoint)
}

// ConvertStatusTo populates the provided destination from our TrafficManagerProfilesAzureEndpoint_STATUS
func (endpoint *TrafficManagerProfilesAzureEndpoint_STATUS) ConvertStatusTo(destination genruntime.ConvertibleStatus) error {
	if destination == endpoint {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return destination.ConvertStatusFrom(endpoint)
}

// Storage version of v1api20220401.EndpointProperties_CustomHeaders
type EndpointProperties_CustomHeaders struct {
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Value       *string                `json:"value,omitempty"`
}

// Storage version of v1api20220401.EndpointProperties_CustomHeaders_STATUS
type EndpointProperties_CustomHeaders_STATUS struct {
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Value       *string                `json:"value,omitempty"`
}

// Storage version of v1api20220401.EndpointProperties_Subnets
type EndpointProperties_Subnets struct {
	First       *string                `json:"first,omitempty"`
	Last        *string                `json:"last,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Scope       *int                   `json:"scope,omitempty"`
}

// Storage version of v1api20220401.EndpointProperties_Subnets_STATUS
type EndpointProperties_Subnets_STATUS struct {
	First       *string                `json:"first,omitempty"`
	Last        *string                `json:"last,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Scope       *int                   `json:"scope,omitempty"`
}

// Storage version of v1api20220401.TrafficManagerProfilesAzureEndpointOperatorSpec
// Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
type TrafficManagerProfilesAzureEndpointOperatorSpec struct {
	ConfigMapExpressions []*core.DestinationExpression `json:"configMapExpressions,omitempty"`
	PropertyBag          genruntime.PropertyBag        `json:"$propertyBag,omitempty"`
	SecretExpressions    []*core.DestinationExpression `json:"secretExpressions,omitempty"`
}

func init() {
	SchemeBuilder.Register(&TrafficManagerProfilesAzureEndpoint{}, &TrafficManagerProfilesAzureEndpointList{})
}
