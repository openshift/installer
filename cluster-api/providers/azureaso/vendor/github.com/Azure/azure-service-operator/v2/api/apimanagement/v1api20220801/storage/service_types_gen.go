// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/configmaps"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/core"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/secrets"
	"github.com/pkg/errors"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:rbac:groups=apimanagement.azure.com,resources=services,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=apimanagement.azure.com,resources={services/status,services/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="Severity",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].severity"
// +kubebuilder:printcolumn:name="Reason",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].reason"
// +kubebuilder:printcolumn:name="Message",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].message"
// Storage version of v1api20220801.Service
// Generator information:
// - Generated from: /apimanagement/resource-manager/Microsoft.ApiManagement/stable/2022-08-01/apimdeployment.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
type Service struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              Service_Spec   `json:"spec,omitempty"`
	Status            Service_STATUS `json:"status,omitempty"`
}

var _ conditions.Conditioner = &Service{}

// GetConditions returns the conditions of the resource
func (service *Service) GetConditions() conditions.Conditions {
	return service.Status.Conditions
}

// SetConditions sets the conditions on the resource status
func (service *Service) SetConditions(conditions conditions.Conditions) {
	service.Status.Conditions = conditions
}

var _ configmaps.Exporter = &Service{}

// ConfigMapDestinationExpressions returns the Spec.OperatorSpec.ConfigMapExpressions property
func (service *Service) ConfigMapDestinationExpressions() []*core.DestinationExpression {
	if service.Spec.OperatorSpec == nil {
		return nil
	}
	return service.Spec.OperatorSpec.ConfigMapExpressions
}

var _ secrets.Exporter = &Service{}

// SecretDestinationExpressions returns the Spec.OperatorSpec.SecretExpressions property
func (service *Service) SecretDestinationExpressions() []*core.DestinationExpression {
	if service.Spec.OperatorSpec == nil {
		return nil
	}
	return service.Spec.OperatorSpec.SecretExpressions
}

var _ genruntime.KubernetesResource = &Service{}

// AzureName returns the Azure name of the resource
func (service *Service) AzureName() string {
	return service.Spec.AzureName
}

// GetAPIVersion returns the ARM API version of the resource. This is always "2022-08-01"
func (service Service) GetAPIVersion() string {
	return "2022-08-01"
}

// GetResourceScope returns the scope of the resource
func (service *Service) GetResourceScope() genruntime.ResourceScope {
	return genruntime.ResourceScopeResourceGroup
}

// GetSpec returns the specification of this resource
func (service *Service) GetSpec() genruntime.ConvertibleSpec {
	return &service.Spec
}

// GetStatus returns the status of this resource
func (service *Service) GetStatus() genruntime.ConvertibleStatus {
	return &service.Status
}

// GetSupportedOperations returns the operations supported by the resource
func (service *Service) GetSupportedOperations() []genruntime.ResourceOperation {
	return []genruntime.ResourceOperation{
		genruntime.ResourceOperationDelete,
		genruntime.ResourceOperationGet,
		genruntime.ResourceOperationPut,
	}
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.ApiManagement/service"
func (service *Service) GetType() string {
	return "Microsoft.ApiManagement/service"
}

// NewEmptyStatus returns a new empty (blank) status
func (service *Service) NewEmptyStatus() genruntime.ConvertibleStatus {
	return &Service_STATUS{}
}

// Owner returns the ResourceReference of the owner
func (service *Service) Owner() *genruntime.ResourceReference {
	group, kind := genruntime.LookupOwnerGroupKind(service.Spec)
	return service.Spec.Owner.AsResourceReference(group, kind)
}

// SetStatus sets the status of this resource
func (service *Service) SetStatus(status genruntime.ConvertibleStatus) error {
	// If we have exactly the right type of status, assign it
	if st, ok := status.(*Service_STATUS); ok {
		service.Status = *st
		return nil
	}

	// Convert status to required version
	var st Service_STATUS
	err := status.ConvertStatusTo(&st)
	if err != nil {
		return errors.Wrap(err, "failed to convert status")
	}

	service.Status = st
	return nil
}

// Hub marks that this Service is the hub type for conversion
func (service *Service) Hub() {}

// OriginalGVK returns a GroupValueKind for the original API version used to create the resource
func (service *Service) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: service.Spec.OriginalVersion,
		Kind:    "Service",
	}
}

// +kubebuilder:object:root=true
// Storage version of v1api20220801.Service
// Generator information:
// - Generated from: /apimanagement/resource-manager/Microsoft.ApiManagement/stable/2022-08-01/apimdeployment.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}
type ServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Service `json:"items"`
}

// Storage version of v1api20220801.Service_Spec
type Service_Spec struct {
	AdditionalLocations  []AdditionalLocation  `json:"additionalLocations,omitempty"`
	ApiVersionConstraint *ApiVersionConstraint `json:"apiVersionConstraint,omitempty"`

	// AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
	// doesn't have to be.
	AzureName               string                        `json:"azureName,omitempty"`
	Certificates            []CertificateConfiguration    `json:"certificates,omitempty"`
	CustomProperties        map[string]string             `json:"customProperties,omitempty"`
	DisableGateway          *bool                         `json:"disableGateway,omitempty"`
	EnableClientCertificate *bool                         `json:"enableClientCertificate,omitempty"`
	HostnameConfigurations  []HostnameConfiguration       `json:"hostnameConfigurations,omitempty"`
	Identity                *ApiManagementServiceIdentity `json:"identity,omitempty"`
	Location                *string                       `json:"location,omitempty"`
	NatGatewayState         *string                       `json:"natGatewayState,omitempty"`
	NotificationSenderEmail *string                       `json:"notificationSenderEmail,omitempty"`
	OperatorSpec            *ServiceOperatorSpec          `json:"operatorSpec,omitempty"`
	OriginalVersion         string                        `json:"originalVersion,omitempty"`

	// +kubebuilder:validation:Required
	// Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
	// controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
	// reference to a resources.azure.com/ResourceGroup resource
	Owner       *genruntime.KnownResourceReference `group:"resources.azure.com" json:"owner,omitempty" kind:"ResourceGroup"`
	PropertyBag genruntime.PropertyBag             `json:"$propertyBag,omitempty"`

	// PublicIpAddressReference: Public Standard SKU IP V4 based IP address to be associated with Virtual Network deployed
	// service in the region. Supported only for Developer and Premium SKU being deployed in Virtual Network.
	PublicIpAddressReference    *genruntime.ResourceReference      `armReference:"PublicIpAddressId" json:"publicIpAddressReference,omitempty"`
	PublicNetworkAccess         *string                            `json:"publicNetworkAccess,omitempty"`
	PublisherEmail              *string                            `json:"publisherEmail,omitempty"`
	PublisherName               *string                            `json:"publisherName,omitempty"`
	Restore                     *bool                              `json:"restore,omitempty"`
	Sku                         *ApiManagementServiceSkuProperties `json:"sku,omitempty"`
	Tags                        map[string]string                  `json:"tags,omitempty"`
	VirtualNetworkConfiguration *VirtualNetworkConfiguration       `json:"virtualNetworkConfiguration,omitempty"`
	VirtualNetworkType          *string                            `json:"virtualNetworkType,omitempty"`
	Zones                       []string                           `json:"zones,omitempty"`
}

var _ genruntime.ConvertibleSpec = &Service_Spec{}

// ConvertSpecFrom populates our Service_Spec from the provided source
func (service *Service_Spec) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == service {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(service)
}

// ConvertSpecTo populates the provided destination from our Service_Spec
func (service *Service_Spec) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == service {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(service)
}

// Storage version of v1api20220801.Service_STATUS
type Service_STATUS struct {
	AdditionalLocations         []AdditionalLocation_STATUS                     `json:"additionalLocations,omitempty"`
	ApiVersionConstraint        *ApiVersionConstraint_STATUS                    `json:"apiVersionConstraint,omitempty"`
	Certificates                []CertificateConfiguration_STATUS               `json:"certificates,omitempty"`
	Conditions                  []conditions.Condition                          `json:"conditions,omitempty"`
	CreatedAtUtc                *string                                         `json:"createdAtUtc,omitempty"`
	CustomProperties            map[string]string                               `json:"customProperties,omitempty"`
	DeveloperPortalUrl          *string                                         `json:"developerPortalUrl,omitempty"`
	DisableGateway              *bool                                           `json:"disableGateway,omitempty"`
	EnableClientCertificate     *bool                                           `json:"enableClientCertificate,omitempty"`
	Etag                        *string                                         `json:"etag,omitempty"`
	GatewayRegionalUrl          *string                                         `json:"gatewayRegionalUrl,omitempty"`
	GatewayUrl                  *string                                         `json:"gatewayUrl,omitempty"`
	HostnameConfigurations      []HostnameConfiguration_STATUS                  `json:"hostnameConfigurations,omitempty"`
	Id                          *string                                         `json:"id,omitempty"`
	Identity                    *ApiManagementServiceIdentity_STATUS            `json:"identity,omitempty"`
	Location                    *string                                         `json:"location,omitempty"`
	ManagementApiUrl            *string                                         `json:"managementApiUrl,omitempty"`
	Name                        *string                                         `json:"name,omitempty"`
	NatGatewayState             *string                                         `json:"natGatewayState,omitempty"`
	NotificationSenderEmail     *string                                         `json:"notificationSenderEmail,omitempty"`
	OutboundPublicIPAddresses   []string                                        `json:"outboundPublicIPAddresses,omitempty"`
	PlatformVersion             *string                                         `json:"platformVersion,omitempty"`
	PortalUrl                   *string                                         `json:"portalUrl,omitempty"`
	PrivateEndpointConnections  []RemotePrivateEndpointConnectionWrapper_STATUS `json:"privateEndpointConnections,omitempty"`
	PrivateIPAddresses          []string                                        `json:"privateIPAddresses,omitempty"`
	PropertyBag                 genruntime.PropertyBag                          `json:"$propertyBag,omitempty"`
	ProvisioningState           *string                                         `json:"provisioningState,omitempty"`
	PublicIPAddresses           []string                                        `json:"publicIPAddresses,omitempty"`
	PublicIpAddressId           *string                                         `json:"publicIpAddressId,omitempty"`
	PublicNetworkAccess         *string                                         `json:"publicNetworkAccess,omitempty"`
	PublisherEmail              *string                                         `json:"publisherEmail,omitempty"`
	PublisherName               *string                                         `json:"publisherName,omitempty"`
	Restore                     *bool                                           `json:"restore,omitempty"`
	ScmUrl                      *string                                         `json:"scmUrl,omitempty"`
	Sku                         *ApiManagementServiceSkuProperties_STATUS       `json:"sku,omitempty"`
	SystemData                  *SystemData_STATUS                              `json:"systemData,omitempty"`
	Tags                        map[string]string                               `json:"tags,omitempty"`
	TargetProvisioningState     *string                                         `json:"targetProvisioningState,omitempty"`
	Type                        *string                                         `json:"type,omitempty"`
	VirtualNetworkConfiguration *VirtualNetworkConfiguration_STATUS             `json:"virtualNetworkConfiguration,omitempty"`
	VirtualNetworkType          *string                                         `json:"virtualNetworkType,omitempty"`
	Zones                       []string                                        `json:"zones,omitempty"`
}

var _ genruntime.ConvertibleStatus = &Service_STATUS{}

// ConvertStatusFrom populates our Service_STATUS from the provided source
func (service *Service_STATUS) ConvertStatusFrom(source genruntime.ConvertibleStatus) error {
	if source == service {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return source.ConvertStatusTo(service)
}

// ConvertStatusTo populates the provided destination from our Service_STATUS
func (service *Service_STATUS) ConvertStatusTo(destination genruntime.ConvertibleStatus) error {
	if destination == service {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return destination.ConvertStatusFrom(service)
}

// Storage version of v1api20220801.AdditionalLocation
// Description of an additional API Management resource location.
type AdditionalLocation struct {
	DisableGateway  *bool                  `json:"disableGateway,omitempty"`
	Location        *string                `json:"location,omitempty"`
	NatGatewayState *string                `json:"natGatewayState,omitempty"`
	PropertyBag     genruntime.PropertyBag `json:"$propertyBag,omitempty"`

	// PublicIpAddressReference: Public Standard SKU IP V4 based IP address to be associated with Virtual Network deployed
	// service in the location. Supported only for Premium SKU being deployed in Virtual Network.
	PublicIpAddressReference    *genruntime.ResourceReference      `armReference:"PublicIpAddressId" json:"publicIpAddressReference,omitempty"`
	Sku                         *ApiManagementServiceSkuProperties `json:"sku,omitempty"`
	VirtualNetworkConfiguration *VirtualNetworkConfiguration       `json:"virtualNetworkConfiguration,omitempty"`
	Zones                       []string                           `json:"zones,omitempty"`
}

// Storage version of v1api20220801.AdditionalLocation_STATUS
// Description of an additional API Management resource location.
type AdditionalLocation_STATUS struct {
	DisableGateway              *bool                                     `json:"disableGateway,omitempty"`
	GatewayRegionalUrl          *string                                   `json:"gatewayRegionalUrl,omitempty"`
	Location                    *string                                   `json:"location,omitempty"`
	NatGatewayState             *string                                   `json:"natGatewayState,omitempty"`
	OutboundPublicIPAddresses   []string                                  `json:"outboundPublicIPAddresses,omitempty"`
	PlatformVersion             *string                                   `json:"platformVersion,omitempty"`
	PrivateIPAddresses          []string                                  `json:"privateIPAddresses,omitempty"`
	PropertyBag                 genruntime.PropertyBag                    `json:"$propertyBag,omitempty"`
	PublicIPAddresses           []string                                  `json:"publicIPAddresses,omitempty"`
	PublicIpAddressId           *string                                   `json:"publicIpAddressId,omitempty"`
	Sku                         *ApiManagementServiceSkuProperties_STATUS `json:"sku,omitempty"`
	VirtualNetworkConfiguration *VirtualNetworkConfiguration_STATUS       `json:"virtualNetworkConfiguration,omitempty"`
	Zones                       []string                                  `json:"zones,omitempty"`
}

// Storage version of v1api20220801.ApiManagementServiceIdentity
// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentity struct {
	PropertyBag            genruntime.PropertyBag        `json:"$propertyBag,omitempty"`
	Type                   *string                       `json:"type,omitempty"`
	UserAssignedIdentities []UserAssignedIdentityDetails `json:"userAssignedIdentities,omitempty"`
}

// Storage version of v1api20220801.ApiManagementServiceIdentity_STATUS
// Identity properties of the Api Management service resource.
type ApiManagementServiceIdentity_STATUS struct {
	PrincipalId            *string                                  `json:"principalId,omitempty"`
	PropertyBag            genruntime.PropertyBag                   `json:"$propertyBag,omitempty"`
	TenantId               *string                                  `json:"tenantId,omitempty"`
	Type                   *string                                  `json:"type,omitempty"`
	UserAssignedIdentities map[string]UserIdentityProperties_STATUS `json:"userAssignedIdentities,omitempty"`
}

// Storage version of v1api20220801.ApiManagementServiceSkuProperties
// API Management service resource SKU properties.
type ApiManagementServiceSkuProperties struct {
	Capacity    *int                   `json:"capacity,omitempty"`
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20220801.ApiManagementServiceSkuProperties_STATUS
// API Management service resource SKU properties.
type ApiManagementServiceSkuProperties_STATUS struct {
	Capacity    *int                   `json:"capacity,omitempty"`
	Name        *string                `json:"name,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20220801.ApiVersionConstraint
// Control Plane Apis version constraint for the API Management service.
type ApiVersionConstraint struct {
	MinApiVersion *string                `json:"minApiVersion,omitempty"`
	PropertyBag   genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20220801.ApiVersionConstraint_STATUS
// Control Plane Apis version constraint for the API Management service.
type ApiVersionConstraint_STATUS struct {
	MinApiVersion *string                `json:"minApiVersion,omitempty"`
	PropertyBag   genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20220801.CertificateConfiguration
// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfiguration struct {
	Certificate         *CertificateInformation     `json:"certificate,omitempty"`
	CertificatePassword *genruntime.SecretReference `json:"certificatePassword,omitempty"`
	EncodedCertificate  *string                     `json:"encodedCertificate,omitempty"`
	PropertyBag         genruntime.PropertyBag      `json:"$propertyBag,omitempty"`
	StoreName           *string                     `json:"storeName,omitempty"`
}

// Storage version of v1api20220801.CertificateConfiguration_STATUS
// Certificate configuration which consist of non-trusted intermediates and root certificates.
type CertificateConfiguration_STATUS struct {
	Certificate        *CertificateInformation_STATUS `json:"certificate,omitempty"`
	EncodedCertificate *string                        `json:"encodedCertificate,omitempty"`
	PropertyBag        genruntime.PropertyBag         `json:"$propertyBag,omitempty"`
	StoreName          *string                        `json:"storeName,omitempty"`
}

// Storage version of v1api20220801.HostnameConfiguration
// Custom hostname configuration.
type HostnameConfiguration struct {
	Certificate                *CertificateInformation        `json:"certificate,omitempty"`
	CertificatePassword        *genruntime.SecretReference    `json:"certificatePassword,omitempty"`
	CertificateSource          *string                        `json:"certificateSource,omitempty"`
	CertificateStatus          *string                        `json:"certificateStatus,omitempty"`
	DefaultSslBinding          *bool                          `json:"defaultSslBinding,omitempty"`
	EncodedCertificate         *string                        `json:"encodedCertificate,omitempty"`
	HostName                   *string                        `json:"hostName,omitempty"`
	IdentityClientId           *string                        `json:"identityClientId,omitempty" optionalConfigMapPair:"IdentityClientId"`
	IdentityClientIdFromConfig *genruntime.ConfigMapReference `json:"identityClientIdFromConfig,omitempty" optionalConfigMapPair:"IdentityClientId"`
	KeyVaultId                 *string                        `json:"keyVaultId,omitempty"`
	NegotiateClientCertificate *bool                          `json:"negotiateClientCertificate,omitempty"`
	PropertyBag                genruntime.PropertyBag         `json:"$propertyBag,omitempty"`
	Type                       *string                        `json:"type,omitempty"`
}

// Storage version of v1api20220801.HostnameConfiguration_STATUS
// Custom hostname configuration.
type HostnameConfiguration_STATUS struct {
	Certificate                *CertificateInformation_STATUS `json:"certificate,omitempty"`
	CertificateSource          *string                        `json:"certificateSource,omitempty"`
	CertificateStatus          *string                        `json:"certificateStatus,omitempty"`
	DefaultSslBinding          *bool                          `json:"defaultSslBinding,omitempty"`
	EncodedCertificate         *string                        `json:"encodedCertificate,omitempty"`
	HostName                   *string                        `json:"hostName,omitempty"`
	IdentityClientId           *string                        `json:"identityClientId,omitempty"`
	KeyVaultId                 *string                        `json:"keyVaultId,omitempty"`
	NegotiateClientCertificate *bool                          `json:"negotiateClientCertificate,omitempty"`
	PropertyBag                genruntime.PropertyBag         `json:"$propertyBag,omitempty"`
	Type                       *string                        `json:"type,omitempty"`
}

// Storage version of v1api20220801.RemotePrivateEndpointConnectionWrapper_STATUS
// Remote Private Endpoint Connection resource.
type RemotePrivateEndpointConnectionWrapper_STATUS struct {
	GroupIds                          []string                                  `json:"groupIds,omitempty"`
	Id                                *string                                   `json:"id,omitempty"`
	Name                              *string                                   `json:"name,omitempty"`
	PrivateEndpoint                   *ArmIdWrapper_STATUS                      `json:"privateEndpoint,omitempty"`
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState_STATUS `json:"privateLinkServiceConnectionState,omitempty"`
	PropertyBag                       genruntime.PropertyBag                    `json:"$propertyBag,omitempty"`
	ProvisioningState                 *string                                   `json:"provisioningState,omitempty"`
	Type                              *string                                   `json:"type,omitempty"`
}

// Storage version of v1api20220801.ServiceOperatorSpec
// Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
type ServiceOperatorSpec struct {
	ConfigMapExpressions []*core.DestinationExpression `json:"configMapExpressions,omitempty"`
	PropertyBag          genruntime.PropertyBag        `json:"$propertyBag,omitempty"`
	SecretExpressions    []*core.DestinationExpression `json:"secretExpressions,omitempty"`
}

// Storage version of v1api20220801.SystemData_STATUS
// Metadata pertaining to creation and last modification of the resource.
type SystemData_STATUS struct {
	CreatedAt          *string                `json:"createdAt,omitempty"`
	CreatedBy          *string                `json:"createdBy,omitempty"`
	CreatedByType      *string                `json:"createdByType,omitempty"`
	LastModifiedAt     *string                `json:"lastModifiedAt,omitempty"`
	LastModifiedBy     *string                `json:"lastModifiedBy,omitempty"`
	LastModifiedByType *string                `json:"lastModifiedByType,omitempty"`
	PropertyBag        genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20220801.VirtualNetworkConfiguration
// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfiguration struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`

	// SubnetResourceReference: The full resource ID of a subnet in a virtual network to deploy the API Management service in.
	SubnetResourceReference *genruntime.ResourceReference `armReference:"SubnetResourceId" json:"subnetResourceReference,omitempty"`
}

// Storage version of v1api20220801.VirtualNetworkConfiguration_STATUS
// Configuration of a virtual network to which API Management service is deployed.
type VirtualNetworkConfiguration_STATUS struct {
	PropertyBag      genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	SubnetResourceId *string                `json:"subnetResourceId,omitempty"`
	Subnetname       *string                `json:"subnetname,omitempty"`
	Vnetid           *string                `json:"vnetid,omitempty"`
}

// Storage version of v1api20220801.ArmIdWrapper_STATUS
// A wrapper for an ARM resource id
type ArmIdWrapper_STATUS struct {
	Id          *string                `json:"id,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

// Storage version of v1api20220801.CertificateInformation
// SSL certificate information.
type CertificateInformation struct {
	Expiry               *string                        `json:"expiry,omitempty" optionalConfigMapPair:"Expiry"`
	ExpiryFromConfig     *genruntime.ConfigMapReference `json:"expiryFromConfig,omitempty" optionalConfigMapPair:"Expiry"`
	PropertyBag          genruntime.PropertyBag         `json:"$propertyBag,omitempty"`
	Subject              *string                        `json:"subject,omitempty" optionalConfigMapPair:"Subject"`
	SubjectFromConfig    *genruntime.ConfigMapReference `json:"subjectFromConfig,omitempty" optionalConfigMapPair:"Subject"`
	Thumbprint           *string                        `json:"thumbprint,omitempty" optionalConfigMapPair:"Thumbprint"`
	ThumbprintFromConfig *genruntime.ConfigMapReference `json:"thumbprintFromConfig,omitempty" optionalConfigMapPair:"Thumbprint"`
}

// Storage version of v1api20220801.CertificateInformation_STATUS
// SSL certificate information.
type CertificateInformation_STATUS struct {
	Expiry      *string                `json:"expiry,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Subject     *string                `json:"subject,omitempty"`
	Thumbprint  *string                `json:"thumbprint,omitempty"`
}

// Storage version of v1api20220801.PrivateLinkServiceConnectionState_STATUS
// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState_STATUS struct {
	ActionsRequired *string                `json:"actionsRequired,omitempty"`
	Description     *string                `json:"description,omitempty"`
	PropertyBag     genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	Status          *string                `json:"status,omitempty"`
}

// Storage version of v1api20220801.UserAssignedIdentityDetails
// Information about the user assigned identity for the resource
type UserAssignedIdentityDetails struct {
	PropertyBag genruntime.PropertyBag       `json:"$propertyBag,omitempty"`
	Reference   genruntime.ResourceReference `armReference:"Reference" json:"reference,omitempty"`
}

// Storage version of v1api20220801.UserIdentityProperties_STATUS
type UserIdentityProperties_STATUS struct {
	ClientId    *string                `json:"clientId,omitempty"`
	PrincipalId *string                `json:"principalId,omitempty"`
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
}

func init() {
	SchemeBuilder.Register(&Service{}, &ServiceList{})
}
