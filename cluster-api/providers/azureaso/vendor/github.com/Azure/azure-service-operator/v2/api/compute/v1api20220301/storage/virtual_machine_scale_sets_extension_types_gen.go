// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package storage

import (
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/conditions"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/configmaps"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/core"
	"github.com/Azure/azure-service-operator/v2/pkg/genruntime/secrets"
	"github.com/pkg/errors"
	"k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// +kubebuilder:rbac:groups=compute.azure.com,resources=virtualmachinescalesetsextensions,verbs=get;list;watch;create;update;patch;delete
// +kubebuilder:rbac:groups=compute.azure.com,resources={virtualmachinescalesetsextensions/status,virtualmachinescalesetsextensions/finalizers},verbs=get;update;patch

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:printcolumn:name="Ready",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="Severity",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].severity"
// +kubebuilder:printcolumn:name="Reason",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].reason"
// +kubebuilder:printcolumn:name="Message",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].message"
// Storage version of v1api20220301.VirtualMachineScaleSetsExtension
// Generator information:
// - Generated from: /compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-03-01/virtualMachineScaleSet.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}
type VirtualMachineScaleSetsExtension struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VirtualMachineScaleSetsExtension_Spec   `json:"spec,omitempty"`
	Status            VirtualMachineScaleSetsExtension_STATUS `json:"status,omitempty"`
}

var _ conditions.Conditioner = &VirtualMachineScaleSetsExtension{}

// GetConditions returns the conditions of the resource
func (extension *VirtualMachineScaleSetsExtension) GetConditions() conditions.Conditions {
	return extension.Status.Conditions
}

// SetConditions sets the conditions on the resource status
func (extension *VirtualMachineScaleSetsExtension) SetConditions(conditions conditions.Conditions) {
	extension.Status.Conditions = conditions
}

var _ configmaps.Exporter = &VirtualMachineScaleSetsExtension{}

// ConfigMapDestinationExpressions returns the Spec.OperatorSpec.ConfigMapExpressions property
func (extension *VirtualMachineScaleSetsExtension) ConfigMapDestinationExpressions() []*core.DestinationExpression {
	if extension.Spec.OperatorSpec == nil {
		return nil
	}
	return extension.Spec.OperatorSpec.ConfigMapExpressions
}

var _ secrets.Exporter = &VirtualMachineScaleSetsExtension{}

// SecretDestinationExpressions returns the Spec.OperatorSpec.SecretExpressions property
func (extension *VirtualMachineScaleSetsExtension) SecretDestinationExpressions() []*core.DestinationExpression {
	if extension.Spec.OperatorSpec == nil {
		return nil
	}
	return extension.Spec.OperatorSpec.SecretExpressions
}

var _ genruntime.KubernetesResource = &VirtualMachineScaleSetsExtension{}

// AzureName returns the Azure name of the resource
func (extension *VirtualMachineScaleSetsExtension) AzureName() string {
	return extension.Spec.AzureName
}

// GetAPIVersion returns the ARM API version of the resource. This is always "2022-03-01"
func (extension VirtualMachineScaleSetsExtension) GetAPIVersion() string {
	return "2022-03-01"
}

// GetResourceScope returns the scope of the resource
func (extension *VirtualMachineScaleSetsExtension) GetResourceScope() genruntime.ResourceScope {
	return genruntime.ResourceScopeResourceGroup
}

// GetSpec returns the specification of this resource
func (extension *VirtualMachineScaleSetsExtension) GetSpec() genruntime.ConvertibleSpec {
	return &extension.Spec
}

// GetStatus returns the status of this resource
func (extension *VirtualMachineScaleSetsExtension) GetStatus() genruntime.ConvertibleStatus {
	return &extension.Status
}

// GetSupportedOperations returns the operations supported by the resource
func (extension *VirtualMachineScaleSetsExtension) GetSupportedOperations() []genruntime.ResourceOperation {
	return []genruntime.ResourceOperation{
		genruntime.ResourceOperationDelete,
		genruntime.ResourceOperationGet,
		genruntime.ResourceOperationPut,
	}
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Compute/virtualMachineScaleSets/extensions"
func (extension *VirtualMachineScaleSetsExtension) GetType() string {
	return "Microsoft.Compute/virtualMachineScaleSets/extensions"
}

// NewEmptyStatus returns a new empty (blank) status
func (extension *VirtualMachineScaleSetsExtension) NewEmptyStatus() genruntime.ConvertibleStatus {
	return &VirtualMachineScaleSetsExtension_STATUS{}
}

// Owner returns the ResourceReference of the owner
func (extension *VirtualMachineScaleSetsExtension) Owner() *genruntime.ResourceReference {
	group, kind := genruntime.LookupOwnerGroupKind(extension.Spec)
	return extension.Spec.Owner.AsResourceReference(group, kind)
}

// SetStatus sets the status of this resource
func (extension *VirtualMachineScaleSetsExtension) SetStatus(status genruntime.ConvertibleStatus) error {
	// If we have exactly the right type of status, assign it
	if st, ok := status.(*VirtualMachineScaleSetsExtension_STATUS); ok {
		extension.Status = *st
		return nil
	}

	// Convert status to required version
	var st VirtualMachineScaleSetsExtension_STATUS
	err := status.ConvertStatusTo(&st)
	if err != nil {
		return errors.Wrap(err, "failed to convert status")
	}

	extension.Status = st
	return nil
}

// Hub marks that this VirtualMachineScaleSetsExtension is the hub type for conversion
func (extension *VirtualMachineScaleSetsExtension) Hub() {}

// OriginalGVK returns a GroupValueKind for the original API version used to create the resource
func (extension *VirtualMachineScaleSetsExtension) OriginalGVK() *schema.GroupVersionKind {
	return &schema.GroupVersionKind{
		Group:   GroupVersion.Group,
		Version: extension.Spec.OriginalVersion,
		Kind:    "VirtualMachineScaleSetsExtension",
	}
}

// +kubebuilder:object:root=true
// Storage version of v1api20220301.VirtualMachineScaleSetsExtension
// Generator information:
// - Generated from: /compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2022-03-01/virtualMachineScaleSet.json
// - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}
type VirtualMachineScaleSetsExtensionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VirtualMachineScaleSetsExtension `json:"items"`
}

// Storage version of v1api20220301.VirtualMachineScaleSetsExtension_Spec
type VirtualMachineScaleSetsExtension_Spec struct {
	AutoUpgradeMinorVersion *bool `json:"autoUpgradeMinorVersion,omitempty"`

	// AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
	// doesn't have to be.
	AzureName              string                                        `json:"azureName,omitempty"`
	EnableAutomaticUpgrade *bool                                         `json:"enableAutomaticUpgrade,omitempty"`
	ForceUpdateTag         *string                                       `json:"forceUpdateTag,omitempty"`
	OperatorSpec           *VirtualMachineScaleSetsExtensionOperatorSpec `json:"operatorSpec,omitempty"`
	OriginalVersion        string                                        `json:"originalVersion,omitempty"`

	// +kubebuilder:validation:Required
	// Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
	// controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
	// reference to a compute.azure.com/VirtualMachineScaleSet resource
	Owner                         *genruntime.KnownResourceReference `group:"compute.azure.com" json:"owner,omitempty" kind:"VirtualMachineScaleSet"`
	PropertyBag                   genruntime.PropertyBag             `json:"$propertyBag,omitempty"`
	ProtectedSettings             *genruntime.SecretMapReference     `json:"protectedSettings,omitempty"`
	ProtectedSettingsFromKeyVault *KeyVaultSecretReference           `json:"protectedSettingsFromKeyVault,omitempty"`
	ProvisionAfterExtensions      []string                           `json:"provisionAfterExtensions,omitempty"`
	Publisher                     *string                            `json:"publisher,omitempty"`
	Settings                      map[string]v1.JSON                 `json:"settings,omitempty"`
	SuppressFailures              *bool                              `json:"suppressFailures,omitempty"`
	Type                          *string                            `json:"type,omitempty"`
	TypeHandlerVersion            *string                            `json:"typeHandlerVersion,omitempty"`
}

var _ genruntime.ConvertibleSpec = &VirtualMachineScaleSetsExtension_Spec{}

// ConvertSpecFrom populates our VirtualMachineScaleSetsExtension_Spec from the provided source
func (extension *VirtualMachineScaleSetsExtension_Spec) ConvertSpecFrom(source genruntime.ConvertibleSpec) error {
	if source == extension {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return source.ConvertSpecTo(extension)
}

// ConvertSpecTo populates the provided destination from our VirtualMachineScaleSetsExtension_Spec
func (extension *VirtualMachineScaleSetsExtension_Spec) ConvertSpecTo(destination genruntime.ConvertibleSpec) error {
	if destination == extension {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleSpec")
	}

	return destination.ConvertSpecFrom(extension)
}

// Storage version of v1api20220301.VirtualMachineScaleSetsExtension_STATUS
type VirtualMachineScaleSetsExtension_STATUS struct {
	AutoUpgradeMinorVersion       *bool                           `json:"autoUpgradeMinorVersion,omitempty"`
	Conditions                    []conditions.Condition          `json:"conditions,omitempty"`
	EnableAutomaticUpgrade        *bool                           `json:"enableAutomaticUpgrade,omitempty"`
	ForceUpdateTag                *string                         `json:"forceUpdateTag,omitempty"`
	Id                            *string                         `json:"id,omitempty"`
	Name                          *string                         `json:"name,omitempty"`
	PropertiesType                *string                         `json:"properties_type,omitempty"`
	PropertyBag                   genruntime.PropertyBag          `json:"$propertyBag,omitempty"`
	ProtectedSettingsFromKeyVault *KeyVaultSecretReference_STATUS `json:"protectedSettingsFromKeyVault,omitempty"`
	ProvisionAfterExtensions      []string                        `json:"provisionAfterExtensions,omitempty"`
	ProvisioningState             *string                         `json:"provisioningState,omitempty"`
	Publisher                     *string                         `json:"publisher,omitempty"`
	Settings                      map[string]v1.JSON              `json:"settings,omitempty"`
	SuppressFailures              *bool                           `json:"suppressFailures,omitempty"`
	Type                          *string                         `json:"type,omitempty"`
	TypeHandlerVersion            *string                         `json:"typeHandlerVersion,omitempty"`
}

var _ genruntime.ConvertibleStatus = &VirtualMachineScaleSetsExtension_STATUS{}

// ConvertStatusFrom populates our VirtualMachineScaleSetsExtension_STATUS from the provided source
func (extension *VirtualMachineScaleSetsExtension_STATUS) ConvertStatusFrom(source genruntime.ConvertibleStatus) error {
	if source == extension {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return source.ConvertStatusTo(extension)
}

// ConvertStatusTo populates the provided destination from our VirtualMachineScaleSetsExtension_STATUS
func (extension *VirtualMachineScaleSetsExtension_STATUS) ConvertStatusTo(destination genruntime.ConvertibleStatus) error {
	if destination == extension {
		return errors.New("attempted conversion between unrelated implementations of github.com/Azure/azure-service-operator/v2/pkg/genruntime/ConvertibleStatus")
	}

	return destination.ConvertStatusFrom(extension)
}

// Storage version of v1api20220301.KeyVaultSecretReference
// Describes a reference to Key Vault Secret
type KeyVaultSecretReference struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	SecretUrl   *string                `json:"secretUrl,omitempty"`
	SourceVault *SubResource           `json:"sourceVault,omitempty"`
}

// Storage version of v1api20220301.KeyVaultSecretReference_STATUS
// Describes a reference to Key Vault Secret
type KeyVaultSecretReference_STATUS struct {
	PropertyBag genruntime.PropertyBag `json:"$propertyBag,omitempty"`
	SecretUrl   *string                `json:"secretUrl,omitempty"`
	SourceVault *SubResource_STATUS    `json:"sourceVault,omitempty"`
}

// Storage version of v1api20220301.VirtualMachineScaleSetsExtensionOperatorSpec
// Details for configuring operator behavior. Fields in this struct are interpreted by the operator directly rather than being passed to Azure
type VirtualMachineScaleSetsExtensionOperatorSpec struct {
	ConfigMapExpressions []*core.DestinationExpression `json:"configMapExpressions,omitempty"`
	PropertyBag          genruntime.PropertyBag        `json:"$propertyBag,omitempty"`
	SecretExpressions    []*core.DestinationExpression `json:"secretExpressions,omitempty"`
}

func init() {
	SchemeBuilder.Register(&VirtualMachineScaleSetsExtension{}, &VirtualMachineScaleSetsExtensionList{})
}
