// Code generated by azure-service-operator-codegen. DO NOT EDIT.
github.com/Azure/azure-service-operator/v2/api/containerservice/v1api20210501
-----------------------------------------------------------------------------
APIVersion: Enum (1 value)
└── "2021-05-01"
ManagedCluster: Resource
├── Owner: resources/v1apiv20191001.ResourceGroup
├── Spec: Object (30 properties)
│   ├── AadProfile: *Object (7 properties)
│   │   ├── AdminGroupObjectIDs: string[]
│   │   ├── ClientAppID: *string
│   │   ├── EnableAzureRBAC: *bool
│   │   ├── Managed: *bool
│   │   ├── ServerAppID: *string
│   │   ├── ServerAppSecret: *string
│   │   └── TenantID: *string
│   ├── AddonProfiles: map[string]Object (2 properties)
│   │   ├── Config: map[string]string
│   │   └── Enabled: *bool
│   ├── AgentPoolProfiles: Object (34 properties)[]
│   │   ├── AvailabilityZones: string[]
│   │   ├── Count: *int
│   │   ├── EnableAutoScaling: *bool
│   │   ├── EnableEncryptionAtHost: *bool
│   │   ├── EnableFIPS: *bool
│   │   ├── EnableNodePublicIP: *bool
│   │   ├── EnableUltraSSD: *bool
│   │   ├── GpuInstanceProfile: *Enum (5 values)
│   │   │   ├── "MIG1g"
│   │   │   ├── "MIG2g"
│   │   │   ├── "MIG3g"
│   │   │   ├── "MIG4g"
│   │   │   └── "MIG7g"
│   │   ├── KubeletConfig: *Object (11 properties)
│   │   │   ├── AllowedUnsafeSysctls: string[]
│   │   │   ├── ContainerLogMaxFiles: Validated<*int> (1 rule)
│   │   │   │   └── Rule 0: Minimum: 2
│   │   │   ├── ContainerLogMaxSizeMB: *int
│   │   │   ├── CpuCfsQuota: *bool
│   │   │   ├── CpuCfsQuotaPeriod: *string
│   │   │   ├── CpuManagerPolicy: *string
│   │   │   ├── FailSwapOn: *bool
│   │   │   ├── ImageGcHighThreshold: *int
│   │   │   ├── ImageGcLowThreshold: *int
│   │   │   ├── PodMaxPids: *int
│   │   │   └── TopologyManagerPolicy: *string
│   │   ├── KubeletDiskType: *Enum (2 values)
│   │   │   ├── "OS"
│   │   │   └── "Temporary"
│   │   ├── LinuxOSConfig: *Object (4 properties)
│   │   │   ├── SwapFileSizeMB: *int
│   │   │   ├── Sysctls: *Object (28 properties)
│   │   │   │   ├── FsAioMaxNr: *int
│   │   │   │   ├── FsFileMax: *int
│   │   │   │   ├── FsInotifyMaxUserWatches: *int
│   │   │   │   ├── FsNrOpen: *int
│   │   │   │   ├── KernelThreadsMax: *int
│   │   │   │   ├── NetCoreNetdevMaxBacklog: *int
│   │   │   │   ├── NetCoreOptmemMax: *int
│   │   │   │   ├── NetCoreRmemDefault: *int
│   │   │   │   ├── NetCoreRmemMax: *int
│   │   │   │   ├── NetCoreSomaxconn: *int
│   │   │   │   ├── NetCoreWmemDefault: *int
│   │   │   │   ├── NetCoreWmemMax: *int
│   │   │   │   ├── NetIpv4IpLocalPortRange: *string
│   │   │   │   ├── NetIpv4NeighDefaultGcThresh1: *int
│   │   │   │   ├── NetIpv4NeighDefaultGcThresh2: *int
│   │   │   │   ├── NetIpv4NeighDefaultGcThresh3: *int
│   │   │   │   ├── NetIpv4TcpFinTimeout: *int
│   │   │   │   ├── NetIpv4TcpKeepaliveProbes: *int
│   │   │   │   ├── NetIpv4TcpKeepaliveTime: *int
│   │   │   │   ├── NetIpv4TcpMaxSynBacklog: *int
│   │   │   │   ├── NetIpv4TcpMaxTwBuckets: *int
│   │   │   │   ├── NetIpv4TcpTwReuse: *bool
│   │   │   │   ├── NetIpv4TcpkeepaliveIntvl: *int
│   │   │   │   ├── NetNetfilterNfConntrackBuckets: *int
│   │   │   │   ├── NetNetfilterNfConntrackMax: *int
│   │   │   │   ├── VmMaxMapCount: *int
│   │   │   │   ├── VmSwappiness: *int
│   │   │   │   └── VmVfsCachePressure: *int
│   │   │   ├── TransparentHugePageDefrag: *string
│   │   │   └── TransparentHugePageEnabled: *string
│   │   ├── MaxCount: *int
│   │   ├── MaxPods: *int
│   │   ├── MinCount: *int
│   │   ├── Mode: *Enum (2 values)
│   │   │   ├── "System"
│   │   │   └── "User"
│   │   ├── Name: Validated<*string> (1 rule)
│   │   │   └── Rule 0: Pattern: "^[a-z][a-z0-9]{0,11}$"
│   │   ├── NodeLabels: map[string]string
│   │   ├── NodePublicIPPrefixIDReference: *genruntime.ResourceReference
│   │   ├── NodeTaints: string[]
│   │   ├── OrchestratorVersion: *string
│   │   ├── OsDiskSizeGB: *Validated<int> (2 rules)
│   │   │   ├── Rule 0: Maximum: 2048
│   │   │   └── Rule 1: Minimum: 0
│   │   ├── OsDiskType: *Enum (2 values)
│   │   │   ├── "Ephemeral"
│   │   │   └── "Managed"
│   │   ├── OsSKU: *Enum (2 values)
│   │   │   ├── "CBLMariner"
│   │   │   └── "Ubuntu"
│   │   ├── OsType: *Enum (2 values)
│   │   │   ├── "Linux"
│   │   │   └── "Windows"
│   │   ├── PodSubnetIDReference: *genruntime.ResourceReference
│   │   ├── ProximityPlacementGroupID: *string
│   │   ├── ScaleSetEvictionPolicy: *Enum (2 values)
│   │   │   ├── "Deallocate"
│   │   │   └── "Delete"
│   │   ├── ScaleSetPriority: *Enum (2 values)
│   │   │   ├── "Regular"
│   │   │   └── "Spot"
│   │   ├── SpotMaxPrice: *float64
│   │   ├── Tags: map[string]string
│   │   ├── Type: *Enum (2 values)
│   │   │   ├── "AvailabilitySet"
│   │   │   └── "VirtualMachineScaleSets"
│   │   ├── UpgradeSettings: *Object (1 property)
│   │   │   └── MaxSurge: *string
│   │   ├── VmSize: *string
│   │   └── VnetSubnetIDReference: *genruntime.ResourceReference
│   ├── ApiServerAccessProfile: *Object (4 properties)
│   │   ├── AuthorizedIPRanges: string[]
│   │   ├── EnablePrivateCluster: *bool
│   │   ├── EnablePrivateClusterPublicFQDN: *bool
│   │   └── PrivateDNSZone: *string
│   ├── AutoScalerProfile: *Object (17 properties)
│   │   ├── BalanceSimilarNodeGroups: *string
│   │   ├── Expander: *Enum (4 values)
│   │   │   ├── "least-waste"
│   │   │   ├── "most-pods"
│   │   │   ├── "priority"
│   │   │   └── "random"
│   │   ├── MaxEmptyBulkDelete: *string
│   │   ├── MaxGracefulTerminationSec: *string
│   │   ├── MaxNodeProvisionTime: *string
│   │   ├── MaxTotalUnreadyPercentage: *string
│   │   ├── NewPodScaleUpDelay: *string
│   │   ├── OkTotalUnreadyCount: *string
│   │   ├── ScaleDownDelayAfterAdd: *string
│   │   ├── ScaleDownDelayAfterDelete: *string
│   │   ├── ScaleDownDelayAfterFailure: *string
│   │   ├── ScaleDownUnneededTime: *string
│   │   ├── ScaleDownUnreadyTime: *string
│   │   ├── ScaleDownUtilizationThreshold: *string
│   │   ├── ScanInterval: *string
│   │   ├── SkipNodesWithLocalStorage: *string
│   │   └── SkipNodesWithSystemPods: *string
│   ├── AutoUpgradeProfile: *Object (1 property)
│   │   └── UpgradeChannel: *Enum (5 values)
│   │       ├── "node-image"
│   │       ├── "none"
│   │       ├── "patch"
│   │       ├── "rapid"
│   │       └── "stable"
│   ├── AzureName: Validated<string> (3 rules)
│   │   ├── Rule 0: MaxLength: 63
│   │   ├── Rule 1: MinLength: 1
│   │   └── Rule 2: Pattern: "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$"
│   ├── DisableLocalAccounts: *bool
│   ├── DiskEncryptionSetIDReference: *genruntime.ResourceReference
│   ├── DnsPrefix: *string
│   ├── EnablePodSecurityPolicy: *bool
│   ├── EnableRBAC: *bool
│   ├── ExtendedLocation: *Object (2 properties)
│   │   ├── Name: *string
│   │   └── Type: *Enum (1 value)
│   │       └── "EdgeZone"
│   ├── FqdnSubdomain: *string
│   ├── HttpProxyConfig: *Object (4 properties)
│   │   ├── HttpProxy: *string
│   │   ├── HttpsProxy: *string
│   │   ├── NoProxy: string[]
│   │   └── TrustedCa: *string
│   ├── Identity: *Object (2 properties)
│   │   ├── Type: *Enum (3 values)
│   │   │   ├── "None"
│   │   │   ├── "SystemAssigned"
│   │   │   └── "UserAssigned"
│   │   └── UserAssignedIdentities: Object (1 property)[]
│   │       └── Reference: genruntime.ResourceReference
│   ├── IdentityProfile: map[string]Object (3 properties)
│   │   ├── ClientId: *string
│   │   ├── ObjectId: *string
│   │   └── ResourceReference: *genruntime.ResourceReference
│   ├── KubernetesVersion: *string
│   ├── LinuxProfile: *Object (2 properties)
│   │   ├── AdminUsername: Validated<*string> (1 rule)
│   │   │   └── Rule 0: Pattern: "^[A-Za-z][-A-Za-z0-9_]*$"
│   │   └── Ssh: *Object (1 property)
│   │       └── PublicKeys: Object (1 property)[]
│   │           └── KeyData: *string
│   ├── Location: *string
│   ├── NetworkProfile: *Object (10 properties)
│   │   ├── DnsServiceIP: Validated<*string> (1 rule)
│   │   │   └── Rule 0: Pattern: "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
│   │   ├── DockerBridgeCidr: Validated<*string> (1 rule)
│   │   │   └── Rule 0: Pattern: "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
│   │   ├── LoadBalancerProfile: *Object (6 properties)
│   │   │   ├── AllocatedOutboundPorts: Validated<*int> (2 rules)
│   │   │   │   ├── Rule 0: Maximum: 64000
│   │   │   │   └── Rule 1: Minimum: 0
│   │   │   ├── EffectiveOutboundIPs: Object (1 property)[]
│   │   │   │   └── Reference: *genruntime.ResourceReference
│   │   │   ├── IdleTimeoutInMinutes: Validated<*int> (2 rules)
│   │   │   │   ├── Rule 0: Maximum: 120
│   │   │   │   └── Rule 1: Minimum: 4
│   │   │   ├── ManagedOutboundIPs: *Object (1 property)
│   │   │   │   └── Count: Validated<*int> (2 rules)
│   │   │   │       ├── Rule 0: Maximum: 100
│   │   │   │       └── Rule 1: Minimum: 1
│   │   │   ├── OutboundIPPrefixes: *Object (1 property)
│   │   │   │   └── PublicIPPrefixes: Object (1 property)[]
│   │   │   │       └── Reference: *genruntime.ResourceReference
│   │   │   └── OutboundIPs: *Object (1 property)
│   │   │       └── PublicIPs: Object (1 property)[]
│   │   │           └── Reference: *genruntime.ResourceReference
│   │   ├── LoadBalancerSku: *Enum (2 values)
│   │   │   ├── "basic"
│   │   │   └── "standard"
│   │   ├── NetworkMode: *Enum (2 values)
│   │   │   ├── "bridge"
│   │   │   └── "transparent"
│   │   ├── NetworkPlugin: *Enum (2 values)
│   │   │   ├── "azure"
│   │   │   └── "kubenet"
│   │   ├── NetworkPolicy: *Enum (2 values)
│   │   │   ├── "azure"
│   │   │   └── "calico"
│   │   ├── OutboundType: *Enum (2 values)
│   │   │   ├── "loadBalancer"
│   │   │   └── "userDefinedRouting"
│   │   ├── PodCidr: Validated<*string> (1 rule)
│   │   │   └── Rule 0: Pattern: "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
│   │   └── ServiceCidr: Validated<*string> (1 rule)
│   │       └── Rule 0: Pattern: "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
│   ├── NodeResourceGroup: *string
│   ├── OperatorSpec: *Object (3 properties)
│   │   ├── ConfigMapExpressions: *core.DestinationExpression[]
│   │   ├── SecretExpressions: *core.DestinationExpression[]
│   │   └── Secrets: *Object (2 properties)
│   │       ├── AdminCredentials: *genruntime.SecretDestination
│   │       └── UserCredentials: *genruntime.SecretDestination
│   ├── Owner: *genruntime.KnownResourceReference
│   ├── PodIdentityProfile: *Object (4 properties)
│   │   ├── AllowNetworkPluginKubenet: *bool
│   │   ├── Enabled: *bool
│   │   ├── UserAssignedIdentities: Object (4 properties)[]
│   │   │   ├── BindingSelector: *string
│   │   │   ├── Identity: *Object (3 properties)
│   │   │   │   ├── ClientId: *string
│   │   │   │   ├── ObjectId: *string
│   │   │   │   └── ResourceReference: *genruntime.ResourceReference
│   │   │   ├── Name: *string
│   │   │   └── Namespace: *string
│   │   └── UserAssignedIdentityExceptions: Object (3 properties)[]
│   │       ├── Name: *string
│   │       ├── Namespace: *string
│   │       └── PodLabels: map[string]string
│   ├── PrivateLinkResources: Object (5 properties)[]
│   │   ├── GroupId: *string
│   │   ├── Name: *string
│   │   ├── Reference: *genruntime.ResourceReference
│   │   ├── RequiredMembers: string[]
│   │   └── Type: *string
│   ├── ServicePrincipalProfile: *Object (2 properties)
│   │   ├── ClientId: *string
│   │   └── Secret: *genruntime.SecretReference
│   ├── Sku: *Object (2 properties)
│   │   ├── Name: *Enum (1 value)
│   │   │   └── "Basic"
│   │   └── Tier: *Enum (2 values)
│   │       ├── "Free"
│   │       └── "Paid"
│   ├── Tags: map[string]string
│   └── WindowsProfile: *Object (4 properties)
│       ├── AdminPassword: *genruntime.SecretReference
│       ├── AdminUsername: *string
│       ├── EnableCSIProxy: *bool
│       └── LicenseType: *Enum (2 values)
│           ├── "None"
│           └── "Windows_Server"
└── Status: Object (37 properties)
    ├── AadProfile: *Object (7 properties)
    │   ├── AdminGroupObjectIDs: string[]
    │   ├── ClientAppID: *string
    │   ├── EnableAzureRBAC: *bool
    │   ├── Managed: *bool
    │   ├── ServerAppID: *string
    │   ├── ServerAppSecret: *string
    │   └── TenantID: *string
    ├── AddonProfiles: map[string]Object (3 properties)
    │   ├── Config: map[string]string
    │   ├── Enabled: *bool
    │   └── Identity: *Object (3 properties)
    │       ├── ClientId: *string
    │       ├── ObjectId: *string
    │       └── ResourceId: *string
    ├── AgentPoolProfiles: Object (37 properties)[]
    │   ├── AvailabilityZones: string[]
    │   ├── Count: *int
    │   ├── EnableAutoScaling: *bool
    │   ├── EnableEncryptionAtHost: *bool
    │   ├── EnableFIPS: *bool
    │   ├── EnableNodePublicIP: *bool
    │   ├── EnableUltraSSD: *bool
    │   ├── GpuInstanceProfile: *Enum (5 values)
    │   │   ├── "MIG1g"
    │   │   ├── "MIG2g"
    │   │   ├── "MIG3g"
    │   │   ├── "MIG4g"
    │   │   └── "MIG7g"
    │   ├── KubeletConfig: *Object (11 properties)
    │   │   ├── AllowedUnsafeSysctls: string[]
    │   │   ├── ContainerLogMaxFiles: *int
    │   │   ├── ContainerLogMaxSizeMB: *int
    │   │   ├── CpuCfsQuota: *bool
    │   │   ├── CpuCfsQuotaPeriod: *string
    │   │   ├── CpuManagerPolicy: *string
    │   │   ├── FailSwapOn: *bool
    │   │   ├── ImageGcHighThreshold: *int
    │   │   ├── ImageGcLowThreshold: *int
    │   │   ├── PodMaxPids: *int
    │   │   └── TopologyManagerPolicy: *string
    │   ├── KubeletDiskType: *Enum (2 values)
    │   │   ├── "OS"
    │   │   └── "Temporary"
    │   ├── LinuxOSConfig: *Object (4 properties)
    │   │   ├── SwapFileSizeMB: *int
    │   │   ├── Sysctls: *Object (28 properties)
    │   │   │   ├── FsAioMaxNr: *int
    │   │   │   ├── FsFileMax: *int
    │   │   │   ├── FsInotifyMaxUserWatches: *int
    │   │   │   ├── FsNrOpen: *int
    │   │   │   ├── KernelThreadsMax: *int
    │   │   │   ├── NetCoreNetdevMaxBacklog: *int
    │   │   │   ├── NetCoreOptmemMax: *int
    │   │   │   ├── NetCoreRmemDefault: *int
    │   │   │   ├── NetCoreRmemMax: *int
    │   │   │   ├── NetCoreSomaxconn: *int
    │   │   │   ├── NetCoreWmemDefault: *int
    │   │   │   ├── NetCoreWmemMax: *int
    │   │   │   ├── NetIpv4IpLocalPortRange: *string
    │   │   │   ├── NetIpv4NeighDefaultGcThresh1: *int
    │   │   │   ├── NetIpv4NeighDefaultGcThresh2: *int
    │   │   │   ├── NetIpv4NeighDefaultGcThresh3: *int
    │   │   │   ├── NetIpv4TcpFinTimeout: *int
    │   │   │   ├── NetIpv4TcpKeepaliveProbes: *int
    │   │   │   ├── NetIpv4TcpKeepaliveTime: *int
    │   │   │   ├── NetIpv4TcpMaxSynBacklog: *int
    │   │   │   ├── NetIpv4TcpMaxTwBuckets: *int
    │   │   │   ├── NetIpv4TcpTwReuse: *bool
    │   │   │   ├── NetIpv4TcpkeepaliveIntvl: *int
    │   │   │   ├── NetNetfilterNfConntrackBuckets: *int
    │   │   │   ├── NetNetfilterNfConntrackMax: *int
    │   │   │   ├── VmMaxMapCount: *int
    │   │   │   ├── VmSwappiness: *int
    │   │   │   └── VmVfsCachePressure: *int
    │   │   ├── TransparentHugePageDefrag: *string
    │   │   └── TransparentHugePageEnabled: *string
    │   ├── MaxCount: *int
    │   ├── MaxPods: *int
    │   ├── MinCount: *int
    │   ├── Mode: *Enum (2 values)
    │   │   ├── "System"
    │   │   └── "User"
    │   ├── Name: *string
    │   ├── NodeImageVersion: *string
    │   ├── NodeLabels: map[string]string
    │   ├── NodePublicIPPrefixID: *string
    │   ├── NodeTaints: string[]
    │   ├── OrchestratorVersion: *string
    │   ├── OsDiskSizeGB: *int
    │   ├── OsDiskType: *Enum (2 values)
    │   │   ├── "Ephemeral"
    │   │   └── "Managed"
    │   ├── OsSKU: *Enum (2 values)
    │   │   ├── "CBLMariner"
    │   │   └── "Ubuntu"
    │   ├── OsType: *Enum (2 values)
    │   │   ├── "Linux"
    │   │   └── "Windows"
    │   ├── PodSubnetID: *string
    │   ├── PowerState: *Object (1 property)
    │   │   └── Code: *Enum (2 values)
    │   │       ├── "Running"
    │   │       └── "Stopped"
    │   ├── ProvisioningState: *string
    │   ├── ProximityPlacementGroupID: *string
    │   ├── ScaleSetEvictionPolicy: *Enum (2 values)
    │   │   ├── "Deallocate"
    │   │   └── "Delete"
    │   ├── ScaleSetPriority: *Enum (2 values)
    │   │   ├── "Regular"
    │   │   └── "Spot"
    │   ├── SpotMaxPrice: *float64
    │   ├── Tags: map[string]string
    │   ├── Type: *Enum (2 values)
    │   │   ├── "AvailabilitySet"
    │   │   └── "VirtualMachineScaleSets"
    │   ├── UpgradeSettings: *Object (1 property)
    │   │   └── MaxSurge: *string
    │   ├── VmSize: *string
    │   └── VnetSubnetID: *string
    ├── ApiServerAccessProfile: *Object (4 properties)
    │   ├── AuthorizedIPRanges: string[]
    │   ├── EnablePrivateCluster: *bool
    │   ├── EnablePrivateClusterPublicFQDN: *bool
    │   └── PrivateDNSZone: *string
    ├── AutoScalerProfile: *Object (17 properties)
    │   ├── BalanceSimilarNodeGroups: *string
    │   ├── Expander: *Enum (4 values)
    │   │   ├── "least-waste"
    │   │   ├── "most-pods"
    │   │   ├── "priority"
    │   │   └── "random"
    │   ├── MaxEmptyBulkDelete: *string
    │   ├── MaxGracefulTerminationSec: *string
    │   ├── MaxNodeProvisionTime: *string
    │   ├── MaxTotalUnreadyPercentage: *string
    │   ├── NewPodScaleUpDelay: *string
    │   ├── OkTotalUnreadyCount: *string
    │   ├── ScaleDownDelayAfterAdd: *string
    │   ├── ScaleDownDelayAfterDelete: *string
    │   ├── ScaleDownDelayAfterFailure: *string
    │   ├── ScaleDownUnneededTime: *string
    │   ├── ScaleDownUnreadyTime: *string
    │   ├── ScaleDownUtilizationThreshold: *string
    │   ├── ScanInterval: *string
    │   ├── SkipNodesWithLocalStorage: *string
    │   └── SkipNodesWithSystemPods: *string
    ├── AutoUpgradeProfile: *Object (1 property)
    │   └── UpgradeChannel: *Enum (5 values)
    │       ├── "node-image"
    │       ├── "none"
    │       ├── "patch"
    │       ├── "rapid"
    │       └── "stable"
    ├── AzurePortalFQDN: *string
    ├── Conditions: conditions.Condition[]
    ├── DisableLocalAccounts: *bool
    ├── DiskEncryptionSetID: *string
    ├── DnsPrefix: *string
    ├── EnablePodSecurityPolicy: *bool
    ├── EnableRBAC: *bool
    ├── ExtendedLocation: *Object (2 properties)
    │   ├── Name: *string
    │   └── Type: *Enum (1 value)
    │       └── "EdgeZone"
    ├── Fqdn: *string
    ├── FqdnSubdomain: *string
    ├── HttpProxyConfig: *Object (4 properties)
    │   ├── HttpProxy: *string
    │   ├── HttpsProxy: *string
    │   ├── NoProxy: string[]
    │   └── TrustedCa: *string
    ├── Id: *string
    ├── Identity: *Object (4 properties)
    │   ├── PrincipalId: *string
    │   ├── TenantId: *string
    │   ├── Type: *Enum (3 values)
    │   │   ├── "None"
    │   │   ├── "SystemAssigned"
    │   │   └── "UserAssigned"
    │   └── UserAssignedIdentities: map[string]Object (2 properties)
    │       ├── ClientId: *string
    │       └── PrincipalId: *string
    ├── IdentityProfile: map[string]Object (3 properties)
    │   ├── ClientId: *string
    │   ├── ObjectId: *string
    │   └── ResourceId: *string
    ├── KubernetesVersion: *string
    ├── LinuxProfile: *Object (2 properties)
    │   ├── AdminUsername: *string
    │   └── Ssh: *Object (1 property)
    │       └── PublicKeys: Object (1 property)[]
    │           └── KeyData: *string
    ├── Location: *string
    ├── MaxAgentPools: *int
    ├── Name: *string
    ├── NetworkProfile: *Object (10 properties)
    │   ├── DnsServiceIP: *string
    │   ├── DockerBridgeCidr: *string
    │   ├── LoadBalancerProfile: *Object (6 properties)
    │   │   ├── AllocatedOutboundPorts: *int
    │   │   ├── EffectiveOutboundIPs: Object (1 property)[]
    │   │   │   └── Id: *string
    │   │   ├── IdleTimeoutInMinutes: *int
    │   │   ├── ManagedOutboundIPs: *Object (1 property)
    │   │   │   └── Count: *int
    │   │   ├── OutboundIPPrefixes: *Object (1 property)
    │   │   │   └── PublicIPPrefixes: Object (1 property)[]
    │   │   │       └── Id: *string
    │   │   └── OutboundIPs: *Object (1 property)
    │   │       └── PublicIPs: Object (1 property)[]
    │   │           └── Id: *string
    │   ├── LoadBalancerSku: *Enum (2 values)
    │   │   ├── "basic"
    │   │   └── "standard"
    │   ├── NetworkMode: *Enum (2 values)
    │   │   ├── "bridge"
    │   │   └── "transparent"
    │   ├── NetworkPlugin: *Enum (2 values)
    │   │   ├── "azure"
    │   │   └── "kubenet"
    │   ├── NetworkPolicy: *Enum (2 values)
    │   │   ├── "azure"
    │   │   └── "calico"
    │   ├── OutboundType: *Enum (2 values)
    │   │   ├── "loadBalancer"
    │   │   └── "userDefinedRouting"
    │   ├── PodCidr: *string
    │   └── ServiceCidr: *string
    ├── NodeResourceGroup: *string
    ├── PodIdentityProfile: *Object (4 properties)
    │   ├── AllowNetworkPluginKubenet: *bool
    │   ├── Enabled: *bool
    │   ├── UserAssignedIdentities: Object (6 properties)[]
    │   │   ├── BindingSelector: *string
    │   │   ├── Identity: *Object (3 properties)
    │   │   │   ├── ClientId: *string
    │   │   │   ├── ObjectId: *string
    │   │   │   └── ResourceId: *string
    │   │   ├── Name: *string
    │   │   ├── Namespace: *string
    │   │   ├── ProvisioningInfo: *Object (1 property)
    │   │   │   └── Error: *Object (1 property)
    │   │   │       └── Error: *Object (4 properties)
    │   │   │           ├── Code: *string
    │   │   │           ├── Details: Object (3 properties)[]
    │   │   │           │   ├── Code: *string
    │   │   │           │   ├── Message: *string
    │   │   │           │   └── Target: *string
    │   │   │           ├── Message: *string
    │   │   │           └── Target: *string
    │   │   └── ProvisioningState: *Enum (4 values)
    │   │       ├── "Assigned"
    │   │       ├── "Deleting"
    │   │       ├── "Failed"
    │   │       └── "Updating"
    │   └── UserAssignedIdentityExceptions: Object (3 properties)[]
    │       ├── Name: *string
    │       ├── Namespace: *string
    │       └── PodLabels: map[string]string
    ├── PowerState: *Object (1 property)
    │   └── Code: *Enum (2 values)
    │       ├── "Running"
    │       └── "Stopped"
    ├── PrivateFQDN: *string
    ├── PrivateLinkResources: Object (6 properties)[]
    │   ├── GroupId: *string
    │   ├── Id: *string
    │   ├── Name: *string
    │   ├── PrivateLinkServiceID: *string
    │   ├── RequiredMembers: string[]
    │   └── Type: *string
    ├── ProvisioningState: *string
    ├── ServicePrincipalProfile: *Object (1 property)
    │   └── ClientId: *string
    ├── Sku: *Object (2 properties)
    │   ├── Name: *Enum (1 value)
    │   │   └── "Basic"
    │   └── Tier: *Enum (2 values)
    │       ├── "Free"
    │       └── "Paid"
    ├── Tags: map[string]string
    ├── Type: *string
    └── WindowsProfile: *Object (3 properties)
        ├── AdminUsername: *string
        ├── EnableCSIProxy: *bool
        └── LicenseType: *Enum (2 values)
            ├── "None"
            └── "Windows_Server"
ManagedClustersAgentPool: Resource
├── Owner: ManagedCluster
├── Spec: Object (36 properties)
│   ├── AvailabilityZones: string[]
│   ├── AzureName: string
│   ├── Count: *int
│   ├── EnableAutoScaling: *bool
│   ├── EnableEncryptionAtHost: *bool
│   ├── EnableFIPS: *bool
│   ├── EnableNodePublicIP: *bool
│   ├── EnableUltraSSD: *bool
│   ├── GpuInstanceProfile: *Enum (5 values)
│   │   ├── "MIG1g"
│   │   ├── "MIG2g"
│   │   ├── "MIG3g"
│   │   ├── "MIG4g"
│   │   └── "MIG7g"
│   ├── KubeletConfig: *Object (11 properties)
│   │   ├── AllowedUnsafeSysctls: string[]
│   │   ├── ContainerLogMaxFiles: Validated<*int> (1 rule)
│   │   │   └── Rule 0: Minimum: 2
│   │   ├── ContainerLogMaxSizeMB: *int
│   │   ├── CpuCfsQuota: *bool
│   │   ├── CpuCfsQuotaPeriod: *string
│   │   ├── CpuManagerPolicy: *string
│   │   ├── FailSwapOn: *bool
│   │   ├── ImageGcHighThreshold: *int
│   │   ├── ImageGcLowThreshold: *int
│   │   ├── PodMaxPids: *int
│   │   └── TopologyManagerPolicy: *string
│   ├── KubeletDiskType: *Enum (2 values)
│   │   ├── "OS"
│   │   └── "Temporary"
│   ├── LinuxOSConfig: *Object (4 properties)
│   │   ├── SwapFileSizeMB: *int
│   │   ├── Sysctls: *Object (28 properties)
│   │   │   ├── FsAioMaxNr: *int
│   │   │   ├── FsFileMax: *int
│   │   │   ├── FsInotifyMaxUserWatches: *int
│   │   │   ├── FsNrOpen: *int
│   │   │   ├── KernelThreadsMax: *int
│   │   │   ├── NetCoreNetdevMaxBacklog: *int
│   │   │   ├── NetCoreOptmemMax: *int
│   │   │   ├── NetCoreRmemDefault: *int
│   │   │   ├── NetCoreRmemMax: *int
│   │   │   ├── NetCoreSomaxconn: *int
│   │   │   ├── NetCoreWmemDefault: *int
│   │   │   ├── NetCoreWmemMax: *int
│   │   │   ├── NetIpv4IpLocalPortRange: *string
│   │   │   ├── NetIpv4NeighDefaultGcThresh1: *int
│   │   │   ├── NetIpv4NeighDefaultGcThresh2: *int
│   │   │   ├── NetIpv4NeighDefaultGcThresh3: *int
│   │   │   ├── NetIpv4TcpFinTimeout: *int
│   │   │   ├── NetIpv4TcpKeepaliveProbes: *int
│   │   │   ├── NetIpv4TcpKeepaliveTime: *int
│   │   │   ├── NetIpv4TcpMaxSynBacklog: *int
│   │   │   ├── NetIpv4TcpMaxTwBuckets: *int
│   │   │   ├── NetIpv4TcpTwReuse: *bool
│   │   │   ├── NetIpv4TcpkeepaliveIntvl: *int
│   │   │   ├── NetNetfilterNfConntrackBuckets: *int
│   │   │   ├── NetNetfilterNfConntrackMax: *int
│   │   │   ├── VmMaxMapCount: *int
│   │   │   ├── VmSwappiness: *int
│   │   │   └── VmVfsCachePressure: *int
│   │   ├── TransparentHugePageDefrag: *string
│   │   └── TransparentHugePageEnabled: *string
│   ├── MaxCount: *int
│   ├── MaxPods: *int
│   ├── MinCount: *int
│   ├── Mode: *Enum (2 values)
│   │   ├── "System"
│   │   └── "User"
│   ├── NodeLabels: map[string]string
│   ├── NodePublicIPPrefixIDReference: *genruntime.ResourceReference
│   ├── NodeTaints: string[]
│   ├── OperatorSpec: *Object (2 properties)
│   │   ├── ConfigMapExpressions: *core.DestinationExpression[]
│   │   └── SecretExpressions: *core.DestinationExpression[]
│   ├── OrchestratorVersion: *string
│   ├── OsDiskSizeGB: *Validated<int> (2 rules)
│   │   ├── Rule 0: Maximum: 2048
│   │   └── Rule 1: Minimum: 0
│   ├── OsDiskType: *Enum (2 values)
│   │   ├── "Ephemeral"
│   │   └── "Managed"
│   ├── OsSKU: *Enum (2 values)
│   │   ├── "CBLMariner"
│   │   └── "Ubuntu"
│   ├── OsType: *Enum (2 values)
│   │   ├── "Linux"
│   │   └── "Windows"
│   ├── Owner: *genruntime.KnownResourceReference
│   ├── PodSubnetIDReference: *genruntime.ResourceReference
│   ├── ProximityPlacementGroupID: *string
│   ├── ScaleSetEvictionPolicy: *Enum (2 values)
│   │   ├── "Deallocate"
│   │   └── "Delete"
│   ├── ScaleSetPriority: *Enum (2 values)
│   │   ├── "Regular"
│   │   └── "Spot"
│   ├── SpotMaxPrice: *float64
│   ├── Tags: map[string]string
│   ├── Type: *Enum (2 values)
│   │   ├── "AvailabilitySet"
│   │   └── "VirtualMachineScaleSets"
│   ├── UpgradeSettings: *Object (1 property)
│   │   └── MaxSurge: *string
│   ├── VmSize: *string
│   └── VnetSubnetIDReference: *genruntime.ResourceReference
└── Status: Object (40 properties)
    ├── AvailabilityZones: string[]
    ├── Conditions: conditions.Condition[]
    ├── Count: *int
    ├── EnableAutoScaling: *bool
    ├── EnableEncryptionAtHost: *bool
    ├── EnableFIPS: *bool
    ├── EnableNodePublicIP: *bool
    ├── EnableUltraSSD: *bool
    ├── GpuInstanceProfile: *Enum (5 values)
    │   ├── "MIG1g"
    │   ├── "MIG2g"
    │   ├── "MIG3g"
    │   ├── "MIG4g"
    │   └── "MIG7g"
    ├── Id: *string
    ├── KubeletConfig: *Object (11 properties)
    │   ├── AllowedUnsafeSysctls: string[]
    │   ├── ContainerLogMaxFiles: *int
    │   ├── ContainerLogMaxSizeMB: *int
    │   ├── CpuCfsQuota: *bool
    │   ├── CpuCfsQuotaPeriod: *string
    │   ├── CpuManagerPolicy: *string
    │   ├── FailSwapOn: *bool
    │   ├── ImageGcHighThreshold: *int
    │   ├── ImageGcLowThreshold: *int
    │   ├── PodMaxPids: *int
    │   └── TopologyManagerPolicy: *string
    ├── KubeletDiskType: *Enum (2 values)
    │   ├── "OS"
    │   └── "Temporary"
    ├── LinuxOSConfig: *Object (4 properties)
    │   ├── SwapFileSizeMB: *int
    │   ├── Sysctls: *Object (28 properties)
    │   │   ├── FsAioMaxNr: *int
    │   │   ├── FsFileMax: *int
    │   │   ├── FsInotifyMaxUserWatches: *int
    │   │   ├── FsNrOpen: *int
    │   │   ├── KernelThreadsMax: *int
    │   │   ├── NetCoreNetdevMaxBacklog: *int
    │   │   ├── NetCoreOptmemMax: *int
    │   │   ├── NetCoreRmemDefault: *int
    │   │   ├── NetCoreRmemMax: *int
    │   │   ├── NetCoreSomaxconn: *int
    │   │   ├── NetCoreWmemDefault: *int
    │   │   ├── NetCoreWmemMax: *int
    │   │   ├── NetIpv4IpLocalPortRange: *string
    │   │   ├── NetIpv4NeighDefaultGcThresh1: *int
    │   │   ├── NetIpv4NeighDefaultGcThresh2: *int
    │   │   ├── NetIpv4NeighDefaultGcThresh3: *int
    │   │   ├── NetIpv4TcpFinTimeout: *int
    │   │   ├── NetIpv4TcpKeepaliveProbes: *int
    │   │   ├── NetIpv4TcpKeepaliveTime: *int
    │   │   ├── NetIpv4TcpMaxSynBacklog: *int
    │   │   ├── NetIpv4TcpMaxTwBuckets: *int
    │   │   ├── NetIpv4TcpTwReuse: *bool
    │   │   ├── NetIpv4TcpkeepaliveIntvl: *int
    │   │   ├── NetNetfilterNfConntrackBuckets: *int
    │   │   ├── NetNetfilterNfConntrackMax: *int
    │   │   ├── VmMaxMapCount: *int
    │   │   ├── VmSwappiness: *int
    │   │   └── VmVfsCachePressure: *int
    │   ├── TransparentHugePageDefrag: *string
    │   └── TransparentHugePageEnabled: *string
    ├── MaxCount: *int
    ├── MaxPods: *int
    ├── MinCount: *int
    ├── Mode: *Enum (2 values)
    │   ├── "System"
    │   └── "User"
    ├── Name: *string
    ├── NodeImageVersion: *string
    ├── NodeLabels: map[string]string
    ├── NodePublicIPPrefixID: *string
    ├── NodeTaints: string[]
    ├── OrchestratorVersion: *string
    ├── OsDiskSizeGB: *int
    ├── OsDiskType: *Enum (2 values)
    │   ├── "Ephemeral"
    │   └── "Managed"
    ├── OsSKU: *Enum (2 values)
    │   ├── "CBLMariner"
    │   └── "Ubuntu"
    ├── OsType: *Enum (2 values)
    │   ├── "Linux"
    │   └── "Windows"
    ├── PodSubnetID: *string
    ├── PowerState: *Object (1 property)
    │   └── Code: *Enum (2 values)
    │       ├── "Running"
    │       └── "Stopped"
    ├── PropertiesType: *Enum (2 values)
    │   ├── "AvailabilitySet"
    │   └── "VirtualMachineScaleSets"
    ├── ProvisioningState: *string
    ├── ProximityPlacementGroupID: *string
    ├── ScaleSetEvictionPolicy: *Enum (2 values)
    │   ├── "Deallocate"
    │   └── "Delete"
    ├── ScaleSetPriority: *Enum (2 values)
    │   ├── "Regular"
    │   └── "Spot"
    ├── SpotMaxPrice: *float64
    ├── Tags: map[string]string
    ├── Type: *string
    ├── UpgradeSettings: *Object (1 property)
    │   └── MaxSurge: *string
    ├── VmSize: *string
    └── VnetSubnetID: *string
