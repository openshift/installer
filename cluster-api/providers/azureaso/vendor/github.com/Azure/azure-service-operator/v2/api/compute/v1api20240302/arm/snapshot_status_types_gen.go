// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package arm

// Snapshot resource.
type Snapshot_STATUS struct {
	// ExtendedLocation: The extended location where the snapshot will be created. Extended location cannot be changed.
	ExtendedLocation *ExtendedLocation_STATUS `json:"extendedLocation,omitempty"`

	// Id: Resource Id
	Id *string `json:"id,omitempty"`

	// Location: Resource location
	Location *string `json:"location,omitempty"`

	// ManagedBy: Unused. Always Null.
	ManagedBy *string `json:"managedBy,omitempty"`

	// Name: Resource name
	Name *string `json:"name,omitempty"`

	// Properties: Snapshot resource properties.
	Properties *SnapshotProperties_STATUS `json:"properties,omitempty"`

	// Sku: The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS. This is an optional parameter for
	// incremental  snapshot and the default behavior is the SKU will be set to the same sku as the previous snapshot
	Sku *SnapshotSku_STATUS `json:"sku,omitempty"`

	// Tags: Resource tags
	Tags map[string]string `json:"tags,omitempty"`

	// Type: Resource type
	Type *string `json:"type,omitempty"`
}

// Snapshot resource properties.
type SnapshotProperties_STATUS struct {
	// CompletionPercent: Percentage complete for the background copy when a resource is created via the CopyStart operation.
	CompletionPercent *float64 `json:"completionPercent,omitempty"`

	// CopyCompletionError: Indicates the error details if the background copy of a resource created via the CopyStart
	// operation fails.
	CopyCompletionError *CopyCompletionError_STATUS `json:"copyCompletionError,omitempty"`

	// CreationData: Disk source information. CreationData information cannot be changed after the disk has been created.
	CreationData *CreationData_STATUS `json:"creationData,omitempty"`

	// DataAccessAuthMode: Additional authentication requirements when exporting or uploading to a disk or snapshot.
	DataAccessAuthMode *DataAccessAuthMode_STATUS `json:"dataAccessAuthMode,omitempty"`

	// DiskAccessId: ARM id of the DiskAccess resource for using private endpoints on disks.
	DiskAccessId *string `json:"diskAccessId,omitempty"`

	// DiskSizeBytes: The size of the disk in bytes. This field is read only.
	DiskSizeBytes *int `json:"diskSizeBytes,omitempty"`

	// DiskSizeGB: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to
	// create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only
	// allowed if the disk is not attached to a running VM, and can only increase the disk's size.
	DiskSizeGB *int `json:"diskSizeGB,omitempty"`

	// DiskState: The state of the snapshot.
	DiskState *DiskState_STATUS `json:"diskState,omitempty"`

	// Encryption: Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.
	Encryption *Encryption_STATUS `json:"encryption,omitempty"`

	// EncryptionSettingsCollection: Encryption settings collection used be Azure Disk Encryption, can contain multiple
	// encryption settings per disk or snapshot.
	EncryptionSettingsCollection *EncryptionSettingsCollection_STATUS `json:"encryptionSettingsCollection,omitempty"`

	// HyperVGeneration: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
	HyperVGeneration *SnapshotProperties_HyperVGeneration_STATUS `json:"hyperVGeneration,omitempty"`

	// Incremental: Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full
	// snapshots and can be diffed.
	Incremental *bool `json:"incremental,omitempty"`

	// IncrementalSnapshotFamilyId: Incremental snapshots for a disk share an incremental snapshot family id. The Get Page
	// Range Diff API can only be called on incremental snapshots with the same family id.
	IncrementalSnapshotFamilyId *string `json:"incrementalSnapshotFamilyId,omitempty"`

	// NetworkAccessPolicy: Policy for accessing the disk via network.
	NetworkAccessPolicy *NetworkAccessPolicy_STATUS `json:"networkAccessPolicy,omitempty"`

	// OsType: The Operating System type.
	OsType *SnapshotProperties_OsType_STATUS `json:"osType,omitempty"`

	// ProvisioningState: The disk provisioning state.
	ProvisioningState *string `json:"provisioningState,omitempty"`

	// PublicNetworkAccess: Policy for controlling export on the disk.
	PublicNetworkAccess *PublicNetworkAccess_STATUS `json:"publicNetworkAccess,omitempty"`

	// PurchasePlan: Purchase plan information for the image from which the source disk for the snapshot was originally created.
	PurchasePlan *PurchasePlan_STATUS `json:"purchasePlan,omitempty"`

	// SecurityProfile: Contains the security related information for the resource.
	SecurityProfile *DiskSecurityProfile_STATUS `json:"securityProfile,omitempty"`

	// SupportedCapabilities: List of supported capabilities for the image from which the source disk from the snapshot was
	// originally created.
	SupportedCapabilities *SupportedCapabilities_STATUS `json:"supportedCapabilities,omitempty"`

	// SupportsHibernation: Indicates the OS on a snapshot supports hibernation.
	SupportsHibernation *bool `json:"supportsHibernation,omitempty"`

	// TimeCreated: The time when the snapshot was created.
	TimeCreated *string `json:"timeCreated,omitempty"`

	// UniqueId: Unique Guid identifying the resource.
	UniqueId *string `json:"uniqueId,omitempty"`
}

// The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS. This is an optional parameter for incremental
// snapshot and the default behavior is the SKU will be set to the same sku as the previous snapshot
type SnapshotSku_STATUS struct {
	// Name: The sku name.
	Name *SnapshotSku_Name_STATUS `json:"name,omitempty"`

	// Tier: The sku tier.
	Tier *string `json:"tier,omitempty"`
}

// Indicates the error details if the background copy of a resource created via the CopyStart operation fails.
type CopyCompletionError_STATUS struct {
	// ErrorCode: Indicates the error code if the background copy of a resource created via the CopyStart operation fails.
	ErrorCode *CopyCompletionError_ErrorCode_STATUS `json:"errorCode,omitempty"`

	// ErrorMessage: Indicates the error message if the background copy of a resource created via the CopyStart operation fails.
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

type SnapshotProperties_HyperVGeneration_STATUS string

const (
	SnapshotProperties_HyperVGeneration_STATUS_V1 = SnapshotProperties_HyperVGeneration_STATUS("V1")
	SnapshotProperties_HyperVGeneration_STATUS_V2 = SnapshotProperties_HyperVGeneration_STATUS("V2")
)

// Mapping from string to SnapshotProperties_HyperVGeneration_STATUS
var snapshotProperties_HyperVGeneration_STATUS_Values = map[string]SnapshotProperties_HyperVGeneration_STATUS{
	"v1": SnapshotProperties_HyperVGeneration_STATUS_V1,
	"v2": SnapshotProperties_HyperVGeneration_STATUS_V2,
}

type SnapshotProperties_OsType_STATUS string

const (
	SnapshotProperties_OsType_STATUS_Linux   = SnapshotProperties_OsType_STATUS("Linux")
	SnapshotProperties_OsType_STATUS_Windows = SnapshotProperties_OsType_STATUS("Windows")
)

// Mapping from string to SnapshotProperties_OsType_STATUS
var snapshotProperties_OsType_STATUS_Values = map[string]SnapshotProperties_OsType_STATUS{
	"linux":   SnapshotProperties_OsType_STATUS_Linux,
	"windows": SnapshotProperties_OsType_STATUS_Windows,
}

type SnapshotSku_Name_STATUS string

const (
	SnapshotSku_Name_STATUS_Premium_LRS  = SnapshotSku_Name_STATUS("Premium_LRS")
	SnapshotSku_Name_STATUS_Standard_LRS = SnapshotSku_Name_STATUS("Standard_LRS")
	SnapshotSku_Name_STATUS_Standard_ZRS = SnapshotSku_Name_STATUS("Standard_ZRS")
)

// Mapping from string to SnapshotSku_Name_STATUS
var snapshotSku_Name_STATUS_Values = map[string]SnapshotSku_Name_STATUS{
	"premium_lrs":  SnapshotSku_Name_STATUS_Premium_LRS,
	"standard_lrs": SnapshotSku_Name_STATUS_Standard_LRS,
	"standard_zrs": SnapshotSku_Name_STATUS_Standard_ZRS,
}

type CopyCompletionError_ErrorCode_STATUS string

const CopyCompletionError_ErrorCode_STATUS_CopySourceNotFound = CopyCompletionError_ErrorCode_STATUS("CopySourceNotFound")

// Mapping from string to CopyCompletionError_ErrorCode_STATUS
var copyCompletionError_ErrorCode_STATUS_Values = map[string]CopyCompletionError_ErrorCode_STATUS{
	"copysourcenotfound": CopyCompletionError_ErrorCode_STATUS_CopySourceNotFound,
}
