/*
Copyright 2024 The ORC Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/k-orc/openstack-resource-controller/api/v1alpha1"
)

// ImagePropertiesHardwareApplyConfiguration represents an declarative configuration of the ImagePropertiesHardware type for use
// with apply.
type ImagePropertiesHardwareApplyConfiguration struct {
	CPUSockets      *int                 `json:"cpuSockets,omitempty"`
	CPUCores        *int                 `json:"cpuCores,omitempty"`
	CPUThreads      *int                 `json:"cpuThreads,omitempty"`
	CPUPolicy       *string              `json:"cpuPolicy,omitempty"`
	CPUThreadPolicy *string              `json:"cpuThreadPolicy,omitempty"`
	CDROMBus        *v1alpha1.ImageHWBus `json:"cdromBus,omitempty"`
	DiskBus         *v1alpha1.ImageHWBus `json:"diskBus,omitempty"`
	SCSIModel       *string              `json:"scsiModel,omitempty"`
	VIFModel        *string              `json:"vifModel,omitempty"`
}

// ImagePropertiesHardwareApplyConfiguration constructs an declarative configuration of the ImagePropertiesHardware type for use with
// apply.
func ImagePropertiesHardware() *ImagePropertiesHardwareApplyConfiguration {
	return &ImagePropertiesHardwareApplyConfiguration{}
}

// WithCPUSockets sets the CPUSockets field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CPUSockets field is set to the value of the last call.
func (b *ImagePropertiesHardwareApplyConfiguration) WithCPUSockets(value int) *ImagePropertiesHardwareApplyConfiguration {
	b.CPUSockets = &value
	return b
}

// WithCPUCores sets the CPUCores field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CPUCores field is set to the value of the last call.
func (b *ImagePropertiesHardwareApplyConfiguration) WithCPUCores(value int) *ImagePropertiesHardwareApplyConfiguration {
	b.CPUCores = &value
	return b
}

// WithCPUThreads sets the CPUThreads field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CPUThreads field is set to the value of the last call.
func (b *ImagePropertiesHardwareApplyConfiguration) WithCPUThreads(value int) *ImagePropertiesHardwareApplyConfiguration {
	b.CPUThreads = &value
	return b
}

// WithCPUPolicy sets the CPUPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CPUPolicy field is set to the value of the last call.
func (b *ImagePropertiesHardwareApplyConfiguration) WithCPUPolicy(value string) *ImagePropertiesHardwareApplyConfiguration {
	b.CPUPolicy = &value
	return b
}

// WithCPUThreadPolicy sets the CPUThreadPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CPUThreadPolicy field is set to the value of the last call.
func (b *ImagePropertiesHardwareApplyConfiguration) WithCPUThreadPolicy(value string) *ImagePropertiesHardwareApplyConfiguration {
	b.CPUThreadPolicy = &value
	return b
}

// WithCDROMBus sets the CDROMBus field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CDROMBus field is set to the value of the last call.
func (b *ImagePropertiesHardwareApplyConfiguration) WithCDROMBus(value v1alpha1.ImageHWBus) *ImagePropertiesHardwareApplyConfiguration {
	b.CDROMBus = &value
	return b
}

// WithDiskBus sets the DiskBus field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DiskBus field is set to the value of the last call.
func (b *ImagePropertiesHardwareApplyConfiguration) WithDiskBus(value v1alpha1.ImageHWBus) *ImagePropertiesHardwareApplyConfiguration {
	b.DiskBus = &value
	return b
}

// WithSCSIModel sets the SCSIModel field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SCSIModel field is set to the value of the last call.
func (b *ImagePropertiesHardwareApplyConfiguration) WithSCSIModel(value string) *ImagePropertiesHardwareApplyConfiguration {
	b.SCSIModel = &value
	return b
}

// WithVIFModel sets the VIFModel field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VIFModel field is set to the value of the last call.
func (b *ImagePropertiesHardwareApplyConfiguration) WithVIFModel(value string) *ImagePropertiesHardwareApplyConfiguration {
	b.VIFModel = &value
	return b
}
