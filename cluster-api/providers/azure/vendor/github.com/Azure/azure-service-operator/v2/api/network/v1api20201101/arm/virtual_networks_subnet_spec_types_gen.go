// Code generated by azure-service-operator-codegen. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package arm

import "github.com/Azure/azure-service-operator/v2/pkg/genruntime"

type VirtualNetworksSubnet_Spec struct {
	// Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name string `json:"name,omitempty"`

	// Properties: Properties of the subnet.
	Properties *SubnetPropertiesFormat_VirtualNetworks_Subnet_SubResourceEmbedded `json:"properties,omitempty"`
}

var _ genruntime.ARMResourceSpec = &VirtualNetworksSubnet_Spec{}

// GetAPIVersion returns the ARM API version of the resource. This is always "2020-11-01"
func (subnet VirtualNetworksSubnet_Spec) GetAPIVersion() string {
	return "2020-11-01"
}

// GetName returns the Name of the resource
func (subnet *VirtualNetworksSubnet_Spec) GetName() string {
	return subnet.Name
}

// GetType returns the ARM Type of the resource. This is always "Microsoft.Network/virtualNetworks/subnets"
func (subnet *VirtualNetworksSubnet_Spec) GetType() string {
	return "Microsoft.Network/virtualNetworks/subnets"
}

// Properties of the subnet.
type SubnetPropertiesFormat_VirtualNetworks_Subnet_SubResourceEmbedded struct {
	// AddressPrefix: The address prefix for the subnet.
	AddressPrefix *string `json:"addressPrefix,omitempty"`

	// AddressPrefixes: List of address prefixes for the subnet.
	AddressPrefixes []string `json:"addressPrefixes,omitempty"`

	// ApplicationGatewayIpConfigurations: Application gateway IP configurations of virtual network resource.
	ApplicationGatewayIpConfigurations []ApplicationGatewayIPConfiguration_VirtualNetworks_Subnet_SubResourceEmbedded `json:"applicationGatewayIpConfigurations,omitempty"`

	// Delegations: An array of references to the delegations on the subnet.
	Delegations []Delegation `json:"delegations,omitempty"`

	// IpAllocations: Array of IpAllocation which reference this subnet.
	IpAllocations []SubResource `json:"ipAllocations,omitempty"`

	// NatGateway: Nat gateway associated with this subnet.
	NatGateway *SubResource `json:"natGateway,omitempty"`

	// NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupSpec_VirtualNetworks_Subnet_SubResourceEmbedded `json:"networkSecurityGroup,omitempty"`

	// PrivateEndpointNetworkPolicies: Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies *SubnetPropertiesFormat_PrivateEndpointNetworkPolicies `json:"privateEndpointNetworkPolicies,omitempty"`

	// PrivateLinkServiceNetworkPolicies: Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies *SubnetPropertiesFormat_PrivateLinkServiceNetworkPolicies `json:"privateLinkServiceNetworkPolicies,omitempty"`

	// RouteTable: The reference to the RouteTable resource.
	RouteTable *RouteTableSpec_VirtualNetworks_Subnet_SubResourceEmbedded `json:"routeTable,omitempty"`

	// ServiceEndpointPolicies: An array of service endpoint policies.
	ServiceEndpointPolicies []ServiceEndpointPolicySpec_VirtualNetworks_Subnet_SubResourceEmbedded `json:"serviceEndpointPolicies,omitempty"`

	// ServiceEndpoints: An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormat `json:"serviceEndpoints,omitempty"`
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfiguration_VirtualNetworks_Subnet_SubResourceEmbedded struct {
	Id *string `json:"id,omitempty"`
}

// Details the service to which the subnet is delegated.
type Delegation struct {
	// Name: The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name *string `json:"name,omitempty"`

	// Properties: Properties of the subnet.
	Properties *ServiceDelegationPropertiesFormat `json:"properties,omitempty"`
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupSpec_VirtualNetworks_Subnet_SubResourceEmbedded struct {
	Id *string `json:"id,omitempty"`
}

// Route table resource.
type RouteTableSpec_VirtualNetworks_Subnet_SubResourceEmbedded struct {
	Id *string `json:"id,omitempty"`
}

// Service End point policy resource.
type ServiceEndpointPolicySpec_VirtualNetworks_Subnet_SubResourceEmbedded struct {
	Id *string `json:"id,omitempty"`
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormat struct {
	// Locations: A list of locations.
	Locations []string `json:"locations,omitempty"`

	// Service: The type of the endpoint service.
	Service *string `json:"service,omitempty"`
}

// +kubebuilder:validation:Enum={"Disabled","Enabled"}
type SubnetPropertiesFormat_PrivateEndpointNetworkPolicies string

const (
	SubnetPropertiesFormat_PrivateEndpointNetworkPolicies_Disabled = SubnetPropertiesFormat_PrivateEndpointNetworkPolicies("Disabled")
	SubnetPropertiesFormat_PrivateEndpointNetworkPolicies_Enabled  = SubnetPropertiesFormat_PrivateEndpointNetworkPolicies("Enabled")
)

// Mapping from string to SubnetPropertiesFormat_PrivateEndpointNetworkPolicies
var subnetPropertiesFormat_PrivateEndpointNetworkPolicies_Values = map[string]SubnetPropertiesFormat_PrivateEndpointNetworkPolicies{
	"disabled": SubnetPropertiesFormat_PrivateEndpointNetworkPolicies_Disabled,
	"enabled":  SubnetPropertiesFormat_PrivateEndpointNetworkPolicies_Enabled,
}

// +kubebuilder:validation:Enum={"Disabled","Enabled"}
type SubnetPropertiesFormat_PrivateLinkServiceNetworkPolicies string

const (
	SubnetPropertiesFormat_PrivateLinkServiceNetworkPolicies_Disabled = SubnetPropertiesFormat_PrivateLinkServiceNetworkPolicies("Disabled")
	SubnetPropertiesFormat_PrivateLinkServiceNetworkPolicies_Enabled  = SubnetPropertiesFormat_PrivateLinkServiceNetworkPolicies("Enabled")
)

// Mapping from string to SubnetPropertiesFormat_PrivateLinkServiceNetworkPolicies
var subnetPropertiesFormat_PrivateLinkServiceNetworkPolicies_Values = map[string]SubnetPropertiesFormat_PrivateLinkServiceNetworkPolicies{
	"disabled": SubnetPropertiesFormat_PrivateLinkServiceNetworkPolicies_Disabled,
	"enabled":  SubnetPropertiesFormat_PrivateLinkServiceNetworkPolicies_Enabled,
}

// Properties of a service delegation.
type ServiceDelegationPropertiesFormat struct {
	// ServiceName: The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
	ServiceName *string `json:"serviceName,omitempty"`
}
