// Code generated by MockGen. DO NOT EDIT.
// Source: ./ec2client.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	ec2 "github.com/aws/aws-sdk-go/service/ec2"
	gomock "github.com/golang/mock/gomock"
)

// MockEC2API is a mock of EC2API interface.
type MockEC2API struct {
	ctrl     *gomock.Controller
	recorder *MockEC2APIMockRecorder
}

// MockEC2APIMockRecorder is the mock recorder for MockEC2API.
type MockEC2APIMockRecorder struct {
	mock *MockEC2API
}

// NewMockEC2API creates a new mock instance.
func NewMockEC2API(ctrl *gomock.Controller) *MockEC2API {
	mock := &MockEC2API{ctrl: ctrl}
	mock.recorder = &MockEC2APIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEC2API) EXPECT() *MockEC2APIMockRecorder {
	return m.recorder
}

// DeleteDhcpOptions mocks base method.
func (m *MockEC2API) DeleteDhcpOptions(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDhcpOptions", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteDhcpOptions indicates an expected call of DeleteDhcpOptions.
func (mr *MockEC2APIMockRecorder) DeleteDhcpOptions(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDhcpOptions", reflect.TypeOf((*MockEC2API)(nil).DeleteDhcpOptions), ctx, id)
}

// DeleteElasticIP mocks base method.
func (m *MockEC2API) DeleteElasticIP(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteElasticIP", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteElasticIP indicates an expected call of DeleteElasticIP.
func (mr *MockEC2APIMockRecorder) DeleteElasticIP(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteElasticIP", reflect.TypeOf((*MockEC2API)(nil).DeleteElasticIP), ctx, id)
}

// DeleteImage mocks base method.
func (m *MockEC2API) DeleteImage(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteImage", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteImage indicates an expected call of DeleteImage.
func (mr *MockEC2APIMockRecorder) DeleteImage(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteImage", reflect.TypeOf((*MockEC2API)(nil).DeleteImage), ctx, id)
}

// DeleteInternetGateway mocks base method.
func (m *MockEC2API) DeleteInternetGateway(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInternetGateway", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteInternetGateway indicates an expected call of DeleteInternetGateway.
func (mr *MockEC2APIMockRecorder) DeleteInternetGateway(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInternetGateway", reflect.TypeOf((*MockEC2API)(nil).DeleteInternetGateway), ctx, id)
}

// DeleteNATGateway mocks base method.
func (m *MockEC2API) DeleteNATGateway(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNATGateway", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteNATGateway indicates an expected call of DeleteNATGateway.
func (mr *MockEC2APIMockRecorder) DeleteNATGateway(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNATGateway", reflect.TypeOf((*MockEC2API)(nil).DeleteNATGateway), ctx, id)
}

// DeleteNetworkInterface mocks base method.
func (m *MockEC2API) DeleteNetworkInterface(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNetworkInterface", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteNetworkInterface indicates an expected call of DeleteNetworkInterface.
func (mr *MockEC2APIMockRecorder) DeleteNetworkInterface(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNetworkInterface", reflect.TypeOf((*MockEC2API)(nil).DeleteNetworkInterface), ctx, id)
}

// DeleteRouteTable mocks base method.
func (m *MockEC2API) DeleteRouteTable(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteRouteTable", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteRouteTable indicates an expected call of DeleteRouteTable.
func (mr *MockEC2APIMockRecorder) DeleteRouteTable(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteRouteTable", reflect.TypeOf((*MockEC2API)(nil).DeleteRouteTable), ctx, id)
}

// DeleteSecurityGroup mocks base method.
func (m *MockEC2API) DeleteSecurityGroup(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSecurityGroup", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSecurityGroup indicates an expected call of DeleteSecurityGroup.
func (mr *MockEC2APIMockRecorder) DeleteSecurityGroup(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSecurityGroup", reflect.TypeOf((*MockEC2API)(nil).DeleteSecurityGroup), ctx, id)
}

// DeleteSnapshot mocks base method.
func (m *MockEC2API) DeleteSnapshot(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSnapshot", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSnapshot indicates an expected call of DeleteSnapshot.
func (mr *MockEC2APIMockRecorder) DeleteSnapshot(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSnapshot", reflect.TypeOf((*MockEC2API)(nil).DeleteSnapshot), ctx, id)
}

// DeleteSubnet mocks base method.
func (m *MockEC2API) DeleteSubnet(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSubnet", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSubnet indicates an expected call of DeleteSubnet.
func (mr *MockEC2APIMockRecorder) DeleteSubnet(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSubnet", reflect.TypeOf((*MockEC2API)(nil).DeleteSubnet), ctx, id)
}

// DeleteVPC mocks base method.
func (m *MockEC2API) DeleteVPC(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteVPC", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteVPC indicates an expected call of DeleteVPC.
func (mr *MockEC2APIMockRecorder) DeleteVPC(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteVPC", reflect.TypeOf((*MockEC2API)(nil).DeleteVPC), ctx, id)
}

// DeleteVPCEndpoint mocks base method.
func (m *MockEC2API) DeleteVPCEndpoint(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteVPCEndpoint", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteVPCEndpoint indicates an expected call of DeleteVPCEndpoint.
func (mr *MockEC2APIMockRecorder) DeleteVPCEndpoint(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteVPCEndpoint", reflect.TypeOf((*MockEC2API)(nil).DeleteVPCEndpoint), ctx, id)
}

// DeleteVPCEndpointService mocks base method.
func (m *MockEC2API) DeleteVPCEndpointService(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteVPCEndpointService", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteVPCEndpointService indicates an expected call of DeleteVPCEndpointService.
func (mr *MockEC2APIMockRecorder) DeleteVPCEndpointService(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteVPCEndpointService", reflect.TypeOf((*MockEC2API)(nil).DeleteVPCEndpointService), ctx, id)
}

// DeleteVPCPeeringConnection mocks base method.
func (m *MockEC2API) DeleteVPCPeeringConnection(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteVPCPeeringConnection", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteVPCPeeringConnection indicates an expected call of DeleteVPCPeeringConnection.
func (mr *MockEC2APIMockRecorder) DeleteVPCPeeringConnection(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteVPCPeeringConnection", reflect.TypeOf((*MockEC2API)(nil).DeleteVPCPeeringConnection), ctx, id)
}

// DeleteVolume mocks base method.
func (m *MockEC2API) DeleteVolume(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteVolume", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteVolume indicates an expected call of DeleteVolume.
func (mr *MockEC2APIMockRecorder) DeleteVolume(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteVolume", reflect.TypeOf((*MockEC2API)(nil).DeleteVolume), ctx, id)
}

// DescribeInstances mocks base method.
func (m *MockEC2API) DescribeInstances(ctx context.Context, id string) (*ec2.DescribeInstancesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstances", ctx, id)
	ret0, _ := ret[0].(*ec2.DescribeInstancesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeInstances indicates an expected call of DescribeInstances.
func (mr *MockEC2APIMockRecorder) DescribeInstances(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstances", reflect.TypeOf((*MockEC2API)(nil).DescribeInstances), ctx, id)
}

// DescribeInstancesPages mocks base method.
func (m *MockEC2API) DescribeInstancesPages(ctx context.Context, filters []*ec2.Filter, fn func(*ec2.DescribeInstancesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeInstancesPages", ctx, filters, fn)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeInstancesPages indicates an expected call of DescribeInstancesPages.
func (mr *MockEC2APIMockRecorder) DescribeInstancesPages(ctx, filters, fn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeInstancesPages", reflect.TypeOf((*MockEC2API)(nil).DescribeInstancesPages), ctx, filters, fn)
}

// DescribeNatGatewaysPages mocks base method.
func (m *MockEC2API) DescribeNatGatewaysPages(ctx context.Context, vpc string, fn func(*ec2.DescribeNatGatewaysOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNatGatewaysPages", ctx, vpc, fn)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeNatGatewaysPages indicates an expected call of DescribeNatGatewaysPages.
func (mr *MockEC2APIMockRecorder) DescribeNatGatewaysPages(ctx, vpc, fn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNatGatewaysPages", reflect.TypeOf((*MockEC2API)(nil).DescribeNatGatewaysPages), ctx, vpc, fn)
}

// DescribeNetworkInterfacesPages mocks base method.
func (m *MockEC2API) DescribeNetworkInterfacesPages(ctx context.Context, vpc string, fn func(*ec2.DescribeNetworkInterfacesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeNetworkInterfacesPages", ctx, vpc, fn)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeNetworkInterfacesPages indicates an expected call of DescribeNetworkInterfacesPages.
func (mr *MockEC2APIMockRecorder) DescribeNetworkInterfacesPages(ctx, vpc, fn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeNetworkInterfacesPages", reflect.TypeOf((*MockEC2API)(nil).DescribeNetworkInterfacesPages), ctx, vpc, fn)
}

// DescribeRouteTables mocks base method.
func (m *MockEC2API) DescribeRouteTables(ctx context.Context, id string) (*ec2.DescribeRouteTablesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRouteTables", ctx, id)
	ret0, _ := ret[0].(*ec2.DescribeRouteTablesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeRouteTables indicates an expected call of DescribeRouteTables.
func (mr *MockEC2APIMockRecorder) DescribeRouteTables(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRouteTables", reflect.TypeOf((*MockEC2API)(nil).DescribeRouteTables), ctx, id)
}

// DescribeRouteTablesPages mocks base method.
func (m *MockEC2API) DescribeRouteTablesPages(ctx context.Context, vpc string, fn func(*ec2.DescribeRouteTablesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRouteTablesPages", ctx, vpc, fn)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeRouteTablesPages indicates an expected call of DescribeRouteTablesPages.
func (mr *MockEC2APIMockRecorder) DescribeRouteTablesPages(ctx, vpc, fn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRouteTablesPages", reflect.TypeOf((*MockEC2API)(nil).DescribeRouteTablesPages), ctx, vpc, fn)
}

// DescribeSecurityGroupsPages mocks base method.
func (m *MockEC2API) DescribeSecurityGroupsPages(ctx context.Context, vpc string, fn func(*ec2.DescribeSecurityGroupsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSecurityGroupsPages", ctx, vpc, fn)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeSecurityGroupsPages indicates an expected call of DescribeSecurityGroupsPages.
func (mr *MockEC2APIMockRecorder) DescribeSecurityGroupsPages(ctx, vpc, fn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSecurityGroupsPages", reflect.TypeOf((*MockEC2API)(nil).DescribeSecurityGroupsPages), ctx, vpc, fn)
}

// DescribeSubnetsPages mocks base method.
func (m *MockEC2API) DescribeSubnetsPages(ctx context.Context, vpc string, fn func(*ec2.DescribeSubnetsOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeSubnetsPages", ctx, vpc, fn)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeSubnetsPages indicates an expected call of DescribeSubnetsPages.
func (mr *MockEC2APIMockRecorder) DescribeSubnetsPages(ctx, vpc, fn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeSubnetsPages", reflect.TypeOf((*MockEC2API)(nil).DescribeSubnetsPages), ctx, vpc, fn)
}

// DescribeVpcEndpoints mocks base method.
func (m *MockEC2API) DescribeVpcEndpoints(ctx context.Context, vpc string) (*ec2.DescribeVpcEndpointsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeVpcEndpoints", ctx, vpc)
	ret0, _ := ret[0].(*ec2.DescribeVpcEndpointsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeVpcEndpoints indicates an expected call of DescribeVpcEndpoints.
func (mr *MockEC2APIMockRecorder) DescribeVpcEndpoints(ctx, vpc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeVpcEndpoints", reflect.TypeOf((*MockEC2API)(nil).DescribeVpcEndpoints), ctx, vpc)
}

// DisassociateRouteTable mocks base method.
func (m *MockEC2API) DisassociateRouteTable(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisassociateRouteTable", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DisassociateRouteTable indicates an expected call of DisassociateRouteTable.
func (mr *MockEC2APIMockRecorder) DisassociateRouteTable(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisassociateRouteTable", reflect.TypeOf((*MockEC2API)(nil).DisassociateRouteTable), ctx, id)
}

// RevokeSecurityGroupEgress mocks base method.
func (m *MockEC2API) RevokeSecurityGroupEgress(ctx context.Context, group *ec2.SecurityGroup) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RevokeSecurityGroupEgress", ctx, group)
	ret0, _ := ret[0].(error)
	return ret0
}

// RevokeSecurityGroupEgress indicates an expected call of RevokeSecurityGroupEgress.
func (mr *MockEC2APIMockRecorder) RevokeSecurityGroupEgress(ctx, group interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RevokeSecurityGroupEgress", reflect.TypeOf((*MockEC2API)(nil).RevokeSecurityGroupEgress), ctx, group)
}

// RevokeSecurityGroupIngress mocks base method.
func (m *MockEC2API) RevokeSecurityGroupIngress(ctx context.Context, group *ec2.SecurityGroup) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RevokeSecurityGroupIngress", ctx, group)
	ret0, _ := ret[0].(error)
	return ret0
}

// RevokeSecurityGroupIngress indicates an expected call of RevokeSecurityGroupIngress.
func (mr *MockEC2APIMockRecorder) RevokeSecurityGroupIngress(ctx, group interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RevokeSecurityGroupIngress", reflect.TypeOf((*MockEC2API)(nil).RevokeSecurityGroupIngress), ctx, group)
}

// TerminateInstances mocks base method.
func (m *MockEC2API) TerminateInstances(ctx context.Context, id *string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TerminateInstances", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// TerminateInstances indicates an expected call of TerminateInstances.
func (mr *MockEC2APIMockRecorder) TerminateInstances(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TerminateInstances", reflect.TypeOf((*MockEC2API)(nil).TerminateInstances), ctx, id)
}
