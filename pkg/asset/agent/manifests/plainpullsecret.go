package manifests

import (
	"os"

	"github.com/openshift/installer/pkg/asset"
	"github.com/pkg/errors"
)

type PlainPullSecret struct {
	File *asset.File
}

var _ asset.WritableAsset = (*PlainPullSecret)(nil)

// Dependencies returns no dependencies.
func (a *PlainPullSecret) Dependencies() []asset.Asset {
	return nil
}

// Generate generates the SSH public key asset.
func (a *PlainPullSecret) Generate(asset.Parents) error {
	return nil
}

// Files returns the files generated by the asset.
func (a *PlainPullSecret) Files() []*asset.File {
	if a.File != nil {
		return []*asset.File{a.File}
	}
	return []*asset.File{}
}

func (a *PlainPullSecret) Load(f asset.FileFetcher) (bool, error) {
	file, err := f.FetchByName("pull-secret")
	if err != nil {
		if os.IsNotExist(err) {
			return false, nil
		}
		return false, errors.Wrap(err, "failed to load pull-secret file")
	}
	a.File = file
	return true, nil
}

// Name returns the human-friendly name of the asset.
func (a PlainPullSecret) Name() string {
	return "Plain pull secret"
}
