package image

import (
	"context"
	"errors"
	"fmt"
	"os"

	"github.com/openshift/installer/pkg/asset"
)

const (
	postDeploymentFilename = "post.sh"
)

// PostDeployment manages the post image-based installation steps.
type PostDeployment struct {
	File *asset.File
}

var (
	_ asset.WritableAsset = (*PostDeployment)(nil)
)

// Name returns a human friendly name for the asset.
func (pd *PostDeployment) Name() string {
	return "Post Deployment Script"
}

// Dependencies returns all of the dependencies directly needed by the
// asset.
func (pd *PostDeployment) Dependencies() []asset.Asset {
	return []asset.Asset{}
}

// Generate is not required for PostDeployment.
func (pd *PostDeployment) Generate(_ context.Context, dependencies asset.Parents) error {
	return nil
}

// Files returns the files generated by the asset.
func (pd *PostDeployment) Files() []*asset.File {
	if pd.File != nil {
		return []*asset.File{pd.File}
	}
	return []*asset.File{}
}

// Load reads the asset file from disk.
func (pd *PostDeployment) Load(f asset.FileFetcher) (found bool, err error) {
	file, err := f.FetchByName(postDeploymentFilename)
	if err != nil {
		if errors.Is(err, os.ErrNotExist) {
			return false, nil
		}
		return false, fmt.Errorf("failed to load the %s file: %w", postDeploymentFilename, err)
	}

	pd.File = file
	return true, nil
}
