package configimage

import (
	"context"
	"fmt"
	"path/filepath"

	"github.com/openshift/installer/pkg/asset"
)

// ExtraManifests reads the additional manifests for cluster customization.
type ExtraManifests struct {
	FileList []*asset.File
}

var (
	_ asset.WritableAsset = (*ExtraManifests)(nil)
)

// Name returns a human friendly name for the asset.
func (em *ExtraManifests) Name() string {
	return "Extra Manifests"
}

// Dependencies returns all of the dependencies directly needed by the
// asset.
func (em *ExtraManifests) Dependencies() []asset.Asset {
	return []asset.Asset{}
}

// Generate is not required for ExtraManifests.
func (em *ExtraManifests) Generate(_ context.Context, dependencies asset.Parents) error {
	return nil
}

// Files returns the files generated by the asset.
func (em *ExtraManifests) Files() []*asset.File {
	return em.FileList
}

// Load reads the asset files from disk.
func (em *ExtraManifests) Load(f asset.FileFetcher) (found bool, err error) {
	yamlFileList, err := f.FetchByPattern(filepath.Join(extraManifestsDir, "*.yaml"))
	if err != nil {
		return false, fmt.Errorf("failed to load *.yaml files: %w", err)
	}
	ymlFileList, err := f.FetchByPattern(filepath.Join(extraManifestsDir, "*.yml"))
	if err != nil {
		return false, fmt.Errorf("failed to load *.yml files: %w", err)
	}
	jsonFileList, err := f.FetchByPattern(filepath.Join(extraManifestsDir, "*.json"))
	if err != nil {
		return false, fmt.Errorf("failed to load *.json files: %w", err)
	}

	em.FileList = append(em.FileList, yamlFileList...)
	em.FileList = append(em.FileList, ymlFileList...)
	em.FileList = append(em.FileList, jsonFileList...)
	asset.SortFiles(em.FileList)

	return len(em.FileList) > 0, nil
}
