// Code generated by internal/generate/servicepackages/main.go; DO NOT EDIT.

package iot

import (
	"context"

	"github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []*types.ServicePackageFrameworkDataSource {
	return []*types.ServicePackageFrameworkDataSource{}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []*types.ServicePackageFrameworkResource {
	return []*types.ServicePackageFrameworkResource{}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) []*types.ServicePackageSDKDataSource {
	return []*types.ServicePackageSDKDataSource{
		{
			Factory:  DataSourceEndpoint,
			TypeName: "aws_iot_endpoint",
		},
	}
}

func (p *servicePackage) SDKResources(ctx context.Context) []*types.ServicePackageSDKResource {
	return []*types.ServicePackageSDKResource{
		{
			Factory:  ResourceAuthorizer,
			TypeName: "aws_iot_authorizer",
		},
		{
			Factory:  ResourceCertificate,
			TypeName: "aws_iot_certificate",
		},
		{
			Factory:  ResourceIndexingConfiguration,
			TypeName: "aws_iot_indexing_configuration",
		},
		{
			Factory:  ResourceLoggingOptions,
			TypeName: "aws_iot_logging_options",
		},
		{
			Factory:  ResourcePolicy,
			TypeName: "aws_iot_policy",
		},
		{
			Factory:  ResourcePolicyAttachment,
			TypeName: "aws_iot_policy_attachment",
		},
		{
			Factory:  ResourceProvisioningTemplate,
			TypeName: "aws_iot_provisioning_template",
			Name:     "Provisioning Template",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: "arn",
			},
		},
		{
			Factory:  ResourceRoleAlias,
			TypeName: "aws_iot_role_alias",
		},
		{
			Factory:  ResourceThing,
			TypeName: "aws_iot_thing",
		},
		{
			Factory:  ResourceThingGroup,
			TypeName: "aws_iot_thing_group",
			Name:     "Thing Group",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: "arn",
			},
		},
		{
			Factory:  ResourceThingGroupMembership,
			TypeName: "aws_iot_thing_group_membership",
		},
		{
			Factory:  ResourceThingPrincipalAttachment,
			TypeName: "aws_iot_thing_principal_attachment",
		},
		{
			Factory:  ResourceThingType,
			TypeName: "aws_iot_thing_type",
			Name:     "Thing Type",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: "arn",
			},
		},
		{
			Factory:  ResourceTopicRule,
			TypeName: "aws_iot_topic_rule",
			Name:     "Topic Rule",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: "arn",
			},
		},
		{
			Factory:  ResourceTopicRuleDestination,
			TypeName: "aws_iot_topic_rule_destination",
		},
	}
}

func (p *servicePackage) ServicePackageName() string {
	return names.IoT
}

var ServicePackage = &servicePackage{}
