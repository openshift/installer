// Code generated by internal/generate/servicepackages/main.go; DO NOT EDIT.

package licensemanager

import (
	"context"

	"github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []*types.ServicePackageFrameworkDataSource {
	return []*types.ServicePackageFrameworkDataSource{}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []*types.ServicePackageFrameworkResource {
	return []*types.ServicePackageFrameworkResource{}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) []*types.ServicePackageSDKDataSource {
	return []*types.ServicePackageSDKDataSource{
		{
			Factory:  DataSourceDistributedGrants,
			TypeName: "aws_licensemanager_grants",
		},
		{
			Factory:  DataSourceReceivedLicense,
			TypeName: "aws_licensemanager_received_license",
		},
		{
			Factory:  DataSourceReceivedLicenses,
			TypeName: "aws_licensemanager_received_licenses",
		},
	}
}

func (p *servicePackage) SDKResources(ctx context.Context) []*types.ServicePackageSDKResource {
	return []*types.ServicePackageSDKResource{
		{
			Factory:  ResourceAssociation,
			TypeName: "aws_licensemanager_association",
		},
		{
			Factory:  ResourceGrant,
			TypeName: "aws_licensemanager_grant",
		},
		{
			Factory:  ResourceGrantAccepter,
			TypeName: "aws_licensemanager_grant_accepter",
		},
		{
			Factory:  ResourceLicenseConfiguration,
			TypeName: "aws_licensemanager_license_configuration",
			Name:     "License Configuration",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: "id",
			},
		},
	}
}

func (p *servicePackage) ServicePackageName() string {
	return names.LicenseManager
}

var ServicePackage = &servicePackage{}
