# Copyright 2023 Google LLC. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
info:
  title: Compute/Autoscaler
  description: The Compute Autoscaler resource
  x-dcl-struct-name: Autoscaler
  x-dcl-has-iam: false
paths:
  get:
    description: The function used to get information about a Autoscaler
    parameters:
    - name: autoscaler
      required: true
      description: A full instance of a Autoscaler
  apply:
    description: The function used to apply information about a Autoscaler
    parameters:
    - name: autoscaler
      required: true
      description: A full instance of a Autoscaler
  delete:
    description: The function used to delete a Autoscaler
    parameters:
    - name: autoscaler
      required: true
      description: A full instance of a Autoscaler
  deleteAll:
    description: The function used to delete all Autoscaler
    parameters:
    - name: project
      required: true
      schema:
        type: string
    - name: location
      required: true
      schema:
        type: string
  list:
    description: The function used to list information about many Autoscaler
    parameters:
    - name: project
      required: true
      schema:
        type: string
    - name: location
      required: true
      schema:
        type: string
components:
  schemas:
    Autoscaler:
      title: Autoscaler
      x-dcl-locations:
      - zone
      - region
      x-dcl-parent-container: project
      x-dcl-has-create: true
      x-dcl-has-iam: false
      x-dcl-read-timeout: 0
      x-dcl-apply-timeout: 0
      x-dcl-delete-timeout: 0
      type: object
      required:
      - name
      - target
      - autoscalingPolicy
      - project
      properties:
        autoscalingPolicy:
          type: object
          x-dcl-go-name: AutoscalingPolicy
          x-dcl-go-type: AutoscalerAutoscalingPolicy
          description: 'The configuration parameters for the autoscaling algorithm.
            You can define one or more of the policies for an autoscaler: `cpuUtilization`,
            `customMetricUtilizations`, and `loadBalancingUtilization`. If none of
            these are specified, the default will be to autoscale based on `cpuUtilization`
            to `0.6` or 60%.'
          required:
          - minNumReplicas
          - maxNumReplicas
          properties:
            coolDownPeriodSec:
              type: integer
              format: int64
              x-dcl-go-name: CoolDownPeriodSec
              description: The number of seconds that the autoscaler should wait before
                it starts collecting information from a new instance. This prevents
                the autoscaler from collecting information when the instance is initializing,
                during which the collected usage would not be reliable. The default
                time autoscaler waits is 60 seconds. Virtual machine initialization
                times might vary because of numerous factors. We recommend that you
                test how long an instance may take to initialize. To do this, create
                an instance and time the startup process.
              default: 60
            cpuUtilization:
              type: object
              x-dcl-go-name: CpuUtilization
              x-dcl-go-type: AutoscalerAutoscalingPolicyCpuUtilization
              description: Defines the CPU utilization policy that allows the autoscaler
                to scale based on the average CPU utilization of a managed instance
                group.
              x-dcl-server-default: true
              required:
              - utilizationTarget
              properties:
                utilizationTarget:
                  type: number
                  format: double
                  x-dcl-go-name: UtilizationTarget
                  description: The target CPU utilization that the autoscaler should
                    maintain. Must be a float value in the range (0, 1]. If not specified,
                    the default is `0.6`. If the CPU level is below the target utilization,
                    the autoscaler scales down the number of instances until it reaches
                    the minimum number of instances you specified or until the average
                    CPU of your instances reaches the target utilization. If the average
                    CPU is above the target utilization, the autoscaler scales up
                    until it reaches the maximum number of instances you specified
                    or until the average utilization reaches the target utilization.
            customMetricUtilizations:
              type: array
              x-dcl-go-name: CustomMetricUtilizations
              description: Configuration parameters of autoscaling based on a custom
                metric.
              x-dcl-send-empty: true
              x-dcl-list-type: list
              items:
                type: object
                x-dcl-go-type: AutoscalerAutoscalingPolicyCustomMetricUtilizations
                required:
                - metric
                properties:
                  metric:
                    type: string
                    x-dcl-go-name: Metric
                    description: The identifier (type) of the Stackdriver Monitoring
                      metric. The metric cannot have negative values. The metric must
                      have a value type of `INT64` or `DOUBLE`.
                  utilizationTarget:
                    type: number
                    format: double
                    x-dcl-go-name: UtilizationTarget
                    description: The target value of the metric that autoscaler should
                      maintain. This must be a positive value. A utilization metric
                      scales number of virtual machines handling requests to increase
                      or decrease proportionally to the metric. For example, a good
                      metric to use as a utilization_target is `https://www.googleapis.com/compute/v1/instance/network/received_bytes_count`.
                      The autoscaler will work to keep this value constant for each
                      of the instances.
                  utilizationTargetType:
                    type: string
                    x-dcl-go-name: UtilizationTargetType
                    x-dcl-go-type: AutoscalerAutoscalingPolicyCustomMetricUtilizationsUtilizationTargetTypeEnum
                    description: Defines how target utilization value is expressed
                      for a Stackdriver Monitoring metric. Either `GAUGE`, `DELTA_PER_SECOND`,
                      or `DELTA_PER_MINUTE`.
                    enum:
                    - GAUGE
                    - DELTA_PER_SECOND
                    - DELTA_PER_MINUTE
            loadBalancingUtilization:
              type: object
              x-dcl-go-name: LoadBalancingUtilization
              x-dcl-go-type: AutoscalerAutoscalingPolicyLoadBalancingUtilization
              description: Configuration parameters of autoscaling based on load balancer.
              required:
              - utilizationTarget
              properties:
                utilizationTarget:
                  type: number
                  format: double
                  x-dcl-go-name: UtilizationTarget
                  description: Fraction of backend capacity utilization (set in HTTP(S)
                    load balancing configuration) that autoscaler should maintain.
                    Must be a positive float value. If not defined, the default is
                    `0.8`.
            maxNumReplicas:
              type: integer
              format: int64
              x-dcl-go-name: MaxNumReplicas
              description: The maximum number of instances that the autoscaler can
                scale up to. This is required when creating or updating an autoscaler.
                The maximum number of replicas should not be lower than minimal number
                of replicas.
            minNumReplicas:
              type: integer
              format: int64
              x-dcl-go-name: MinNumReplicas
              description: The minimum number of replicas that the autoscaler can
                scale down to. This cannot be less than 0. If not provided, autoscaler
                will choose a default value depending on maximum number of instances
                allowed.
              x-dcl-send-empty: true
            mode:
              type: string
              x-dcl-go-name: Mode
              x-dcl-go-type: AutoscalerAutoscalingPolicyModeEnum
              description: 'Defines operating mode for this policy. Possible values:
                OFF, ON, ONLY_SCALE_OUT, ONLY_UP'
              default: "ON"
              enum:
              - "OFF"
              - "ON"
              - ONLY_SCALE_OUT
              - ONLY_UP
            scaleInControl:
              type: object
              x-dcl-go-name: ScaleInControl
              x-dcl-go-type: AutoscalerAutoscalingPolicyScaleInControl
              x-dcl-server-default: true
              properties:
                maxScaledInReplicas:
                  type: object
                  x-dcl-go-name: MaxScaledInReplicas
                  x-dcl-go-type: AutoscalerAutoscalingPolicyScaleInControlMaxScaledInReplicas
                  description: Maximum allowed number (or %) of VMs that can be deducted
                    from the peak recommendation during the window autoscaler looks
                    at when computing recommendations. Possibly all these VMs can
                    be deleted at once so user service needs to be prepared to lose
                    that many VMs in one step.
                  properties:
                    calculated:
                      type: integer
                      format: int64
                      x-dcl-go-name: Calculated
                      readOnly: true
                      description: |-
                        Absolute value of VM instances calculated based on the specific mode.

                        - If the value is `fixed`, then the `calculated` value is equal to the `fixed` value.
                        - If the value is a `percent`, then the `calculated` value is `percent`/100 * `targetSize`. For example, the `calculated` value of a 80% of a managed instance group with 150 instances would be (80/100 * 150) = 120 VM instances. If there is a remainder, the number is rounded up.
                    fixed:
                      type: integer
                      format: int64
                      x-dcl-go-name: Fixed
                      description: Specifies a fixed number of VM instances. This
                        must be a positive integer.
                    percent:
                      type: integer
                      format: int64
                      x-dcl-go-name: Percent
                      description: Specifies a percentage of instances between 0 to
                        100%, inclusive. For example, specify `80` for 80%.
                timeWindowSec:
                  type: integer
                  format: int64
                  x-dcl-go-name: TimeWindowSec
                  description: How long back autoscaling should look when computing
                    recommendations to include directives regarding slower scale in,
                    as described above.
        creationTimestamp:
          type: string
          x-dcl-go-name: CreationTimestamp
          readOnly: true
          description: Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
            text format.
          x-kubernetes-immutable: true
        description:
          type: string
          x-dcl-go-name: Description
          description: An optional description of this resource. Provide this property
            when you create the resource.
        id:
          type: integer
          format: int64
          x-dcl-go-name: Id
          readOnly: true
          description: The unique identifier for the resource. This identifier is
            defined by the server. (-- For time of migration from Autoscaler backend
            this field will accept values which will be stored as legacy autoscaler
            id. --)
          x-kubernetes-immutable: true
        location:
          type: string
          x-dcl-go-name: Location
          description: The location of this resource.
          x-kubernetes-immutable: true
        name:
          type: string
          x-dcl-go-name: Name
          description: Name of the resource. Provided by the client when the resource
            is created. The name must be 1-63 characters long, and comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt).
            Specifically, the name must be 1-63 characters long and match the regular
            expression `)?` which means the first character must be a lowercase letter,
            and all following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          x-kubernetes-immutable: true
        project:
          type: string
          x-dcl-go-name: Project
          description: The project for the resource
          x-kubernetes-immutable: true
          x-dcl-references:
          - resource: Cloudresourcemanager/Project
            field: name
        recommendedSize:
          type: integer
          format: int64
          x-dcl-go-name: RecommendedSize
          readOnly: true
          description: Target recommended MIG size (number of instances) computed
            by autoscaler. Autoscaler calculates recommended MIG size even when autoscaling
            policy mode is different from ON. This field is empty when autoscaler
            is not connected to the existing managed instance group or autoscaler
            did not generate its prediction.
          x-kubernetes-immutable: true
        region:
          type: string
          x-dcl-go-name: Region
          description: URL of the [region](/compute/docs/regions-zones/#available)
            where the instance group resides (for autoscalers living in regional scope).
          x-kubernetes-immutable: true
        scalingScheduleStatus:
          type: object
          additionalProperties:
            type: string
          x-dcl-go-name: ScalingScheduleStatus
          description: Status information of existing scaling schedules.
          x-kubernetes-immutable: true
        selfLink:
          type: string
          x-dcl-go-name: SelfLink
          readOnly: true
          description: Server-defined URL for the resource.
          x-kubernetes-immutable: true
        status:
          type: string
          x-dcl-go-name: Status
          x-dcl-go-type: AutoscalerStatusEnum
          readOnly: true
          description: |-
            The status of the autoscaler configuration. Current set of possible values:

            - `PENDING`: Autoscaler backend hasn't read new/updated configuration.
            - `DELETING`: Configuration is being deleted.
            - `ACTIVE`: Configuration is acknowledged to be effective. Some warnings might be present in the `statusDetails` field.
            - `ERROR`: Configuration has errors. Actionable for users. Details are present in the `statusDetails` field.

             New values might be added in the future.
          x-kubernetes-immutable: true
          enum:
          - PENDING
          - RUNNING
          - DONE
        statusDetails:
          type: array
          x-dcl-go-name: StatusDetails
          readOnly: true
          description: Human-readable details about the current state of the autoscaler.
            Read the documentation for [Commonly returned status messages](/compute/docs/autoscaler/understanding-autoscaler-decisions#commonly_returned_status_messages)
            for examples of status messages you might encounter.
          x-kubernetes-immutable: true
          x-dcl-list-type: list
          items:
            type: object
            x-dcl-go-type: AutoscalerStatusDetails
            properties:
              message:
                type: string
                x-dcl-go-name: Message
                description: The status message.
                x-kubernetes-immutable: true
              type:
                type: string
                x-dcl-go-name: Type
                x-dcl-go-type: AutoscalerStatusDetailsTypeEnum
                description: |-
                  The type of error, warning, or notice returned. Current set of possible values:

                  - `ALL_INSTANCES_UNHEALTHY` (WARNING): All instances in the instance group are unhealthy (not in RUNNING state).
                  - `BACKEND_SERVICE_DOES_NOT_EXIST` (ERROR): There is no backend service attached to the instance group.
                  - `CAPPED_AT_MAX_NUM_REPLICAS` (WARNING): Autoscaler recommends a size greater than maxNumReplicas.
                  - `CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE` (WARNING): The custom metric samples are not exported often enough to be a credible base for autoscaling.
                  - `CUSTOM_METRIC_INVALID` (ERROR): The custom metric that was specified does not exist or does not have the necessary labels.
                  - `MIN_EQUALS_MAX` (WARNING): The minNumReplicas is equal to maxNumReplicas. This means the autoscaler cannot add or remove instances from the instance group.
                  - `MISSING_CUSTOM_METRIC_DATA_POINTS` (WARNING): The autoscaler did not receive any data from the custom metric configured for autoscaling.
                  - `MISSING_LOAD_BALANCING_DATA_POINTS` (WARNING): The autoscaler is configured to scale based on a load balancing signal but the instance group has not received any requests from the load balancer.
                  - `MODE_OFF` (WARNING): Autoscaling is turned off. The number of instances in the group won't change automatically. The autoscaling configuration is preserved.
                  - `MODE_ONLY_UP` (WARNING): Autoscaling is in the "Autoscale only up" mode. The autoscaler can add instances but not remove any.
                  - `MORE_THAN_ONE_BACKEND_SERVICE` (ERROR): The instance group cannot be autoscaled because it has more than one backend service attached to it.
                  - `NOT_ENOUGH_QUOTA_AVAILABLE` (ERROR): There is insufficient quota for the necessary resources, such as CPU or number of instances.
                  - `REGION_RESOURCE_STOCKOUT` (ERROR): Shown only for regional autoscalers: there is a resource stockout in the chosen region.
                  - `SCALING_TARGET_DOES_NOT_EXIST` (ERROR): The target to be scaled does not exist.
                  - `UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION` (ERROR): Autoscaling does not work with an HTTP/S load balancer that has been configured for maxRate.
                  - `ZONE_RESOURCE_STOCKOUT` (ERROR): For zonal autoscalers: there is a resource stockout in the chosen zone. For regional autoscalers: in at least one of the zones you're using there is a resource stockout.

                   New values might be added in the future. Some of the values might not be available in all API versions. Possible values: PATH, OTHER, PARAMETER
                x-kubernetes-immutable: true
                enum:
                - PATH
                - OTHER
                - PARAMETER
        target:
          type: string
          x-dcl-go-name: Target
          description: URL of the managed instance group that this autoscaler will
            scale.
          x-dcl-references:
          - resource: Compute/InstanceGroupManager
            field: instanceGroup
        zone:
          type: string
          x-dcl-go-name: Zone
          description: URL of the [zone](/compute/docs/regions-zones/#available) where
            the instance group resides (for autoscalers living in zonal scope).
          x-kubernetes-immutable: true
