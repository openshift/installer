# Copyright 2023 Google LLC. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
info:
  title: Compute/BackendService
  description: The Compute BackendService resource
  x-dcl-struct-name: BackendService
  x-dcl-has-iam: false
paths:
  get:
    description: The function used to get information about a BackendService
    parameters:
    - name: backendService
      required: true
      description: A full instance of a BackendService
  apply:
    description: The function used to apply information about a BackendService
    parameters:
    - name: backendService
      required: true
      description: A full instance of a BackendService
  delete:
    description: The function used to delete a BackendService
    parameters:
    - name: backendService
      required: true
      description: A full instance of a BackendService
  deleteAll:
    description: The function used to delete all BackendService
    parameters:
    - name: project
      required: true
      schema:
        type: string
    - name: location
      required: true
      schema:
        type: string
  list:
    description: The function used to list information about many BackendService
    parameters:
    - name: project
      required: true
      schema:
        type: string
    - name: location
      required: true
      schema:
        type: string
components:
  schemas:
    BackendService:
      title: BackendService
      x-dcl-id: projects/{{project}}/global/backendServices/{{name}}
      x-dcl-locations:
      - global
      - region
      x-dcl-uses-state-hint: true
      x-dcl-parent-container: project
      x-dcl-has-create: true
      x-dcl-has-iam: false
      x-dcl-read-timeout: 0
      x-dcl-apply-timeout: 0
      x-dcl-delete-timeout: 0
      type: object
      required:
      - name
      - project
      properties:
        affinityCookieTtlSec:
          type: integer
          format: int64
          x-dcl-go-name: AffinityCookieTtlSec
          description: Lifetime of cookies in seconds. Only applicable if the `loadBalancingScheme`
            is `EXTERNAL`, `INTERNAL_SELF_MANAGED`, or `INTERNAL_MANAGED`, the `protocol`
            is `HTTP` or `HTTPS`, and the `sessionAffinity` is `GENERATED_COOKIE`
            or `HTTP_COOKIE`. If set to 0, the cookie is non-persistent and lasts
            only until the end of the browser session (or equivalent). The maximum
            allowed value is one day (86,400). Not supported when the backend service
            is referenced by a URL map that is bound to target gRPC proxy that has
            `validateForProxyless` field set to true.
        backends:
          type: array
          x-dcl-go-name: Backends
          description: The list of backends that serve this BackendService.
          x-dcl-send-empty: true
          x-dcl-list-type: list
          items:
            type: object
            x-dcl-go-type: BackendServiceBackends
            properties:
              balancingMode:
                type: string
                x-dcl-go-name: BalancingMode
                x-dcl-go-type: BackendServiceBackendsBalancingModeEnum
                description: 'Specifies how to determine whether the backend of a
                  load balancer can handle additional traffic or is fully loaded.
                  For usage guidelines, see (/load-balancing/docs/backend-service#connection_balancing_mode).
                  Possible values: UTILIZATION, RATE, CONNECTION'
                enum:
                - UTILIZATION
                - RATE
                - CONNECTION
              capacityScaler:
                type: number
                format: double
                x-dcl-go-name: CapacityScaler
                description: 'A multiplier applied to the backend''s target capacity
                  of its balancing mode. The default value is `1`, which means the
                  group serves up to 100% of its configured capacity (depending on
                  `balancingMode`). A setting of `0` means the group is completely
                  drained, offering 0% of its available capacity. The valid ranges
                  are `0.0` and . You cannot configure a setting larger than `0` and
                  smaller than `0.1`. You cannot configure a setting of `0` when there
                  is only one backend attached to the backend service. Not supported
                  by: - Internal TCP/UDP Load Balancing - Network Load Balancing'
              description:
                type: string
                x-dcl-go-name: Description
                description: An optional description of this resource. Provide this
                  property when you create the resource.
              failover:
                type: boolean
                x-dcl-go-name: Failover
                description: This field designates whether this is a failover backend.
                  More than one failover backend can be configured for a given BackendService.
              group:
                type: string
                x-dcl-go-name: Group
                description: The fully-qualified URL of an instance group or network
                  endpoint group (NEG) resource. The type of backend that a backend
                  service supports depends on the backend service's `loadBalancingScheme`.
                  - When the `loadBalancingScheme` for the backend service is `EXTERNAL`
                  (except Network Load Balancing), ` INTERNAL_SELF_MANAGED`, or `INTERNAL_MANAGED
                  `, the backend can be either an instance group or a NEG. The backends
                  on the backend service must be either all instance groups or all
                  NEGs. You cannot mix instance group and NEG backends on the same
                  backend service. - When the `loadBalancingScheme` for the backend
                  service is `EXTERNAL` for Network Load Balancing or `INTERNAL` for
                  Internal TCP/UDP Load Balancing, the backend must be an instance
                  group. NEGs are not supported. For regional services, the backend
                  must be in the same region as the backend service. You must use
                  the **fully-qualified** URL (starting with `https://www.googleapis.com/`)
                  to specify the instance group or NEG. Partial URLs are not supported.
                x-dcl-references:
                - resource: Compute/InstanceGroup
                  field: selfLink
                - resource: Compute/NetworkEndpointGroup
                  field: selfLink
              maxConnections:
                type: integer
                format: int64
                x-dcl-go-name: MaxConnections
                description: 'Defines a target maximum number of simultaneous connections.
                  For usage guidelines, see (/load-balancing/docs/backend-service#utilization_balancing_mode).
                  Not available if the backend''s `balancingMode` is `RATE`. Not supported
                  by: - Internal TCP/UDP Load Balancing - Network Load Balancing'
              maxConnectionsPerEndpoint:
                type: integer
                format: int64
                x-dcl-go-name: MaxConnectionsPerEndpoint
                description: 'Defines a target maximum number of simultaneous connections.
                  For usage guidelines, see (/load-balancing/docs/backend-service#utilization_balancing_mode).
                  Not available if the backend''s `balancingMode` is `RATE`. Not supported
                  by: - Internal TCP/UDP Load Balancing - Network Load Balancing.'
              maxConnectionsPerInstance:
                type: integer
                format: int64
                x-dcl-go-name: MaxConnectionsPerInstance
                description: 'Defines a target maximum number of simultaneous connections.
                  For usage guidelines, see (/load-balancing/docs/backend-service#utilization_balancing_mode).
                  Not available if the backend''s `balancingMode` is `RATE`. Not supported
                  by: - Internal TCP/UDP Load Balancing - Network Load Balancing.'
              maxRate:
                type: integer
                format: int64
                x-dcl-go-name: MaxRate
                description: Defines a maximum number of HTTP requests per second
                  (RPS). For usage guidelines, see (/load-balancing/docs/backend-service#utilization_balancing_mode).
                  Not available if the backend's `balancingMode` is `CONNECTION`.
              maxRatePerEndpoint:
                type: number
                format: double
                x-dcl-go-name: MaxRatePerEndpoint
                description: Defines a maximum target for requests per second (RPS).
                  For usage guidelines, see (/load-balancing/docs/backend-service#utilization_balancing_mode).
                  Not available if the backend's `balancingMode` is `CONNECTION`.
              maxRatePerInstance:
                type: number
                format: double
                x-dcl-go-name: MaxRatePerInstance
                description: Defines a maximum target for requests per second (RPS).
                  For usage guidelines, see (/load-balancing/docs/backend-service#utilization_balancing_mode).
                  Not available if the backend's `balancingMode` is `CONNECTION`.
              maxUtilization:
                type: number
                format: double
                x-dcl-go-name: MaxUtilization
        cdnPolicy:
          type: object
          x-dcl-go-name: CdnPolicy
          x-dcl-go-type: BackendServiceCdnPolicy
          description: Cloud CDN configuration for this BackendService. Only available
            for external HTTP(S) Load Balancing.
          x-dcl-conflicts:
          - iap
          properties:
            bypassCacheOnRequestHeaders:
              type: array
              x-dcl-go-name: BypassCacheOnRequestHeaders
              description: Bypass the cache when the specified request headers are
                matched - e.g. Pragma or Authorization headers. Up to 5 headers can
                be specified. The cache is bypassed for all cdnPolicy.cacheMode settings.
              x-dcl-send-empty: true
              x-dcl-list-type: list
              items:
                type: object
                x-dcl-go-type: BackendServiceCdnPolicyBypassCacheOnRequestHeaders
                properties:
                  headerName:
                    type: string
                    x-dcl-go-name: HeaderName
                    description: The header field name to match on when bypassing
                      cache. Values are case-insensitive.
            cacheKeyPolicy:
              type: object
              x-dcl-go-name: CacheKeyPolicy
              x-dcl-go-type: BackendServiceCdnPolicyCacheKeyPolicy
              description: The CacheKeyPolicy for this CdnPolicy.
              properties:
                includeHost:
                  type: boolean
                  x-dcl-go-name: IncludeHost
                  description: If true, requests to different hosts will be cached
                    separately.
                includeHttpHeaders:
                  type: array
                  x-dcl-go-name: IncludeHttpHeaders
                  description: Allows HTTP request headers (by name) to be used in
                    the cache key.
                  x-dcl-send-empty: true
                  x-dcl-list-type: list
                  items:
                    type: string
                    x-dcl-go-type: string
                includeNamedCookies:
                  type: array
                  x-dcl-go-name: IncludeNamedCookies
                  description: Allows HTTP cookies (by name) to be used in the cache
                    key. The name=value pair will be used in the cache key Cloud CDN
                    generates.
                  x-dcl-send-empty: true
                  x-dcl-list-type: list
                  items:
                    type: string
                    x-dcl-go-type: string
                includeProtocol:
                  type: boolean
                  x-dcl-go-name: IncludeProtocol
                  description: If true, http and https requests will be cached separately.
                includeQueryString:
                  type: boolean
                  x-dcl-go-name: IncludeQueryString
                  description: If true, include query string parameters in the cache
                    key according to query_string_whitelist and query_string_blacklist.
                    If neither is set, the entire query string will be included. If
                    false, the query string will be excluded from the cache key entirely.
                queryStringBlacklist:
                  type: array
                  x-dcl-go-name: QueryStringBlacklist
                  description: Names of query string parameters to exclude in cache
                    keys. All other parameters will be included. Either specify query_string_whitelist
                    or query_string_blacklist, not both. '&' and '=' will be percent
                    encoded and not treated as delimiters.
                  x-dcl-send-empty: true
                  x-dcl-list-type: list
                  items:
                    type: string
                    x-dcl-go-type: string
                queryStringWhitelist:
                  type: array
                  x-dcl-go-name: QueryStringWhitelist
                  description: Names of query string parameters to include in cache
                    keys. All other parameters will be excluded. Either specify query_string_whitelist
                    or query_string_blacklist, not both. '&' and '=' will be percent
                    encoded and not treated as delimiters.
                  x-dcl-send-empty: true
                  x-dcl-list-type: list
                  items:
                    type: string
                    x-dcl-go-type: string
            cacheMode:
              type: string
              x-dcl-go-name: CacheMode
              x-dcl-go-type: BackendServiceCdnPolicyCacheModeEnum
              description: 'Specifies the cache setting for all responses from this
                backend. The possible values are: `USE_ORIGIN_HEADERS` Requires the
                origin to set valid caching headers to cache content. Responses without
                these headers will not be cached at Google''s edge, and will require
                a full trip to the origin on every request, potentially impacting
                performance and increasing load on the origin server. `FORCE_CACHE_ALL`
                Cache all content, ignoring any "private", "no-store" or "no-cache"
                directives in Cache-Control response headers. Warning: this may result
                in Cloud CDN caching private, per-user (user identifiable) content.
                `CACHE_ALL_STATIC` Automatically cache static content, including common
                image formats, media (video and audio), and web assets (JavaScript
                and CSS). Requests and responses that are marked as uncacheable, as
                well as dynamic content (including HTML), will not be cached. Possible
                values: INVALID_CACHE_MODE, USE_ORIGIN_HEADERS, FORCE_CACHE_ALL, CACHE_ALL_STATIC'
              enum:
              - INVALID_CACHE_MODE
              - USE_ORIGIN_HEADERS
              - FORCE_CACHE_ALL
              - CACHE_ALL_STATIC
            clientTtl:
              type: integer
              format: int64
              x-dcl-go-name: ClientTtl
              description: Specifies a separate client (e.g. browser client) maximum
                TTL. This is used to clamp the max-age (or Expires) value sent to
                the client. With FORCE_CACHE_ALL, the lesser of client_ttl and default_ttl
                is used for the response max-age directive, along with a "public"
                directive. For cacheable content in CACHE_ALL_STATIC mode, client_ttl
                clamps the max-age from the origin (if specified), or else sets the
                response max-age directive to the lesser of the client_ttl and default_ttl,
                and also ensures a "public" cache-control directive is present. If
                a client TTL is not specified, a default value (1 hour) will be used.
                The maximum allowed value is 86400s (1 day).
            defaultTtl:
              type: integer
              format: int64
              x-dcl-go-name: DefaultTtl
              description: Specifies the default TTL for cached content served by
                this origin for responses that do not have an existing valid TTL (max-age
                or s-max-age). Setting a TTL of "0" means "always revalidate". The
                value of defaultTTL cannot be set to a value greater than that of
                maxTTL, but can be equal. When the cacheMode is set to `FORCE_CACHE_ALL`,
                the defaultTTL will overwrite the TTL set in all responses. The maximum
                allowed value is 31,622,400s (1 year), noting that infrequently accessed
                objects may be evicted from the cache before the defined TTL.
            maxTtl:
              type: integer
              format: int64
              x-dcl-go-name: MaxTtl
              description: Specifies the maximum allowed TTL for cached content served
                by this origin. Cache directives that attempt to set a max-age or
                s-maxage higher than this, or an Expires header more than maxTTL seconds
                in the future will be capped at the value of maxTTL, as if it were
                the value of an s-maxage Cache-Control directive. Headers sent to
                the client will not be modified. Setting a TTL of "0" means "always
                revalidate". The maximum allowed value is 31,622,400s (1 year), noting
                that infrequently accessed objects may be evicted from the cache before
                the defined TTL.
            negativeCaching:
              type: boolean
              x-dcl-go-name: NegativeCaching
              description: 'Negative caching allows per-status code TTLs to be set,
                in order to apply fine-grained caching for common errors or redirects.
                This can reduce the load on your origin and improve end-user experience
                by reducing response latency. When the cache mode is set to CACHE_ALL_STATIC
                or USE_ORIGIN_HEADERS, negative caching applies to responses with
                the specified response code that lack any Cache-Control, Expires,
                or Pragma: no-cache directives. When the cache mode is set to FORCE_CACHE_ALL,
                negative caching applies to all responses with the specified response
                code, and override any caching headers. By default, Cloud CDN will
                apply the following default TTLs to these status codes: HTTP 300 (Multiple
                Choice), 301, 308 (Permanent Redirects): 10m HTTP 404 (Not Found),
                410 (Gone), 451 (Unavailable For Legal Reasons): 120s HTTP 405 (Method
                Not Found), 421 (Misdirected Request), 501 (Not Implemented): 60s.
                These defaults can be overridden in negative_caching_policy.'
            negativeCachingPolicy:
              type: array
              x-dcl-go-name: NegativeCachingPolicy
              description: Sets a cache TTL for the specified HTTP status code. negative_caching
                must be enabled to configure negative_caching_policy. Omitting the
                policy and leaving negative_caching enabled will use Cloud CDN's default
                cache TTLs. Note that when specifying an explicit negative_caching_policy,
                you should take care to specify a cache TTL for all response codes
                that you wish to cache. Cloud CDN will not apply any default negative
                caching when a policy exists.
              x-dcl-send-empty: true
              x-dcl-list-type: list
              items:
                type: object
                x-dcl-go-type: BackendServiceCdnPolicyNegativeCachingPolicy
                properties:
                  code:
                    type: integer
                    format: int64
                    x-dcl-go-name: Code
                    description: The HTTP status code to define a TTL against. Only
                      HTTP status codes 300, 301, 302, 307, 308, 404, 405, 410, 421,
                      451 and 501 are can be specified as values, and you cannot specify
                      a status code more than once.
                  ttl:
                    type: integer
                    format: int64
                    x-dcl-go-name: Ttl
                    description: The TTL (in seconds) for which to cache responses
                      with the corresponding status code. The maximum allowed value
                      is 1800s (30 minutes), noting that infrequently accessed objects
                      may be evicted from the cache before the defined TTL.
            requestCoalescing:
              type: boolean
              x-dcl-go-name: RequestCoalescing
              description: If true then Cloud CDN will combine multiple concurrent
                cache fill requests into a small number of requests to the origin.
            serveWhileStale:
              type: integer
              format: int64
              x-dcl-go-name: ServeWhileStale
              description: Serve existing content from the cache (if available) when
                revalidating content with the origin, or when an error is encountered
                when refreshing the cache. This setting defines the default "max-stale"
                duration for any cached responses that do not specify a max-stale
                directive. Stale responses that exceed the TTL configured here will
                not be served. The default limit (max-stale) is 86400s (1 day), which
                will allow stale content to be served up to this limit beyond the
                max-age (or s-max-age) of a cached response. The maximum allowed value
                is 604800 (1 week). Set this to zero (0) to disable serve-while-stale.
            signedUrlCacheMaxAgeSec:
              type: integer
              format: int64
              x-dcl-go-name: SignedUrlCacheMaxAgeSec
              description: 'Maximum number of seconds the response to a signed URL
                request will be considered fresh. After this time period, the response
                will be revalidated before being served. Defaults to 1hr (3600s).
                When serving responses to signed URL requests, Cloud CDN will internally
                behave as though all responses from this backend had a `"Cache-Control:
                public, max-age="` header, regardless of any existing Cache-Control
                header. The actual headers served in responses will not be altered.'
            signedUrlKeyNames:
              type: array
              x-dcl-go-name: SignedUrlKeyNames
              readOnly: true
              description: Names of the keys for signing request URLs.
              x-dcl-list-type: list
              items:
                type: string
                x-dcl-go-type: string
        circuitBreakers:
          type: object
          x-dcl-go-name: CircuitBreakers
          x-dcl-go-type: BackendServiceCircuitBreakers
          description: 'Settings controlling the volume of connections to a backend
            service. If not set, this feature is considered disabled. This field is
            applicable to either: - A regional backend service with the service_protocol
            set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED.
            - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.
            Not supported when the backend service is referenced by a URL map that
            is bound to target gRPC proxy that has validateForProxyless field set
            to true.'
          properties:
            maxConnections:
              type: integer
              format: int64
              x-dcl-go-name: MaxConnections
              description: The maximum number of connections to the backend service.
                If not specified, there is no limit.
            maxPendingRequests:
              type: integer
              format: int64
              x-dcl-go-name: MaxPendingRequests
              description: The maximum number of pending requests allowed to the backend
                service. If not specified, there is no limit.
            maxRequests:
              type: integer
              format: int64
              x-dcl-go-name: MaxRequests
              description: The maximum number of parallel requests that allowed to
                the backend service. If not specified, there is no limit.
            maxRequestsPerConnection:
              type: integer
              format: int64
              x-dcl-go-name: MaxRequestsPerConnection
              description: Maximum requests for a single connection to the backend
                service. This parameter is respected by both the HTTP/1.1 and HTTP/2
                implementations. If not specified, there is no limit. Setting this
                parameter to 1 will effectively disable keep alive.
            maxRetries:
              type: integer
              format: int64
              x-dcl-go-name: MaxRetries
              description: The maximum number of parallel retries allowed to the backend
                cluster. If not specified, the default is 1.
        connectionDraining:
          type: object
          x-dcl-go-name: ConnectionDraining
          x-dcl-go-type: BackendServiceConnectionDraining
          properties:
            drainingTimeoutSec:
              type: integer
              format: int64
              x-dcl-go-name: DrainingTimeoutSec
              description: Configures a duration timeout for existing requests on
                a removed backend instance. For supported load balancers and protocols,
                as described in (/load-balancing/docs/enabling-connection-draining).
        consistentHash:
          type: object
          x-dcl-go-name: ConsistentHash
          x-dcl-go-type: BackendServiceConsistentHash
          description: 'Consistent Hash-based load balancing can be used to provide
            soft session affinity based on HTTP headers, cookies or other properties.
            This load balancing policy is applicable only for HTTP connections. The
            affinity to a particular destination host will be lost when one or more
            hosts are added/removed from the destination service. This field specifies
            parameters that control consistent hashing. This field is only applicable
            when `localityLbPolicy` is set to `MAGLEV` or `RING_HASH`. This field
            is applicable to either: - A regional backend service with the service_protocol
            set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED.
            - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.
            Not supported when the backend service is referenced by a URL map that
            is bound to target gRPC proxy that has validateForProxyless field set
            to true.'
          properties:
            httpCookie:
              type: object
              x-dcl-go-name: HttpCookie
              x-dcl-go-type: BackendServiceConsistentHashHttpCookie
              description: Hash is based on HTTP Cookie. This field describes a HTTP
                cookie that will be used as the hash key for the consistent hash load
                balancer. If the cookie is not present, it will be generated. This
                field is applicable if the `sessionAffinity` is set to `HTTP_COOKIE`.
              properties:
                name:
                  type: string
                  x-dcl-go-name: Name
                  description: Name of the cookie.
                path:
                  type: string
                  x-dcl-go-name: Path
                  description: Path to set for the cookie.
                ttl:
                  type: object
                  x-dcl-go-name: Ttl
                  x-dcl-go-type: BackendServiceConsistentHashHttpCookieTtl
                  description: Lifetime of the cookie.
                  properties:
                    nanos:
                      type: integer
                      format: int64
                      x-dcl-go-name: Nanos
                      description: Span of time that's a fraction of a second at nanosecond
                        resolution. Durations less than one second are represented
                        with a 0 `seconds` field and a positive `nanos` field. Must
                        be from 0 to 999,999,999 inclusive.
                    seconds:
                      type: integer
                      format: int64
                      x-dcl-go-name: Seconds
                      description: 'Span of time at a resolution of a second. Must
                        be from 0 to 315,576,000,000 inclusive. Note: these bounds
                        are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25
                        days/year * 10000 years'
            httpHeaderName:
              type: string
              x-dcl-go-name: HttpHeaderName
              description: The hash based on the value of the specified header field.
                This field is applicable if the `sessionAffinity` is set to `HEADER_FIELD`.
            minimumRingSize:
              type: integer
              format: int64
              x-dcl-go-name: MinimumRingSize
              description: The minimum number of virtual nodes to use for the hash
                ring. Defaults to 1024. Larger ring sizes result in more granular
                load distributions. If the number of hosts in the load balancing pool
                is larger than the ring size, each host will be assigned a single
                virtual node.
        customRequestHeaders:
          type: array
          x-dcl-go-name: CustomRequestHeaders
          description: Headers that the HTTP/S load balancer should add to proxied
            requests.
          x-dcl-send-empty: true
          x-dcl-list-type: list
          items:
            type: string
            x-dcl-go-type: string
        customResponseHeaders:
          type: array
          x-dcl-go-name: CustomResponseHeaders
          description: Headers that the HTTP/S load balancer should add to proxied
            responses.
          x-dcl-send-empty: true
          x-dcl-list-type: list
          items:
            type: string
            x-dcl-go-type: string
        description:
          type: string
          x-dcl-go-name: Description
          description: An optional description of this resource. Provide this property
            when you create the resource.
        enableCdn:
          type: boolean
          x-dcl-go-name: EnableCdn
          description: If `true`, enables Cloud CDN for the backend service. Only
            applicable if the `loadBalancingScheme` is `EXTERNAL` and the `protocol`
            is `HTTP` or `HTTPS`.
        failoverPolicy:
          type: object
          x-dcl-go-name: FailoverPolicy
          x-dcl-go-type: BackendServiceFailoverPolicy
          description: Applicable only to Failover for Internal TCP/UDP Load Balancing
            and Network Load Balancing. Requires at least one backend instance group
            to be defined as a backup (failover) backend.
          properties:
            disableConnectionDrainOnFailover:
              type: boolean
              x-dcl-go-name: DisableConnectionDrainOnFailover
              description: This can be set to `true` only if the `protocol` is `TCP`.
                The default is `false`.
            dropTrafficIfUnhealthy:
              type: boolean
              x-dcl-go-name: DropTrafficIfUnhealthy
              description: Applicable only to Failover for Internal TCP/UDP Load Balancing
                and Network Load Balancing, If set to `true`, connections to the load
                balancer are dropped when all primary and all backup backend VMs are
                unhealthy.If set to `false`, connections are distributed among all
                primary VMs when all primary and all backup backend VMs are unhealthy.
                The default is `false`.
            failoverRatio:
              type: number
              format: double
              x-dcl-go-name: FailoverRatio
              description: Applicable only to Failover for Internal TCP/UDP Load Balancing
                and Network Load Balancing. The value of the field must be in the
                range ``. If the value is 0, the load balancer performs a failover
                when the number of healthy primary VMs equals zero. For all other
                values, the load balancer performs a failover when the total number
                of healthy primary VMs is less than this ratio.
        fingerprint:
          type: string
          x-dcl-go-name: Fingerprint
          readOnly: true
          description: Fingerprint of this resource. A hash of the contents stored
            in this object. This field is used in optimistic locking. This field will
            be ignored when inserting a BackendService. An up-to-date fingerprint
            must be provided in order to update the `BackendService`, otherwise the
            request will fail with error `412 conditionNotMet`. To see the latest
            fingerprint, make a `get()` request to retrieve a BackendService.
          x-kubernetes-immutable: true
        healthChecks:
          type: array
          x-dcl-go-name: HealthChecks
          description: The list of URLs to the healthChecks, httpHealthChecks (legacy),
            or httpsHealthChecks (legacy) resource for health checking this backend
            service. Not all backend services support legacy health checks. See (/load-balancing/docs/health-check-concepts#lb_guide).
            Currently, at most one health check can be specified for each backend
            service. Backend services with instance group or zonal NEG backends must
            have a health check. Backend services with internet or serverless NEG
            backends must not have a health check.
          x-dcl-send-empty: true
          x-dcl-list-type: list
          items:
            type: string
            x-dcl-go-type: string
            x-dcl-references:
            - resource: Compute/HealthCheck
              field: selfLink
            - resource: Compute/HttpHealthCheck
              field: selfLink
            - resource: Compute/HttpsHealthCheck
              field: selfLink
        iap:
          type: object
          x-dcl-go-name: Iap
          x-dcl-go-type: BackendServiceIap
          description: The configurations for Identity-Aware Proxy on this resource.
            Not available for Internal TCP/UDP Load Balancing and Network Load Balancing.
          x-dcl-conflicts:
          - cdnPolicy
          properties:
            enabled:
              type: boolean
              x-dcl-go-name: Enabled
              description: Whether the serving infrastructure will authenticate and
                authorize all incoming requests. If true, the oauth2ClientId and oauth2ClientSecret
                fields must be non-empty.
            oauth2ClientId:
              type: string
              x-dcl-go-name: OAuth2ClientId
              description: OAuth2 client ID to use for the authentication flow.
            oauth2ClientSecret:
              type: string
              x-dcl-go-name: OAuth2ClientSecret
              description: OAuth2 client secret to use for the authentication flow.
                For security reasons, this value cannot be retrieved via the API.
                Instead, the SHA-256 hash of the value is returned in the oauth2ClientSecretSha256
                field. @InputOnly
              x-dcl-sensitive: true
              x-dcl-mutable-unreadable: true
            oauth2ClientSecretSha256:
              type: string
              x-dcl-go-name: OAuth2ClientSecretSha256
              readOnly: true
              description: SHA256 hash value for the field oauth2_client_secret above.
        id:
          type: integer
          format: int64
          x-dcl-go-name: Id
          readOnly: true
          description: The unique identifier for the resource. This identifier is
            defined by the server.
          x-kubernetes-immutable: true
        loadBalancingScheme:
          type: string
          x-dcl-go-name: LoadBalancingScheme
          x-dcl-go-type: BackendServiceLoadBalancingSchemeEnum
          description: 'Specifies the load balancer type. Choose `EXTERNAL` for external
            HTTP(S), SSL Proxy, TCP Proxy and Network Load Balancing. Choose ` INTERNAL`
            for Internal TCP/UDP Load Balancing. Choose ` INTERNAL_MANAGED` for Internal
            HTTP(S) Load Balancing. ` INTERNAL_SELF_MANAGED` for Traffic Director.
            Choose `EXTERNAL_MANAGED` for Global external HTTP(S) load balancers.
            A backend service created for one type of load balancer cannot be used
            with another. For more information, refer to (/load-balancing/docs/choosing-load-balancer/).
            Possible values: INVALID_LOAD_BALANCING_SCHEME, INTERNAL, INTERNAL_MANAGED,
            INTERNAL_SELF_MANAGED, EXTERNAL, EXTERNAL_MANAGED'
          enum:
          - INVALID_LOAD_BALANCING_SCHEME
          - INTERNAL
          - INTERNAL_MANAGED
          - INTERNAL_SELF_MANAGED
          - EXTERNAL
          - EXTERNAL_MANAGED
        localityLbPolicy:
          type: string
          x-dcl-go-name: LocalityLbPolicy
          x-dcl-go-type: BackendServiceLocalityLbPolicyEnum
          description: 'The load balancing algorithm used within the scope of the
            locality. The possible values are: - `ROUND_ROBIN`: This is a simple policy
            in which each healthy backend is selected in round robin order. This is
            the default. - `LEAST_REQUEST`: An `O(1)` algorithm which selects two
            random healthy hosts and picks the host which has fewer active requests.
            - `RING_HASH`: The ring/modulo hash load balancer implements consistent
            hashing to backends. The algorithm has the property that the addition/removal
            of a host from a set of N hosts only affects 1/N of the requests. - `RANDOM`:
            The load balancer selects a random healthy host. - `ORIGINAL_DESTINATION`:
            Backend host is selected based on the client connection metadata, i.e.,
            connections are opened to the same address as the destination address
            of the incoming connection before the connection was redirected to the
            load balancer. - `MAGLEV`: used as a drop in replacement for the ring
            hash load balancer. Maglev is not as stable as ring hash but has faster
            table lookup build times and host selection times. For more information
            about Maglev, see (https://ai.google/research/pubs/pub44824) This field
            is applicable to either: - A regional backend service with the service_protocol
            set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED.
            - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.
            If `sessionAffinity` is not NONE, and this field is not set to `MAGLEV`
            or `RING_HASH`, session affinity settings will not take effect. Only the
            default `ROUND_ROBIN` policy is supported when the backend service is
            referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless
            field set to true. Possible values: INVALID_LB_POLICY, ROUND_ROBIN, LEAST_REQUEST,
            RING_HASH, RANDOM, ORIGINAL_DESTINATION, MAGLEV'
          enum:
          - INVALID_LB_POLICY
          - ROUND_ROBIN
          - LEAST_REQUEST
          - RING_HASH
          - RANDOM
          - ORIGINAL_DESTINATION
          - MAGLEV
        location:
          type: string
          x-dcl-go-name: Location
          description: URL of the region where the regional backend service resides.
            This field is not applicable to global backend services. You must specify
            this field as part of the HTTP request URL. It is not settable as a field
            in the request body.
          x-kubernetes-immutable: true
        logConfig:
          type: object
          x-dcl-go-name: LogConfig
          x-dcl-go-type: BackendServiceLogConfig
          description: This field denotes the logging options for the load balancer
            traffic served by this backend service. If logging is enabled, logs will
            be exported to Stackdriver.
          properties:
            enable:
              type: boolean
              x-dcl-go-name: Enable
              description: This field denotes whether to enable logging for the load
                balancer traffic served by this backend service.
            sampleRate:
              type: number
              format: double
              x-dcl-go-name: SampleRate
              description: This field can only be specified if logging is enabled
                for this backend service. The value of the field must be in [0, 1].
                This configures the sampling rate of requests to the load balancer
                where 1.0 means all logged requests are reported and 0.0 means no
                logged requests are reported. The default value is 1.0.
        maxStreamDuration:
          type: object
          x-dcl-go-name: MaxStreamDuration
          x-dcl-go-type: BackendServiceMaxStreamDuration
          description: Specifies the default maximum duration (timeout) for streams
            to this service. Duration is computed from the beginning of the stream
            until the response has been completely processed, including all retries.
            A stream that does not complete in this duration is closed. If not specified,
            there will be no timeout limit, i.e. the maximum duration is infinite.
            This field is only allowed when the `loadBalancingScheme` of the backend
            service is `INTERNAL_SELF_MANAGED`.
          properties:
            nanos:
              type: integer
              format: int64
              x-dcl-go-name: Nanos
              description: Span of time that's a fraction of a second at nanosecond
                resolution. Durations less than one second are represented with a
                0 `seconds` field and a positive `nanos` field. Must be from 0 to
                999,999,999 inclusive.
            seconds:
              type: integer
              format: int64
              x-dcl-go-name: Seconds
              description: 'Span of time at a resolution of a second. Must be from
                0 to 315,576,000,000 inclusive. Note: these bounds are computed from:
                60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
        name:
          type: string
          x-dcl-go-name: Name
          description: Name of the resource. Provided by the client when the resource
            is created. The name must be 1-63 characters long, and comply with (https://www.ietf.org/rfc/rfc1035.txt).
            Specifically, the name must be 1-63 characters long and match the regular
            expression `)?` which means the first character must be a lowercase letter,
            and all following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          x-kubernetes-immutable: true
        network:
          type: string
          x-dcl-go-name: Network
          description: The URL of the network to which this backend service belongs.
            This field can only be specified when the load balancing scheme is set
            to `INTERNAL`.
          x-dcl-references:
          - resource: Compute/Network
            field: selfLink
        outlierDetection:
          type: object
          x-dcl-go-name: OutlierDetection
          x-dcl-go-type: BackendServiceOutlierDetection
          description: 'Settings controlling the eviction of unhealthy hosts from
            the load balancing pool for the backend service. If not set, this feature
            is considered disabled. This field is applicable to either: - A regional
            backend service with the service_protocol set to HTTP, HTTPS, or HTTP2,
            and load_balancing_scheme set to INTERNAL_MANAGED. - A global backend
            service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. Not
            supported when the backend service is referenced by a URL map that is
            bound to target gRPC proxy that has validateForProxyless field set to
            true.'
          properties:
            baseEjectionTime:
              type: object
              x-dcl-go-name: BaseEjectionTime
              x-dcl-go-type: BackendServiceOutlierDetectionBaseEjectionTime
              description: The base time that a host is ejected for. The real ejection
                time is equal to the base ejection time multiplied by the number of
                times the host has been ejected. Defaults to 30000ms or 30s.
              properties:
                nanos:
                  type: integer
                  format: int64
                  x-dcl-go-name: Nanos
                  description: Span of time that's a fraction of a second at nanosecond
                    resolution. Durations less than one second are represented with
                    a 0 `seconds` field and a positive `nanos` field. Must be from
                    0 to 999,999,999 inclusive.
                seconds:
                  type: integer
                  format: int64
                  x-dcl-go-name: Seconds
                  description: 'Span of time at a resolution of a second. Must be
                    from 0 to 315,576,000,000 inclusive. Note: these bounds are computed
                    from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year *
                    10000 years'
            consecutiveErrors:
              type: integer
              format: int64
              x-dcl-go-name: ConsecutiveErrors
              description: Number of errors before a host is ejected from the connection
                pool. When the backend host is accessed over HTTP, a 5xx return code
                qualifies as an error. Defaults to 5.
            consecutiveGatewayFailure:
              type: integer
              format: int64
              x-dcl-go-name: ConsecutiveGatewayFailure
              description: The number of consecutive gateway failures (502, 503, 504
                status or connection errors that are mapped to one of those status
                codes) before a consecutive gateway failure ejection occurs. Defaults
                to 3.
            enforcingConsecutiveErrors:
              type: integer
              format: int64
              x-dcl-go-name: EnforcingConsecutiveErrors
              description: The percentage chance that a host will be actually ejected
                when an outlier status is detected through consecutive 5xx. This setting
                can be used to disable ejection or to ramp it up slowly. Defaults
                to 0.
            enforcingConsecutiveGatewayFailure:
              type: integer
              format: int64
              x-dcl-go-name: EnforcingConsecutiveGatewayFailure
              description: The percentage chance that a host will be actually ejected
                when an outlier status is detected through consecutive gateway failures.
                This setting can be used to disable ejection or to ramp it up slowly.
                Defaults to 100.
            enforcingSuccessRate:
              type: integer
              format: int64
              x-dcl-go-name: EnforcingSuccessRate
              description: The percentage chance that a host will be actually ejected
                when an outlier status is detected through success rate statistics.
                This setting can be used to disable ejection or to ramp it up slowly.
                Defaults to 100.
            interval:
              type: object
              x-dcl-go-name: Interval
              x-dcl-go-type: BackendServiceOutlierDetectionInterval
              description: Time interval between ejection analysis sweeps. This can
                result in both new ejections as well as hosts being returned to service.
                Defaults to 1 second.
              properties:
                nanos:
                  type: integer
                  format: int64
                  x-dcl-go-name: Nanos
                  description: Span of time that's a fraction of a second at nanosecond
                    resolution. Durations less than one second are represented with
                    a 0 `seconds` field and a positive `nanos` field. Must be from
                    0 to 999,999,999 inclusive.
                seconds:
                  type: integer
                  format: int64
                  x-dcl-go-name: Seconds
                  description: 'Span of time at a resolution of a second. Must be
                    from 0 to 315,576,000,000 inclusive. Note: these bounds are computed
                    from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year *
                    10000 years'
            maxEjectionPercent:
              type: integer
              format: int64
              x-dcl-go-name: MaxEjectionPercent
              description: Maximum percentage of hosts in the load balancing pool
                for the backend service that can be ejected. Defaults to 50%.
            successRateMinimumHosts:
              type: integer
              format: int64
              x-dcl-go-name: SuccessRateMinimumHosts
              description: The number of hosts in a cluster that must have enough
                request volume to detect success rate outliers. If the number of hosts
                is less than this setting, outlier detection via success rate statistics
                is not performed for any host in the cluster. Defaults to 5.
            successRateRequestVolume:
              type: integer
              format: int64
              x-dcl-go-name: SuccessRateRequestVolume
              description: The minimum number of total requests that must be collected
                in one interval (as defined by the interval duration above) to include
                this host in success rate based outlier detection. If the volume is
                lower than this setting, outlier detection via success rate statistics
                is not performed for that host. Defaults to 100.
            successRateStdevFactor:
              type: integer
              format: int64
              x-dcl-go-name: SuccessRateStdevFactor
              description: 'This factor is used to determine the ejection threshold
                for success rate outlier ejection. The ejection threshold is the difference
                between the mean success rate, and the product of this factor and
                the standard deviation of the mean success rate: mean - (stdev * success_rate_stdev_factor).
                This factor is divided by a thousand to get a double. That is, if
                the desired factor is 1.9, the runtime value should be 1900. Defaults
                to 1900.'
        port:
          type: integer
          format: int64
          x-dcl-go-name: Port
          description: Deprecated in favor of `portName`. The TCP port to connect
            on the backend. The default value is `80`. Backend services for Internal
            TCP/UDP Load Balancing and Network Load Balancing require you omit `port`.
        portName:
          type: string
          x-dcl-go-name: PortName
          description: A named port on a backend instance group representing the port
            for communication to the backend VMs in that group. Required when the
            `loadBalancingScheme` is `EXTERNAL` (except Network Load Balancing), `INTERNAL_MANAGED`,
            or ` INTERNAL_SELF_MANAGED` and the backends are instance groups. The
            named port must be defined on each backend instance group. This parameter
            has no meaning if the backends are NEGs. Backend services for Internal
            TCP/UDP Load Balancing and Network Load Balancing require you omit `port_name`.
        project:
          type: string
          x-dcl-go-name: Project
          description: The project for the resource
          x-kubernetes-immutable: true
          x-dcl-references:
          - resource: Cloudresourcemanager/Project
            field: name
            parent: true
        protocol:
          type: string
          x-dcl-go-name: Protocol
          x-dcl-go-type: BackendServiceProtocolEnum
          description: The protocol this BackendService uses to communicate with backends.
            Possible values are HTTP, HTTPS, HTTP2, TCP, SSL, UDP or GRPC. depending
            on the chosen load balancer or Traffic Director configuration. Refer to
            the documentation for the load balancer or for Traffic Director for more
            information. Must be set to GRPC when the backend service is referenced
            by a URL map that is bound to target gRPC proxy.
          enum:
          - HTTP
          - HTTPS
          - HTTP2
          - TCP
          - SSL
          - UDP
          - GRPC
          - ALL
          - UNSPECIFIED
        securityPolicy:
          type: string
          x-dcl-go-name: SecurityPolicy
          description: The resource URL for the security policy associated with this
            backend service.
          x-kubernetes-immutable: true
          x-dcl-references:
          - resource: Compute/SecurityPolicy
            field: selfLink
        securitySettings:
          type: object
          x-dcl-go-name: SecuritySettings
          x-dcl-go-type: BackendServiceSecuritySettings
          description: 'This field specifies the security policy that applies to this
            backend service. This field is applicable to either: - A regional backend
            service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme
            set to INTERNAL_MANAGED. - A global backend service with the load_balancing_scheme
            set to INTERNAL_SELF_MANAGED.'
          properties:
            clientTlsPolicy:
              type: string
              x-dcl-go-name: ClientTlsPolicy
              description: 'Optional. A URL referring to a networksecurity.ClientTlsPolicy
                resource that describes how clients should authenticate with this
                service''s backends. `clientTlsPolicy` only applies to a global `BackendService`
                with the `loadBalancingScheme` set to `INTERNAL_SELF_MANAGED`. If
                left blank, communications are not encrypted. Note: This field currently
                has no impact.'
              x-dcl-references:
              - resource: Networksecurity/ClientTlsPolicy
                field: name
            subjectAltNames:
              type: array
              x-dcl-go-name: SubjectAltNames
              description: 'Optional. A list of Subject Alternative Names (SANs) that
                the client verifies during a mutual TLS handshake with an server/endpoint
                for this `BackendService`. When the server presents its X.509 certificate
                to the client, the client inspects the certificate''s `subjectAltName`
                field. If the field contains one of the specified values, the communication
                continues. Otherwise, it fails. This additional check enables the
                client to verify that the server is authorized to run the requested
                service. Note that the contents of the server certificate''s `subjectAltName`
                field are configured by the Public Key Infrastructure which provisions
                server identities. Only applies to a global `BackendService` with
                `loadBalancingScheme` set to `INTERNAL_SELF_MANAGED`. Only applies
                when `BackendService` has an attached `clientTlsPolicy` with `clientCertificate`
                (mTLS mode). Note: This field currently has no impact.'
              x-dcl-send-empty: true
              x-dcl-list-type: list
              items:
                type: string
                x-dcl-go-type: string
        selfLink:
          type: string
          x-dcl-go-name: SelfLink
          readOnly: true
          description: Server-defined URL for the resource.
          x-kubernetes-immutable: true
        sessionAffinity:
          type: string
          x-dcl-go-name: SessionAffinity
          x-dcl-go-type: BackendServiceSessionAffinityEnum
          description: 'Type of session affinity to use. The default is `NONE`. When
            the `loadBalancingScheme` is `EXTERNAL`: * For Network Load Balancing,
            the possible values are `NONE`, `CLIENT_IP`, `CLIENT_IP_PROTO`, or ` CLIENT_IP_PORT_PROTO`.
            * For all other load balancers that use `loadBalancingScheme=EXTERNAL`,
            the possible values are `NONE`, `CLIENT_IP`, or `GENERATED_COOKIE`. *
            You can use `GENERATED_COOKIE` if the `protocol` is `HTTP`, `HTTP2`, or
            `HTTPS`. When the `loadBalancingScheme` is `INTERNAL`, possible values
            are `NONE`, `CLIENT_IP`, `CLIENT_IP_PROTO`, or `CLIENT_IP_PORT_PROTO`.
            When the `loadBalancingScheme` is `INTERNAL_SELF_MANAGED`, or `INTERNAL_MANAGED`,
            possible values are `NONE`, `CLIENT_IP`, `GENERATED_COOKIE`, `HEADER_FIELD`,
            or `HTTP_COOKIE`. Not supported when the backend service is referenced
            by a URL map that is bound to target gRPC proxy that has validateForProxyless
            field set to true.'
          enum:
          - NONE
          - CLIENT_IP
          - CLIENT_IP_PROTO
          - GENERATED_COOKIE
          - CLIENT_IP_PORT_PROTO
          - HTTP_COOKIE
          - HEADER_FIELD
          - CLIENT_IP_NO_DESTINATION
        timeoutSec:
          type: integer
          format: int64
          x-dcl-go-name: TimeoutSec
          description: The backend service timeout has a different meaning depending
            on the type of load balancer. For more information see, (/load-balancing/docs/backend-service#timeout-setting)
            The default is 30 seconds. The full range of timeout values allowed is
            1 - 2,147,483,647 seconds.
