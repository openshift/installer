# Copyright 2023 Google LLC. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
info:
  title: Dataproc/AutoscalingPolicy
  description: The Dataproc AutoscalingPolicy resource
  x-dcl-struct-name: AutoscalingPolicy
  x-dcl-has-iam: false
paths:
  get:
    description: The function used to get information about a AutoscalingPolicy
    parameters:
    - name: autoscalingPolicy
      required: true
      description: A full instance of a AutoscalingPolicy
  apply:
    description: The function used to apply information about a AutoscalingPolicy
    parameters:
    - name: autoscalingPolicy
      required: true
      description: A full instance of a AutoscalingPolicy
  delete:
    description: The function used to delete a AutoscalingPolicy
    parameters:
    - name: autoscalingPolicy
      required: true
      description: A full instance of a AutoscalingPolicy
  deleteAll:
    description: The function used to delete all AutoscalingPolicy
    parameters:
    - name: project
      required: true
      schema:
        type: string
    - name: location
      required: true
      schema:
        type: string
  list:
    description: The function used to list information about many AutoscalingPolicy
    parameters:
    - name: project
      required: true
      schema:
        type: string
    - name: location
      required: true
      schema:
        type: string
components:
  schemas:
    AutoscalingPolicy:
      title: AutoscalingPolicy
      x-dcl-id: projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{name}}
      x-dcl-parent-container: project
      x-dcl-has-create: true
      x-dcl-has-iam: false
      x-dcl-read-timeout: 0
      x-dcl-apply-timeout: 0
      x-dcl-delete-timeout: 0
      type: object
      required:
      - name
      - basicAlgorithm
      - workerConfig
      - project
      - location
      properties:
        basicAlgorithm:
          type: object
          x-dcl-go-name: BasicAlgorithm
          x-dcl-go-type: AutoscalingPolicyBasicAlgorithm
          required:
          - yarnConfig
          properties:
            cooldownPeriod:
              type: string
              x-dcl-go-name: CooldownPeriod
              description: 'Optional. Duration between scaling events. A scaling period
                starts after the update operation from the previous event has completed.
                Bounds: . Default: 2m.'
              x-dcl-server-default: true
            yarnConfig:
              type: object
              x-dcl-go-name: YarnConfig
              x-dcl-go-type: AutoscalingPolicyBasicAlgorithmYarnConfig
              description: Required. YARN autoscaling configuration.
              required:
              - gracefulDecommissionTimeout
              - scaleUpFactor
              - scaleDownFactor
              properties:
                gracefulDecommissionTimeout:
                  type: string
                  x-dcl-go-name: GracefulDecommissionTimeout
                  description: Required. Timeout for YARN graceful decommissioning
                    of Node Managers. Specifies the duration to wait for jobs to complete
                    before forcefully removing workers (and potentially interrupting
                    jobs). Only applicable to downscaling operations.
                scaleDownFactor:
                  type: number
                  format: double
                  x-dcl-go-name: ScaleDownFactor
                  description: Required. Fraction of average YARN pending memory in
                    the last cooldown period for which to remove workers. A scale-down
                    factor of 1 will result in scaling down so that there is no available
                    memory remaining after the update (more aggressive scaling). A
                    scale-down factor of 0 disables removing workers, which can be
                    beneficial for autoscaling a single job. See .
                scaleDownMinWorkerFraction:
                  type: number
                  format: double
                  x-dcl-go-name: ScaleDownMinWorkerFraction
                  description: 'Optional. Minimum scale-down threshold as a fraction
                    of total cluster size before scaling occurs. For example, in a
                    20-worker cluster, a threshold of 0.1 means the autoscaler must
                    recommend at least a 2 worker scale-down for the cluster to scale.
                    A threshold of 0 means the autoscaler will scale down on any recommended
                    change. Bounds: . Default: 0.0.'
                scaleUpFactor:
                  type: number
                  format: double
                  x-dcl-go-name: ScaleUpFactor
                  description: Required. Fraction of average YARN pending memory in
                    the last cooldown period for which to add workers. A scale-up
                    factor of 1.0 will result in scaling up so that there is no pending
                    memory remaining after the update (more aggressive scaling). A
                    scale-up factor closer to 0 will result in a smaller magnitude
                    of scaling up (less aggressive scaling). See .
                scaleUpMinWorkerFraction:
                  type: number
                  format: double
                  x-dcl-go-name: ScaleUpMinWorkerFraction
                  description: 'Optional. Minimum scale-up threshold as a fraction
                    of total cluster size before scaling occurs. For example, in a
                    20-worker cluster, a threshold of 0.1 means the autoscaler must
                    recommend at least a 2-worker scale-up for the cluster to scale.
                    A threshold of 0 means the autoscaler will scale up on any recommended
                    change. Bounds: . Default: 0.0.'
        location:
          type: string
          x-dcl-go-name: Location
          description: The location for the resource
          x-kubernetes-immutable: true
        name:
          type: string
          x-dcl-go-name: Name
          description: 'The "resource name" of the autoscaling policy, as described
            in https://cloud.google.com/apis/design/resource_names. * For `projects.regions.autoscalingPolicies`,
            the resource name of the policy has the following format: `projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id}`
            * For `projects.locations.autoscalingPolicies`, the resource name of the
            policy has the following format: `projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}`'
          x-kubernetes-immutable: true
        project:
          type: string
          x-dcl-go-name: Project
          description: The project for the resource
          x-kubernetes-immutable: true
          x-dcl-references:
          - resource: Cloudresourcemanager/Project
            field: name
            parent: true
        secondaryWorkerConfig:
          type: object
          x-dcl-go-name: SecondaryWorkerConfig
          x-dcl-go-type: AutoscalingPolicySecondaryWorkerConfig
          description: Optional. Describes how the autoscaler will operate for secondary
            workers.
          properties:
            maxInstances:
              type: integer
              format: int64
              x-dcl-go-name: MaxInstances
              description: 'Optional. Maximum number of instances for this group.
                Note that by default, clusters will not use secondary workers. Required
                for secondary workers if the minimum secondary instances is set. Primary
                workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances,
                ). Default: 0.'
            minInstances:
              type: integer
              format: int64
              x-dcl-go-name: MinInstances
              description: 'Optional. Minimum number of instances for this group.
                Primary workers - Bounds: . Default: 0.'
            weight:
              type: integer
              format: int64
              x-dcl-go-name: Weight
              description: 'Optional. Weight for the instance group, which is used
                to determine the fraction of total workers in the cluster from this
                instance group. For example, if primary workers have weight 2, and
                secondary workers have weight 1, the cluster will have approximately
                2 primary workers for each secondary worker. The cluster may not reach
                the specified balance if constrained by min/max bounds or other autoscaling
                settings. For example, if `max_instances` for secondary workers is
                0, then only primary workers will be added. The cluster can also be
                out of balance when created. If weight is not set on any instance
                group, the cluster will default to equal weight for all groups: the
                cluster will attempt to maintain an equal number of workers in each
                group within the configured size bounds for each group. If weight
                is set for one group only, the cluster will default to zero weight
                on the unset group. For example if weight is set only on primary workers,
                the cluster will use primary workers only and no secondary workers.'
              x-dcl-server-default: true
        workerConfig:
          type: object
          x-dcl-go-name: WorkerConfig
          x-dcl-go-type: AutoscalingPolicyWorkerConfig
          description: Required. Describes how the autoscaler will operate for primary
            workers.
          required:
          - maxInstances
          properties:
            maxInstances:
              type: integer
              format: int64
              x-dcl-go-name: MaxInstances
              description: 'Required. Maximum number of instances for this group.
                Required for primary workers. Note that by default, clusters will
                not use secondary workers. Required for secondary workers if the minimum
                secondary instances is set. Primary workers - Bounds: [min_instances,
                ). Secondary workers - Bounds: [min_instances, ). Default: 0.'
            minInstances:
              type: integer
              format: int64
              x-dcl-go-name: MinInstances
              description: 'Optional. Minimum number of instances for this group.
                Primary workers - Bounds: . Default: 0.'
              x-dcl-server-default: true
            weight:
              type: integer
              format: int64
              x-dcl-go-name: Weight
              description: 'Optional. Weight for the instance group, which is used
                to determine the fraction of total workers in the cluster from this
                instance group. For example, if primary workers have weight 2, and
                secondary workers have weight 1, the cluster will have approximately
                2 primary workers for each secondary worker. The cluster may not reach
                the specified balance if constrained by min/max bounds or other autoscaling
                settings. For example, if `max_instances` for secondary workers is
                0, then only primary workers will be added. The cluster can also be
                out of balance when created. If weight is not set on any instance
                group, the cluster will default to equal weight for all groups: the
                cluster will attempt to maintain an equal number of workers in each
                group within the configured size bounds for each group. If weight
                is set for one group only, the cluster will default to zero weight
                on the unset group. For example if weight is set only on primary workers,
                the cluster will use primary workers only and no secondary workers.'
              x-dcl-server-default: true
