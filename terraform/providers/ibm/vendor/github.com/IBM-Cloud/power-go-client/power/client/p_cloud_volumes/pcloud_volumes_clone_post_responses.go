// Code generated by go-swagger; DO NOT EDIT.

package p_cloud_volumes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/IBM-Cloud/power-go-client/power/models"
)

// PcloudVolumesClonePostReader is a Reader for the PcloudVolumesClonePost structure.
type PcloudVolumesClonePostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PcloudVolumesClonePostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPcloudVolumesClonePostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPcloudVolumesClonePostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPcloudVolumesClonePostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPcloudVolumesClonePostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPcloudVolumesClonePostConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPcloudVolumesClonePostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPcloudVolumesClonePostOK creates a PcloudVolumesClonePostOK with default headers values
func NewPcloudVolumesClonePostOK() *PcloudVolumesClonePostOK {
	return &PcloudVolumesClonePostOK{}
}

/* PcloudVolumesClonePostOK describes a response with status code 200, with default header values.

OK
*/
type PcloudVolumesClonePostOK struct {
	Payload *models.VolumesCloneResponse
}

func (o *PcloudVolumesClonePostOK) Error() string {
	return fmt.Sprintf("[POST /pcloud/v1/cloud-instances/{cloud_instance_id}/volumes/clone][%d] pcloudVolumesClonePostOK  %+v", 200, o.Payload)
}
func (o *PcloudVolumesClonePostOK) GetPayload() *models.VolumesCloneResponse {
	return o.Payload
}

func (o *PcloudVolumesClonePostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VolumesCloneResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudVolumesClonePostBadRequest creates a PcloudVolumesClonePostBadRequest with default headers values
func NewPcloudVolumesClonePostBadRequest() *PcloudVolumesClonePostBadRequest {
	return &PcloudVolumesClonePostBadRequest{}
}

/* PcloudVolumesClonePostBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PcloudVolumesClonePostBadRequest struct {
	Payload *models.Error
}

func (o *PcloudVolumesClonePostBadRequest) Error() string {
	return fmt.Sprintf("[POST /pcloud/v1/cloud-instances/{cloud_instance_id}/volumes/clone][%d] pcloudVolumesClonePostBadRequest  %+v", 400, o.Payload)
}
func (o *PcloudVolumesClonePostBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PcloudVolumesClonePostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudVolumesClonePostUnauthorized creates a PcloudVolumesClonePostUnauthorized with default headers values
func NewPcloudVolumesClonePostUnauthorized() *PcloudVolumesClonePostUnauthorized {
	return &PcloudVolumesClonePostUnauthorized{}
}

/* PcloudVolumesClonePostUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PcloudVolumesClonePostUnauthorized struct {
	Payload *models.Error
}

func (o *PcloudVolumesClonePostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /pcloud/v1/cloud-instances/{cloud_instance_id}/volumes/clone][%d] pcloudVolumesClonePostUnauthorized  %+v", 401, o.Payload)
}
func (o *PcloudVolumesClonePostUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PcloudVolumesClonePostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudVolumesClonePostForbidden creates a PcloudVolumesClonePostForbidden with default headers values
func NewPcloudVolumesClonePostForbidden() *PcloudVolumesClonePostForbidden {
	return &PcloudVolumesClonePostForbidden{}
}

/* PcloudVolumesClonePostForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PcloudVolumesClonePostForbidden struct {
	Payload *models.Error
}

func (o *PcloudVolumesClonePostForbidden) Error() string {
	return fmt.Sprintf("[POST /pcloud/v1/cloud-instances/{cloud_instance_id}/volumes/clone][%d] pcloudVolumesClonePostForbidden  %+v", 403, o.Payload)
}
func (o *PcloudVolumesClonePostForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PcloudVolumesClonePostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudVolumesClonePostConflict creates a PcloudVolumesClonePostConflict with default headers values
func NewPcloudVolumesClonePostConflict() *PcloudVolumesClonePostConflict {
	return &PcloudVolumesClonePostConflict{}
}

/* PcloudVolumesClonePostConflict describes a response with status code 409, with default header values.

Conflict
*/
type PcloudVolumesClonePostConflict struct {
	Payload *models.Error
}

func (o *PcloudVolumesClonePostConflict) Error() string {
	return fmt.Sprintf("[POST /pcloud/v1/cloud-instances/{cloud_instance_id}/volumes/clone][%d] pcloudVolumesClonePostConflict  %+v", 409, o.Payload)
}
func (o *PcloudVolumesClonePostConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *PcloudVolumesClonePostConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPcloudVolumesClonePostInternalServerError creates a PcloudVolumesClonePostInternalServerError with default headers values
func NewPcloudVolumesClonePostInternalServerError() *PcloudVolumesClonePostInternalServerError {
	return &PcloudVolumesClonePostInternalServerError{}
}

/* PcloudVolumesClonePostInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PcloudVolumesClonePostInternalServerError struct {
	Payload *models.Error
}

func (o *PcloudVolumesClonePostInternalServerError) Error() string {
	return fmt.Sprintf("[POST /pcloud/v1/cloud-instances/{cloud_instance_id}/volumes/clone][%d] pcloudVolumesClonePostInternalServerError  %+v", 500, o.Payload)
}
func (o *PcloudVolumesClonePostInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PcloudVolumesClonePostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
